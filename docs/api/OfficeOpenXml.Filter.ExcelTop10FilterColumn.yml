### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.Filter.ExcelTop10FilterColumn
  commentId: T:OfficeOpenXml.Filter.ExcelTop10FilterColumn
  id: ExcelTop10FilterColumn
  parent: OfficeOpenXml.Filter
  children:
  - OfficeOpenXml.Filter.ExcelTop10FilterColumn.FilterValue
  - OfficeOpenXml.Filter.ExcelTop10FilterColumn.Percent
  - OfficeOpenXml.Filter.ExcelTop10FilterColumn.Top
  - OfficeOpenXml.Filter.ExcelTop10FilterColumn.Value
  langs:
  - csharp
  - vb
  name: ExcelTop10FilterColumn
  nameWithType: ExcelTop10FilterColumn
  fullName: OfficeOpenXml.Filter.ExcelTop10FilterColumn
  type: Class
  source:
    remote:
      path: src/EPPlus/Filter/ExcelTop10FilterColumn.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ExcelTop10FilterColumn
    path: ../src/EPPlus/Filter/ExcelTop10FilterColumn.cs
    startLine: 22
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Filter
  summary: "\nA filter column filtered by the top or botton values of an range\n"
  example: []
  syntax:
    content: 'public class ExcelTop10FilterColumn : ExcelFilterColumn'
    content.vb: >-
      Public Class ExcelTop10FilterColumn
          Inherits ExcelFilterColumn
  inheritance:
  - System.Object
  - OfficeOpenXml.XmlHelper
  - OfficeOpenXml.Filter.ExcelFilterColumn
  inheritedMembers:
  - OfficeOpenXml.Filter.ExcelFilterColumn.GetFilterValue(System.String)
  - OfficeOpenXml.Filter.ExcelFilterColumn.Position
  - OfficeOpenXml.Filter.ExcelFilterColumn.HiddenButton
  - OfficeOpenXml.Filter.ExcelFilterColumn.ShowButton
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OfficeOpenXml.Filter.ExcelTop10FilterColumn.FilterValue
  commentId: P:OfficeOpenXml.Filter.ExcelTop10FilterColumn.FilterValue
  id: FilterValue
  parent: OfficeOpenXml.Filter.ExcelTop10FilterColumn
  langs:
  - csharp
  - vb
  name: FilterValue
  nameWithType: ExcelTop10FilterColumn.FilterValue
  fullName: OfficeOpenXml.Filter.ExcelTop10FilterColumn.FilterValue
  type: Property
  source:
    remote:
      path: src/EPPlus/Filter/ExcelTop10FilterColumn.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: FilterValue
    path: ../src/EPPlus/Filter/ExcelTop10FilterColumn.cs
    startLine: 34
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Filter
  summary: "\nThe filter value to relate to\n"
  example: []
  syntax:
    content: public double FilterValue { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property FilterValue As Double
  overload: OfficeOpenXml.Filter.ExcelTop10FilterColumn.FilterValue*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Filter.ExcelTop10FilterColumn.Percent
  commentId: P:OfficeOpenXml.Filter.ExcelTop10FilterColumn.Percent
  id: Percent
  parent: OfficeOpenXml.Filter.ExcelTop10FilterColumn
  langs:
  - csharp
  - vb
  name: Percent
  nameWithType: ExcelTop10FilterColumn.Percent
  fullName: OfficeOpenXml.Filter.ExcelTop10FilterColumn.Percent
  type: Property
  source:
    remote:
      path: src/EPPlus/Filter/ExcelTop10FilterColumn.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Percent
    path: ../src/EPPlus/Filter/ExcelTop10FilterColumn.cs
    startLine: 42
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Filter
  summary: "\nIf the filter value is an percentage\n"
  example: []
  syntax:
    content: public bool Percent { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Percent As Boolean
  overload: OfficeOpenXml.Filter.ExcelTop10FilterColumn.Percent*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Filter.ExcelTop10FilterColumn.Top
  commentId: P:OfficeOpenXml.Filter.ExcelTop10FilterColumn.Top
  id: Top
  parent: OfficeOpenXml.Filter.ExcelTop10FilterColumn
  langs:
  - csharp
  - vb
  name: Top
  nameWithType: ExcelTop10FilterColumn.Top
  fullName: OfficeOpenXml.Filter.ExcelTop10FilterColumn.Top
  type: Property
  source:
    remote:
      path: src/EPPlus/Filter/ExcelTop10FilterColumn.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Top
    path: ../src/EPPlus/Filter/ExcelTop10FilterColumn.cs
    startLine: 50
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Filter
  summary: "\nTrue is top value. False is bottom values.\n"
  example: []
  syntax:
    content: public bool Top { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Top As Boolean
  overload: OfficeOpenXml.Filter.ExcelTop10FilterColumn.Top*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Filter.ExcelTop10FilterColumn.Value
  commentId: P:OfficeOpenXml.Filter.ExcelTop10FilterColumn.Value
  id: Value
  parent: OfficeOpenXml.Filter.ExcelTop10FilterColumn
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: ExcelTop10FilterColumn.Value
  fullName: OfficeOpenXml.Filter.ExcelTop10FilterColumn.Value
  type: Property
  source:
    remote:
      path: src/EPPlus/Filter/ExcelTop10FilterColumn.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Value
    path: ../src/EPPlus/Filter/ExcelTop10FilterColumn.cs
    startLine: 58
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Filter
  summary: "\nThe value to filter on\n"
  example: []
  syntax:
    content: public double Value { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Value As Double
  overload: OfficeOpenXml.Filter.ExcelTop10FilterColumn.Value*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: OfficeOpenXml.Filter
  commentId: N:OfficeOpenXml.Filter
  name: OfficeOpenXml.Filter
  nameWithType: OfficeOpenXml.Filter
  fullName: OfficeOpenXml.Filter
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OfficeOpenXml.XmlHelper
  commentId: T:OfficeOpenXml.XmlHelper
  parent: OfficeOpenXml
  name: XmlHelper
  nameWithType: XmlHelper
  fullName: OfficeOpenXml.XmlHelper
- uid: OfficeOpenXml.Filter.ExcelFilterColumn
  commentId: T:OfficeOpenXml.Filter.ExcelFilterColumn
  parent: OfficeOpenXml.Filter
  name: ExcelFilterColumn
  nameWithType: ExcelFilterColumn
  fullName: OfficeOpenXml.Filter.ExcelFilterColumn
- uid: OfficeOpenXml.Filter.ExcelFilterColumn.GetFilterValue(System.String)
  commentId: M:OfficeOpenXml.Filter.ExcelFilterColumn.GetFilterValue(System.String)
  parent: OfficeOpenXml.Filter.ExcelFilterColumn
  isExternal: true
  name: GetFilterValue(String)
  nameWithType: ExcelFilterColumn.GetFilterValue(String)
  fullName: OfficeOpenXml.Filter.ExcelFilterColumn.GetFilterValue(System.String)
  spec.csharp:
  - uid: OfficeOpenXml.Filter.ExcelFilterColumn.GetFilterValue(System.String)
    name: GetFilterValue
    nameWithType: ExcelFilterColumn.GetFilterValue
    fullName: OfficeOpenXml.Filter.ExcelFilterColumn.GetFilterValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Filter.ExcelFilterColumn.GetFilterValue(System.String)
    name: GetFilterValue
    nameWithType: ExcelFilterColumn.GetFilterValue
    fullName: OfficeOpenXml.Filter.ExcelFilterColumn.GetFilterValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Filter.ExcelFilterColumn.Position
  commentId: P:OfficeOpenXml.Filter.ExcelFilterColumn.Position
  parent: OfficeOpenXml.Filter.ExcelFilterColumn
  name: Position
  nameWithType: ExcelFilterColumn.Position
  fullName: OfficeOpenXml.Filter.ExcelFilterColumn.Position
- uid: OfficeOpenXml.Filter.ExcelFilterColumn.HiddenButton
  commentId: P:OfficeOpenXml.Filter.ExcelFilterColumn.HiddenButton
  parent: OfficeOpenXml.Filter.ExcelFilterColumn
  name: HiddenButton
  nameWithType: ExcelFilterColumn.HiddenButton
  fullName: OfficeOpenXml.Filter.ExcelFilterColumn.HiddenButton
- uid: OfficeOpenXml.Filter.ExcelFilterColumn.ShowButton
  commentId: P:OfficeOpenXml.Filter.ExcelFilterColumn.ShowButton
  parent: OfficeOpenXml.Filter.ExcelFilterColumn
  name: ShowButton
  nameWithType: ExcelFilterColumn.ShowButton
  fullName: OfficeOpenXml.Filter.ExcelFilterColumn.ShowButton
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml
  commentId: N:OfficeOpenXml
  name: OfficeOpenXml
  nameWithType: OfficeOpenXml
  fullName: OfficeOpenXml
- uid: OfficeOpenXml.Filter.ExcelTop10FilterColumn.FilterValue*
  commentId: Overload:OfficeOpenXml.Filter.ExcelTop10FilterColumn.FilterValue
  name: FilterValue
  nameWithType: ExcelTop10FilterColumn.FilterValue
  fullName: OfficeOpenXml.Filter.ExcelTop10FilterColumn.FilterValue
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: OfficeOpenXml.Filter.ExcelTop10FilterColumn.Percent*
  commentId: Overload:OfficeOpenXml.Filter.ExcelTop10FilterColumn.Percent
  name: Percent
  nameWithType: ExcelTop10FilterColumn.Percent
  fullName: OfficeOpenXml.Filter.ExcelTop10FilterColumn.Percent
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: OfficeOpenXml.Filter.ExcelTop10FilterColumn.Top*
  commentId: Overload:OfficeOpenXml.Filter.ExcelTop10FilterColumn.Top
  name: Top
  nameWithType: ExcelTop10FilterColumn.Top
  fullName: OfficeOpenXml.Filter.ExcelTop10FilterColumn.Top
- uid: OfficeOpenXml.Filter.ExcelTop10FilterColumn.Value*
  commentId: Overload:OfficeOpenXml.Filter.ExcelTop10FilterColumn.Value
  name: Value
  nameWithType: ExcelTop10FilterColumn.Value
  fullName: OfficeOpenXml.Filter.ExcelTop10FilterColumn.Value
