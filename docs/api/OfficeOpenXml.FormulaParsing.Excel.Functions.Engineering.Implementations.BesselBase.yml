### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselBase
  commentId: T:OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselBase
  id: BesselBase
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations
  children:
  - OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselBase.f_2_DIV_PI
  - OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselBase.f_PI
  - OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselBase.f_PI_DIV_2
  - OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselBase.f_PI_DIV_4
  langs:
  - csharp
  - vb
  name: BesselBase
  nameWithType: BesselBase
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselBase
  type: Class
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Excel/Functions/Engineering/Implementations/BesselBase.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: BesselBase
    path: ../src/EPPlus/FormulaParsing/Excel/Functions/Engineering/Implementations/BesselBase.cs
    startLine: 15
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations
  syntax:
    content: public abstract class BesselBase
    content.vb: Public MustInherit Class BesselBase
  inheritance:
  - System.Object
  derivedClasses:
  - OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselIimpl
  - OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselJImpl
  - OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselKImpl
  - OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselYImpl
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselBase.f_PI
  commentId: F:OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselBase.f_PI
  id: f_PI
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselBase
  langs:
  - csharp
  - vb
  name: f_PI
  nameWithType: BesselBase.f_PI
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselBase.f_PI
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Excel/Functions/Engineering/Implementations/BesselBase.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: f_PI
    path: ../src/EPPlus/FormulaParsing/Excel/Functions/Engineering/Implementations/BesselBase.cs
    startLine: 17
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations
  syntax:
    content: protected const double f_PI = 3.1415926535897931
    return:
      type: System.Double
    content.vb: Protected Const f_PI As Double = 3.1415926535897931
  modifiers.csharp:
  - protected
  - const
  modifiers.vb:
  - Protected
  - Const
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselBase.f_PI_DIV_2
  commentId: F:OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselBase.f_PI_DIV_2
  id: f_PI_DIV_2
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselBase
  langs:
  - csharp
  - vb
  name: f_PI_DIV_2
  nameWithType: BesselBase.f_PI_DIV_2
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselBase.f_PI_DIV_2
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Excel/Functions/Engineering/Implementations/BesselBase.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: f_PI_DIV_2
    path: ../src/EPPlus/FormulaParsing/Excel/Functions/Engineering/Implementations/BesselBase.cs
    startLine: 18
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations
  syntax:
    content: protected const double f_PI_DIV_2 = 1.5707963267948966
    return:
      type: System.Double
    content.vb: Protected Const f_PI_DIV_2 As Double = 1.5707963267948966
  modifiers.csharp:
  - protected
  - const
  modifiers.vb:
  - Protected
  - Const
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselBase.f_PI_DIV_4
  commentId: F:OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselBase.f_PI_DIV_4
  id: f_PI_DIV_4
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselBase
  langs:
  - csharp
  - vb
  name: f_PI_DIV_4
  nameWithType: BesselBase.f_PI_DIV_4
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselBase.f_PI_DIV_4
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Excel/Functions/Engineering/Implementations/BesselBase.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: f_PI_DIV_4
    path: ../src/EPPlus/FormulaParsing/Excel/Functions/Engineering/Implementations/BesselBase.cs
    startLine: 19
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations
  syntax:
    content: protected const double f_PI_DIV_4 = 0.78539816339744828
    return:
      type: System.Double
    content.vb: Protected Const f_PI_DIV_4 As Double = 0.78539816339744828
  modifiers.csharp:
  - protected
  - const
  modifiers.vb:
  - Protected
  - Const
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselBase.f_2_DIV_PI
  commentId: F:OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselBase.f_2_DIV_PI
  id: f_2_DIV_PI
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselBase
  langs:
  - csharp
  - vb
  name: f_2_DIV_PI
  nameWithType: BesselBase.f_2_DIV_PI
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselBase.f_2_DIV_PI
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Excel/Functions/Engineering/Implementations/BesselBase.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: f_2_DIV_PI
    path: ../src/EPPlus/FormulaParsing/Excel/Functions/Engineering/Implementations/BesselBase.cs
    startLine: 20
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations
  syntax:
    content: protected const double f_2_DIV_PI = 0.63661977236758138
    return:
      type: System.Double
    content.vb: Protected Const f_2_DIV_PI As Double = 0.63661977236758138
  modifiers.csharp:
  - protected
  - const
  modifiers.vb:
  - Protected
  - Const
references:
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations
  commentId: N:OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations
  name: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations
  nameWithType: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
