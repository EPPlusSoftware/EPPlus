### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartSerie
  commentId: T:OfficeOpenXml.Drawing.Chart.ExcelChartSerie
  id: ExcelChartSerie
  parent: OfficeOpenXml.Drawing.Chart
  children:
  - OfficeOpenXml.Drawing.Chart.ExcelChartSerie.Border
  - OfficeOpenXml.Drawing.Chart.ExcelChartSerie.Effect
  - OfficeOpenXml.Drawing.Chart.ExcelChartSerie.Fill
  - OfficeOpenXml.Drawing.Chart.ExcelChartSerie.Header
  - OfficeOpenXml.Drawing.Chart.ExcelChartSerie.HeaderAddress
  - OfficeOpenXml.Drawing.Chart.ExcelChartSerie.NumberLiteralsX
  - OfficeOpenXml.Drawing.Chart.ExcelChartSerie.NumberLiteralsY
  - OfficeOpenXml.Drawing.Chart.ExcelChartSerie.NumberOfItems
  - OfficeOpenXml.Drawing.Chart.ExcelChartSerie.Series
  - OfficeOpenXml.Drawing.Chart.ExcelChartSerie.StringLiteralsX
  - OfficeOpenXml.Drawing.Chart.ExcelChartSerie.ThreeD
  - OfficeOpenXml.Drawing.Chart.ExcelChartSerie.TrendLines
  - OfficeOpenXml.Drawing.Chart.ExcelChartSerie.XSeries
  langs:
  - csharp
  - vb
  name: ExcelChartSerie
  nameWithType: ExcelChartSerie
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartSerie
  type: Class
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartSerie.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ExcelChartSerie
    path: ../src/EPPlus/Drawing/Chart/ExcelChartSerie.cs
    startLine: 27
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nBase class for chart series for standard charts\n"
  example: []
  syntax:
    content: 'public abstract class ExcelChartSerie : XmlHelper'
    content.vb: >-
      Public MustInherit Class ExcelChartSerie
          Inherits XmlHelper
  inheritance:
  - System.Object
  - OfficeOpenXml.XmlHelper
  derivedClasses:
  - OfficeOpenXml.Drawing.Chart.ChartEx.ExcelChartExSerie
  - OfficeOpenXml.Drawing.Chart.ExcelChartStandardSerie
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.Header
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartSerie.Header
  id: Header
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartSerie
  langs:
  - csharp
  - vb
  name: Header
  nameWithType: ExcelChartSerie.Header
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.Header
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartSerie.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Header
    path: ../src/EPPlus/Drawing/Chart/ExcelChartSerie.cs
    startLine: 40
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nThe header for the chart serie\n"
  example: []
  syntax:
    content: public abstract string Header { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public MustOverride Property Header As String
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.Header*
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.NumberLiteralsY
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartSerie.NumberLiteralsY
  id: NumberLiteralsY
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartSerie
  langs:
  - csharp
  - vb
  name: NumberLiteralsY
  nameWithType: ExcelChartSerie.NumberLiteralsY
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.NumberLiteralsY
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartSerie.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: NumberLiteralsY
    path: ../src/EPPlus/Drawing/Chart/ExcelChartSerie.cs
    startLine: 44
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nLiterals for the Y serie, if the literal values are numeric\n"
  example: []
  syntax:
    content: public double[] NumberLiteralsY { get; protected set; }
    parameters: []
    return:
      type: System.Double[]
    content.vb: Public Property NumberLiteralsY As Double()
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.NumberLiteralsY*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.NumberLiteralsX
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartSerie.NumberLiteralsX
  id: NumberLiteralsX
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartSerie
  langs:
  - csharp
  - vb
  name: NumberLiteralsX
  nameWithType: ExcelChartSerie.NumberLiteralsX
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.NumberLiteralsX
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartSerie.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: NumberLiteralsX
    path: ../src/EPPlus/Drawing/Chart/ExcelChartSerie.cs
    startLine: 48
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nLiterals for the X serie, if the literal values are numeric\n"
  example: []
  syntax:
    content: public double[] NumberLiteralsX { get; protected set; }
    parameters: []
    return:
      type: System.Double[]
    content.vb: Public Property NumberLiteralsX As Double()
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.NumberLiteralsX*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.StringLiteralsX
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartSerie.StringLiteralsX
  id: StringLiteralsX
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartSerie
  langs:
  - csharp
  - vb
  name: StringLiteralsX
  nameWithType: ExcelChartSerie.StringLiteralsX
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.StringLiteralsX
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartSerie.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: StringLiteralsX
    path: ../src/EPPlus/Drawing/Chart/ExcelChartSerie.cs
    startLine: 52
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nLiterals for the X serie, if the literal values are strings\n"
  example: []
  syntax:
    content: public string[] StringLiteralsX { get; protected set; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public Property StringLiteralsX As String()
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.StringLiteralsX*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.HeaderAddress
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartSerie.HeaderAddress
  id: HeaderAddress
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartSerie
  langs:
  - csharp
  - vb
  name: HeaderAddress
  nameWithType: ExcelChartSerie.HeaderAddress
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.HeaderAddress
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartSerie.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: HeaderAddress
    path: ../src/EPPlus/Drawing/Chart/ExcelChartSerie.cs
    startLine: 60
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nThe header address for the serie.\n"
  example: []
  syntax:
    content: public abstract ExcelAddressBase HeaderAddress { get; set; }
    parameters: []
    return:
      type: OfficeOpenXml.ExcelAddressBase
    content.vb: Public MustOverride Property HeaderAddress As ExcelAddressBase
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.HeaderAddress*
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.Series
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartSerie.Series
  id: Series
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartSerie
  langs:
  - csharp
  - vb
  name: Series
  nameWithType: ExcelChartSerie.Series
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.Series
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartSerie.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Series
    path: ../src/EPPlus/Drawing/Chart/ExcelChartSerie.cs
    startLine: 64
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nThe address for the vertical series.\n"
  example: []
  syntax:
    content: public abstract string Series { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public MustOverride Property Series As String
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.Series*
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.XSeries
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartSerie.XSeries
  id: XSeries
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartSerie
  langs:
  - csharp
  - vb
  name: XSeries
  nameWithType: ExcelChartSerie.XSeries
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.XSeries
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartSerie.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: XSeries
    path: ../src/EPPlus/Drawing/Chart/ExcelChartSerie.cs
    startLine: 68
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nThe address for the horizontal series.\n"
  example: []
  syntax:
    content: public abstract string XSeries { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public MustOverride Property XSeries As String
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.XSeries*
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.Fill
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartSerie.Fill
  id: Fill
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartSerie
  langs:
  - csharp
  - vb
  name: Fill
  nameWithType: ExcelChartSerie.Fill
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.Fill
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartSerie.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Fill
    path: ../src/EPPlus/Drawing/Chart/ExcelChartSerie.cs
    startLine: 73
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nAccess to fill properties\n"
  example: []
  syntax:
    content: public ExcelDrawingFill Fill { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.ExcelDrawingFill
    content.vb: Public ReadOnly Property Fill As ExcelDrawingFill
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.Fill*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.Border
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartSerie.Border
  id: Border
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartSerie
  langs:
  - csharp
  - vb
  name: Border
  nameWithType: ExcelChartSerie.Border
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.Border
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartSerie.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Border
    path: ../src/EPPlus/Drawing/Chart/ExcelChartSerie.cs
    startLine: 88
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nAccess to border properties\n"
  example: []
  syntax:
    content: public ExcelDrawingBorder Border { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.ExcelDrawingBorder
    content.vb: Public ReadOnly Property Border As ExcelDrawingBorder
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.Border*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.Effect
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartSerie.Effect
  id: Effect
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartSerie
  langs:
  - csharp
  - vb
  name: Effect
  nameWithType: ExcelChartSerie.Effect
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.Effect
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartSerie.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Effect
    path: ../src/EPPlus/Drawing/Chart/ExcelChartSerie.cs
    startLine: 103
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nEffects\n"
  example: []
  syntax:
    content: public ExcelDrawingEffectStyle Effect { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingEffectStyle
    content.vb: Public ReadOnly Property Effect As ExcelDrawingEffectStyle
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.Effect*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.ThreeD
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartSerie.ThreeD
  id: ThreeD
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartSerie
  langs:
  - csharp
  - vb
  name: ThreeD
  nameWithType: ExcelChartSerie.ThreeD
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.ThreeD
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartSerie.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ThreeD
    path: ../src/EPPlus/Drawing/Chart/ExcelChartSerie.cs
    startLine: 118
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\n3D properties\n"
  example: []
  syntax:
    content: public ExcelDrawing3D ThreeD { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.Style.ThreeD.ExcelDrawing3D
    content.vb: Public ReadOnly Property ThreeD As ExcelDrawing3D
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.ThreeD*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.NumberOfItems
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartSerie.NumberOfItems
  id: NumberOfItems
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartSerie
  langs:
  - csharp
  - vb
  name: NumberOfItems
  nameWithType: ExcelChartSerie.NumberOfItems
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.NumberOfItems
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartSerie.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: NumberOfItems
    path: ../src/EPPlus/Drawing/Chart/ExcelChartSerie.cs
    startLine: 132
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nNumber of items in the serie.\n"
  example: []
  syntax:
    content: public abstract int NumberOfItems { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public MustOverride ReadOnly Property NumberOfItems As Integer
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.NumberOfItems*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.TrendLines
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartSerie.TrendLines
  id: TrendLines
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartSerie
  langs:
  - csharp
  - vb
  name: TrendLines
  nameWithType: ExcelChartSerie.TrendLines
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.TrendLines
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartSerie.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: TrendLines
    path: ../src/EPPlus/Drawing/Chart/ExcelChartSerie.cs
    startLine: 136
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nA collection of trend lines for the chart serie.\n"
  example: []
  syntax:
    content: public abstract ExcelChartTrendlineCollection TrendLines { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.Chart.ExcelChartTrendlineCollection
    content.vb: Public MustOverride ReadOnly Property TrendLines As ExcelChartTrendlineCollection
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.TrendLines*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
references:
- uid: OfficeOpenXml.Drawing.Chart
  commentId: N:OfficeOpenXml.Drawing.Chart
  name: OfficeOpenXml.Drawing.Chart
  nameWithType: OfficeOpenXml.Drawing.Chart
  fullName: OfficeOpenXml.Drawing.Chart
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OfficeOpenXml.XmlHelper
  commentId: T:OfficeOpenXml.XmlHelper
  parent: OfficeOpenXml
  name: XmlHelper
  nameWithType: XmlHelper
  fullName: OfficeOpenXml.XmlHelper
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml
  commentId: N:OfficeOpenXml
  name: OfficeOpenXml
  nameWithType: OfficeOpenXml
  fullName: OfficeOpenXml
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.Header*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartSerie.Header
  name: Header
  nameWithType: ExcelChartSerie.Header
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.Header
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.NumberLiteralsY*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartSerie.NumberLiteralsY
  name: NumberLiteralsY
  nameWithType: ExcelChartSerie.NumberLiteralsY
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.NumberLiteralsY
- uid: System.Double[]
  isExternal: true
  name: Double[]
  nameWithType: Double[]
  fullName: System.Double[]
  nameWithType.vb: Double()
  fullName.vb: System.Double()
  name.vb: Double()
  spec.csharp:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.NumberLiteralsX*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartSerie.NumberLiteralsX
  name: NumberLiteralsX
  nameWithType: ExcelChartSerie.NumberLiteralsX
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.NumberLiteralsX
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.StringLiteralsX*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartSerie.StringLiteralsX
  name: StringLiteralsX
  nameWithType: ExcelChartSerie.StringLiteralsX
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.StringLiteralsX
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.HeaderAddress*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartSerie.HeaderAddress
  name: HeaderAddress
  nameWithType: ExcelChartSerie.HeaderAddress
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.HeaderAddress
- uid: OfficeOpenXml.ExcelAddressBase
  commentId: T:OfficeOpenXml.ExcelAddressBase
  parent: OfficeOpenXml
  name: ExcelAddressBase
  nameWithType: ExcelAddressBase
  fullName: OfficeOpenXml.ExcelAddressBase
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.Series*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartSerie.Series
  name: Series
  nameWithType: ExcelChartSerie.Series
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.Series
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.XSeries*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartSerie.XSeries
  name: XSeries
  nameWithType: ExcelChartSerie.XSeries
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.XSeries
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.Fill*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartSerie.Fill
  name: Fill
  nameWithType: ExcelChartSerie.Fill
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.Fill
- uid: OfficeOpenXml.Drawing.ExcelDrawingFill
  commentId: T:OfficeOpenXml.Drawing.ExcelDrawingFill
  parent: OfficeOpenXml.Drawing
  name: ExcelDrawingFill
  nameWithType: ExcelDrawingFill
  fullName: OfficeOpenXml.Drawing.ExcelDrawingFill
- uid: OfficeOpenXml.Drawing
  commentId: N:OfficeOpenXml.Drawing
  name: OfficeOpenXml.Drawing
  nameWithType: OfficeOpenXml.Drawing
  fullName: OfficeOpenXml.Drawing
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.Border*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartSerie.Border
  name: Border
  nameWithType: ExcelChartSerie.Border
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.Border
- uid: OfficeOpenXml.Drawing.ExcelDrawingBorder
  commentId: T:OfficeOpenXml.Drawing.ExcelDrawingBorder
  parent: OfficeOpenXml.Drawing
  name: ExcelDrawingBorder
  nameWithType: ExcelDrawingBorder
  fullName: OfficeOpenXml.Drawing.ExcelDrawingBorder
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.Effect*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartSerie.Effect
  name: Effect
  nameWithType: ExcelChartSerie.Effect
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.Effect
- uid: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingEffectStyle
  commentId: T:OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingEffectStyle
  parent: OfficeOpenXml.Drawing.Style.Effect
  name: ExcelDrawingEffectStyle
  nameWithType: ExcelDrawingEffectStyle
  fullName: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingEffectStyle
- uid: OfficeOpenXml.Drawing.Style.Effect
  commentId: N:OfficeOpenXml.Drawing.Style.Effect
  name: OfficeOpenXml.Drawing.Style.Effect
  nameWithType: OfficeOpenXml.Drawing.Style.Effect
  fullName: OfficeOpenXml.Drawing.Style.Effect
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.ThreeD*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartSerie.ThreeD
  name: ThreeD
  nameWithType: ExcelChartSerie.ThreeD
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.ThreeD
- uid: OfficeOpenXml.Drawing.Style.ThreeD.ExcelDrawing3D
  commentId: T:OfficeOpenXml.Drawing.Style.ThreeD.ExcelDrawing3D
  parent: OfficeOpenXml.Drawing.Style.ThreeD
  name: ExcelDrawing3D
  nameWithType: ExcelDrawing3D
  fullName: OfficeOpenXml.Drawing.Style.ThreeD.ExcelDrawing3D
- uid: OfficeOpenXml.Drawing.Style.ThreeD
  commentId: N:OfficeOpenXml.Drawing.Style.ThreeD
  name: OfficeOpenXml.Drawing.Style.ThreeD
  nameWithType: OfficeOpenXml.Drawing.Style.ThreeD
  fullName: OfficeOpenXml.Drawing.Style.ThreeD
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.NumberOfItems*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartSerie.NumberOfItems
  name: NumberOfItems
  nameWithType: ExcelChartSerie.NumberOfItems
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.NumberOfItems
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.TrendLines*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartSerie.TrendLines
  name: TrendLines
  nameWithType: ExcelChartSerie.TrendLines
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartSerie.TrendLines
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartTrendlineCollection
  commentId: T:OfficeOpenXml.Drawing.Chart.ExcelChartTrendlineCollection
  parent: OfficeOpenXml.Drawing.Chart
  name: ExcelChartTrendlineCollection
  nameWithType: ExcelChartTrendlineCollection
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartTrendlineCollection
