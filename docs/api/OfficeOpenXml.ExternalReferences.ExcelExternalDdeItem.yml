### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.ExternalReferences.ExcelExternalDdeItem
  commentId: T:OfficeOpenXml.ExternalReferences.ExcelExternalDdeItem
  id: ExcelExternalDdeItem
  parent: OfficeOpenXml.ExternalReferences
  children:
  - OfficeOpenXml.ExternalReferences.ExcelExternalDdeItem.Advise
  - OfficeOpenXml.ExternalReferences.ExcelExternalDdeItem.Name
  - OfficeOpenXml.ExternalReferences.ExcelExternalDdeItem.Ole
  - OfficeOpenXml.ExternalReferences.ExcelExternalDdeItem.PreferPicture
  - OfficeOpenXml.ExternalReferences.ExcelExternalDdeItem.Values
  langs:
  - csharp
  - vb
  name: ExcelExternalDdeItem
  nameWithType: ExcelExternalDdeItem
  fullName: OfficeOpenXml.ExternalReferences.ExcelExternalDdeItem
  type: Class
  source:
    remote:
      path: src/EPPlus/ExternalReferences/ExcelExternalDdeItem.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ExcelExternalDdeItem
    path: ../src/EPPlus/ExternalReferences/ExcelExternalDdeItem.cs
    startLine: 17
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.ExternalReferences
  summary: "\nRepresents a DDE link. This class is read-only.\n"
  example: []
  syntax:
    content: public class ExcelExternalDdeItem
    content.vb: Public Class ExcelExternalDdeItem
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OfficeOpenXml.ExternalReferences.ExcelExternalDdeItem.Name
  commentId: P:OfficeOpenXml.ExternalReferences.ExcelExternalDdeItem.Name
  id: Name
  parent: OfficeOpenXml.ExternalReferences.ExcelExternalDdeItem
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ExcelExternalDdeItem.Name
  fullName: OfficeOpenXml.ExternalReferences.ExcelExternalDdeItem.Name
  type: Property
  source:
    remote:
      path: src/EPPlus/ExternalReferences/ExcelExternalDdeItem.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Name
    path: ../src/EPPlus/ExternalReferences/ExcelExternalDdeItem.cs
    startLine: 22
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.ExternalReferences
  summary: "\nThe name of the DDE link item\n"
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: OfficeOpenXml.ExternalReferences.ExcelExternalDdeItem.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.ExternalReferences.ExcelExternalDdeItem.Advise
  commentId: P:OfficeOpenXml.ExternalReferences.ExcelExternalDdeItem.Advise
  id: Advise
  parent: OfficeOpenXml.ExternalReferences.ExcelExternalDdeItem
  langs:
  - csharp
  - vb
  name: Advise
  nameWithType: ExcelExternalDdeItem.Advise
  fullName: OfficeOpenXml.ExternalReferences.ExcelExternalDdeItem.Advise
  type: Property
  source:
    remote:
      path: src/EPPlus/ExternalReferences/ExcelExternalDdeItem.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Advise
    path: ../src/EPPlus/ExternalReferences/ExcelExternalDdeItem.cs
    startLine: 26
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.ExternalReferences
  summary: "\nIf the linked object should notify the application when the external data changes.\n"
  example: []
  syntax:
    content: public bool Advise { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Advise As Boolean
  overload: OfficeOpenXml.ExternalReferences.ExcelExternalDdeItem.Advise*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.ExternalReferences.ExcelExternalDdeItem.PreferPicture
  commentId: P:OfficeOpenXml.ExternalReferences.ExcelExternalDdeItem.PreferPicture
  id: PreferPicture
  parent: OfficeOpenXml.ExternalReferences.ExcelExternalDdeItem
  langs:
  - csharp
  - vb
  name: PreferPicture
  nameWithType: ExcelExternalDdeItem.PreferPicture
  fullName: OfficeOpenXml.ExternalReferences.ExcelExternalDdeItem.PreferPicture
  type: Property
  source:
    remote:
      path: src/EPPlus/ExternalReferences/ExcelExternalDdeItem.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: PreferPicture
    path: ../src/EPPlus/ExternalReferences/ExcelExternalDdeItem.cs
    startLine: 30
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.ExternalReferences
  summary: "\nIf the linked object is represented by an image.\n"
  example: []
  syntax:
    content: public bool PreferPicture { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property PreferPicture As Boolean
  overload: OfficeOpenXml.ExternalReferences.ExcelExternalDdeItem.PreferPicture*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.ExternalReferences.ExcelExternalDdeItem.Ole
  commentId: P:OfficeOpenXml.ExternalReferences.ExcelExternalDdeItem.Ole
  id: Ole
  parent: OfficeOpenXml.ExternalReferences.ExcelExternalDdeItem
  langs:
  - csharp
  - vb
  name: Ole
  nameWithType: ExcelExternalDdeItem.Ole
  fullName: OfficeOpenXml.ExternalReferences.ExcelExternalDdeItem.Ole
  type: Property
  source:
    remote:
      path: src/EPPlus/ExternalReferences/ExcelExternalDdeItem.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Ole
    path: ../src/EPPlus/ExternalReferences/ExcelExternalDdeItem.cs
    startLine: 34
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.ExternalReferences
  summary: "\nIf this is item uses an ole technology.\n"
  example: []
  syntax:
    content: public bool Ole { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Ole As Boolean
  overload: OfficeOpenXml.ExternalReferences.ExcelExternalDdeItem.Ole*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.ExternalReferences.ExcelExternalDdeItem.Values
  commentId: P:OfficeOpenXml.ExternalReferences.ExcelExternalDdeItem.Values
  id: Values
  parent: OfficeOpenXml.ExternalReferences.ExcelExternalDdeItem
  langs:
  - csharp
  - vb
  name: Values
  nameWithType: ExcelExternalDdeItem.Values
  fullName: OfficeOpenXml.ExternalReferences.ExcelExternalDdeItem.Values
  type: Property
  source:
    remote:
      path: src/EPPlus/ExternalReferences/ExcelExternalDdeItem.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Values
    path: ../src/EPPlus/ExternalReferences/ExcelExternalDdeItem.cs
    startLine: 38
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.ExternalReferences
  summary: "\nA collection of DDE values\n"
  example: []
  syntax:
    content: public ExcelExternalDdeValueCollection Values { get; }
    parameters: []
    return:
      type: OfficeOpenXml.ExternalReferences.ExcelExternalDdeValueCollection
    content.vb: Public ReadOnly Property Values As ExcelExternalDdeValueCollection
  overload: OfficeOpenXml.ExternalReferences.ExcelExternalDdeItem.Values*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: OfficeOpenXml.ExternalReferences
  commentId: N:OfficeOpenXml.ExternalReferences
  name: OfficeOpenXml.ExternalReferences
  nameWithType: OfficeOpenXml.ExternalReferences
  fullName: OfficeOpenXml.ExternalReferences
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml.ExternalReferences.ExcelExternalDdeItem.Name*
  commentId: Overload:OfficeOpenXml.ExternalReferences.ExcelExternalDdeItem.Name
  name: Name
  nameWithType: ExcelExternalDdeItem.Name
  fullName: OfficeOpenXml.ExternalReferences.ExcelExternalDdeItem.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OfficeOpenXml.ExternalReferences.ExcelExternalDdeItem.Advise*
  commentId: Overload:OfficeOpenXml.ExternalReferences.ExcelExternalDdeItem.Advise
  name: Advise
  nameWithType: ExcelExternalDdeItem.Advise
  fullName: OfficeOpenXml.ExternalReferences.ExcelExternalDdeItem.Advise
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: OfficeOpenXml.ExternalReferences.ExcelExternalDdeItem.PreferPicture*
  commentId: Overload:OfficeOpenXml.ExternalReferences.ExcelExternalDdeItem.PreferPicture
  name: PreferPicture
  nameWithType: ExcelExternalDdeItem.PreferPicture
  fullName: OfficeOpenXml.ExternalReferences.ExcelExternalDdeItem.PreferPicture
- uid: OfficeOpenXml.ExternalReferences.ExcelExternalDdeItem.Ole*
  commentId: Overload:OfficeOpenXml.ExternalReferences.ExcelExternalDdeItem.Ole
  name: Ole
  nameWithType: ExcelExternalDdeItem.Ole
  fullName: OfficeOpenXml.ExternalReferences.ExcelExternalDdeItem.Ole
- uid: OfficeOpenXml.ExternalReferences.ExcelExternalDdeItem.Values*
  commentId: Overload:OfficeOpenXml.ExternalReferences.ExcelExternalDdeItem.Values
  name: Values
  nameWithType: ExcelExternalDdeItem.Values
  fullName: OfficeOpenXml.ExternalReferences.ExcelExternalDdeItem.Values
- uid: OfficeOpenXml.ExternalReferences.ExcelExternalDdeValueCollection
  commentId: T:OfficeOpenXml.ExternalReferences.ExcelExternalDdeValueCollection
  parent: OfficeOpenXml.ExternalReferences
  name: ExcelExternalDdeValueCollection
  nameWithType: ExcelExternalDdeValueCollection
  fullName: OfficeOpenXml.ExternalReferences.ExcelExternalDdeValueCollection
