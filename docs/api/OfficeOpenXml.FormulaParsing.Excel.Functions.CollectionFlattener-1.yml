### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener`1
  commentId: T:OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener`1
  id: CollectionFlattener`1
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions
  children:
  - OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener`1.FuncArgsToFlatEnumerable(System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Action{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument,System.Collections.Generic.IList{`0}})
  langs:
  - csharp
  - vb
  name: CollectionFlattener<T>
  nameWithType: CollectionFlattener<T>
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener<T>
  type: Class
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Excel/Functions/CollectionFlattener.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: CollectionFlattener
    path: ../src/EPPlus/FormulaParsing/Excel/Functions/CollectionFlattener.cs
    startLine: 19
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Excel.Functions
  syntax:
    content: public abstract class CollectionFlattener<T>
    typeParameters:
    - id: T
    content.vb: Public MustInherit Class CollectionFlattener(Of T)
  inheritance:
  - System.Object
  derivedClasses:
  - OfficeOpenXml.FormulaParsing.Excel.Functions.DoubleEnumerableArgConverter
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ObjectEnumerableArgConverter
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: CollectionFlattener(Of T)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener(Of T)
  name.vb: CollectionFlattener(Of T)
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener`1.FuncArgsToFlatEnumerable(System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Action{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument,System.Collections.Generic.IList{`0}})
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener`1.FuncArgsToFlatEnumerable(System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Action{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument,System.Collections.Generic.IList{`0}})
  id: FuncArgsToFlatEnumerable(System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Action{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument,System.Collections.Generic.IList{`0}})
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener`1
  langs:
  - csharp
  - vb
  name: FuncArgsToFlatEnumerable(IEnumerable<FunctionArgument>, Action<FunctionArgument, IList<T>>)
  nameWithType: CollectionFlattener<T>.FuncArgsToFlatEnumerable(IEnumerable<FunctionArgument>, Action<FunctionArgument, IList<T>>)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener<T>.FuncArgsToFlatEnumerable(System.Collections.Generic.IEnumerable<OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument>, System.Action<OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument, System.Collections.Generic.IList<T>>)
  type: Method
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Excel/Functions/CollectionFlattener.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: FuncArgsToFlatEnumerable
    path: ../src/EPPlus/FormulaParsing/Excel/Functions/CollectionFlattener.cs
    startLine: 21
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Excel.Functions
  syntax:
    content: public virtual IEnumerable<T> FuncArgsToFlatEnumerable(IEnumerable<FunctionArgument> arguments, Action<FunctionArgument, IList<T>> convertFunc)
    parameters:
    - id: arguments
      type: System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument}
    - id: convertFunc
      type: System.Action{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument,System.Collections.Generic.IList{{T}}}
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
    content.vb: Public Overridable Function FuncArgsToFlatEnumerable(arguments As IEnumerable(Of FunctionArgument), convertFunc As Action(Of FunctionArgument, IList(Of T))) As IEnumerable(Of T)
  overload: OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener`1.FuncArgsToFlatEnumerable*
  nameWithType.vb: CollectionFlattener(Of T).FuncArgsToFlatEnumerable(IEnumerable(Of FunctionArgument), Action(Of FunctionArgument, IList(Of T)))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener(Of T).FuncArgsToFlatEnumerable(System.Collections.Generic.IEnumerable(Of OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument), System.Action(Of OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument, System.Collections.Generic.IList(Of T)))
  name.vb: FuncArgsToFlatEnumerable(IEnumerable(Of FunctionArgument), Action(Of FunctionArgument, IList(Of T)))
references:
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions
  commentId: N:OfficeOpenXml.FormulaParsing.Excel.Functions
  name: OfficeOpenXml.FormulaParsing.Excel.Functions
  nameWithType: OfficeOpenXml.FormulaParsing.Excel.Functions
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener`1.FuncArgsToFlatEnumerable*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener`1.FuncArgsToFlatEnumerable
  name: FuncArgsToFlatEnumerable
  nameWithType: CollectionFlattener<T>.FuncArgsToFlatEnumerable
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener<T>.FuncArgsToFlatEnumerable
  nameWithType.vb: CollectionFlattener(Of T).FuncArgsToFlatEnumerable
  fullName.vb: OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener(Of T).FuncArgsToFlatEnumerable
- uid: System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument}
  commentId: T:System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<FunctionArgument>
  nameWithType: IEnumerable<FunctionArgument>
  fullName: System.Collections.Generic.IEnumerable<OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument>
  nameWithType.vb: IEnumerable(Of FunctionArgument)
  fullName.vb: System.Collections.Generic.IEnumerable(Of OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument)
  name.vb: IEnumerable(Of FunctionArgument)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument,System.Collections.Generic.IList{{T}}}
  commentId: T:System.Action{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument,System.Collections.Generic.IList{`0}}
  parent: System
  definition: System.Action`2
  name: Action<FunctionArgument, IList<T>>
  nameWithType: Action<FunctionArgument, IList<T>>
  fullName: System.Action<OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument, System.Collections.Generic.IList<T>>
  nameWithType.vb: Action(Of FunctionArgument, IList(Of T))
  fullName.vb: System.Action(Of OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument, System.Collections.Generic.IList(Of T))
  name.vb: Action(Of FunctionArgument, IList(Of T))
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
