### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  commentId: T:OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  id: TokenType
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  children:
  - OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Array
  - OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Boolean
  - OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.CellAddress
  - OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.CircularReference
  - OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.ClosingBracket
  - OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.ClosingEnumerable
  - OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.ClosingParenthesis
  - OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Colon
  - OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Comma
  - OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Decimal
  - OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Enumerable
  - OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.ExcelAddress
  - OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.ExcelAddressR1C1
  - OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.ExternalReference
  - OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.FullColumnAddress
  - OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.FullRowAddress
  - OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Function
  - OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.HashMark
  - OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Integer
  - OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.InvalidReference
  - OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.NAError
  - OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.NameError
  - OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.NameValue
  - OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Negator
  - OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Null
  - OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.NumericError
  - OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.OpeningBracket
  - OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.OpeningEnumerable
  - OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.OpeningParenthesis
  - OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Operator
  - OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.ParameterVariable
  - OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.ParameterVariableDeclaration
  - OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Percent
  - OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.PivotField
  - OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.RangeOffset
  - OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.SemiColon
  - OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.SingleQuote
  - OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.StartFunctionArguments
  - OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.String
  - OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.StringContent
  - OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.TableColumn
  - OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.TableName
  - OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.TablePart
  - OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Unrecognized
  - OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.ValueDataTypeError
  - OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.WhiteSpace
  - OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.WorksheetName
  - OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.WorksheetNameContent
  langs:
  - csharp
  - vb
  name: TokenType
  nameWithType: TokenType
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  type: Enum
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: TokenType
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
    startLine: 22
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nToken types in the context of formula parsing.\n"
  example: []
  syntax:
    content: >-
      [Flags]

      public enum TokenType : ulong
    content.vb: >-
      <Flags>

      Public Enum TokenType As ULong
  attributes:
  - type: System.FlagsAttribute
    ctor: System.FlagsAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Operator
  commentId: F:OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Operator
  id: Operator
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  langs:
  - csharp
  - vb
  name: Operator
  nameWithType: TokenType.Operator
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Operator
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Operator
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
    startLine: 28
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nThe parsed token represents an operator\n"
  example: []
  syntax:
    content: Operator = 1UL
    return:
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Negator
  commentId: F:OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Negator
  id: Negator
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  langs:
  - csharp
  - vb
  name: Negator
  nameWithType: TokenType.Negator
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Negator
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Negator
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
    startLine: 32
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nThe parsed token represents an negator (negates a numeric expression)\n"
  example: []
  syntax:
    content: Negator = 2UL
    return:
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.OpeningParenthesis
  commentId: F:OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.OpeningParenthesis
  id: OpeningParenthesis
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  langs:
  - csharp
  - vb
  name: OpeningParenthesis
  nameWithType: TokenType.OpeningParenthesis
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.OpeningParenthesis
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: OpeningParenthesis
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
    startLine: 36
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nThe parsed token represents an opening parenthesis\n"
  example: []
  syntax:
    content: OpeningParenthesis = 4UL
    return:
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.ClosingParenthesis
  commentId: F:OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.ClosingParenthesis
  id: ClosingParenthesis
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  langs:
  - csharp
  - vb
  name: ClosingParenthesis
  nameWithType: TokenType.ClosingParenthesis
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.ClosingParenthesis
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ClosingParenthesis
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
    startLine: 40
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nThe parsed token represents a clising parenthesis\n"
  example: []
  syntax:
    content: ClosingParenthesis = 8UL
    return:
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.OpeningEnumerable
  commentId: F:OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.OpeningEnumerable
  id: OpeningEnumerable
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  langs:
  - csharp
  - vb
  name: OpeningEnumerable
  nameWithType: TokenType.OpeningEnumerable
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.OpeningEnumerable
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: OpeningEnumerable
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
    startLine: 44
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nThe parsed token represents a opening enumerable (&apos;{&apos;)\n"
  example: []
  syntax:
    content: OpeningEnumerable = 16UL
    return:
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.ClosingEnumerable
  commentId: F:OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.ClosingEnumerable
  id: ClosingEnumerable
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  langs:
  - csharp
  - vb
  name: ClosingEnumerable
  nameWithType: TokenType.ClosingEnumerable
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.ClosingEnumerable
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ClosingEnumerable
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
    startLine: 48
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nThe parsed token represents a closing enumerable (&apos;}&apos;)\n"
  example: []
  syntax:
    content: ClosingEnumerable = 32UL
    return:
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.OpeningBracket
  commentId: F:OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.OpeningBracket
  id: OpeningBracket
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  langs:
  - csharp
  - vb
  name: OpeningBracket
  nameWithType: TokenType.OpeningBracket
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.OpeningBracket
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: OpeningBracket
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
    startLine: 52
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nThe parsed token represents an opening bracket (&apos;[&apos;)\n"
  example: []
  syntax:
    content: OpeningBracket = 64UL
    return:
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.ClosingBracket
  commentId: F:OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.ClosingBracket
  id: ClosingBracket
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  langs:
  - csharp
  - vb
  name: ClosingBracket
  nameWithType: TokenType.ClosingBracket
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.ClosingBracket
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ClosingBracket
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
    startLine: 56
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nThe parsed token represents a closing bracket (&apos;]&apos;)\n"
  example: []
  syntax:
    content: ClosingBracket = 128UL
    return:
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Enumerable
  commentId: F:OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Enumerable
  id: Enumerable
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  langs:
  - csharp
  - vb
  name: Enumerable
  nameWithType: TokenType.Enumerable
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Enumerable
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Enumerable
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
    startLine: 60
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nThe parsed token represents an enumerable\n"
  example: []
  syntax:
    content: Enumerable = 256UL
    return:
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Comma
  commentId: F:OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Comma
  id: Comma
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  langs:
  - csharp
  - vb
  name: Comma
  nameWithType: TokenType.Comma
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Comma
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Comma
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
    startLine: 64
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nThe parsed token represents a comma\n"
  example: []
  syntax:
    content: Comma = 512UL
    return:
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.SemiColon
  commentId: F:OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.SemiColon
  id: SemiColon
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  langs:
  - csharp
  - vb
  name: SemiColon
  nameWithType: TokenType.SemiColon
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.SemiColon
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: SemiColon
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
    startLine: 68
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nThe parsed token represents a semicolon\n"
  example: []
  syntax:
    content: SemiColon = 1024UL
    return:
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.String
  commentId: F:OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.String
  id: String
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  langs:
  - csharp
  - vb
  name: String
  nameWithType: TokenType.String
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.String
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: String
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
    startLine: 72
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nThe parsed token represents a string\n"
  example: []
  syntax:
    content: String = 2048UL
    return:
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.StringContent
  commentId: F:OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.StringContent
  id: StringContent
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  langs:
  - csharp
  - vb
  name: StringContent
  nameWithType: TokenType.StringContent
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.StringContent
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: StringContent
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
    startLine: 76
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nThe parsed token represents content within a string\n"
  example: []
  syntax:
    content: StringContent = 4096UL
    return:
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.WorksheetName
  commentId: F:OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.WorksheetName
  id: WorksheetName
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  langs:
  - csharp
  - vb
  name: WorksheetName
  nameWithType: TokenType.WorksheetName
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.WorksheetName
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: WorksheetName
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
    startLine: 80
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nThe parsed token represents a worksheet name\n"
  example: []
  syntax:
    content: WorksheetName = 8192UL
    return:
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.WorksheetNameContent
  commentId: F:OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.WorksheetNameContent
  id: WorksheetNameContent
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  langs:
  - csharp
  - vb
  name: WorksheetNameContent
  nameWithType: TokenType.WorksheetNameContent
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.WorksheetNameContent
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: WorksheetNameContent
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
    startLine: 84
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nThe parsed token represents the content of a worksheet name\n"
  example: []
  syntax:
    content: WorksheetNameContent = 16384UL
    return:
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Integer
  commentId: F:OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Integer
  id: Integer
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  langs:
  - csharp
  - vb
  name: Integer
  nameWithType: TokenType.Integer
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Integer
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Integer
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
    startLine: 88
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nThe parsed token represents an integer value\n"
  example: []
  syntax:
    content: Integer = 32768UL
    return:
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Boolean
  commentId: F:OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Boolean
  id: Boolean
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  langs:
  - csharp
  - vb
  name: Boolean
  nameWithType: TokenType.Boolean
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Boolean
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Boolean
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
    startLine: 92
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nThe parsed token represents a boolean value\n"
  example: []
  syntax:
    content: Boolean = 65536UL
    return:
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Decimal
  commentId: F:OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Decimal
  id: Decimal
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  langs:
  - csharp
  - vb
  name: Decimal
  nameWithType: TokenType.Decimal
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Decimal
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Decimal
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
    startLine: 96
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nThe parsed token represents a decimal value\n"
  example: []
  syntax:
    content: Decimal = 131072UL
    return:
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Percent
  commentId: F:OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Percent
  id: Percent
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  langs:
  - csharp
  - vb
  name: Percent
  nameWithType: TokenType.Percent
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Percent
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Percent
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
    startLine: 100
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nThe parsed token represents a percentage value\n"
  example: []
  syntax:
    content: Percent = 262144UL
    return:
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Function
  commentId: F:OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Function
  id: Function
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  langs:
  - csharp
  - vb
  name: Function
  nameWithType: TokenType.Function
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Function
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Function
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
    startLine: 104
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nThe parsed token represents an excel function\n"
  example: []
  syntax:
    content: Function = 524288UL
    return:
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.ExcelAddress
  commentId: F:OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.ExcelAddress
  id: ExcelAddress
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  langs:
  - csharp
  - vb
  name: ExcelAddress
  nameWithType: TokenType.ExcelAddress
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.ExcelAddress
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ExcelAddress
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
    startLine: 108
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nThe parsed token represents an excel address\n"
  example: []
  syntax:
    content: ExcelAddress = 1048576UL
    return:
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.NameValue
  commentId: F:OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.NameValue
  id: NameValue
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  langs:
  - csharp
  - vb
  name: NameValue
  nameWithType: TokenType.NameValue
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.NameValue
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: NameValue
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
    startLine: 112
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nThe parsed token represents a NameValue\n"
  example: []
  syntax:
    content: NameValue = 2097152UL
    return:
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.InvalidReference
  commentId: F:OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.InvalidReference
  id: InvalidReference
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  langs:
  - csharp
  - vb
  name: InvalidReference
  nameWithType: TokenType.InvalidReference
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.InvalidReference
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: InvalidReference
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
    startLine: 116
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nThe parsed token represents an InvalidReference error (#REF)\n"
  example: []
  syntax:
    content: InvalidReference = 4194304UL
    return:
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.NumericError
  commentId: F:OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.NumericError
  id: NumericError
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  langs:
  - csharp
  - vb
  name: NumericError
  nameWithType: TokenType.NumericError
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.NumericError
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: NumericError
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
    startLine: 120
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nThe parsed token represents a Numeric error (#NUM)\n"
  example: []
  syntax:
    content: NumericError = 8388608UL
    return:
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.ValueDataTypeError
  commentId: F:OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.ValueDataTypeError
  id: ValueDataTypeError
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  langs:
  - csharp
  - vb
  name: ValueDataTypeError
  nameWithType: TokenType.ValueDataTypeError
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.ValueDataTypeError
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ValueDataTypeError
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
    startLine: 124
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nThe parsed tokens represents an Value error (#VAL)\n"
  example: []
  syntax:
    content: ValueDataTypeError = 16777216UL
    return:
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Null
  commentId: F:OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Null
  id: "Null"
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  langs:
  - csharp
  - vb
  name: "Null"
  nameWithType: TokenType.Null
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Null
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: "Null"
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
    startLine: 128
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nThe parsed token represents the NULL value\n"
  example: []
  syntax:
    content: Null = 33554432UL
    return:
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Unrecognized
  commentId: F:OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Unrecognized
  id: Unrecognized
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  langs:
  - csharp
  - vb
  name: Unrecognized
  nameWithType: TokenType.Unrecognized
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Unrecognized
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Unrecognized
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
    startLine: 132
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nThe parsed token represent an unrecognized value\n"
  example: []
  syntax:
    content: Unrecognized = 67108864UL
    return:
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.ExcelAddressR1C1
  commentId: F:OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.ExcelAddressR1C1
  id: ExcelAddressR1C1
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  langs:
  - csharp
  - vb
  name: ExcelAddressR1C1
  nameWithType: TokenType.ExcelAddressR1C1
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.ExcelAddressR1C1
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ExcelAddressR1C1
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
    startLine: 136
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nThe parsed token represents an R1C1 address\n"
  example: []
  syntax:
    content: ExcelAddressR1C1 = 134217728UL
    return:
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.CircularReference
  commentId: F:OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.CircularReference
  id: CircularReference
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  langs:
  - csharp
  - vb
  name: CircularReference
  nameWithType: TokenType.CircularReference
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.CircularReference
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: CircularReference
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
    startLine: 140
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nThe parsed token represents a circular reference\n"
  example: []
  syntax:
    content: CircularReference = 268435456UL
    return:
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Colon
  commentId: F:OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Colon
  id: Colon
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  langs:
  - csharp
  - vb
  name: Colon
  nameWithType: TokenType.Colon
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Colon
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Colon
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
    startLine: 144
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nThe parsed token represents a colon (address separator). Used for handling the offset function adress handling\n"
  example: []
  syntax:
    content: Colon = 536870912UL
    return:
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.RangeOffset
  commentId: F:OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.RangeOffset
  id: RangeOffset
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  langs:
  - csharp
  - vb
  name: RangeOffset
  nameWithType: TokenType.RangeOffset
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.RangeOffset
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: RangeOffset
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
    startLine: 148
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nThe parsed token represents an address with the OFFSET function, either before, after or on both sides of the colon.\n"
  example: []
  syntax:
    content: RangeOffset = 1073741824UL
    return:
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.WhiteSpace
  commentId: F:OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.WhiteSpace
  id: WhiteSpace
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  langs:
  - csharp
  - vb
  name: WhiteSpace
  nameWithType: TokenType.WhiteSpace
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.WhiteSpace
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: WhiteSpace
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
    startLine: 152
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nWhite space - Intersect operator will be set a operatar with the value &quot; &quot;\n"
  example: []
  syntax:
    content: WhiteSpace = 2147483648UL
    return:
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.ExternalReference
  commentId: F:OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.ExternalReference
  id: ExternalReference
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  langs:
  - csharp
  - vb
  name: ExternalReference
  nameWithType: TokenType.ExternalReference
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.ExternalReference
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ExternalReference
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
    startLine: 156
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nRepresents an external reference\n"
  example: []
  syntax:
    content: ExternalReference = 4294967296UL
    return:
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.TableName
  commentId: F:OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.TableName
  id: TableName
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  langs:
  - csharp
  - vb
  name: TableName
  nameWithType: TokenType.TableName
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.TableName
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: TableName
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
    startLine: 160
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nRefrence a table name in an address\n"
  example: []
  syntax:
    content: TableName = 8589934592UL
    return:
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.TablePart
  commentId: F:OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.TablePart
  id: TablePart
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  langs:
  - csharp
  - vb
  name: TablePart
  nameWithType: TokenType.TablePart
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.TablePart
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: TablePart
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
    startLine: 164
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nRepresents a table part in an address, for example &quot;#this row&quot;\n"
  example: []
  syntax:
    content: TablePart = 17179869184UL
    return:
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.TableColumn
  commentId: F:OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.TableColumn
  id: TableColumn
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  langs:
  - csharp
  - vb
  name: TableColumn
  nameWithType: TokenType.TableColumn
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.TableColumn
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: TableColumn
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
    startLine: 168
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nRepresents a table column name in an address.\n"
  example: []
  syntax:
    content: TableColumn = 34359738368UL
    return:
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.CellAddress
  commentId: F:OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.CellAddress
  id: CellAddress
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  langs:
  - csharp
  - vb
  name: CellAddress
  nameWithType: TokenType.CellAddress
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.CellAddress
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: CellAddress
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
    startLine: 172
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nRepresents a cell address.\n"
  example: []
  syntax:
    content: CellAddress = 68719476736UL
    return:
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.FullColumnAddress
  commentId: F:OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.FullColumnAddress
  id: FullColumnAddress
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  langs:
  - csharp
  - vb
  name: FullColumnAddress
  nameWithType: TokenType.FullColumnAddress
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.FullColumnAddress
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: FullColumnAddress
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
    startLine: 176
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nAlphnumeric characters representing a full column\n"
  example: []
  syntax:
    content: FullColumnAddress = 137438953472UL
    return:
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.FullRowAddress
  commentId: F:OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.FullRowAddress
  id: FullRowAddress
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  langs:
  - csharp
  - vb
  name: FullRowAddress
  nameWithType: TokenType.FullRowAddress
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.FullRowAddress
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: FullRowAddress
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
    startLine: 180
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nAn integer representing a full row\n"
  example: []
  syntax:
    content: FullRowAddress = 274877906944UL
    return:
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.StartFunctionArguments
  commentId: F:OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.StartFunctionArguments
  id: StartFunctionArguments
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  langs:
  - csharp
  - vb
  name: StartFunctionArguments
  nameWithType: TokenType.StartFunctionArguments
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.StartFunctionArguments
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: StartFunctionArguments
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
    startLine: 184
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nReprensenting a the start of a function argument\n"
  example: []
  syntax:
    content: StartFunctionArguments = 549755813888UL
    return:
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Array
  commentId: F:OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Array
  id: Array
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  langs:
  - csharp
  - vb
  name: Array
  nameWithType: TokenType.Array
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.Array
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Array
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
    startLine: 188
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nAn array\n"
  example: []
  syntax:
    content: Array = 1099511627776UL
    return:
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.NAError
  commentId: F:OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.NAError
  id: NAError
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  langs:
  - csharp
  - vb
  name: NAError
  nameWithType: TokenType.NAError
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.NAError
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: NAError
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
    startLine: 192
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nRepresents a N/A error\n"
  example: []
  syntax:
    content: NAError = 2199023255552UL
    return:
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.SingleQuote
  commentId: F:OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.SingleQuote
  id: SingleQuote
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  langs:
  - csharp
  - vb
  name: SingleQuote
  nameWithType: TokenType.SingleQuote
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.SingleQuote
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: SingleQuote
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
    startLine: 196
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nRepresents a single quote.\n"
  example: []
  syntax:
    content: SingleQuote = 4398046511104UL
    return:
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.HashMark
  commentId: F:OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.HashMark
  id: HashMark
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  langs:
  - csharp
  - vb
  name: HashMark
  nameWithType: TokenType.HashMark
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.HashMark
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: HashMark
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
    startLine: 200
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nRepresents a hash mark\n"
  example: []
  syntax:
    content: HashMark = 8796093022208UL
    return:
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.PivotField
  commentId: F:OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.PivotField
  id: PivotField
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  langs:
  - csharp
  - vb
  name: PivotField
  nameWithType: TokenType.PivotField
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.PivotField
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: PivotField
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
    startLine: 204
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nRepresents a pivot field in a pivot field formula\n"
  example: []
  syntax:
    content: PivotField = 17592186044416UL
    return:
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.ParameterVariableDeclaration
  commentId: F:OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.ParameterVariableDeclaration
  id: ParameterVariableDeclaration
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  langs:
  - csharp
  - vb
  name: ParameterVariableDeclaration
  nameWithType: TokenType.ParameterVariableDeclaration
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.ParameterVariableDeclaration
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ParameterVariableDeclaration
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
    startLine: 208
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nRepresents a parameter variable declaration in functions such as LET or LAMBDA\n"
  example: []
  syntax:
    content: ParameterVariableDeclaration = 35184372088832UL
    return:
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.NameError
  commentId: F:OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.NameError
  id: NameError
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  langs:
  - csharp
  - vb
  name: NameError
  nameWithType: TokenType.NameError
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.NameError
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: NameError
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
    startLine: 212
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nRepresents a name error\n"
  example: []
  syntax:
    content: NameError = 70368744177664UL
    return:
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.ParameterVariable
  commentId: F:OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.ParameterVariable
  id: ParameterVariable
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  langs:
  - csharp
  - vb
  name: ParameterVariable
  nameWithType: TokenType.ParameterVariable
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType.ParameterVariable
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ParameterVariable
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/TokenType.cs
    startLine: 216
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nRepresents a parameter variable in functions such as LET or LAMBDA\n"
  example: []
  syntax:
    content: ParameterVariable = 140737488355328UL
    return:
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  commentId: N:OfficeOpenXml.FormulaParsing.LexicalAnalysis
  name: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  nameWithType: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  commentId: T:OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  name: TokenType
  nameWithType: TokenType
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.TokenType
