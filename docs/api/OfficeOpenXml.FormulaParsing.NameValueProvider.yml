### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.FormulaParsing.NameValueProvider
  commentId: T:OfficeOpenXml.FormulaParsing.NameValueProvider
  id: NameValueProvider
  parent: OfficeOpenXml.FormulaParsing
  children:
  - OfficeOpenXml.FormulaParsing.NameValueProvider.Empty
  - OfficeOpenXml.FormulaParsing.NameValueProvider.GetNamedValue(System.String)
  - OfficeOpenXml.FormulaParsing.NameValueProvider.GetNamedValue(System.String,System.String)
  - OfficeOpenXml.FormulaParsing.NameValueProvider.IsNamedValue(System.String,System.String)
  - OfficeOpenXml.FormulaParsing.NameValueProvider.Reload
  langs:
  - csharp
  - vb
  name: NameValueProvider
  nameWithType: NameValueProvider
  fullName: OfficeOpenXml.FormulaParsing.NameValueProvider
  type: Class
  source:
    remote:
      path: src/EPPlus/FormulaParsing/NameValueProvider.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: NameValueProvider
    path: ../src/EPPlus/FormulaParsing/NameValueProvider.cs
    startLine: 22
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing
  summary: "\nProvides access to static, preconfigured instances of <xref href=\"OfficeOpenXml.FormulaParsing.INameValueProvider\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: 'public class NameValueProvider : INameValueProvider'
    content.vb: >-
      Public Class NameValueProvider
          Implements INameValueProvider
  inheritance:
  - System.Object
  implements:
  - OfficeOpenXml.FormulaParsing.INameValueProvider
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OfficeOpenXml.FormulaParsing.NameValueProvider.Empty
  commentId: P:OfficeOpenXml.FormulaParsing.NameValueProvider.Empty
  id: Empty
  parent: OfficeOpenXml.FormulaParsing.NameValueProvider
  langs:
  - csharp
  - vb
  name: Empty
  nameWithType: NameValueProvider.Empty
  fullName: OfficeOpenXml.FormulaParsing.NameValueProvider.Empty
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/NameValueProvider.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Empty
    path: ../src/EPPlus/FormulaParsing/NameValueProvider.cs
    startLine: 32
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing
  summary: "\nAn empty <xref href=\"OfficeOpenXml.FormulaParsing.INameValueProvider\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public static INameValueProvider Empty { get; }
    parameters: []
    return:
      type: OfficeOpenXml.FormulaParsing.INameValueProvider
    content.vb: Public Shared ReadOnly Property Empty As INameValueProvider
  overload: OfficeOpenXml.FormulaParsing.NameValueProvider.Empty*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: OfficeOpenXml.FormulaParsing.NameValueProvider.IsNamedValue(System.String,System.String)
  commentId: M:OfficeOpenXml.FormulaParsing.NameValueProvider.IsNamedValue(System.String,System.String)
  id: IsNamedValue(System.String,System.String)
  parent: OfficeOpenXml.FormulaParsing.NameValueProvider
  langs:
  - csharp
  - vb
  name: IsNamedValue(String, String)
  nameWithType: NameValueProvider.IsNamedValue(String, String)
  fullName: OfficeOpenXml.FormulaParsing.NameValueProvider.IsNamedValue(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/EPPlus/FormulaParsing/NameValueProvider.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: IsNamedValue
    path: ../src/EPPlus/FormulaParsing/NameValueProvider.cs
    startLine: 43
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing
  summary: "\nImplementation of the IsNamedValue function. In this case (Empty provider) it always return false.\n"
  example: []
  syntax:
    content: public bool IsNamedValue(string key, string worksheet)
    parameters:
    - id: key
      type: System.String
      description: ''
    - id: worksheet
      type: System.String
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function IsNamedValue(key As String, worksheet As String) As Boolean
  overload: OfficeOpenXml.FormulaParsing.NameValueProvider.IsNamedValue*
  implements:
  - OfficeOpenXml.FormulaParsing.INameValueProvider.IsNamedValue(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.FormulaParsing.NameValueProvider.GetNamedValue(System.String)
  commentId: M:OfficeOpenXml.FormulaParsing.NameValueProvider.GetNamedValue(System.String)
  id: GetNamedValue(System.String)
  parent: OfficeOpenXml.FormulaParsing.NameValueProvider
  langs:
  - csharp
  - vb
  name: GetNamedValue(String)
  nameWithType: NameValueProvider.GetNamedValue(String)
  fullName: OfficeOpenXml.FormulaParsing.NameValueProvider.GetNamedValue(System.String)
  type: Method
  source:
    remote:
      path: src/EPPlus/FormulaParsing/NameValueProvider.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: GetNamedValue
    path: ../src/EPPlus/FormulaParsing/NameValueProvider.cs
    startLine: 53
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing
  summary: "\nImplementation of the GetNamedValue function. In this case (Empty provider) it always return null.\n"
  example: []
  syntax:
    content: public object GetNamedValue(string key)
    parameters:
    - id: key
      type: System.String
      description: ''
    return:
      type: System.Object
      description: ''
    content.vb: Public Function GetNamedValue(key As String) As Object
  overload: OfficeOpenXml.FormulaParsing.NameValueProvider.GetNamedValue*
  implements:
  - OfficeOpenXml.FormulaParsing.INameValueProvider.GetNamedValue(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.FormulaParsing.NameValueProvider.Reload
  commentId: M:OfficeOpenXml.FormulaParsing.NameValueProvider.Reload
  id: Reload
  parent: OfficeOpenXml.FormulaParsing.NameValueProvider
  langs:
  - csharp
  - vb
  name: Reload()
  nameWithType: NameValueProvider.Reload()
  fullName: OfficeOpenXml.FormulaParsing.NameValueProvider.Reload()
  type: Method
  source:
    remote:
      path: src/EPPlus/FormulaParsing/NameValueProvider.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Reload
    path: ../src/EPPlus/FormulaParsing/NameValueProvider.cs
    startLine: 61
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing
  summary: "\nImplementation of the Reload function\n"
  example: []
  syntax:
    content: public void Reload()
    content.vb: Public Sub Reload
  overload: OfficeOpenXml.FormulaParsing.NameValueProvider.Reload*
  implements:
  - OfficeOpenXml.FormulaParsing.INameValueProvider.Reload
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.FormulaParsing.NameValueProvider.GetNamedValue(System.String,System.String)
  commentId: M:OfficeOpenXml.FormulaParsing.NameValueProvider.GetNamedValue(System.String,System.String)
  id: GetNamedValue(System.String,System.String)
  parent: OfficeOpenXml.FormulaParsing.NameValueProvider
  langs:
  - csharp
  - vb
  name: GetNamedValue(String, String)
  nameWithType: NameValueProvider.GetNamedValue(String, String)
  fullName: OfficeOpenXml.FormulaParsing.NameValueProvider.GetNamedValue(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/EPPlus/FormulaParsing/NameValueProvider.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: GetNamedValue
    path: ../src/EPPlus/FormulaParsing/NameValueProvider.cs
    startLine: 71
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing
  summary: "\nGet named value\n"
  example: []
  syntax:
    content: public object GetNamedValue(string key, string worksheet)
    parameters:
    - id: key
      type: System.String
      description: ''
    - id: worksheet
      type: System.String
      description: ''
    return:
      type: System.Object
      description: ''
    content.vb: Public Function GetNamedValue(key As String, worksheet As String) As Object
  overload: OfficeOpenXml.FormulaParsing.NameValueProvider.GetNamedValue*
  implements:
  - OfficeOpenXml.FormulaParsing.INameValueProvider.GetNamedValue(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: OfficeOpenXml.FormulaParsing.INameValueProvider
  commentId: T:OfficeOpenXml.FormulaParsing.INameValueProvider
  parent: OfficeOpenXml.FormulaParsing
  name: INameValueProvider
  nameWithType: INameValueProvider
  fullName: OfficeOpenXml.FormulaParsing.INameValueProvider
- uid: OfficeOpenXml.FormulaParsing
  commentId: N:OfficeOpenXml.FormulaParsing
  name: OfficeOpenXml.FormulaParsing
  nameWithType: OfficeOpenXml.FormulaParsing
  fullName: OfficeOpenXml.FormulaParsing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml.FormulaParsing.NameValueProvider.Empty*
  commentId: Overload:OfficeOpenXml.FormulaParsing.NameValueProvider.Empty
  name: Empty
  nameWithType: NameValueProvider.Empty
  fullName: OfficeOpenXml.FormulaParsing.NameValueProvider.Empty
- uid: OfficeOpenXml.FormulaParsing.NameValueProvider.IsNamedValue*
  commentId: Overload:OfficeOpenXml.FormulaParsing.NameValueProvider.IsNamedValue
  name: IsNamedValue
  nameWithType: NameValueProvider.IsNamedValue
  fullName: OfficeOpenXml.FormulaParsing.NameValueProvider.IsNamedValue
- uid: OfficeOpenXml.FormulaParsing.INameValueProvider.IsNamedValue(System.String,System.String)
  commentId: M:OfficeOpenXml.FormulaParsing.INameValueProvider.IsNamedValue(System.String,System.String)
  parent: OfficeOpenXml.FormulaParsing.INameValueProvider
  isExternal: true
  name: IsNamedValue(String, String)
  nameWithType: INameValueProvider.IsNamedValue(String, String)
  fullName: OfficeOpenXml.FormulaParsing.INameValueProvider.IsNamedValue(System.String, System.String)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.INameValueProvider.IsNamedValue(System.String,System.String)
    name: IsNamedValue
    nameWithType: INameValueProvider.IsNamedValue
    fullName: OfficeOpenXml.FormulaParsing.INameValueProvider.IsNamedValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.INameValueProvider.IsNamedValue(System.String,System.String)
    name: IsNamedValue
    nameWithType: INameValueProvider.IsNamedValue
    fullName: OfficeOpenXml.FormulaParsing.INameValueProvider.IsNamedValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: OfficeOpenXml.FormulaParsing.NameValueProvider.GetNamedValue*
  commentId: Overload:OfficeOpenXml.FormulaParsing.NameValueProvider.GetNamedValue
  name: GetNamedValue
  nameWithType: NameValueProvider.GetNamedValue
  fullName: OfficeOpenXml.FormulaParsing.NameValueProvider.GetNamedValue
- uid: OfficeOpenXml.FormulaParsing.INameValueProvider.GetNamedValue(System.String)
  commentId: M:OfficeOpenXml.FormulaParsing.INameValueProvider.GetNamedValue(System.String)
  parent: OfficeOpenXml.FormulaParsing.INameValueProvider
  isExternal: true
  name: GetNamedValue(String)
  nameWithType: INameValueProvider.GetNamedValue(String)
  fullName: OfficeOpenXml.FormulaParsing.INameValueProvider.GetNamedValue(System.String)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.INameValueProvider.GetNamedValue(System.String)
    name: GetNamedValue
    nameWithType: INameValueProvider.GetNamedValue
    fullName: OfficeOpenXml.FormulaParsing.INameValueProvider.GetNamedValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.INameValueProvider.GetNamedValue(System.String)
    name: GetNamedValue
    nameWithType: INameValueProvider.GetNamedValue
    fullName: OfficeOpenXml.FormulaParsing.INameValueProvider.GetNamedValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.NameValueProvider.Reload*
  commentId: Overload:OfficeOpenXml.FormulaParsing.NameValueProvider.Reload
  name: Reload
  nameWithType: NameValueProvider.Reload
  fullName: OfficeOpenXml.FormulaParsing.NameValueProvider.Reload
- uid: OfficeOpenXml.FormulaParsing.INameValueProvider.Reload
  commentId: M:OfficeOpenXml.FormulaParsing.INameValueProvider.Reload
  parent: OfficeOpenXml.FormulaParsing.INameValueProvider
  name: Reload()
  nameWithType: INameValueProvider.Reload()
  fullName: OfficeOpenXml.FormulaParsing.INameValueProvider.Reload()
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.INameValueProvider.Reload
    name: Reload
    nameWithType: INameValueProvider.Reload
    fullName: OfficeOpenXml.FormulaParsing.INameValueProvider.Reload
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.INameValueProvider.Reload
    name: Reload
    nameWithType: INameValueProvider.Reload
    fullName: OfficeOpenXml.FormulaParsing.INameValueProvider.Reload
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.INameValueProvider.GetNamedValue(System.String,System.String)
  commentId: M:OfficeOpenXml.FormulaParsing.INameValueProvider.GetNamedValue(System.String,System.String)
  parent: OfficeOpenXml.FormulaParsing.INameValueProvider
  isExternal: true
  name: GetNamedValue(String, String)
  nameWithType: INameValueProvider.GetNamedValue(String, String)
  fullName: OfficeOpenXml.FormulaParsing.INameValueProvider.GetNamedValue(System.String, System.String)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.INameValueProvider.GetNamedValue(System.String,System.String)
    name: GetNamedValue
    nameWithType: INameValueProvider.GetNamedValue
    fullName: OfficeOpenXml.FormulaParsing.INameValueProvider.GetNamedValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.INameValueProvider.GetNamedValue(System.String,System.String)
    name: GetNamedValue
    nameWithType: INameValueProvider.GetNamedValue
    fullName: OfficeOpenXml.FormulaParsing.INameValueProvider.GetNamedValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
