### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.FormulaParsing.Utilities.RegexConstants
  commentId: T:OfficeOpenXml.FormulaParsing.Utilities.RegexConstants
  id: RegexConstants
  parent: OfficeOpenXml.FormulaParsing.Utilities
  children:
  - OfficeOpenXml.FormulaParsing.Utilities.RegexConstants.ExcelAddress
  - OfficeOpenXml.FormulaParsing.Utilities.RegexConstants.SingleCellAddress
  langs:
  - csharp
  - vb
  name: RegexConstants
  nameWithType: RegexConstants
  fullName: OfficeOpenXml.FormulaParsing.Utilities.RegexConstants
  type: Class
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Utilities/RegexConstants.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: RegexConstants
    path: ../src/EPPlus/FormulaParsing/Utilities/RegexConstants.cs
    startLine: 22
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Utilities
  summary: "\nRegex constants for formula parsing.\n"
  example: []
  syntax:
    content: public static class RegexConstants
    content.vb: Public Module RegexConstants
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: OfficeOpenXml.FormulaParsing.Utilities.RegexConstants.SingleCellAddress
  commentId: F:OfficeOpenXml.FormulaParsing.Utilities.RegexConstants.SingleCellAddress
  id: SingleCellAddress
  parent: OfficeOpenXml.FormulaParsing.Utilities.RegexConstants
  langs:
  - csharp
  - vb
  name: SingleCellAddress
  nameWithType: RegexConstants.SingleCellAddress
  fullName: OfficeOpenXml.FormulaParsing.Utilities.RegexConstants.SingleCellAddress
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Utilities/RegexConstants.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: SingleCellAddress
    path: ../src/EPPlus/FormulaParsing/Utilities/RegexConstants.cs
    startLine: 27
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Utilities
  summary: "\nRegex constant matching a single cell address.\n"
  example: []
  syntax:
    content: public const string SingleCellAddress = "^(('[^/\\\\?*\\[\\]]{1,31}'|[A-Za-z_]{1,31})!)?[A-Z]{1,3}[1-9]{1}[0-9]{0,7}$"
    return:
      type: System.String
    content.vb: Public Const SingleCellAddress As String = "^(('[^/\\?*\[\]]{1,31}'|[A-Za-z_]{1,31})!)?[A-Z]{1,3}[1-9]{1}[0-9]{0,7}$"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: OfficeOpenXml.FormulaParsing.Utilities.RegexConstants.ExcelAddress
  commentId: F:OfficeOpenXml.FormulaParsing.Utilities.RegexConstants.ExcelAddress
  id: ExcelAddress
  parent: OfficeOpenXml.FormulaParsing.Utilities.RegexConstants
  langs:
  - csharp
  - vb
  name: ExcelAddress
  nameWithType: RegexConstants.ExcelAddress
  fullName: OfficeOpenXml.FormulaParsing.Utilities.RegexConstants.ExcelAddress
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Utilities/RegexConstants.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ExcelAddress
    path: ../src/EPPlus/FormulaParsing/Utilities/RegexConstants.cs
    startLine: 31
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Utilities
  summary: "\nRegex constant matching a full Excel address\n"
  example: []
  syntax:
    content: public const string ExcelAddress = "^(('[^/\\\\?*\\[\\]]{1,31}'|[A-Za-z_]{1,31})!)?[\\$]{0,1}([A-Z]|[A-Z]{1,3}[\\$]{0,1}[1-9]{1}[0-9]{0,7})(\\:({0,1}[A-Z]|[A-Z]{1,3}[\\$]{0,1}[1-9]{1}[0-9]{0,7})){0,1}$"
    return:
      type: System.String
    content.vb: Public Const ExcelAddress As String = "^(('[^/\\?*\[\]]{1,31}'|[A-Za-z_]{1,31})!)?[\$]{0,1}([A-Z]|[A-Z]{1,3}[\$]{0,1}[1-9]{1}[0-9]{0,7})(\:({0,1}[A-Z]|[A-Z]{1,3}[\$]{0,1}[1-9]{1}[0-9]{0,7})){0,1}$"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: OfficeOpenXml.FormulaParsing.Utilities
  commentId: N:OfficeOpenXml.FormulaParsing.Utilities
  name: OfficeOpenXml.FormulaParsing.Utilities
  nameWithType: OfficeOpenXml.FormulaParsing.Utilities
  fullName: OfficeOpenXml.FormulaParsing.Utilities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
