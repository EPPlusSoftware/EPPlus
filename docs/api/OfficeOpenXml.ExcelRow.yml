### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.ExcelRow
  commentId: T:OfficeOpenXml.ExcelRow
  id: ExcelRow
  parent: OfficeOpenXml
  children:
  - OfficeOpenXml.ExcelRow.Collapsed
  - OfficeOpenXml.ExcelRow.CustomHeight
  - OfficeOpenXml.ExcelRow.Height
  - OfficeOpenXml.ExcelRow.Hidden
  - OfficeOpenXml.ExcelRow.Merged
  - OfficeOpenXml.ExcelRow.OutlineLevel
  - OfficeOpenXml.ExcelRow.PageBreak
  - OfficeOpenXml.ExcelRow.Phonetic
  - OfficeOpenXml.ExcelRow.Row
  - OfficeOpenXml.ExcelRow.RowID
  - OfficeOpenXml.ExcelRow.Style
  - OfficeOpenXml.ExcelRow.StyleID
  - OfficeOpenXml.ExcelRow.StyleName
  langs:
  - csharp
  - vb
  name: ExcelRow
  nameWithType: ExcelRow
  fullName: OfficeOpenXml.ExcelRow
  type: Class
  source:
    remote:
      path: src/EPPlus/ExcelRow.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ExcelRow
    path: ../src/EPPlus/ExcelRow.cs
    startLine: 47
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  summary: "\nRepresents an individual row in the spreadsheet.\n"
  example: []
  syntax:
    content: public class ExcelRow
    content.vb: Public Class ExcelRow
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OfficeOpenXml.ExcelRow.RowID
  commentId: P:OfficeOpenXml.ExcelRow.RowID
  id: RowID
  parent: OfficeOpenXml.ExcelRow
  langs:
  - csharp
  - vb
  name: RowID
  nameWithType: ExcelRow.RowID
  fullName: OfficeOpenXml.ExcelRow.RowID
  type: Property
  source:
    remote:
      path: src/EPPlus/ExcelRow.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: RowID
    path: ../src/EPPlus/ExcelRow.cs
    startLine: 54
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  summary: "\nInternal RowID.\n"
  example: []
  syntax:
    content: >-
      [Obsolete]

      public ulong RowID { get; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: >-
      <Obsolete>

      Public ReadOnly Property RowID As ULong
  overload: OfficeOpenXml.ExcelRow.RowID*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.ExcelRow.Hidden
  commentId: P:OfficeOpenXml.ExcelRow.Hidden
  id: Hidden
  parent: OfficeOpenXml.ExcelRow
  langs:
  - csharp
  - vb
  name: Hidden
  nameWithType: ExcelRow.Hidden
  fullName: OfficeOpenXml.ExcelRow.Hidden
  type: Property
  source:
    remote:
      path: src/EPPlus/ExcelRow.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Hidden
    path: ../src/EPPlus/ExcelRow.cs
    startLine: 85
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  summary: "\nAllows the row to be hidden in the worksheet\n"
  example: []
  syntax:
    content: public bool Hidden { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Hidden As Boolean
  overload: OfficeOpenXml.ExcelRow.Hidden*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.ExcelRow.Height
  commentId: P:OfficeOpenXml.ExcelRow.Height
  id: Height
  parent: OfficeOpenXml.ExcelRow
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: ExcelRow.Height
  fullName: OfficeOpenXml.ExcelRow.Height
  type: Property
  source:
    remote:
      path: src/EPPlus/ExcelRow.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Height
    path: ../src/EPPlus/ExcelRow.cs
    startLine: 111
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  summary: "\nSets the height of the row\n"
  example: []
  syntax:
    content: public double Height { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Height As Double
  overload: OfficeOpenXml.ExcelRow.Height*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.ExcelRow.CustomHeight
  commentId: P:OfficeOpenXml.ExcelRow.CustomHeight
  id: CustomHeight
  parent: OfficeOpenXml.ExcelRow
  langs:
  - csharp
  - vb
  name: CustomHeight
  nameWithType: ExcelRow.CustomHeight
  fullName: OfficeOpenXml.ExcelRow.CustomHeight
  type: Property
  source:
    remote:
      path: src/EPPlus/ExcelRow.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: CustomHeight
    path: ../src/EPPlus/ExcelRow.cs
    startLine: 150
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  summary: "\nSet to true if You don&apos;t want the row to Autosize\n"
  example: []
  syntax:
    content: public bool CustomHeight { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property CustomHeight As Boolean
  overload: OfficeOpenXml.ExcelRow.CustomHeight*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.ExcelRow.StyleName
  commentId: P:OfficeOpenXml.ExcelRow.StyleName
  id: StyleName
  parent: OfficeOpenXml.ExcelRow
  langs:
  - csharp
  - vb
  name: StyleName
  nameWithType: ExcelRow.StyleName
  fullName: OfficeOpenXml.ExcelRow.StyleName
  type: Property
  source:
    remote:
      path: src/EPPlus/ExcelRow.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: StyleName
    path: ../src/EPPlus/ExcelRow.cs
    startLine: 176
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  summary: "\nSets the style for the entire column using a style name.\n"
  example: []
  syntax:
    content: public string StyleName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property StyleName As String
  overload: OfficeOpenXml.ExcelRow.StyleName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.ExcelRow.StyleID
  commentId: P:OfficeOpenXml.ExcelRow.StyleID
  id: StyleID
  parent: OfficeOpenXml.ExcelRow
  langs:
  - csharp
  - vb
  name: StyleID
  nameWithType: ExcelRow.StyleID
  fullName: OfficeOpenXml.ExcelRow.StyleID
  type: Property
  source:
    remote:
      path: src/EPPlus/ExcelRow.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: StyleID
    path: ../src/EPPlus/ExcelRow.cs
    startLine: 191
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  summary: "\nSets the style for the entire row using the style ID.  \n"
  example: []
  syntax:
    content: public int StyleID { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property StyleID As Integer
  overload: OfficeOpenXml.ExcelRow.StyleID*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.ExcelRow.Row
  commentId: P:OfficeOpenXml.ExcelRow.Row
  id: Row
  parent: OfficeOpenXml.ExcelRow
  langs:
  - csharp
  - vb
  name: Row
  nameWithType: ExcelRow.Row
  fullName: OfficeOpenXml.ExcelRow.Row
  type: Property
  source:
    remote:
      path: src/EPPlus/ExcelRow.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Row
    path: ../src/EPPlus/ExcelRow.cs
    startLine: 206
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  summary: "\nRownumber\n"
  example: []
  syntax:
    content: public int Row { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Row As Integer
  overload: OfficeOpenXml.ExcelRow.Row*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.ExcelRow.Collapsed
  commentId: P:OfficeOpenXml.ExcelRow.Collapsed
  id: Collapsed
  parent: OfficeOpenXml.ExcelRow
  langs:
  - csharp
  - vb
  name: Collapsed
  nameWithType: ExcelRow.Collapsed
  fullName: OfficeOpenXml.ExcelRow.Collapsed
  type: Property
  source:
    remote:
      path: src/EPPlus/ExcelRow.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Collapsed
    path: ../src/EPPlus/ExcelRow.cs
    startLine: 214
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  summary: "\nIf outline level is set this tells that the row is collapsed\n"
  example: []
  syntax:
    content: public bool Collapsed { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Collapsed As Boolean
  overload: OfficeOpenXml.ExcelRow.Collapsed*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.ExcelRow.OutlineLevel
  commentId: P:OfficeOpenXml.ExcelRow.OutlineLevel
  id: OutlineLevel
  parent: OfficeOpenXml.ExcelRow
  langs:
  - csharp
  - vb
  name: OutlineLevel
  nameWithType: ExcelRow.OutlineLevel
  fullName: OfficeOpenXml.ExcelRow.OutlineLevel
  type: Property
  source:
    remote:
      path: src/EPPlus/ExcelRow.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: OutlineLevel
    path: ../src/EPPlus/ExcelRow.cs
    startLine: 237
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  summary: "\nOutline level.\n"
  example: []
  syntax:
    content: public int OutlineLevel { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property OutlineLevel As Integer
  overload: OfficeOpenXml.ExcelRow.OutlineLevel*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.ExcelRow.Phonetic
  commentId: P:OfficeOpenXml.ExcelRow.Phonetic
  id: Phonetic
  parent: OfficeOpenXml.ExcelRow
  langs:
  - csharp
  - vb
  name: Phonetic
  nameWithType: ExcelRow.Phonetic
  fullName: OfficeOpenXml.ExcelRow.Phonetic
  type: Property
  source:
    remote:
      path: src/EPPlus/ExcelRow.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Phonetic
    path: ../src/EPPlus/ExcelRow.cs
    startLine: 275
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  summary: "\nShow phonetic Information\n"
  example: []
  syntax:
    content: public bool Phonetic { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Phonetic As Boolean
  overload: OfficeOpenXml.ExcelRow.Phonetic*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.ExcelRow.Style
  commentId: P:OfficeOpenXml.ExcelRow.Style
  id: Style
  parent: OfficeOpenXml.ExcelRow
  langs:
  - csharp
  - vb
  name: Style
  nameWithType: ExcelRow.Style
  fullName: OfficeOpenXml.ExcelRow.Style
  type: Property
  source:
    remote:
      path: src/EPPlus/ExcelRow.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Style
    path: ../src/EPPlus/ExcelRow.cs
    startLine: 299
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  summary: "\nThe Style applied to the whole row. Only effekt cells with no individual style set. \nUse the <xref href=\"OfficeOpenXml.ExcelWorksheet.Cells\" data-throw-if-not-resolved=\"false\"></xref> Style property if you want to set specific styles.\n"
  example: []
  syntax:
    content: public ExcelStyle Style { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Style.ExcelStyle
    content.vb: Public ReadOnly Property Style As ExcelStyle
  overload: OfficeOpenXml.ExcelRow.Style*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.ExcelRow.PageBreak
  commentId: P:OfficeOpenXml.ExcelRow.PageBreak
  id: PageBreak
  parent: OfficeOpenXml.ExcelRow
  langs:
  - csharp
  - vb
  name: PageBreak
  nameWithType: ExcelRow.PageBreak
  fullName: OfficeOpenXml.ExcelRow.PageBreak
  type: Property
  source:
    remote:
      path: src/EPPlus/ExcelRow.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: PageBreak
    path: ../src/EPPlus/ExcelRow.cs
    startLine: 309
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  summary: "\nAdds a manual page break after the row.\n"
  example: []
  syntax:
    content: public bool PageBreak { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property PageBreak As Boolean
  overload: OfficeOpenXml.ExcelRow.PageBreak*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.ExcelRow.Merged
  commentId: P:OfficeOpenXml.ExcelRow.Merged
  id: Merged
  parent: OfficeOpenXml.ExcelRow
  langs:
  - csharp
  - vb
  name: Merged
  nameWithType: ExcelRow.Merged
  fullName: OfficeOpenXml.ExcelRow.Merged
  type: Property
  source:
    remote:
      path: src/EPPlus/ExcelRow.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Merged
    path: ../src/EPPlus/ExcelRow.cs
    startLine: 332
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  summary: "\nMerge all cells in the row\n"
  example: []
  syntax:
    content: public bool Merged { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Merged As Boolean
  overload: OfficeOpenXml.ExcelRow.Merged*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: OfficeOpenXml
  commentId: N:OfficeOpenXml
  name: OfficeOpenXml
  nameWithType: OfficeOpenXml
  fullName: OfficeOpenXml
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml.ExcelRow.RowID*
  commentId: Overload:OfficeOpenXml.ExcelRow.RowID
  name: RowID
  nameWithType: ExcelRow.RowID
  fullName: OfficeOpenXml.ExcelRow.RowID
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: OfficeOpenXml.ExcelRow.Hidden*
  commentId: Overload:OfficeOpenXml.ExcelRow.Hidden
  name: Hidden
  nameWithType: ExcelRow.Hidden
  fullName: OfficeOpenXml.ExcelRow.Hidden
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: OfficeOpenXml.ExcelRow.Height*
  commentId: Overload:OfficeOpenXml.ExcelRow.Height
  name: Height
  nameWithType: ExcelRow.Height
  fullName: OfficeOpenXml.ExcelRow.Height
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: OfficeOpenXml.ExcelRow.CustomHeight*
  commentId: Overload:OfficeOpenXml.ExcelRow.CustomHeight
  name: CustomHeight
  nameWithType: ExcelRow.CustomHeight
  fullName: OfficeOpenXml.ExcelRow.CustomHeight
- uid: OfficeOpenXml.ExcelRow.StyleName*
  commentId: Overload:OfficeOpenXml.ExcelRow.StyleName
  name: StyleName
  nameWithType: ExcelRow.StyleName
  fullName: OfficeOpenXml.ExcelRow.StyleName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OfficeOpenXml.ExcelRow.StyleID*
  commentId: Overload:OfficeOpenXml.ExcelRow.StyleID
  name: StyleID
  nameWithType: ExcelRow.StyleID
  fullName: OfficeOpenXml.ExcelRow.StyleID
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: OfficeOpenXml.ExcelRow.Row*
  commentId: Overload:OfficeOpenXml.ExcelRow.Row
  name: Row
  nameWithType: ExcelRow.Row
  fullName: OfficeOpenXml.ExcelRow.Row
- uid: OfficeOpenXml.ExcelRow.Collapsed*
  commentId: Overload:OfficeOpenXml.ExcelRow.Collapsed
  name: Collapsed
  nameWithType: ExcelRow.Collapsed
  fullName: OfficeOpenXml.ExcelRow.Collapsed
- uid: OfficeOpenXml.ExcelRow.OutlineLevel*
  commentId: Overload:OfficeOpenXml.ExcelRow.OutlineLevel
  name: OutlineLevel
  nameWithType: ExcelRow.OutlineLevel
  fullName: OfficeOpenXml.ExcelRow.OutlineLevel
- uid: OfficeOpenXml.ExcelRow.Phonetic*
  commentId: Overload:OfficeOpenXml.ExcelRow.Phonetic
  name: Phonetic
  nameWithType: ExcelRow.Phonetic
  fullName: OfficeOpenXml.ExcelRow.Phonetic
- uid: OfficeOpenXml.ExcelWorksheet.Cells
  commentId: P:OfficeOpenXml.ExcelWorksheet.Cells
  parent: OfficeOpenXml.ExcelWorksheet
  name: Cells
  nameWithType: ExcelWorksheet.Cells
  fullName: OfficeOpenXml.ExcelWorksheet.Cells
- uid: OfficeOpenXml.ExcelRow.Style*
  commentId: Overload:OfficeOpenXml.ExcelRow.Style
  name: Style
  nameWithType: ExcelRow.Style
  fullName: OfficeOpenXml.ExcelRow.Style
- uid: OfficeOpenXml.Style.ExcelStyle
  commentId: T:OfficeOpenXml.Style.ExcelStyle
  parent: OfficeOpenXml.Style
  name: ExcelStyle
  nameWithType: ExcelStyle
  fullName: OfficeOpenXml.Style.ExcelStyle
- uid: OfficeOpenXml.ExcelWorksheet
  commentId: T:OfficeOpenXml.ExcelWorksheet
  parent: OfficeOpenXml
  name: ExcelWorksheet
  nameWithType: ExcelWorksheet
  fullName: OfficeOpenXml.ExcelWorksheet
- uid: OfficeOpenXml.Style
  commentId: N:OfficeOpenXml.Style
  name: OfficeOpenXml.Style
  nameWithType: OfficeOpenXml.Style
  fullName: OfficeOpenXml.Style
- uid: OfficeOpenXml.ExcelRow.PageBreak*
  commentId: Overload:OfficeOpenXml.ExcelRow.PageBreak
  name: PageBreak
  nameWithType: ExcelRow.PageBreak
  fullName: OfficeOpenXml.ExcelRow.PageBreak
- uid: OfficeOpenXml.ExcelRow.Merged*
  commentId: Overload:OfficeOpenXml.ExcelRow.Merged
  name: Merged
  nameWithType: ExcelRow.Merged
  fullName: OfficeOpenXml.ExcelRow.Merged
