### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependency
  commentId: T:OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependency
  id: FormulaDependency
  parent: OfficeOpenXml.FormulaParsing.ExcelUtilities
  children:
  - OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependency.#ctor(OfficeOpenXml.FormulaParsing.ParsingScope)
  - OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependency.AddReferenceFrom(OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaRangeAddress)
  - OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependency.Address
  - OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependency.ScopeId
  langs:
  - csharp
  - vb
  name: FormulaDependency
  nameWithType: FormulaDependency
  fullName: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependency
  type: Class
  source:
    remote:
      path: src/EPPlus/FormulaParsing/ExcelUtilities/FormulaDependency.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: FormulaDependency
    path: ../src/EPPlus/FormulaParsing/ExcelUtilities/FormulaDependency.cs
    startLine: 21
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.ExcelUtilities
  syntax:
    content: public class FormulaDependency
    content.vb: Public Class FormulaDependency
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependency.#ctor(OfficeOpenXml.FormulaParsing.ParsingScope)
  commentId: M:OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependency.#ctor(OfficeOpenXml.FormulaParsing.ParsingScope)
  id: '#ctor(OfficeOpenXml.FormulaParsing.ParsingScope)'
  parent: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependency
  langs:
  - csharp
  - vb
  name: FormulaDependency(ParsingScope)
  nameWithType: FormulaDependency.FormulaDependency(ParsingScope)
  fullName: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependency.FormulaDependency(OfficeOpenXml.FormulaParsing.ParsingScope)
  type: Constructor
  source:
    remote:
      path: src/EPPlus/FormulaParsing/ExcelUtilities/FormulaDependency.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: .ctor
    path: ../src/EPPlus/FormulaParsing/ExcelUtilities/FormulaDependency.cs
    startLine: 23
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.ExcelUtilities
  syntax:
    content: public FormulaDependency(ParsingScope scope)
    parameters:
    - id: scope
      type: OfficeOpenXml.FormulaParsing.ParsingScope
    content.vb: Public Sub New(scope As ParsingScope)
  overload: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependency.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependency.ScopeId
  commentId: P:OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependency.ScopeId
  id: ScopeId
  parent: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependency
  langs:
  - csharp
  - vb
  name: ScopeId
  nameWithType: FormulaDependency.ScopeId
  fullName: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependency.ScopeId
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/ExcelUtilities/FormulaDependency.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ScopeId
    path: ../src/EPPlus/FormulaParsing/ExcelUtilities/FormulaDependency.cs
    startLine: 28
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.ExcelUtilities
  syntax:
    content: public Guid ScopeId { get; }
    parameters: []
    return:
      type: System.Guid
    content.vb: Public ReadOnly Property ScopeId As Guid
  overload: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependency.ScopeId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependency.Address
  commentId: P:OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependency.Address
  id: Address
  parent: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependency
  langs:
  - csharp
  - vb
  name: Address
  nameWithType: FormulaDependency.Address
  fullName: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependency.Address
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/ExcelUtilities/FormulaDependency.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Address
    path: ../src/EPPlus/FormulaParsing/ExcelUtilities/FormulaDependency.cs
    startLine: 30
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.ExcelUtilities
  syntax:
    content: public FormulaRangeAddress Address { get; }
    parameters: []
    return:
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaRangeAddress
    content.vb: Public ReadOnly Property Address As FormulaRangeAddress
  overload: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependency.Address*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependency.AddReferenceFrom(OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaRangeAddress)
  commentId: M:OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependency.AddReferenceFrom(OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaRangeAddress)
  id: AddReferenceFrom(OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaRangeAddress)
  parent: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependency
  langs:
  - csharp
  - vb
  name: AddReferenceFrom(FormulaRangeAddress)
  nameWithType: FormulaDependency.AddReferenceFrom(FormulaRangeAddress)
  fullName: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependency.AddReferenceFrom(OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaRangeAddress)
  type: Method
  source:
    remote:
      path: src/EPPlus/FormulaParsing/ExcelUtilities/FormulaDependency.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: AddReferenceFrom
    path: ../src/EPPlus/FormulaParsing/ExcelUtilities/FormulaDependency.cs
    startLine: 36
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.ExcelUtilities
  syntax:
    content: public virtual void AddReferenceFrom(FormulaRangeAddress rangeAddress)
    parameters:
    - id: rangeAddress
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaRangeAddress
    content.vb: Public Overridable Sub AddReferenceFrom(rangeAddress As FormulaRangeAddress)
  overload: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependency.AddReferenceFrom*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: OfficeOpenXml.FormulaParsing.ExcelUtilities
  commentId: N:OfficeOpenXml.FormulaParsing.ExcelUtilities
  name: OfficeOpenXml.FormulaParsing.ExcelUtilities
  nameWithType: OfficeOpenXml.FormulaParsing.ExcelUtilities
  fullName: OfficeOpenXml.FormulaParsing.ExcelUtilities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependency.#ctor*
  commentId: Overload:OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependency.#ctor
  name: FormulaDependency
  nameWithType: FormulaDependency.FormulaDependency
  fullName: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependency.FormulaDependency
- uid: OfficeOpenXml.FormulaParsing.ParsingScope
  commentId: T:OfficeOpenXml.FormulaParsing.ParsingScope
  parent: OfficeOpenXml.FormulaParsing
  name: ParsingScope
  nameWithType: ParsingScope
  fullName: OfficeOpenXml.FormulaParsing.ParsingScope
- uid: OfficeOpenXml.FormulaParsing
  commentId: N:OfficeOpenXml.FormulaParsing
  name: OfficeOpenXml.FormulaParsing
  nameWithType: OfficeOpenXml.FormulaParsing
  fullName: OfficeOpenXml.FormulaParsing
- uid: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependency.ScopeId*
  commentId: Overload:OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependency.ScopeId
  name: ScopeId
  nameWithType: FormulaDependency.ScopeId
  fullName: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependency.ScopeId
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependency.Address*
  commentId: Overload:OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependency.Address
  name: Address
  nameWithType: FormulaDependency.Address
  fullName: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependency.Address
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaRangeAddress
  commentId: T:OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaRangeAddress
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  name: FormulaRangeAddress
  nameWithType: FormulaRangeAddress
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaRangeAddress
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  commentId: N:OfficeOpenXml.FormulaParsing.LexicalAnalysis
  name: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  nameWithType: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis
- uid: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependency.AddReferenceFrom*
  commentId: Overload:OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependency.AddReferenceFrom
  name: AddReferenceFrom
  nameWithType: FormulaDependency.AddReferenceFrom
  fullName: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependency.AddReferenceFrom
