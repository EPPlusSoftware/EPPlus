### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.Sorting.SortCondition
  commentId: T:OfficeOpenXml.Sorting.SortCondition
  id: SortCondition
  parent: OfficeOpenXml.Sorting
  children:
  - OfficeOpenXml.Sorting.SortCondition.CustomList
  - OfficeOpenXml.Sorting.SortCondition.Descending
  - OfficeOpenXml.Sorting.SortCondition.Ref
  langs:
  - csharp
  - vb
  name: SortCondition
  nameWithType: SortCondition
  fullName: OfficeOpenXml.Sorting.SortCondition
  type: Class
  source:
    remote:
      path: src/EPPlus/Sorting/SortCondition.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: SortCondition
    path: ../src/EPPlus/Sorting/SortCondition.cs
    startLine: 23
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Sorting
  summary: "\nRepresents a sort condition within a sort\n"
  example: []
  syntax:
    content: 'public class SortCondition : XmlHelper'
    content.vb: >-
      Public Class SortCondition
          Inherits XmlHelper
  inheritance:
  - System.Object
  - OfficeOpenXml.XmlHelper
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OfficeOpenXml.Sorting.SortCondition.Descending
  commentId: P:OfficeOpenXml.Sorting.SortCondition.Descending
  id: Descending
  parent: OfficeOpenXml.Sorting.SortCondition
  langs:
  - csharp
  - vb
  name: Descending
  nameWithType: SortCondition.Descending
  fullName: OfficeOpenXml.Sorting.SortCondition.Descending
  type: Property
  source:
    remote:
      path: src/EPPlus/Sorting/SortCondition.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Descending
    path: ../src/EPPlus/Sorting/SortCondition.cs
    startLine: 36
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Sorting
  summary: "\nSort direction of this condition. If false - ascending, if true - descending.\n"
  example: []
  syntax:
    content: public bool Descending { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Descending As Boolean
  overload: OfficeOpenXml.Sorting.SortCondition.Descending*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Sorting.SortCondition.Ref
  commentId: P:OfficeOpenXml.Sorting.SortCondition.Ref
  id: Ref
  parent: OfficeOpenXml.Sorting.SortCondition
  langs:
  - csharp
  - vb
  name: Ref
  nameWithType: SortCondition.Ref
  fullName: OfficeOpenXml.Sorting.SortCondition.Ref
  type: Property
  source:
    remote:
      path: src/EPPlus/Sorting/SortCondition.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Ref
    path: ../src/EPPlus/Sorting/SortCondition.cs
    startLine: 51
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Sorting
  summary: "\nAddress of the range used by this condition.\n"
  example: []
  syntax:
    content: public string Ref { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Ref As String
  overload: OfficeOpenXml.Sorting.SortCondition.Ref*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Sorting.SortCondition.CustomList
  commentId: P:OfficeOpenXml.Sorting.SortCondition.CustomList
  id: CustomList
  parent: OfficeOpenXml.Sorting.SortCondition
  langs:
  - csharp
  - vb
  name: CustomList
  nameWithType: SortCondition.CustomList
  fullName: OfficeOpenXml.Sorting.SortCondition.CustomList
  type: Property
  source:
    remote:
      path: src/EPPlus/Sorting/SortCondition.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: CustomList
    path: ../src/EPPlus/Sorting/SortCondition.cs
    startLine: 66
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Sorting
  summary: "\nA custom list of strings that defines the sort order for this condition.\n"
  example: []
  syntax:
    content: public string[] CustomList { get; set; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public Property CustomList As String()
  overload: OfficeOpenXml.Sorting.SortCondition.CustomList*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: OfficeOpenXml.Sorting
  commentId: N:OfficeOpenXml.Sorting
  name: OfficeOpenXml.Sorting
  nameWithType: OfficeOpenXml.Sorting
  fullName: OfficeOpenXml.Sorting
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OfficeOpenXml.XmlHelper
  commentId: T:OfficeOpenXml.XmlHelper
  parent: OfficeOpenXml
  name: XmlHelper
  nameWithType: XmlHelper
  fullName: OfficeOpenXml.XmlHelper
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml
  commentId: N:OfficeOpenXml
  name: OfficeOpenXml
  nameWithType: OfficeOpenXml
  fullName: OfficeOpenXml
- uid: OfficeOpenXml.Sorting.SortCondition.Descending*
  commentId: Overload:OfficeOpenXml.Sorting.SortCondition.Descending
  name: Descending
  nameWithType: SortCondition.Descending
  fullName: OfficeOpenXml.Sorting.SortCondition.Descending
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: OfficeOpenXml.Sorting.SortCondition.Ref*
  commentId: Overload:OfficeOpenXml.Sorting.SortCondition.Ref
  name: Ref
  nameWithType: SortCondition.Ref
  fullName: OfficeOpenXml.Sorting.SortCondition.Ref
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OfficeOpenXml.Sorting.SortCondition.CustomList*
  commentId: Overload:OfficeOpenXml.Sorting.SortCondition.CustomList
  name: CustomList
  nameWithType: SortCondition.CustomList
  fullName: OfficeOpenXml.Sorting.SortCondition.CustomList
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
