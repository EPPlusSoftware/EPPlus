### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.Style.ExcelFont
  commentId: T:OfficeOpenXml.Style.ExcelFont
  id: ExcelFont
  parent: OfficeOpenXml.Style
  children:
  - OfficeOpenXml.Style.ExcelFont.Bold
  - OfficeOpenXml.Style.ExcelFont.Charset
  - OfficeOpenXml.Style.ExcelFont.Color
  - OfficeOpenXml.Style.ExcelFont.Family
  - OfficeOpenXml.Style.ExcelFont.Italic
  - OfficeOpenXml.Style.ExcelFont.Name
  - OfficeOpenXml.Style.ExcelFont.Scheme
  - OfficeOpenXml.Style.ExcelFont.SetFromFont(System.String,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  - OfficeOpenXml.Style.ExcelFont.Size
  - OfficeOpenXml.Style.ExcelFont.Strike
  - OfficeOpenXml.Style.ExcelFont.UnderLine
  - OfficeOpenXml.Style.ExcelFont.UnderLineType
  - OfficeOpenXml.Style.ExcelFont.VerticalAlign
  langs:
  - csharp
  - vb
  name: ExcelFont
  nameWithType: ExcelFont
  fullName: OfficeOpenXml.Style.ExcelFont
  type: Class
  source:
    remote:
      path: src/EPPlus/Style/ExcelFont.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ExcelFont
    path: ../src/EPPlus/Style/ExcelFont.cs
    startLine: 22
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style
  summary: "\nCell style Font\n"
  example: []
  syntax:
    content: 'public sealed class ExcelFont : StyleBase'
    content.vb: >-
      Public NotInheritable Class ExcelFont
          Inherits StyleBase
  inheritance:
  - System.Object
  - OfficeOpenXml.Style.StyleBase
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: OfficeOpenXml.Style.ExcelFont.Name
  commentId: P:OfficeOpenXml.Style.ExcelFont.Name
  id: Name
  parent: OfficeOpenXml.Style.ExcelFont
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ExcelFont.Name
  fullName: OfficeOpenXml.Style.ExcelFont.Name
  type: Property
  source:
    remote:
      path: src/EPPlus/Style/ExcelFont.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Name
    path: ../src/EPPlus/Style/ExcelFont.cs
    startLine: 33
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style
  summary: "\nThe name of the font\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: OfficeOpenXml.Style.ExcelFont.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Style.ExcelFont.Size
  commentId: P:OfficeOpenXml.Style.ExcelFont.Size
  id: Size
  parent: OfficeOpenXml.Style.ExcelFont
  langs:
  - csharp
  - vb
  name: Size
  nameWithType: ExcelFont.Size
  fullName: OfficeOpenXml.Style.ExcelFont.Size
  type: Property
  source:
    remote:
      path: src/EPPlus/Style/ExcelFont.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Size
    path: ../src/EPPlus/Style/ExcelFont.cs
    startLine: 61
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style
  summary: "\nThe Size of the font\n"
  example: []
  syntax:
    content: public float Size { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Size As Single
  overload: OfficeOpenXml.Style.ExcelFont.Size*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Style.ExcelFont.Family
  commentId: P:OfficeOpenXml.Style.ExcelFont.Family
  id: Family
  parent: OfficeOpenXml.Style.ExcelFont
  langs:
  - csharp
  - vb
  name: Family
  nameWithType: ExcelFont.Family
  fullName: OfficeOpenXml.Style.ExcelFont.Family
  type: Property
  source:
    remote:
      path: src/EPPlus/Style/ExcelFont.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Family
    path: ../src/EPPlus/Style/ExcelFont.cs
    startLine: 76
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style
  summary: "\nFont family\n"
  example: []
  syntax:
    content: public int Family { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Family As Integer
  overload: OfficeOpenXml.Style.ExcelFont.Family*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Style.ExcelFont.Color
  commentId: P:OfficeOpenXml.Style.ExcelFont.Color
  id: Color
  parent: OfficeOpenXml.Style.ExcelFont
  langs:
  - csharp
  - vb
  name: Color
  nameWithType: ExcelFont.Color
  fullName: OfficeOpenXml.Style.ExcelFont.Color
  type: Property
  source:
    remote:
      path: src/EPPlus/Style/ExcelFont.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Color
    path: ../src/EPPlus/Style/ExcelFont.cs
    startLine: 90
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style
  summary: "\nCell color\n"
  example: []
  syntax:
    content: public ExcelColor Color { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Style.ExcelColor
    content.vb: Public ReadOnly Property Color As ExcelColor
  overload: OfficeOpenXml.Style.ExcelFont.Color*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Style.ExcelFont.Scheme
  commentId: P:OfficeOpenXml.Style.ExcelFont.Scheme
  id: Scheme
  parent: OfficeOpenXml.Style.ExcelFont
  langs:
  - csharp
  - vb
  name: Scheme
  nameWithType: ExcelFont.Scheme
  fullName: OfficeOpenXml.Style.ExcelFont.Scheme
  type: Property
  source:
    remote:
      path: src/EPPlus/Style/ExcelFont.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Scheme
    path: ../src/EPPlus/Style/ExcelFont.cs
    startLine: 100
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style
  summary: "\nScheme\n"
  example: []
  syntax:
    content: public string Scheme { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Scheme As String
  overload: OfficeOpenXml.Style.ExcelFont.Scheme*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Style.ExcelFont.Bold
  commentId: P:OfficeOpenXml.Style.ExcelFont.Bold
  id: Bold
  parent: OfficeOpenXml.Style.ExcelFont
  langs:
  - csharp
  - vb
  name: Bold
  nameWithType: ExcelFont.Bold
  fullName: OfficeOpenXml.Style.ExcelFont.Bold
  type: Property
  source:
    remote:
      path: src/EPPlus/Style/ExcelFont.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Bold
    path: ../src/EPPlus/Style/ExcelFont.cs
    startLine: 114
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style
  summary: "\nFont-bold\n"
  example: []
  syntax:
    content: public bool Bold { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Bold As Boolean
  overload: OfficeOpenXml.Style.ExcelFont.Bold*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Style.ExcelFont.Italic
  commentId: P:OfficeOpenXml.Style.ExcelFont.Italic
  id: Italic
  parent: OfficeOpenXml.Style.ExcelFont
  langs:
  - csharp
  - vb
  name: Italic
  nameWithType: ExcelFont.Italic
  fullName: OfficeOpenXml.Style.ExcelFont.Italic
  type: Property
  source:
    remote:
      path: src/EPPlus/Style/ExcelFont.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Italic
    path: ../src/EPPlus/Style/ExcelFont.cs
    startLine: 129
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style
  summary: "\nFont-italic\n"
  example: []
  syntax:
    content: public bool Italic { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Italic As Boolean
  overload: OfficeOpenXml.Style.ExcelFont.Italic*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Style.ExcelFont.Strike
  commentId: P:OfficeOpenXml.Style.ExcelFont.Strike
  id: Strike
  parent: OfficeOpenXml.Style.ExcelFont
  langs:
  - csharp
  - vb
  name: Strike
  nameWithType: ExcelFont.Strike
  fullName: OfficeOpenXml.Style.ExcelFont.Strike
  type: Property
  source:
    remote:
      path: src/EPPlus/Style/ExcelFont.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Strike
    path: ../src/EPPlus/Style/ExcelFont.cs
    startLine: 144
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style
  summary: "\nFont-Strikeout\n"
  example: []
  syntax:
    content: public bool Strike { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Strike As Boolean
  overload: OfficeOpenXml.Style.ExcelFont.Strike*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Style.ExcelFont.UnderLine
  commentId: P:OfficeOpenXml.Style.ExcelFont.UnderLine
  id: UnderLine
  parent: OfficeOpenXml.Style.ExcelFont
  langs:
  - csharp
  - vb
  name: UnderLine
  nameWithType: ExcelFont.UnderLine
  fullName: OfficeOpenXml.Style.ExcelFont.UnderLine
  type: Property
  source:
    remote:
      path: src/EPPlus/Style/ExcelFont.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: UnderLine
    path: ../src/EPPlus/Style/ExcelFont.cs
    startLine: 158
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style
  summary: "\nFont-Underline\n"
  example: []
  syntax:
    content: public bool UnderLine { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property UnderLine As Boolean
  overload: OfficeOpenXml.Style.ExcelFont.UnderLine*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Style.ExcelFont.UnderLineType
  commentId: P:OfficeOpenXml.Style.ExcelFont.UnderLineType
  id: UnderLineType
  parent: OfficeOpenXml.Style.ExcelFont
  langs:
  - csharp
  - vb
  name: UnderLineType
  nameWithType: ExcelFont.UnderLineType
  fullName: OfficeOpenXml.Style.ExcelFont.UnderLineType
  type: Property
  source:
    remote:
      path: src/EPPlus/Style/ExcelFont.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: UnderLineType
    path: ../src/EPPlus/Style/ExcelFont.cs
    startLine: 180
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style
  summary: "\nThe underline style\n"
  example: []
  syntax:
    content: public ExcelUnderLineType UnderLineType { get; set; }
    parameters: []
    return:
      type: OfficeOpenXml.Style.ExcelUnderLineType
    content.vb: Public Property UnderLineType As ExcelUnderLineType
  overload: OfficeOpenXml.Style.ExcelFont.UnderLineType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Style.ExcelFont.VerticalAlign
  commentId: P:OfficeOpenXml.Style.ExcelFont.VerticalAlign
  id: VerticalAlign
  parent: OfficeOpenXml.Style.ExcelFont
  langs:
  - csharp
  - vb
  name: VerticalAlign
  nameWithType: ExcelFont.VerticalAlign
  fullName: OfficeOpenXml.Style.ExcelFont.VerticalAlign
  type: Property
  source:
    remote:
      path: src/EPPlus/Style/ExcelFont.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: VerticalAlign
    path: ../src/EPPlus/Style/ExcelFont.cs
    startLine: 194
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style
  summary: "\nFont-Vertical Align\n"
  example: []
  syntax:
    content: public ExcelVerticalAlignmentFont VerticalAlign { get; set; }
    parameters: []
    return:
      type: OfficeOpenXml.Style.ExcelVerticalAlignmentFont
    content.vb: Public Property VerticalAlign As ExcelVerticalAlignmentFont
  overload: OfficeOpenXml.Style.ExcelFont.VerticalAlign*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Style.ExcelFont.Charset
  commentId: P:OfficeOpenXml.Style.ExcelFont.Charset
  id: Charset
  parent: OfficeOpenXml.Style.ExcelFont
  langs:
  - csharp
  - vb
  name: Charset
  nameWithType: ExcelFont.Charset
  fullName: OfficeOpenXml.Style.ExcelFont.Charset
  type: Property
  source:
    remote:
      path: src/EPPlus/Style/ExcelFont.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Charset
    path: ../src/EPPlus/Style/ExcelFont.cs
    startLine: 241
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style
  summary: "\nThe character set for the font\n"
  remarks: "\nThe following values can be used for this property\n<table><thead><tr></tr></thead><tbody><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr></tbody></table>\n"
  example: []
  syntax:
    content: public int? Charset { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property Charset As Integer?
  overload: OfficeOpenXml.Style.ExcelFont.Charset*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Style.ExcelFont.SetFromFont(System.String,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:OfficeOpenXml.Style.ExcelFont.SetFromFont(System.String,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  id: SetFromFont(System.String,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  parent: OfficeOpenXml.Style.ExcelFont
  langs:
  - csharp
  - vb
  name: SetFromFont(String, Single, Boolean, Boolean, Boolean, Boolean)
  nameWithType: ExcelFont.SetFromFont(String, Single, Boolean, Boolean, Boolean, Boolean)
  fullName: OfficeOpenXml.Style.ExcelFont.SetFromFont(System.String, System.Single, System.Boolean, System.Boolean, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: src/EPPlus/Style/ExcelFont.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: SetFromFont
    path: ../src/EPPlus/Style/ExcelFont.cs
    startLine: 261
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style
  summary: "\nSet the font from a Font object\n"
  example: []
  syntax:
    content: public void SetFromFont(string name, float size, bool bold = false, bool italic = false, bool underline = false, bool strikeout = false)
    parameters:
    - id: name
      type: System.String
      description: Font family name
    - id: size
      type: System.Single
      description: Font size
    - id: bold
      type: System.Boolean
      description: ''
    - id: italic
      type: System.Boolean
      description: ''
    - id: underline
      type: System.Boolean
      description: ''
    - id: strikeout
      type: System.Boolean
      description: ''
    content.vb: Public Sub SetFromFont(name As String, size As Single, bold As Boolean = False, italic As Boolean = False, underline As Boolean = False, strikeout As Boolean = False)
  overload: OfficeOpenXml.Style.ExcelFont.SetFromFont*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: OfficeOpenXml.Style
  commentId: N:OfficeOpenXml.Style
  name: OfficeOpenXml.Style
  nameWithType: OfficeOpenXml.Style
  fullName: OfficeOpenXml.Style
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OfficeOpenXml.Style.StyleBase
  commentId: T:OfficeOpenXml.Style.StyleBase
  parent: OfficeOpenXml.Style
  name: StyleBase
  nameWithType: StyleBase
  fullName: OfficeOpenXml.Style.StyleBase
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml.Style.ExcelFont.Name*
  commentId: Overload:OfficeOpenXml.Style.ExcelFont.Name
  name: Name
  nameWithType: ExcelFont.Name
  fullName: OfficeOpenXml.Style.ExcelFont.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OfficeOpenXml.Style.ExcelFont.Size*
  commentId: Overload:OfficeOpenXml.Style.ExcelFont.Size
  name: Size
  nameWithType: ExcelFont.Size
  fullName: OfficeOpenXml.Style.ExcelFont.Size
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: OfficeOpenXml.Style.ExcelFont.Family*
  commentId: Overload:OfficeOpenXml.Style.ExcelFont.Family
  name: Family
  nameWithType: ExcelFont.Family
  fullName: OfficeOpenXml.Style.ExcelFont.Family
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: OfficeOpenXml.Style.ExcelFont.Color*
  commentId: Overload:OfficeOpenXml.Style.ExcelFont.Color
  name: Color
  nameWithType: ExcelFont.Color
  fullName: OfficeOpenXml.Style.ExcelFont.Color
- uid: OfficeOpenXml.Style.ExcelColor
  commentId: T:OfficeOpenXml.Style.ExcelColor
  parent: OfficeOpenXml.Style
  name: ExcelColor
  nameWithType: ExcelColor
  fullName: OfficeOpenXml.Style.ExcelColor
- uid: OfficeOpenXml.Style.ExcelFont.Scheme*
  commentId: Overload:OfficeOpenXml.Style.ExcelFont.Scheme
  name: Scheme
  nameWithType: ExcelFont.Scheme
  fullName: OfficeOpenXml.Style.ExcelFont.Scheme
- uid: OfficeOpenXml.Style.ExcelFont.Bold*
  commentId: Overload:OfficeOpenXml.Style.ExcelFont.Bold
  name: Bold
  nameWithType: ExcelFont.Bold
  fullName: OfficeOpenXml.Style.ExcelFont.Bold
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: OfficeOpenXml.Style.ExcelFont.Italic*
  commentId: Overload:OfficeOpenXml.Style.ExcelFont.Italic
  name: Italic
  nameWithType: ExcelFont.Italic
  fullName: OfficeOpenXml.Style.ExcelFont.Italic
- uid: OfficeOpenXml.Style.ExcelFont.Strike*
  commentId: Overload:OfficeOpenXml.Style.ExcelFont.Strike
  name: Strike
  nameWithType: ExcelFont.Strike
  fullName: OfficeOpenXml.Style.ExcelFont.Strike
- uid: OfficeOpenXml.Style.ExcelFont.UnderLine*
  commentId: Overload:OfficeOpenXml.Style.ExcelFont.UnderLine
  name: UnderLine
  nameWithType: ExcelFont.UnderLine
  fullName: OfficeOpenXml.Style.ExcelFont.UnderLine
- uid: OfficeOpenXml.Style.ExcelFont.UnderLineType*
  commentId: Overload:OfficeOpenXml.Style.ExcelFont.UnderLineType
  name: UnderLineType
  nameWithType: ExcelFont.UnderLineType
  fullName: OfficeOpenXml.Style.ExcelFont.UnderLineType
- uid: OfficeOpenXml.Style.ExcelUnderLineType
  commentId: T:OfficeOpenXml.Style.ExcelUnderLineType
  parent: OfficeOpenXml.Style
  name: ExcelUnderLineType
  nameWithType: ExcelUnderLineType
  fullName: OfficeOpenXml.Style.ExcelUnderLineType
- uid: OfficeOpenXml.Style.ExcelFont.VerticalAlign*
  commentId: Overload:OfficeOpenXml.Style.ExcelFont.VerticalAlign
  name: VerticalAlign
  nameWithType: ExcelFont.VerticalAlign
  fullName: OfficeOpenXml.Style.ExcelFont.VerticalAlign
- uid: OfficeOpenXml.Style.ExcelVerticalAlignmentFont
  commentId: T:OfficeOpenXml.Style.ExcelVerticalAlignmentFont
  parent: OfficeOpenXml.Style
  name: ExcelVerticalAlignmentFont
  nameWithType: ExcelVerticalAlignmentFont
  fullName: OfficeOpenXml.Style.ExcelVerticalAlignmentFont
- uid: OfficeOpenXml.Style.ExcelFont.Charset*
  commentId: Overload:OfficeOpenXml.Style.ExcelFont.Charset
  name: Charset
  nameWithType: ExcelFont.Charset
  fullName: OfficeOpenXml.Style.ExcelFont.Charset
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Style.ExcelFont.SetFromFont*
  commentId: Overload:OfficeOpenXml.Style.ExcelFont.SetFromFont
  name: SetFromFont
  nameWithType: ExcelFont.SetFromFont
  fullName: OfficeOpenXml.Style.ExcelFont.SetFromFont
