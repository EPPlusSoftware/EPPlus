### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.ExcelNamedRange
  commentId: T:OfficeOpenXml.ExcelNamedRange
  id: ExcelNamedRange
  parent: OfficeOpenXml
  children:
  - OfficeOpenXml.ExcelNamedRange.Equals(System.Object)
  - OfficeOpenXml.ExcelNamedRange.GetHashCode
  - OfficeOpenXml.ExcelNamedRange.IsNameHidden
  - OfficeOpenXml.ExcelNamedRange.LocalSheetId
  - OfficeOpenXml.ExcelNamedRange.Name
  - OfficeOpenXml.ExcelNamedRange.NameComment
  - OfficeOpenXml.ExcelNamedRange.ToString
  langs:
  - csharp
  - vb
  name: ExcelNamedRange
  nameWithType: ExcelNamedRange
  fullName: OfficeOpenXml.ExcelNamedRange
  type: Class
  source:
    remote:
      path: src/EPPlus/ExcelNamedRange.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ExcelNamedRange
    path: ../src/EPPlus/ExcelNamedRange.cs
    startLine: 29
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  summary: "\nA named range. \n"
  example: []
  syntax:
    content: 'public sealed class ExcelNamedRange : ExcelRangeBase, IEnumerable<ExcelRangeBase>, IEnumerable, IEnumerator<ExcelRangeBase>, IEnumerator, IDisposable'
    content.vb: >-
      Public NotInheritable Class ExcelNamedRange
          Inherits ExcelRangeBase
          Implements IEnumerable(Of ExcelRangeBase), IEnumerable, IEnumerator(Of ExcelRangeBase), IEnumerator, IDisposable
  inheritance:
  - System.Object
  - OfficeOpenXml.ExcelCellBase
  - OfficeOpenXml.ExcelAddressBase
  - OfficeOpenXml.ExcelAddress
  - OfficeOpenXml.ExcelRangeBase
  implements:
  - System.Collections.Generic.IEnumerable{OfficeOpenXml.ExcelRangeBase}
  - System.Collections.IEnumerable
  - System.Collections.Generic.IEnumerator{OfficeOpenXml.ExcelRangeBase}
  - System.Collections.IEnumerator
  - System.IDisposable
  inheritedMembers:
  - OfficeOpenXml.ExcelRangeBase._worksheet
  - OfficeOpenXml.ExcelRangeBase.ChangeAddress
  - OfficeOpenXml.ExcelRangeBase.Style
  - OfficeOpenXml.ExcelRangeBase.StyleName
  - OfficeOpenXml.ExcelRangeBase.StyleID
  - OfficeOpenXml.ExcelRangeBase.Value
  - OfficeOpenXml.ExcelRangeBase.SetErrorValue(OfficeOpenXml.eErrorType)
  - OfficeOpenXml.ExcelRangeBase.Text
  - OfficeOpenXml.ExcelRangeBase.AutoFitColumns
  - OfficeOpenXml.ExcelRangeBase.AutoFitColumns(System.Double)
  - OfficeOpenXml.ExcelRangeBase.AutoFitColumns(System.Double,System.Double)
  - OfficeOpenXml.ExcelRangeBase.Formula
  - OfficeOpenXml.ExcelRangeBase.FormulaR1C1
  - OfficeOpenXml.ExcelRangeBase.CreateHtmlExporter
  - OfficeOpenXml.ExcelRangeBase.Hyperlink
  - OfficeOpenXml.ExcelRangeBase.SetHyperlink(System.Uri)
  - OfficeOpenXml.ExcelRangeBase.SetHyperlink(OfficeOpenXml.ExcelHyperLink)
  - OfficeOpenXml.ExcelRangeBase.SetHyperlink(OfficeOpenXml.ExcelRange,System.String)
  - OfficeOpenXml.ExcelRangeBase.SetHyperlink(OfficeOpenXml.ExcelRange)
  - OfficeOpenXml.ExcelRangeBase.Merge
  - OfficeOpenXml.ExcelRangeBase.AutoFilter
  - OfficeOpenXml.ExcelRangeBase.IsRichText
  - OfficeOpenXml.ExcelRangeBase.IsTable
  - OfficeOpenXml.ExcelRangeBase.GetTable
  - OfficeOpenXml.ExcelRangeBase.Insert(OfficeOpenXml.eShiftTypeInsert)
  - OfficeOpenXml.ExcelRangeBase.Delete(OfficeOpenXml.eShiftTypeDelete)
  - OfficeOpenXml.ExcelRangeBase.IsArrayFormula
  - OfficeOpenXml.ExcelRangeBase._rtc
  - OfficeOpenXml.ExcelRangeBase.RichText
  - OfficeOpenXml.ExcelRangeBase.Comment
  - OfficeOpenXml.ExcelRangeBase.ThreadedComment
  - OfficeOpenXml.ExcelRangeBase.Worksheet
  - OfficeOpenXml.ExcelRangeBase.FullAddress
  - OfficeOpenXml.ExcelRangeBase.FullAddressAbsolute
  - OfficeOpenXml.ExcelRangeBase.ClearFormulas
  - OfficeOpenXml.ExcelRangeBase.ClearFormulaValues
  - OfficeOpenXml.ExcelRangeBase.ConditionalFormatting
  - OfficeOpenXml.ExcelRangeBase.DataValidation
  - OfficeOpenXml.ExcelRangeBase.GetValue``1
  - OfficeOpenXml.ExcelRangeBase.Offset(System.Int32,System.Int32)
  - OfficeOpenXml.ExcelRangeBase.Offset(System.Int32,System.Int32,System.Int32,System.Int32)
  - OfficeOpenXml.ExcelRangeBase.AddComment(System.String,System.String)
  - OfficeOpenXml.ExcelRangeBase.AddThreadedComment
  - OfficeOpenXml.ExcelRangeBase.Copy(OfficeOpenXml.ExcelRangeBase)
  - OfficeOpenXml.ExcelRangeBase.Copy(OfficeOpenXml.ExcelRangeBase,System.Nullable{OfficeOpenXml.ExcelRangeCopyOptionFlags})
  - OfficeOpenXml.ExcelRangeBase.Copy(OfficeOpenXml.ExcelRangeBase,OfficeOpenXml.ExcelRangeCopyOptionFlags[])
  - OfficeOpenXml.ExcelRangeBase.CopyStyles(OfficeOpenXml.ExcelRangeBase)
  - OfficeOpenXml.ExcelRangeBase.Clear
  - OfficeOpenXml.ExcelRangeBase.CreateArrayFormula(System.String)
  - OfficeOpenXml.ExcelRangeBase.FormulaRange
  - OfficeOpenXml.ExcelRangeBase.Dispose
  - OfficeOpenXml.ExcelRangeBase.GetEnumerator
  - OfficeOpenXml.ExcelRangeBase.System#Collections#IEnumerable#GetEnumerator
  - OfficeOpenXml.ExcelRangeBase.Current
  - OfficeOpenXml.ExcelRangeBase.System#Collections#IEnumerator#Current
  - OfficeOpenXml.ExcelRangeBase.MoveNext
  - OfficeOpenXml.ExcelRangeBase.Reset
  - OfficeOpenXml.ExcelRangeBase.Sort
  - OfficeOpenXml.ExcelRangeBase.Sort(System.Int32,System.Boolean)
  - OfficeOpenXml.ExcelRangeBase.Sort(System.Int32[],System.Boolean[],System.Globalization.CultureInfo,System.Globalization.CompareOptions)
  - OfficeOpenXml.ExcelRangeBase.Sort(System.Action{OfficeOpenXml.Sorting.RangeSortOptions})
  - OfficeOpenXml.ExcelRangeBase.Sort(OfficeOpenXml.Sorting.RangeSortOptions)
  - OfficeOpenXml.ExcelRangeBase.EntireColumn
  - OfficeOpenXml.ExcelRangeBase.EntireRow
  - OfficeOpenXml.ExcelRangeBase.GetCellValue``1
  - OfficeOpenXml.ExcelRangeBase.GetCellValue``1(System.Int32)
  - OfficeOpenXml.ExcelRangeBase.GetCellValue``1(System.Int32,System.Int32)
  - OfficeOpenXml.ExcelRangeBase.SetCellValue(System.Int32,System.Int32,System.Object)
  - OfficeOpenXml.ExcelRangeBase.UseImplicitItersection
  - OfficeOpenXml.ExcelRangeBase.FillNumber
  - OfficeOpenXml.ExcelRangeBase.FillNumber(System.Nullable{System.Double},System.Double)
  - OfficeOpenXml.ExcelRangeBase.FillNumber(System.Action{OfficeOpenXml.Core.Worksheet.Fill.FillNumberParams})
  - OfficeOpenXml.ExcelRangeBase.FillDateTime
  - OfficeOpenXml.ExcelRangeBase.FillDateTime(System.Nullable{System.DateTime},OfficeOpenXml.eDateTimeUnit,System.Int32)
  - OfficeOpenXml.ExcelRangeBase.FillDateTime(System.Action{OfficeOpenXml.Core.Worksheet.Fill.FillDateParams})
  - OfficeOpenXml.ExcelRangeBase.FillList``1(System.Collections.Generic.IEnumerable{{T}})
  - OfficeOpenXml.ExcelRangeBase.FillList``1(System.Collections.Generic.IEnumerable{{T}},System.Action{OfficeOpenXml.Core.Worksheet.Fill.FillListParams})
  - OfficeOpenXml.ExcelRangeBase.LoadFromDataReader(System.Data.IDataReader,System.Boolean,System.String,OfficeOpenXml.Table.TableStyles)
  - OfficeOpenXml.ExcelRangeBase.LoadFromDataReader(System.Data.IDataReader,System.Boolean)
  - OfficeOpenXml.ExcelRangeBase.LoadFromDataReaderAsync(System.Data.Common.DbDataReader,System.Boolean,System.String,OfficeOpenXml.Table.TableStyles,System.Nullable{System.Threading.CancellationToken})
  - OfficeOpenXml.ExcelRangeBase.LoadFromDataReaderAsync(System.Data.Common.DbDataReader,System.Boolean)
  - OfficeOpenXml.ExcelRangeBase.LoadFromDataReaderAsync(System.Data.Common.DbDataReader,System.Boolean,System.Threading.CancellationToken)
  - OfficeOpenXml.ExcelRangeBase.LoadFromDataTable(System.Data.DataTable,System.Boolean,System.Nullable{OfficeOpenXml.Table.TableStyles})
  - OfficeOpenXml.ExcelRangeBase.LoadFromDataTable(System.Data.DataTable,System.Boolean)
  - OfficeOpenXml.ExcelRangeBase.LoadFromDataTable(System.Data.DataTable)
  - OfficeOpenXml.ExcelRangeBase.LoadFromDataTable(System.Data.DataTable,System.Action{OfficeOpenXml.LoadFunctions.Params.LoadFromDataTableParams})
  - OfficeOpenXml.ExcelRangeBase.LoadFromArrays(System.Collections.Generic.IEnumerable{System.Object[]})
  - OfficeOpenXml.ExcelRangeBase.LoadFromCollection``1(System.Collections.Generic.IEnumerable{{T}})
  - OfficeOpenXml.ExcelRangeBase.LoadFromCollection``1(System.Collections.Generic.IEnumerable{{T}},System.Boolean)
  - OfficeOpenXml.ExcelRangeBase.LoadFromCollection``1(System.Collections.Generic.IEnumerable{{T}},System.Boolean,System.Nullable{OfficeOpenXml.Table.TableStyles})
  - OfficeOpenXml.ExcelRangeBase.LoadFromCollection``1(System.Collections.Generic.IEnumerable{{T}},System.Boolean,System.Nullable{OfficeOpenXml.Table.TableStyles},System.Reflection.BindingFlags,System.Reflection.MemberInfo[])
  - OfficeOpenXml.ExcelRangeBase.LoadFromCollection``1(System.Collections.Generic.IEnumerable{{T}},System.Action{OfficeOpenXml.LoadFunctions.Params.LoadFromCollectionParams})
  - OfficeOpenXml.ExcelRangeBase.LoadFromText(System.String)
  - OfficeOpenXml.ExcelRangeBase.LoadFromText(System.String,OfficeOpenXml.ExcelTextFormat)
  - OfficeOpenXml.ExcelRangeBase.LoadFromText(System.String,OfficeOpenXml.ExcelTextFormat,System.Nullable{OfficeOpenXml.Table.TableStyles},System.Boolean)
  - OfficeOpenXml.ExcelRangeBase.LoadFromText(System.IO.FileInfo)
  - OfficeOpenXml.ExcelRangeBase.LoadFromText(System.IO.FileInfo,OfficeOpenXml.ExcelTextFormat)
  - OfficeOpenXml.ExcelRangeBase.LoadFromText(System.IO.FileInfo,OfficeOpenXml.ExcelTextFormat,System.Nullable{OfficeOpenXml.Table.TableStyles},System.Boolean)
  - OfficeOpenXml.ExcelRangeBase.LoadFromTextAsync(System.IO.FileInfo)
  - OfficeOpenXml.ExcelRangeBase.LoadFromTextAsync(System.IO.FileInfo,OfficeOpenXml.ExcelTextFormat)
  - OfficeOpenXml.ExcelRangeBase.LoadFromTextAsync(System.IO.FileInfo,OfficeOpenXml.ExcelTextFormat,OfficeOpenXml.Table.TableStyles,System.Boolean)
  - OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries(System.Collections.Generic.IEnumerable{System.Collections.Generic.IDictionary{System.String,System.Object}})
  - OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries(System.Collections.Generic.IEnumerable{System.Collections.Generic.IDictionary{System.String,System.Object}},System.Boolean)
  - OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries(System.Collections.Generic.IEnumerable{System.Collections.Generic.IDictionary{System.String,System.Object}},System.Boolean,System.Nullable{OfficeOpenXml.Table.TableStyles})
  - OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries(System.Collections.Generic.IEnumerable{System.Collections.Generic.IDictionary{System.String,System.Object}},System.Boolean,System.Nullable{OfficeOpenXml.Table.TableStyles},System.Collections.Generic.IEnumerable{System.String})
  - OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries(System.Collections.Generic.IEnumerable{System.Object},System.Boolean,System.Nullable{OfficeOpenXml.Table.TableStyles},System.Collections.Generic.IEnumerable{System.String})
  - OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries(System.Collections.Generic.IEnumerable{System.Collections.Generic.IDictionary{System.String,System.Object}},System.Action{OfficeOpenXml.LoadFunctions.Params.LoadFromDictionariesParams})
  - OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries(System.Collections.Generic.IEnumerable{System.Object},System.Action{OfficeOpenXml.LoadFunctions.Params.LoadFromDictionariesParams})
  - OfficeOpenXml.ExcelRangeBase.ToDataTable
  - OfficeOpenXml.ExcelRangeBase.ToDataTable(System.Action{OfficeOpenXml.Export.ToDataTable.ToDataTableOptions})
  - OfficeOpenXml.ExcelRangeBase.ToDataTable(OfficeOpenXml.Export.ToDataTable.ToDataTableOptions)
  - OfficeOpenXml.ExcelRangeBase.ToDataTable(System.Action{OfficeOpenXml.Export.ToDataTable.ToDataTableOptions},System.Data.DataTable)
  - OfficeOpenXml.ExcelRangeBase.ToDataTable(System.Data.DataTable)
  - OfficeOpenXml.ExcelRangeBase.ToDataTable(OfficeOpenXml.Export.ToDataTable.ToDataTableOptions,System.Data.DataTable)
  - OfficeOpenXml.ExcelRangeBase.ToText
  - OfficeOpenXml.ExcelRangeBase.ToText(OfficeOpenXml.ExcelOutputTextFormat)
  - OfficeOpenXml.ExcelRangeBase.SaveToText(System.IO.FileInfo,OfficeOpenXml.ExcelOutputTextFormat)
  - OfficeOpenXml.ExcelRangeBase.SaveToText(System.IO.Stream,OfficeOpenXml.ExcelOutputTextFormat)
  - OfficeOpenXml.ExcelRangeBase.ToTextAsync
  - OfficeOpenXml.ExcelRangeBase.ToTextAsync(OfficeOpenXml.ExcelOutputTextFormat)
  - OfficeOpenXml.ExcelRangeBase.SaveToTextAsync(System.IO.FileInfo,OfficeOpenXml.ExcelOutputTextFormat)
  - OfficeOpenXml.ExcelRangeBase.SaveToTextAsync(System.IO.Stream,OfficeOpenXml.ExcelOutputTextFormat)
  - OfficeOpenXml.ExcelRangeBase.ToJson
  - OfficeOpenXml.ExcelRangeBase.ToJson(System.Action{OfficeOpenXml.JsonRangeExportSettings})
  - OfficeOpenXml.ExcelRangeBase.SaveToJson(System.IO.Stream)
  - OfficeOpenXml.ExcelRangeBase.SaveToJson(System.IO.Stream,System.Action{OfficeOpenXml.JsonRangeExportSettings})
  - OfficeOpenXml.ExcelRangeBase.SaveToJsonAsync(System.IO.Stream)
  - OfficeOpenXml.ExcelRangeBase.SaveToJsonAsync(System.IO.Stream,System.Action{OfficeOpenXml.JsonRangeExportSettings})
  - OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings``1(System.Func{OfficeOpenXml.Export.ToCollection.ToCollectionRow,{T}})
  - OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings``1(System.Func{OfficeOpenXml.Export.ToCollection.ToCollectionRow,{T}},System.Action{OfficeOpenXml.ToCollectionRangeOptions})
  - OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings``1(System.Func{OfficeOpenXml.Export.ToCollection.ToCollectionRow,{T}},OfficeOpenXml.ToCollectionRangeOptions)
  - OfficeOpenXml.ExcelRangeBase.ToCollection``1
  - OfficeOpenXml.ExcelRangeBase.ToCollection``1(System.Action{OfficeOpenXml.ToCollectionRangeOptions})
  - OfficeOpenXml.ExcelRangeBase.ToCollection``1(OfficeOpenXml.ToCollectionRangeOptions)
  - OfficeOpenXml.ExcelAddress.Address
  - OfficeOpenXml.ExcelAddressBase.SetAddress(System.String,OfficeOpenXml.ExcelWorkbook,System.String)
  - OfficeOpenXml.ExcelAddressBase.BeforeChangeAddress
  - OfficeOpenXml.ExcelAddressBase.Start
  - OfficeOpenXml.ExcelAddressBase.End
  - OfficeOpenXml.ExcelAddressBase.ExternalReferenceIndex
  - OfficeOpenXml.ExcelAddressBase.Table
  - OfficeOpenXml.ExcelAddressBase.AddressAbsolute
  - OfficeOpenXml.ExcelAddressBase.IsName
  - OfficeOpenXml.ExcelAddressBase.Validate
  - OfficeOpenXml.ExcelAddressBase.Rows
  - OfficeOpenXml.ExcelAddressBase.Columns
  - OfficeOpenXml.ExcelAddressBase.IsFullRow
  - OfficeOpenXml.ExcelAddressBase.IsFullColumn
  - OfficeOpenXml.ExcelAddressBase.LocalAddress
  - OfficeOpenXml.ExcelAddressBase.IsExternal
  - OfficeOpenXml.ExcelCellBase.TranslateFromR1C1(System.String,System.Int32,System.Int32)
  - OfficeOpenXml.ExcelCellBase.TranslateToR1C1(System.String,System.Int32,System.Int32)
  - OfficeOpenXml.ExcelCellBase.GetColumnLetter(System.Int32)
  - OfficeOpenXml.ExcelCellBase.GetColumnLetter(System.Int32,System.Boolean)
  - OfficeOpenXml.ExcelCellBase.GetAddressRow(System.Int32,System.Boolean)
  - OfficeOpenXml.ExcelCellBase.GetAddressCol(System.Int32,System.Boolean)
  - OfficeOpenXml.ExcelCellBase.GetAddress(System.Int32,System.Int32)
  - OfficeOpenXml.ExcelCellBase.GetAddress(System.Int32,System.Boolean,System.Int32,System.Boolean)
  - OfficeOpenXml.ExcelCellBase.GetAddress(System.Int32,System.Int32,System.Boolean)
  - OfficeOpenXml.ExcelCellBase.GetAddress(System.Int32,System.Int32,System.Int32,System.Int32)
  - OfficeOpenXml.ExcelCellBase.GetAddress(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  - OfficeOpenXml.ExcelCellBase.GetAddress(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  - OfficeOpenXml.ExcelCellBase.GetFullAddress(System.String,System.String)
  - OfficeOpenXml.ExcelCellBase.GetFullAddress(System.String,System.String,System.String)
  - OfficeOpenXml.ExcelCellBase.IsSimpleAddress(System.String)
  - OfficeOpenXml.ExcelCellBase.IsValidAddress(System.String)
  - OfficeOpenXml.ExcelCellBase.IsValidTableAddress(System.String)
  - OfficeOpenXml.ExcelCellBase.IsValidRangeAddress(System.String)
  - OfficeOpenXml.ExcelCellBase.IsValidCellAddress(System.String)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - OfficeOpenXml.ExcelRangeBase.OfficeOpenXml.CalculationExtension.Calculate
  - OfficeOpenXml.ExcelRangeBase.OfficeOpenXml.CalculationExtension.Calculate(System.Action{OfficeOpenXml.FormulaParsing.ExcelCalculationOption})
  - OfficeOpenXml.ExcelRangeBase.OfficeOpenXml.CalculationExtension.Calculate(OfficeOpenXml.FormulaParsing.ExcelCalculationOption)
  - OfficeOpenXml.ExcelRangeBase.OfficeOpenXml.RangeExtensions.SkipColumns(System.Int32)
  - OfficeOpenXml.ExcelRangeBase.OfficeOpenXml.RangeExtensions.SkipRows(System.Int32)
  - OfficeOpenXml.ExcelRangeBase.OfficeOpenXml.RangeExtensions.TakeColumns(System.Int32)
  - OfficeOpenXml.ExcelRangeBase.OfficeOpenXml.RangeExtensions.TakeRows(System.Int32)
  - OfficeOpenXml.ExcelRangeBase.OfficeOpenXml.RangeExtensions.TakeSingleColumn(System.Int32)
  - OfficeOpenXml.ExcelRangeBase.OfficeOpenXml.RangeExtensions.TakeColumnsBetween(System.Int32,System.Int32)
  - OfficeOpenXml.ExcelRangeBase.OfficeOpenXml.RangeExtensions.TakeSingleRow(System.Int32)
  - OfficeOpenXml.ExcelRangeBase.OfficeOpenXml.RangeExtensions.TakeRowsBetween(System.Int32,System.Int32)
  - OfficeOpenXml.ExcelRangeBase.OfficeOpenXml.RangeExtensions.TakeSingleCell(System.Int32,System.Int32)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: OfficeOpenXml.ExcelNamedRange.Name
  commentId: P:OfficeOpenXml.ExcelNamedRange.Name
  id: Name
  parent: OfficeOpenXml.ExcelNamedRange
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ExcelNamedRange.Name
  fullName: OfficeOpenXml.ExcelNamedRange.Name
  type: Property
  source:
    remote:
      path: src/EPPlus/ExcelNamedRange.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Name
    path: ../src/EPPlus/ExcelNamedRange.cs
    startLine: 93
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  summary: "\nName of the range\n"
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: OfficeOpenXml.ExcelNamedRange.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.ExcelNamedRange.LocalSheetId
  commentId: P:OfficeOpenXml.ExcelNamedRange.LocalSheetId
  id: LocalSheetId
  parent: OfficeOpenXml.ExcelNamedRange
  langs:
  - csharp
  - vb
  name: LocalSheetId
  nameWithType: ExcelNamedRange.LocalSheetId
  fullName: OfficeOpenXml.ExcelNamedRange.LocalSheetId
  type: Property
  source:
    remote:
      path: src/EPPlus/ExcelNamedRange.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: LocalSheetId
    path: ../src/EPPlus/ExcelNamedRange.cs
    startLine: 101
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  summary: "\nIs the named range local for the sheet \n"
  example: []
  syntax:
    content: public int LocalSheetId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property LocalSheetId As Integer
  overload: OfficeOpenXml.ExcelNamedRange.LocalSheetId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.ExcelNamedRange.IsNameHidden
  commentId: P:OfficeOpenXml.ExcelNamedRange.IsNameHidden
  id: IsNameHidden
  parent: OfficeOpenXml.ExcelNamedRange
  langs:
  - csharp
  - vb
  name: IsNameHidden
  nameWithType: ExcelNamedRange.IsNameHidden
  fullName: OfficeOpenXml.ExcelNamedRange.IsNameHidden
  type: Property
  source:
    remote:
      path: src/EPPlus/ExcelNamedRange.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: IsNameHidden
    path: ../src/EPPlus/ExcelNamedRange.cs
    startLine: 125
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  summary: "\nIs the name hidden\n"
  example: []
  syntax:
    content: public bool IsNameHidden { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsNameHidden As Boolean
  overload: OfficeOpenXml.ExcelNamedRange.IsNameHidden*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.ExcelNamedRange.NameComment
  commentId: P:OfficeOpenXml.ExcelNamedRange.NameComment
  id: NameComment
  parent: OfficeOpenXml.ExcelNamedRange
  langs:
  - csharp
  - vb
  name: NameComment
  nameWithType: ExcelNamedRange.NameComment
  fullName: OfficeOpenXml.ExcelNamedRange.NameComment
  type: Property
  source:
    remote:
      path: src/EPPlus/ExcelNamedRange.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: NameComment
    path: ../src/EPPlus/ExcelNamedRange.cs
    startLine: 133
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  summary: "\nA comment for the Name\n"
  example: []
  syntax:
    content: public string NameComment { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property NameComment As String
  overload: OfficeOpenXml.ExcelNamedRange.NameComment*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.ExcelNamedRange.ToString
  commentId: M:OfficeOpenXml.ExcelNamedRange.ToString
  id: ToString
  parent: OfficeOpenXml.ExcelNamedRange
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ExcelNamedRange.ToString()
  fullName: OfficeOpenXml.ExcelNamedRange.ToString()
  type: Method
  source:
    remote:
      path: src/EPPlus/ExcelNamedRange.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ToString
    path: ../src/EPPlus/ExcelNamedRange.cs
    startLine: 236
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  summary: "\nReturns a string representation of the object\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: The name of the range
    content.vb: Public Overrides Function ToString As String
  overridden: OfficeOpenXml.ExcelAddressBase.ToString
  overload: OfficeOpenXml.ExcelNamedRange.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: OfficeOpenXml.ExcelNamedRange.Equals(System.Object)
  commentId: M:OfficeOpenXml.ExcelNamedRange.Equals(System.Object)
  id: Equals(System.Object)
  parent: OfficeOpenXml.ExcelNamedRange
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: ExcelNamedRange.Equals(Object)
  fullName: OfficeOpenXml.ExcelNamedRange.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/EPPlus/ExcelNamedRange.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Equals
    path: ../src/EPPlus/ExcelNamedRange.cs
    startLine: 245
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  summary: "\nReturns true if the name is equal to the obj\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with
    return:
      type: System.Boolean
      description: true if equal
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: OfficeOpenXml.ExcelAddressBase.Equals(System.Object)
  overload: OfficeOpenXml.ExcelNamedRange.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: OfficeOpenXml.ExcelNamedRange.GetHashCode
  commentId: M:OfficeOpenXml.ExcelNamedRange.GetHashCode
  id: GetHashCode
  parent: OfficeOpenXml.ExcelNamedRange
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: ExcelNamedRange.GetHashCode()
  fullName: OfficeOpenXml.ExcelNamedRange.GetHashCode()
  type: Method
  source:
    remote:
      path: src/EPPlus/ExcelNamedRange.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: GetHashCode
    path: ../src/EPPlus/ExcelNamedRange.cs
    startLine: 284
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  summary: "\nServes as the default hash function.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A hash code for the current object.
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: OfficeOpenXml.ExcelAddressBase.GetHashCode
  overload: OfficeOpenXml.ExcelNamedRange.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: OfficeOpenXml
  commentId: N:OfficeOpenXml
  name: OfficeOpenXml
  nameWithType: OfficeOpenXml
  fullName: OfficeOpenXml
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OfficeOpenXml.ExcelCellBase
  commentId: T:OfficeOpenXml.ExcelCellBase
  parent: OfficeOpenXml
  name: ExcelCellBase
  nameWithType: ExcelCellBase
  fullName: OfficeOpenXml.ExcelCellBase
- uid: OfficeOpenXml.ExcelAddressBase
  commentId: T:OfficeOpenXml.ExcelAddressBase
  parent: OfficeOpenXml
  name: ExcelAddressBase
  nameWithType: ExcelAddressBase
  fullName: OfficeOpenXml.ExcelAddressBase
- uid: OfficeOpenXml.ExcelAddress
  commentId: T:OfficeOpenXml.ExcelAddress
  parent: OfficeOpenXml
  name: ExcelAddress
  nameWithType: ExcelAddress
  fullName: OfficeOpenXml.ExcelAddress
- uid: OfficeOpenXml.ExcelRangeBase
  commentId: T:OfficeOpenXml.ExcelRangeBase
  parent: OfficeOpenXml
  name: ExcelRangeBase
  nameWithType: ExcelRangeBase
  fullName: OfficeOpenXml.ExcelRangeBase
- uid: System.Collections.Generic.IEnumerable{OfficeOpenXml.ExcelRangeBase}
  commentId: T:System.Collections.Generic.IEnumerable{OfficeOpenXml.ExcelRangeBase}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ExcelRangeBase>
  nameWithType: IEnumerable<ExcelRangeBase>
  fullName: System.Collections.Generic.IEnumerable<OfficeOpenXml.ExcelRangeBase>
  nameWithType.vb: IEnumerable(Of ExcelRangeBase)
  fullName.vb: System.Collections.Generic.IEnumerable(Of OfficeOpenXml.ExcelRangeBase)
  name.vb: IEnumerable(Of ExcelRangeBase)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.ExcelRangeBase
    name: ExcelRangeBase
    nameWithType: ExcelRangeBase
    fullName: OfficeOpenXml.ExcelRangeBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.ExcelRangeBase
    name: ExcelRangeBase
    nameWithType: ExcelRangeBase
    fullName: OfficeOpenXml.ExcelRangeBase
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Collections.Generic.IEnumerator{OfficeOpenXml.ExcelRangeBase}
  commentId: T:System.Collections.Generic.IEnumerator{OfficeOpenXml.ExcelRangeBase}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<ExcelRangeBase>
  nameWithType: IEnumerator<ExcelRangeBase>
  fullName: System.Collections.Generic.IEnumerator<OfficeOpenXml.ExcelRangeBase>
  nameWithType.vb: IEnumerator(Of ExcelRangeBase)
  fullName.vb: System.Collections.Generic.IEnumerator(Of OfficeOpenXml.ExcelRangeBase)
  name.vb: IEnumerator(Of ExcelRangeBase)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.ExcelRangeBase
    name: ExcelRangeBase
    nameWithType: ExcelRangeBase
    fullName: OfficeOpenXml.ExcelRangeBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.ExcelRangeBase
    name: ExcelRangeBase
    nameWithType: ExcelRangeBase
    fullName: OfficeOpenXml.ExcelRangeBase
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: OfficeOpenXml.ExcelRangeBase._worksheet
  commentId: F:OfficeOpenXml.ExcelRangeBase._worksheet
  parent: OfficeOpenXml.ExcelRangeBase
  name: _worksheet
  nameWithType: ExcelRangeBase._worksheet
  fullName: OfficeOpenXml.ExcelRangeBase._worksheet
- uid: OfficeOpenXml.ExcelRangeBase.ChangeAddress
  commentId: M:OfficeOpenXml.ExcelRangeBase.ChangeAddress
  parent: OfficeOpenXml.ExcelRangeBase
  name: ChangeAddress()
  nameWithType: ExcelRangeBase.ChangeAddress()
  fullName: OfficeOpenXml.ExcelRangeBase.ChangeAddress()
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.ChangeAddress
    name: ChangeAddress
    nameWithType: ExcelRangeBase.ChangeAddress
    fullName: OfficeOpenXml.ExcelRangeBase.ChangeAddress
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.ChangeAddress
    name: ChangeAddress
    nameWithType: ExcelRangeBase.ChangeAddress
    fullName: OfficeOpenXml.ExcelRangeBase.ChangeAddress
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.Style
  commentId: P:OfficeOpenXml.ExcelRangeBase.Style
  parent: OfficeOpenXml.ExcelRangeBase
  name: Style
  nameWithType: ExcelRangeBase.Style
  fullName: OfficeOpenXml.ExcelRangeBase.Style
- uid: OfficeOpenXml.ExcelRangeBase.StyleName
  commentId: P:OfficeOpenXml.ExcelRangeBase.StyleName
  parent: OfficeOpenXml.ExcelRangeBase
  name: StyleName
  nameWithType: ExcelRangeBase.StyleName
  fullName: OfficeOpenXml.ExcelRangeBase.StyleName
- uid: OfficeOpenXml.ExcelRangeBase.StyleID
  commentId: P:OfficeOpenXml.ExcelRangeBase.StyleID
  parent: OfficeOpenXml.ExcelRangeBase
  name: StyleID
  nameWithType: ExcelRangeBase.StyleID
  fullName: OfficeOpenXml.ExcelRangeBase.StyleID
- uid: OfficeOpenXml.ExcelRangeBase.Value
  commentId: P:OfficeOpenXml.ExcelRangeBase.Value
  parent: OfficeOpenXml.ExcelRangeBase
  name: Value
  nameWithType: ExcelRangeBase.Value
  fullName: OfficeOpenXml.ExcelRangeBase.Value
- uid: OfficeOpenXml.ExcelRangeBase.SetErrorValue(OfficeOpenXml.eErrorType)
  commentId: M:OfficeOpenXml.ExcelRangeBase.SetErrorValue(OfficeOpenXml.eErrorType)
  parent: OfficeOpenXml.ExcelRangeBase
  name: SetErrorValue(eErrorType)
  nameWithType: ExcelRangeBase.SetErrorValue(eErrorType)
  fullName: OfficeOpenXml.ExcelRangeBase.SetErrorValue(OfficeOpenXml.eErrorType)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.SetErrorValue(OfficeOpenXml.eErrorType)
    name: SetErrorValue
    nameWithType: ExcelRangeBase.SetErrorValue
    fullName: OfficeOpenXml.ExcelRangeBase.SetErrorValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.eErrorType
    name: eErrorType
    nameWithType: eErrorType
    fullName: OfficeOpenXml.eErrorType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.SetErrorValue(OfficeOpenXml.eErrorType)
    name: SetErrorValue
    nameWithType: ExcelRangeBase.SetErrorValue
    fullName: OfficeOpenXml.ExcelRangeBase.SetErrorValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.eErrorType
    name: eErrorType
    nameWithType: eErrorType
    fullName: OfficeOpenXml.eErrorType
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.Text
  commentId: P:OfficeOpenXml.ExcelRangeBase.Text
  parent: OfficeOpenXml.ExcelRangeBase
  name: Text
  nameWithType: ExcelRangeBase.Text
  fullName: OfficeOpenXml.ExcelRangeBase.Text
- uid: OfficeOpenXml.ExcelRangeBase.AutoFitColumns
  commentId: M:OfficeOpenXml.ExcelRangeBase.AutoFitColumns
  parent: OfficeOpenXml.ExcelRangeBase
  name: AutoFitColumns()
  nameWithType: ExcelRangeBase.AutoFitColumns()
  fullName: OfficeOpenXml.ExcelRangeBase.AutoFitColumns()
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.AutoFitColumns
    name: AutoFitColumns
    nameWithType: ExcelRangeBase.AutoFitColumns
    fullName: OfficeOpenXml.ExcelRangeBase.AutoFitColumns
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.AutoFitColumns
    name: AutoFitColumns
    nameWithType: ExcelRangeBase.AutoFitColumns
    fullName: OfficeOpenXml.ExcelRangeBase.AutoFitColumns
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.AutoFitColumns(System.Double)
  commentId: M:OfficeOpenXml.ExcelRangeBase.AutoFitColumns(System.Double)
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: AutoFitColumns(Double)
  nameWithType: ExcelRangeBase.AutoFitColumns(Double)
  fullName: OfficeOpenXml.ExcelRangeBase.AutoFitColumns(System.Double)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.AutoFitColumns(System.Double)
    name: AutoFitColumns
    nameWithType: ExcelRangeBase.AutoFitColumns
    fullName: OfficeOpenXml.ExcelRangeBase.AutoFitColumns
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.AutoFitColumns(System.Double)
    name: AutoFitColumns
    nameWithType: ExcelRangeBase.AutoFitColumns
    fullName: OfficeOpenXml.ExcelRangeBase.AutoFitColumns
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.AutoFitColumns(System.Double,System.Double)
  commentId: M:OfficeOpenXml.ExcelRangeBase.AutoFitColumns(System.Double,System.Double)
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: AutoFitColumns(Double, Double)
  nameWithType: ExcelRangeBase.AutoFitColumns(Double, Double)
  fullName: OfficeOpenXml.ExcelRangeBase.AutoFitColumns(System.Double, System.Double)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.AutoFitColumns(System.Double,System.Double)
    name: AutoFitColumns
    nameWithType: ExcelRangeBase.AutoFitColumns
    fullName: OfficeOpenXml.ExcelRangeBase.AutoFitColumns
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.AutoFitColumns(System.Double,System.Double)
    name: AutoFitColumns
    nameWithType: ExcelRangeBase.AutoFitColumns
    fullName: OfficeOpenXml.ExcelRangeBase.AutoFitColumns
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.Formula
  commentId: P:OfficeOpenXml.ExcelRangeBase.Formula
  parent: OfficeOpenXml.ExcelRangeBase
  name: Formula
  nameWithType: ExcelRangeBase.Formula
  fullName: OfficeOpenXml.ExcelRangeBase.Formula
- uid: OfficeOpenXml.ExcelRangeBase.FormulaR1C1
  commentId: P:OfficeOpenXml.ExcelRangeBase.FormulaR1C1
  parent: OfficeOpenXml.ExcelRangeBase
  name: FormulaR1C1
  nameWithType: ExcelRangeBase.FormulaR1C1
  fullName: OfficeOpenXml.ExcelRangeBase.FormulaR1C1
- uid: OfficeOpenXml.ExcelRangeBase.CreateHtmlExporter
  commentId: M:OfficeOpenXml.ExcelRangeBase.CreateHtmlExporter
  parent: OfficeOpenXml.ExcelRangeBase
  name: CreateHtmlExporter()
  nameWithType: ExcelRangeBase.CreateHtmlExporter()
  fullName: OfficeOpenXml.ExcelRangeBase.CreateHtmlExporter()
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.CreateHtmlExporter
    name: CreateHtmlExporter
    nameWithType: ExcelRangeBase.CreateHtmlExporter
    fullName: OfficeOpenXml.ExcelRangeBase.CreateHtmlExporter
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.CreateHtmlExporter
    name: CreateHtmlExporter
    nameWithType: ExcelRangeBase.CreateHtmlExporter
    fullName: OfficeOpenXml.ExcelRangeBase.CreateHtmlExporter
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.Hyperlink
  commentId: P:OfficeOpenXml.ExcelRangeBase.Hyperlink
  parent: OfficeOpenXml.ExcelRangeBase
  name: Hyperlink
  nameWithType: ExcelRangeBase.Hyperlink
  fullName: OfficeOpenXml.ExcelRangeBase.Hyperlink
- uid: OfficeOpenXml.ExcelRangeBase.SetHyperlink(System.Uri)
  commentId: M:OfficeOpenXml.ExcelRangeBase.SetHyperlink(System.Uri)
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: SetHyperlink(Uri)
  nameWithType: ExcelRangeBase.SetHyperlink(Uri)
  fullName: OfficeOpenXml.ExcelRangeBase.SetHyperlink(System.Uri)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.SetHyperlink(System.Uri)
    name: SetHyperlink
    nameWithType: ExcelRangeBase.SetHyperlink
    fullName: OfficeOpenXml.ExcelRangeBase.SetHyperlink
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.SetHyperlink(System.Uri)
    name: SetHyperlink
    nameWithType: ExcelRangeBase.SetHyperlink
    fullName: OfficeOpenXml.ExcelRangeBase.SetHyperlink
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.SetHyperlink(OfficeOpenXml.ExcelHyperLink)
  commentId: M:OfficeOpenXml.ExcelRangeBase.SetHyperlink(OfficeOpenXml.ExcelHyperLink)
  parent: OfficeOpenXml.ExcelRangeBase
  name: SetHyperlink(ExcelHyperLink)
  nameWithType: ExcelRangeBase.SetHyperlink(ExcelHyperLink)
  fullName: OfficeOpenXml.ExcelRangeBase.SetHyperlink(OfficeOpenXml.ExcelHyperLink)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.SetHyperlink(OfficeOpenXml.ExcelHyperLink)
    name: SetHyperlink
    nameWithType: ExcelRangeBase.SetHyperlink
    fullName: OfficeOpenXml.ExcelRangeBase.SetHyperlink
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.ExcelHyperLink
    name: ExcelHyperLink
    nameWithType: ExcelHyperLink
    fullName: OfficeOpenXml.ExcelHyperLink
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.SetHyperlink(OfficeOpenXml.ExcelHyperLink)
    name: SetHyperlink
    nameWithType: ExcelRangeBase.SetHyperlink
    fullName: OfficeOpenXml.ExcelRangeBase.SetHyperlink
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.ExcelHyperLink
    name: ExcelHyperLink
    nameWithType: ExcelHyperLink
    fullName: OfficeOpenXml.ExcelHyperLink
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.SetHyperlink(OfficeOpenXml.ExcelRange,System.String)
  commentId: M:OfficeOpenXml.ExcelRangeBase.SetHyperlink(OfficeOpenXml.ExcelRange,System.String)
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: SetHyperlink(ExcelRange, String)
  nameWithType: ExcelRangeBase.SetHyperlink(ExcelRange, String)
  fullName: OfficeOpenXml.ExcelRangeBase.SetHyperlink(OfficeOpenXml.ExcelRange, System.String)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.SetHyperlink(OfficeOpenXml.ExcelRange,System.String)
    name: SetHyperlink
    nameWithType: ExcelRangeBase.SetHyperlink
    fullName: OfficeOpenXml.ExcelRangeBase.SetHyperlink
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.ExcelRange
    name: ExcelRange
    nameWithType: ExcelRange
    fullName: OfficeOpenXml.ExcelRange
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.SetHyperlink(OfficeOpenXml.ExcelRange,System.String)
    name: SetHyperlink
    nameWithType: ExcelRangeBase.SetHyperlink
    fullName: OfficeOpenXml.ExcelRangeBase.SetHyperlink
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.ExcelRange
    name: ExcelRange
    nameWithType: ExcelRange
    fullName: OfficeOpenXml.ExcelRange
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.SetHyperlink(OfficeOpenXml.ExcelRange)
  commentId: M:OfficeOpenXml.ExcelRangeBase.SetHyperlink(OfficeOpenXml.ExcelRange)
  parent: OfficeOpenXml.ExcelRangeBase
  name: SetHyperlink(ExcelRange)
  nameWithType: ExcelRangeBase.SetHyperlink(ExcelRange)
  fullName: OfficeOpenXml.ExcelRangeBase.SetHyperlink(OfficeOpenXml.ExcelRange)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.SetHyperlink(OfficeOpenXml.ExcelRange)
    name: SetHyperlink
    nameWithType: ExcelRangeBase.SetHyperlink
    fullName: OfficeOpenXml.ExcelRangeBase.SetHyperlink
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.ExcelRange
    name: ExcelRange
    nameWithType: ExcelRange
    fullName: OfficeOpenXml.ExcelRange
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.SetHyperlink(OfficeOpenXml.ExcelRange)
    name: SetHyperlink
    nameWithType: ExcelRangeBase.SetHyperlink
    fullName: OfficeOpenXml.ExcelRangeBase.SetHyperlink
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.ExcelRange
    name: ExcelRange
    nameWithType: ExcelRange
    fullName: OfficeOpenXml.ExcelRange
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.Merge
  commentId: P:OfficeOpenXml.ExcelRangeBase.Merge
  parent: OfficeOpenXml.ExcelRangeBase
  name: Merge
  nameWithType: ExcelRangeBase.Merge
  fullName: OfficeOpenXml.ExcelRangeBase.Merge
- uid: OfficeOpenXml.ExcelRangeBase.AutoFilter
  commentId: P:OfficeOpenXml.ExcelRangeBase.AutoFilter
  parent: OfficeOpenXml.ExcelRangeBase
  name: AutoFilter
  nameWithType: ExcelRangeBase.AutoFilter
  fullName: OfficeOpenXml.ExcelRangeBase.AutoFilter
- uid: OfficeOpenXml.ExcelRangeBase.IsRichText
  commentId: P:OfficeOpenXml.ExcelRangeBase.IsRichText
  parent: OfficeOpenXml.ExcelRangeBase
  name: IsRichText
  nameWithType: ExcelRangeBase.IsRichText
  fullName: OfficeOpenXml.ExcelRangeBase.IsRichText
- uid: OfficeOpenXml.ExcelRangeBase.IsTable
  commentId: P:OfficeOpenXml.ExcelRangeBase.IsTable
  parent: OfficeOpenXml.ExcelRangeBase
  name: IsTable
  nameWithType: ExcelRangeBase.IsTable
  fullName: OfficeOpenXml.ExcelRangeBase.IsTable
- uid: OfficeOpenXml.ExcelRangeBase.GetTable
  commentId: M:OfficeOpenXml.ExcelRangeBase.GetTable
  parent: OfficeOpenXml.ExcelRangeBase
  name: GetTable()
  nameWithType: ExcelRangeBase.GetTable()
  fullName: OfficeOpenXml.ExcelRangeBase.GetTable()
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.GetTable
    name: GetTable
    nameWithType: ExcelRangeBase.GetTable
    fullName: OfficeOpenXml.ExcelRangeBase.GetTable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.GetTable
    name: GetTable
    nameWithType: ExcelRangeBase.GetTable
    fullName: OfficeOpenXml.ExcelRangeBase.GetTable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.Insert(OfficeOpenXml.eShiftTypeInsert)
  commentId: M:OfficeOpenXml.ExcelRangeBase.Insert(OfficeOpenXml.eShiftTypeInsert)
  parent: OfficeOpenXml.ExcelRangeBase
  name: Insert(eShiftTypeInsert)
  nameWithType: ExcelRangeBase.Insert(eShiftTypeInsert)
  fullName: OfficeOpenXml.ExcelRangeBase.Insert(OfficeOpenXml.eShiftTypeInsert)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.Insert(OfficeOpenXml.eShiftTypeInsert)
    name: Insert
    nameWithType: ExcelRangeBase.Insert
    fullName: OfficeOpenXml.ExcelRangeBase.Insert
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.eShiftTypeInsert
    name: eShiftTypeInsert
    nameWithType: eShiftTypeInsert
    fullName: OfficeOpenXml.eShiftTypeInsert
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.Insert(OfficeOpenXml.eShiftTypeInsert)
    name: Insert
    nameWithType: ExcelRangeBase.Insert
    fullName: OfficeOpenXml.ExcelRangeBase.Insert
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.eShiftTypeInsert
    name: eShiftTypeInsert
    nameWithType: eShiftTypeInsert
    fullName: OfficeOpenXml.eShiftTypeInsert
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.Delete(OfficeOpenXml.eShiftTypeDelete)
  commentId: M:OfficeOpenXml.ExcelRangeBase.Delete(OfficeOpenXml.eShiftTypeDelete)
  parent: OfficeOpenXml.ExcelRangeBase
  name: Delete(eShiftTypeDelete)
  nameWithType: ExcelRangeBase.Delete(eShiftTypeDelete)
  fullName: OfficeOpenXml.ExcelRangeBase.Delete(OfficeOpenXml.eShiftTypeDelete)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.Delete(OfficeOpenXml.eShiftTypeDelete)
    name: Delete
    nameWithType: ExcelRangeBase.Delete
    fullName: OfficeOpenXml.ExcelRangeBase.Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.eShiftTypeDelete
    name: eShiftTypeDelete
    nameWithType: eShiftTypeDelete
    fullName: OfficeOpenXml.eShiftTypeDelete
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.Delete(OfficeOpenXml.eShiftTypeDelete)
    name: Delete
    nameWithType: ExcelRangeBase.Delete
    fullName: OfficeOpenXml.ExcelRangeBase.Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.eShiftTypeDelete
    name: eShiftTypeDelete
    nameWithType: eShiftTypeDelete
    fullName: OfficeOpenXml.eShiftTypeDelete
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.IsArrayFormula
  commentId: P:OfficeOpenXml.ExcelRangeBase.IsArrayFormula
  parent: OfficeOpenXml.ExcelRangeBase
  name: IsArrayFormula
  nameWithType: ExcelRangeBase.IsArrayFormula
  fullName: OfficeOpenXml.ExcelRangeBase.IsArrayFormula
- uid: OfficeOpenXml.ExcelRangeBase._rtc
  commentId: F:OfficeOpenXml.ExcelRangeBase._rtc
  parent: OfficeOpenXml.ExcelRangeBase
  name: _rtc
  nameWithType: ExcelRangeBase._rtc
  fullName: OfficeOpenXml.ExcelRangeBase._rtc
- uid: OfficeOpenXml.ExcelRangeBase.RichText
  commentId: P:OfficeOpenXml.ExcelRangeBase.RichText
  parent: OfficeOpenXml.ExcelRangeBase
  name: RichText
  nameWithType: ExcelRangeBase.RichText
  fullName: OfficeOpenXml.ExcelRangeBase.RichText
- uid: OfficeOpenXml.ExcelRangeBase.Comment
  commentId: P:OfficeOpenXml.ExcelRangeBase.Comment
  parent: OfficeOpenXml.ExcelRangeBase
  name: Comment
  nameWithType: ExcelRangeBase.Comment
  fullName: OfficeOpenXml.ExcelRangeBase.Comment
- uid: OfficeOpenXml.ExcelRangeBase.ThreadedComment
  commentId: P:OfficeOpenXml.ExcelRangeBase.ThreadedComment
  parent: OfficeOpenXml.ExcelRangeBase
  name: ThreadedComment
  nameWithType: ExcelRangeBase.ThreadedComment
  fullName: OfficeOpenXml.ExcelRangeBase.ThreadedComment
- uid: OfficeOpenXml.ExcelRangeBase.Worksheet
  commentId: P:OfficeOpenXml.ExcelRangeBase.Worksheet
  parent: OfficeOpenXml.ExcelRangeBase
  name: Worksheet
  nameWithType: ExcelRangeBase.Worksheet
  fullName: OfficeOpenXml.ExcelRangeBase.Worksheet
- uid: OfficeOpenXml.ExcelRangeBase.FullAddress
  commentId: P:OfficeOpenXml.ExcelRangeBase.FullAddress
  parent: OfficeOpenXml.ExcelRangeBase
  name: FullAddress
  nameWithType: ExcelRangeBase.FullAddress
  fullName: OfficeOpenXml.ExcelRangeBase.FullAddress
- uid: OfficeOpenXml.ExcelRangeBase.FullAddressAbsolute
  commentId: P:OfficeOpenXml.ExcelRangeBase.FullAddressAbsolute
  parent: OfficeOpenXml.ExcelRangeBase
  name: FullAddressAbsolute
  nameWithType: ExcelRangeBase.FullAddressAbsolute
  fullName: OfficeOpenXml.ExcelRangeBase.FullAddressAbsolute
- uid: OfficeOpenXml.ExcelRangeBase.ClearFormulas
  commentId: M:OfficeOpenXml.ExcelRangeBase.ClearFormulas
  parent: OfficeOpenXml.ExcelRangeBase
  name: ClearFormulas()
  nameWithType: ExcelRangeBase.ClearFormulas()
  fullName: OfficeOpenXml.ExcelRangeBase.ClearFormulas()
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.ClearFormulas
    name: ClearFormulas
    nameWithType: ExcelRangeBase.ClearFormulas
    fullName: OfficeOpenXml.ExcelRangeBase.ClearFormulas
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.ClearFormulas
    name: ClearFormulas
    nameWithType: ExcelRangeBase.ClearFormulas
    fullName: OfficeOpenXml.ExcelRangeBase.ClearFormulas
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.ClearFormulaValues
  commentId: M:OfficeOpenXml.ExcelRangeBase.ClearFormulaValues
  parent: OfficeOpenXml.ExcelRangeBase
  name: ClearFormulaValues()
  nameWithType: ExcelRangeBase.ClearFormulaValues()
  fullName: OfficeOpenXml.ExcelRangeBase.ClearFormulaValues()
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.ClearFormulaValues
    name: ClearFormulaValues
    nameWithType: ExcelRangeBase.ClearFormulaValues
    fullName: OfficeOpenXml.ExcelRangeBase.ClearFormulaValues
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.ClearFormulaValues
    name: ClearFormulaValues
    nameWithType: ExcelRangeBase.ClearFormulaValues
    fullName: OfficeOpenXml.ExcelRangeBase.ClearFormulaValues
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.ConditionalFormatting
  commentId: P:OfficeOpenXml.ExcelRangeBase.ConditionalFormatting
  parent: OfficeOpenXml.ExcelRangeBase
  name: ConditionalFormatting
  nameWithType: ExcelRangeBase.ConditionalFormatting
  fullName: OfficeOpenXml.ExcelRangeBase.ConditionalFormatting
- uid: OfficeOpenXml.ExcelRangeBase.DataValidation
  commentId: P:OfficeOpenXml.ExcelRangeBase.DataValidation
  parent: OfficeOpenXml.ExcelRangeBase
  name: DataValidation
  nameWithType: ExcelRangeBase.DataValidation
  fullName: OfficeOpenXml.ExcelRangeBase.DataValidation
- uid: OfficeOpenXml.ExcelRangeBase.GetValue``1
  commentId: M:OfficeOpenXml.ExcelRangeBase.GetValue``1
  parent: OfficeOpenXml.ExcelRangeBase
  name: GetValue<T>()
  nameWithType: ExcelRangeBase.GetValue<T>()
  fullName: OfficeOpenXml.ExcelRangeBase.GetValue<T>()
  nameWithType.vb: ExcelRangeBase.GetValue(Of T)()
  fullName.vb: OfficeOpenXml.ExcelRangeBase.GetValue(Of T)()
  name.vb: GetValue(Of T)()
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.GetValue``1
    name: GetValue<T>
    nameWithType: ExcelRangeBase.GetValue<T>
    fullName: OfficeOpenXml.ExcelRangeBase.GetValue<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.GetValue``1
    name: GetValue(Of T)
    nameWithType: ExcelRangeBase.GetValue(Of T)
    fullName: OfficeOpenXml.ExcelRangeBase.GetValue(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.Offset(System.Int32,System.Int32)
  commentId: M:OfficeOpenXml.ExcelRangeBase.Offset(System.Int32,System.Int32)
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: Offset(Int32, Int32)
  nameWithType: ExcelRangeBase.Offset(Int32, Int32)
  fullName: OfficeOpenXml.ExcelRangeBase.Offset(System.Int32, System.Int32)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.Offset(System.Int32,System.Int32)
    name: Offset
    nameWithType: ExcelRangeBase.Offset
    fullName: OfficeOpenXml.ExcelRangeBase.Offset
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.Offset(System.Int32,System.Int32)
    name: Offset
    nameWithType: ExcelRangeBase.Offset
    fullName: OfficeOpenXml.ExcelRangeBase.Offset
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.Offset(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:OfficeOpenXml.ExcelRangeBase.Offset(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: Offset(Int32, Int32, Int32, Int32)
  nameWithType: ExcelRangeBase.Offset(Int32, Int32, Int32, Int32)
  fullName: OfficeOpenXml.ExcelRangeBase.Offset(System.Int32, System.Int32, System.Int32, System.Int32)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.Offset(System.Int32,System.Int32,System.Int32,System.Int32)
    name: Offset
    nameWithType: ExcelRangeBase.Offset
    fullName: OfficeOpenXml.ExcelRangeBase.Offset
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.Offset(System.Int32,System.Int32,System.Int32,System.Int32)
    name: Offset
    nameWithType: ExcelRangeBase.Offset
    fullName: OfficeOpenXml.ExcelRangeBase.Offset
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.AddComment(System.String,System.String)
  commentId: M:OfficeOpenXml.ExcelRangeBase.AddComment(System.String,System.String)
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: AddComment(String, String)
  nameWithType: ExcelRangeBase.AddComment(String, String)
  fullName: OfficeOpenXml.ExcelRangeBase.AddComment(System.String, System.String)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.AddComment(System.String,System.String)
    name: AddComment
    nameWithType: ExcelRangeBase.AddComment
    fullName: OfficeOpenXml.ExcelRangeBase.AddComment
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.AddComment(System.String,System.String)
    name: AddComment
    nameWithType: ExcelRangeBase.AddComment
    fullName: OfficeOpenXml.ExcelRangeBase.AddComment
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.AddThreadedComment
  commentId: M:OfficeOpenXml.ExcelRangeBase.AddThreadedComment
  parent: OfficeOpenXml.ExcelRangeBase
  name: AddThreadedComment()
  nameWithType: ExcelRangeBase.AddThreadedComment()
  fullName: OfficeOpenXml.ExcelRangeBase.AddThreadedComment()
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.AddThreadedComment
    name: AddThreadedComment
    nameWithType: ExcelRangeBase.AddThreadedComment
    fullName: OfficeOpenXml.ExcelRangeBase.AddThreadedComment
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.AddThreadedComment
    name: AddThreadedComment
    nameWithType: ExcelRangeBase.AddThreadedComment
    fullName: OfficeOpenXml.ExcelRangeBase.AddThreadedComment
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.Copy(OfficeOpenXml.ExcelRangeBase)
  commentId: M:OfficeOpenXml.ExcelRangeBase.Copy(OfficeOpenXml.ExcelRangeBase)
  parent: OfficeOpenXml.ExcelRangeBase
  name: Copy(ExcelRangeBase)
  nameWithType: ExcelRangeBase.Copy(ExcelRangeBase)
  fullName: OfficeOpenXml.ExcelRangeBase.Copy(OfficeOpenXml.ExcelRangeBase)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.Copy(OfficeOpenXml.ExcelRangeBase)
    name: Copy
    nameWithType: ExcelRangeBase.Copy
    fullName: OfficeOpenXml.ExcelRangeBase.Copy
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.ExcelRangeBase
    name: ExcelRangeBase
    nameWithType: ExcelRangeBase
    fullName: OfficeOpenXml.ExcelRangeBase
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.Copy(OfficeOpenXml.ExcelRangeBase)
    name: Copy
    nameWithType: ExcelRangeBase.Copy
    fullName: OfficeOpenXml.ExcelRangeBase.Copy
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.ExcelRangeBase
    name: ExcelRangeBase
    nameWithType: ExcelRangeBase
    fullName: OfficeOpenXml.ExcelRangeBase
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.Copy(OfficeOpenXml.ExcelRangeBase,System.Nullable{OfficeOpenXml.ExcelRangeCopyOptionFlags})
  commentId: M:OfficeOpenXml.ExcelRangeBase.Copy(OfficeOpenXml.ExcelRangeBase,System.Nullable{OfficeOpenXml.ExcelRangeCopyOptionFlags})
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: Copy(ExcelRangeBase, Nullable<ExcelRangeCopyOptionFlags>)
  nameWithType: ExcelRangeBase.Copy(ExcelRangeBase, Nullable<ExcelRangeCopyOptionFlags>)
  fullName: OfficeOpenXml.ExcelRangeBase.Copy(OfficeOpenXml.ExcelRangeBase, System.Nullable<OfficeOpenXml.ExcelRangeCopyOptionFlags>)
  nameWithType.vb: ExcelRangeBase.Copy(ExcelRangeBase, Nullable(Of ExcelRangeCopyOptionFlags))
  fullName.vb: OfficeOpenXml.ExcelRangeBase.Copy(OfficeOpenXml.ExcelRangeBase, System.Nullable(Of OfficeOpenXml.ExcelRangeCopyOptionFlags))
  name.vb: Copy(ExcelRangeBase, Nullable(Of ExcelRangeCopyOptionFlags))
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.Copy(OfficeOpenXml.ExcelRangeBase,System.Nullable{OfficeOpenXml.ExcelRangeCopyOptionFlags})
    name: Copy
    nameWithType: ExcelRangeBase.Copy
    fullName: OfficeOpenXml.ExcelRangeBase.Copy
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.ExcelRangeBase
    name: ExcelRangeBase
    nameWithType: ExcelRangeBase
    fullName: OfficeOpenXml.ExcelRangeBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.ExcelRangeCopyOptionFlags
    name: ExcelRangeCopyOptionFlags
    nameWithType: ExcelRangeCopyOptionFlags
    fullName: OfficeOpenXml.ExcelRangeCopyOptionFlags
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.Copy(OfficeOpenXml.ExcelRangeBase,System.Nullable{OfficeOpenXml.ExcelRangeCopyOptionFlags})
    name: Copy
    nameWithType: ExcelRangeBase.Copy
    fullName: OfficeOpenXml.ExcelRangeBase.Copy
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.ExcelRangeBase
    name: ExcelRangeBase
    nameWithType: ExcelRangeBase
    fullName: OfficeOpenXml.ExcelRangeBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.ExcelRangeCopyOptionFlags
    name: ExcelRangeCopyOptionFlags
    nameWithType: ExcelRangeCopyOptionFlags
    fullName: OfficeOpenXml.ExcelRangeCopyOptionFlags
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.Copy(OfficeOpenXml.ExcelRangeBase,OfficeOpenXml.ExcelRangeCopyOptionFlags[])
  commentId: M:OfficeOpenXml.ExcelRangeBase.Copy(OfficeOpenXml.ExcelRangeBase,OfficeOpenXml.ExcelRangeCopyOptionFlags[])
  parent: OfficeOpenXml.ExcelRangeBase
  name: Copy(ExcelRangeBase, ExcelRangeCopyOptionFlags[])
  nameWithType: ExcelRangeBase.Copy(ExcelRangeBase, ExcelRangeCopyOptionFlags[])
  fullName: OfficeOpenXml.ExcelRangeBase.Copy(OfficeOpenXml.ExcelRangeBase, OfficeOpenXml.ExcelRangeCopyOptionFlags[])
  nameWithType.vb: ExcelRangeBase.Copy(ExcelRangeBase, ExcelRangeCopyOptionFlags())
  fullName.vb: OfficeOpenXml.ExcelRangeBase.Copy(OfficeOpenXml.ExcelRangeBase, OfficeOpenXml.ExcelRangeCopyOptionFlags())
  name.vb: Copy(ExcelRangeBase, ExcelRangeCopyOptionFlags())
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.Copy(OfficeOpenXml.ExcelRangeBase,OfficeOpenXml.ExcelRangeCopyOptionFlags[])
    name: Copy
    nameWithType: ExcelRangeBase.Copy
    fullName: OfficeOpenXml.ExcelRangeBase.Copy
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.ExcelRangeBase
    name: ExcelRangeBase
    nameWithType: ExcelRangeBase
    fullName: OfficeOpenXml.ExcelRangeBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ExcelRangeCopyOptionFlags
    name: ExcelRangeCopyOptionFlags
    nameWithType: ExcelRangeCopyOptionFlags
    fullName: OfficeOpenXml.ExcelRangeCopyOptionFlags
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.Copy(OfficeOpenXml.ExcelRangeBase,OfficeOpenXml.ExcelRangeCopyOptionFlags[])
    name: Copy
    nameWithType: ExcelRangeBase.Copy
    fullName: OfficeOpenXml.ExcelRangeBase.Copy
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.ExcelRangeBase
    name: ExcelRangeBase
    nameWithType: ExcelRangeBase
    fullName: OfficeOpenXml.ExcelRangeBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ExcelRangeCopyOptionFlags
    name: ExcelRangeCopyOptionFlags
    nameWithType: ExcelRangeCopyOptionFlags
    fullName: OfficeOpenXml.ExcelRangeCopyOptionFlags
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.CopyStyles(OfficeOpenXml.ExcelRangeBase)
  commentId: M:OfficeOpenXml.ExcelRangeBase.CopyStyles(OfficeOpenXml.ExcelRangeBase)
  parent: OfficeOpenXml.ExcelRangeBase
  name: CopyStyles(ExcelRangeBase)
  nameWithType: ExcelRangeBase.CopyStyles(ExcelRangeBase)
  fullName: OfficeOpenXml.ExcelRangeBase.CopyStyles(OfficeOpenXml.ExcelRangeBase)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.CopyStyles(OfficeOpenXml.ExcelRangeBase)
    name: CopyStyles
    nameWithType: ExcelRangeBase.CopyStyles
    fullName: OfficeOpenXml.ExcelRangeBase.CopyStyles
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.ExcelRangeBase
    name: ExcelRangeBase
    nameWithType: ExcelRangeBase
    fullName: OfficeOpenXml.ExcelRangeBase
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.CopyStyles(OfficeOpenXml.ExcelRangeBase)
    name: CopyStyles
    nameWithType: ExcelRangeBase.CopyStyles
    fullName: OfficeOpenXml.ExcelRangeBase.CopyStyles
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.ExcelRangeBase
    name: ExcelRangeBase
    nameWithType: ExcelRangeBase
    fullName: OfficeOpenXml.ExcelRangeBase
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.Clear
  commentId: M:OfficeOpenXml.ExcelRangeBase.Clear
  parent: OfficeOpenXml.ExcelRangeBase
  name: Clear()
  nameWithType: ExcelRangeBase.Clear()
  fullName: OfficeOpenXml.ExcelRangeBase.Clear()
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.Clear
    name: Clear
    nameWithType: ExcelRangeBase.Clear
    fullName: OfficeOpenXml.ExcelRangeBase.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.Clear
    name: Clear
    nameWithType: ExcelRangeBase.Clear
    fullName: OfficeOpenXml.ExcelRangeBase.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.CreateArrayFormula(System.String)
  commentId: M:OfficeOpenXml.ExcelRangeBase.CreateArrayFormula(System.String)
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: CreateArrayFormula(String)
  nameWithType: ExcelRangeBase.CreateArrayFormula(String)
  fullName: OfficeOpenXml.ExcelRangeBase.CreateArrayFormula(System.String)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.CreateArrayFormula(System.String)
    name: CreateArrayFormula
    nameWithType: ExcelRangeBase.CreateArrayFormula
    fullName: OfficeOpenXml.ExcelRangeBase.CreateArrayFormula
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.CreateArrayFormula(System.String)
    name: CreateArrayFormula
    nameWithType: ExcelRangeBase.CreateArrayFormula
    fullName: OfficeOpenXml.ExcelRangeBase.CreateArrayFormula
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.FormulaRange
  commentId: P:OfficeOpenXml.ExcelRangeBase.FormulaRange
  parent: OfficeOpenXml.ExcelRangeBase
  name: FormulaRange
  nameWithType: ExcelRangeBase.FormulaRange
  fullName: OfficeOpenXml.ExcelRangeBase.FormulaRange
- uid: OfficeOpenXml.ExcelRangeBase.Dispose
  commentId: M:OfficeOpenXml.ExcelRangeBase.Dispose
  parent: OfficeOpenXml.ExcelRangeBase
  name: Dispose()
  nameWithType: ExcelRangeBase.Dispose()
  fullName: OfficeOpenXml.ExcelRangeBase.Dispose()
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.Dispose
    name: Dispose
    nameWithType: ExcelRangeBase.Dispose
    fullName: OfficeOpenXml.ExcelRangeBase.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.Dispose
    name: Dispose
    nameWithType: ExcelRangeBase.Dispose
    fullName: OfficeOpenXml.ExcelRangeBase.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.GetEnumerator
  commentId: M:OfficeOpenXml.ExcelRangeBase.GetEnumerator
  parent: OfficeOpenXml.ExcelRangeBase
  name: GetEnumerator()
  nameWithType: ExcelRangeBase.GetEnumerator()
  fullName: OfficeOpenXml.ExcelRangeBase.GetEnumerator()
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.GetEnumerator
    name: GetEnumerator
    nameWithType: ExcelRangeBase.GetEnumerator
    fullName: OfficeOpenXml.ExcelRangeBase.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.GetEnumerator
    name: GetEnumerator
    nameWithType: ExcelRangeBase.GetEnumerator
    fullName: OfficeOpenXml.ExcelRangeBase.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.System#Collections#IEnumerable#GetEnumerator
  commentId: M:OfficeOpenXml.ExcelRangeBase.System#Collections#IEnumerable#GetEnumerator
  parent: OfficeOpenXml.ExcelRangeBase
  name: IEnumerable.GetEnumerator()
  nameWithType: ExcelRangeBase.IEnumerable.GetEnumerator()
  fullName: OfficeOpenXml.ExcelRangeBase.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: ExcelRangeBase.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: ExcelRangeBase.IEnumerable.GetEnumerator
    fullName: OfficeOpenXml.ExcelRangeBase.System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: ExcelRangeBase.System.Collections.IEnumerable.GetEnumerator
    fullName: OfficeOpenXml.ExcelRangeBase.System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.Current
  commentId: P:OfficeOpenXml.ExcelRangeBase.Current
  parent: OfficeOpenXml.ExcelRangeBase
  name: Current
  nameWithType: ExcelRangeBase.Current
  fullName: OfficeOpenXml.ExcelRangeBase.Current
- uid: OfficeOpenXml.ExcelRangeBase.System#Collections#IEnumerator#Current
  commentId: P:OfficeOpenXml.ExcelRangeBase.System#Collections#IEnumerator#Current
  parent: OfficeOpenXml.ExcelRangeBase
  name: IEnumerator.Current
  nameWithType: ExcelRangeBase.IEnumerator.Current
  fullName: OfficeOpenXml.ExcelRangeBase.System.Collections.IEnumerator.Current
  nameWithType.vb: ExcelRangeBase.System.Collections.IEnumerator.Current
  name.vb: System.Collections.IEnumerator.Current
- uid: OfficeOpenXml.ExcelRangeBase.MoveNext
  commentId: M:OfficeOpenXml.ExcelRangeBase.MoveNext
  parent: OfficeOpenXml.ExcelRangeBase
  name: MoveNext()
  nameWithType: ExcelRangeBase.MoveNext()
  fullName: OfficeOpenXml.ExcelRangeBase.MoveNext()
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.MoveNext
    name: MoveNext
    nameWithType: ExcelRangeBase.MoveNext
    fullName: OfficeOpenXml.ExcelRangeBase.MoveNext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.MoveNext
    name: MoveNext
    nameWithType: ExcelRangeBase.MoveNext
    fullName: OfficeOpenXml.ExcelRangeBase.MoveNext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.Reset
  commentId: M:OfficeOpenXml.ExcelRangeBase.Reset
  parent: OfficeOpenXml.ExcelRangeBase
  name: Reset()
  nameWithType: ExcelRangeBase.Reset()
  fullName: OfficeOpenXml.ExcelRangeBase.Reset()
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.Reset
    name: Reset
    nameWithType: ExcelRangeBase.Reset
    fullName: OfficeOpenXml.ExcelRangeBase.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.Reset
    name: Reset
    nameWithType: ExcelRangeBase.Reset
    fullName: OfficeOpenXml.ExcelRangeBase.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.Sort
  commentId: M:OfficeOpenXml.ExcelRangeBase.Sort
  parent: OfficeOpenXml.ExcelRangeBase
  name: Sort()
  nameWithType: ExcelRangeBase.Sort()
  fullName: OfficeOpenXml.ExcelRangeBase.Sort()
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.Sort
    name: Sort
    nameWithType: ExcelRangeBase.Sort
    fullName: OfficeOpenXml.ExcelRangeBase.Sort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.Sort
    name: Sort
    nameWithType: ExcelRangeBase.Sort
    fullName: OfficeOpenXml.ExcelRangeBase.Sort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.Sort(System.Int32,System.Boolean)
  commentId: M:OfficeOpenXml.ExcelRangeBase.Sort(System.Int32,System.Boolean)
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: Sort(Int32, Boolean)
  nameWithType: ExcelRangeBase.Sort(Int32, Boolean)
  fullName: OfficeOpenXml.ExcelRangeBase.Sort(System.Int32, System.Boolean)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.Sort(System.Int32,System.Boolean)
    name: Sort
    nameWithType: ExcelRangeBase.Sort
    fullName: OfficeOpenXml.ExcelRangeBase.Sort
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.Sort(System.Int32,System.Boolean)
    name: Sort
    nameWithType: ExcelRangeBase.Sort
    fullName: OfficeOpenXml.ExcelRangeBase.Sort
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.Sort(System.Int32[],System.Boolean[],System.Globalization.CultureInfo,System.Globalization.CompareOptions)
  commentId: M:OfficeOpenXml.ExcelRangeBase.Sort(System.Int32[],System.Boolean[],System.Globalization.CultureInfo,System.Globalization.CompareOptions)
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: Sort(Int32[], Boolean[], CultureInfo, CompareOptions)
  nameWithType: ExcelRangeBase.Sort(Int32[], Boolean[], CultureInfo, CompareOptions)
  fullName: OfficeOpenXml.ExcelRangeBase.Sort(System.Int32[], System.Boolean[], System.Globalization.CultureInfo, System.Globalization.CompareOptions)
  nameWithType.vb: ExcelRangeBase.Sort(Int32(), Boolean(), CultureInfo, CompareOptions)
  fullName.vb: OfficeOpenXml.ExcelRangeBase.Sort(System.Int32(), System.Boolean(), System.Globalization.CultureInfo, System.Globalization.CompareOptions)
  name.vb: Sort(Int32(), Boolean(), CultureInfo, CompareOptions)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.Sort(System.Int32[],System.Boolean[],System.Globalization.CultureInfo,System.Globalization.CompareOptions)
    name: Sort
    nameWithType: ExcelRangeBase.Sort
    fullName: OfficeOpenXml.ExcelRangeBase.Sort
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CompareOptions
    name: CompareOptions
    nameWithType: CompareOptions
    fullName: System.Globalization.CompareOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.Sort(System.Int32[],System.Boolean[],System.Globalization.CultureInfo,System.Globalization.CompareOptions)
    name: Sort
    nameWithType: ExcelRangeBase.Sort
    fullName: OfficeOpenXml.ExcelRangeBase.Sort
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CompareOptions
    name: CompareOptions
    nameWithType: CompareOptions
    fullName: System.Globalization.CompareOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.Sort(System.Action{OfficeOpenXml.Sorting.RangeSortOptions})
  commentId: M:OfficeOpenXml.ExcelRangeBase.Sort(System.Action{OfficeOpenXml.Sorting.RangeSortOptions})
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: Sort(Action<RangeSortOptions>)
  nameWithType: ExcelRangeBase.Sort(Action<RangeSortOptions>)
  fullName: OfficeOpenXml.ExcelRangeBase.Sort(System.Action<OfficeOpenXml.Sorting.RangeSortOptions>)
  nameWithType.vb: ExcelRangeBase.Sort(Action(Of RangeSortOptions))
  fullName.vb: OfficeOpenXml.ExcelRangeBase.Sort(System.Action(Of OfficeOpenXml.Sorting.RangeSortOptions))
  name.vb: Sort(Action(Of RangeSortOptions))
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.Sort(System.Action{OfficeOpenXml.Sorting.RangeSortOptions})
    name: Sort
    nameWithType: ExcelRangeBase.Sort
    fullName: OfficeOpenXml.ExcelRangeBase.Sort
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.Sorting.RangeSortOptions
    name: RangeSortOptions
    nameWithType: RangeSortOptions
    fullName: OfficeOpenXml.Sorting.RangeSortOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.Sort(System.Action{OfficeOpenXml.Sorting.RangeSortOptions})
    name: Sort
    nameWithType: ExcelRangeBase.Sort
    fullName: OfficeOpenXml.ExcelRangeBase.Sort
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.Sorting.RangeSortOptions
    name: RangeSortOptions
    nameWithType: RangeSortOptions
    fullName: OfficeOpenXml.Sorting.RangeSortOptions
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.Sort(OfficeOpenXml.Sorting.RangeSortOptions)
  commentId: M:OfficeOpenXml.ExcelRangeBase.Sort(OfficeOpenXml.Sorting.RangeSortOptions)
  parent: OfficeOpenXml.ExcelRangeBase
  name: Sort(RangeSortOptions)
  nameWithType: ExcelRangeBase.Sort(RangeSortOptions)
  fullName: OfficeOpenXml.ExcelRangeBase.Sort(OfficeOpenXml.Sorting.RangeSortOptions)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.Sort(OfficeOpenXml.Sorting.RangeSortOptions)
    name: Sort
    nameWithType: ExcelRangeBase.Sort
    fullName: OfficeOpenXml.ExcelRangeBase.Sort
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.Sorting.RangeSortOptions
    name: RangeSortOptions
    nameWithType: RangeSortOptions
    fullName: OfficeOpenXml.Sorting.RangeSortOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.Sort(OfficeOpenXml.Sorting.RangeSortOptions)
    name: Sort
    nameWithType: ExcelRangeBase.Sort
    fullName: OfficeOpenXml.ExcelRangeBase.Sort
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.Sorting.RangeSortOptions
    name: RangeSortOptions
    nameWithType: RangeSortOptions
    fullName: OfficeOpenXml.Sorting.RangeSortOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.EntireColumn
  commentId: P:OfficeOpenXml.ExcelRangeBase.EntireColumn
  parent: OfficeOpenXml.ExcelRangeBase
  name: EntireColumn
  nameWithType: ExcelRangeBase.EntireColumn
  fullName: OfficeOpenXml.ExcelRangeBase.EntireColumn
- uid: OfficeOpenXml.ExcelRangeBase.EntireRow
  commentId: P:OfficeOpenXml.ExcelRangeBase.EntireRow
  parent: OfficeOpenXml.ExcelRangeBase
  name: EntireRow
  nameWithType: ExcelRangeBase.EntireRow
  fullName: OfficeOpenXml.ExcelRangeBase.EntireRow
- uid: OfficeOpenXml.ExcelRangeBase.GetCellValue``1
  commentId: M:OfficeOpenXml.ExcelRangeBase.GetCellValue``1
  parent: OfficeOpenXml.ExcelRangeBase
  name: GetCellValue<T>()
  nameWithType: ExcelRangeBase.GetCellValue<T>()
  fullName: OfficeOpenXml.ExcelRangeBase.GetCellValue<T>()
  nameWithType.vb: ExcelRangeBase.GetCellValue(Of T)()
  fullName.vb: OfficeOpenXml.ExcelRangeBase.GetCellValue(Of T)()
  name.vb: GetCellValue(Of T)()
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.GetCellValue``1
    name: GetCellValue<T>
    nameWithType: ExcelRangeBase.GetCellValue<T>
    fullName: OfficeOpenXml.ExcelRangeBase.GetCellValue<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.GetCellValue``1
    name: GetCellValue(Of T)
    nameWithType: ExcelRangeBase.GetCellValue(Of T)
    fullName: OfficeOpenXml.ExcelRangeBase.GetCellValue(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.GetCellValue``1(System.Int32)
  commentId: M:OfficeOpenXml.ExcelRangeBase.GetCellValue``1(System.Int32)
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: GetCellValue<T>(Int32)
  nameWithType: ExcelRangeBase.GetCellValue<T>(Int32)
  fullName: OfficeOpenXml.ExcelRangeBase.GetCellValue<T>(System.Int32)
  nameWithType.vb: ExcelRangeBase.GetCellValue(Of T)(Int32)
  fullName.vb: OfficeOpenXml.ExcelRangeBase.GetCellValue(Of T)(System.Int32)
  name.vb: GetCellValue(Of T)(Int32)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.GetCellValue``1(System.Int32)
    name: GetCellValue<T>
    nameWithType: ExcelRangeBase.GetCellValue<T>
    fullName: OfficeOpenXml.ExcelRangeBase.GetCellValue<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.GetCellValue``1(System.Int32)
    name: GetCellValue(Of T)
    nameWithType: ExcelRangeBase.GetCellValue(Of T)
    fullName: OfficeOpenXml.ExcelRangeBase.GetCellValue(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.GetCellValue``1(System.Int32,System.Int32)
  commentId: M:OfficeOpenXml.ExcelRangeBase.GetCellValue``1(System.Int32,System.Int32)
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: GetCellValue<T>(Int32, Int32)
  nameWithType: ExcelRangeBase.GetCellValue<T>(Int32, Int32)
  fullName: OfficeOpenXml.ExcelRangeBase.GetCellValue<T>(System.Int32, System.Int32)
  nameWithType.vb: ExcelRangeBase.GetCellValue(Of T)(Int32, Int32)
  fullName.vb: OfficeOpenXml.ExcelRangeBase.GetCellValue(Of T)(System.Int32, System.Int32)
  name.vb: GetCellValue(Of T)(Int32, Int32)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.GetCellValue``1(System.Int32,System.Int32)
    name: GetCellValue<T>
    nameWithType: ExcelRangeBase.GetCellValue<T>
    fullName: OfficeOpenXml.ExcelRangeBase.GetCellValue<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.GetCellValue``1(System.Int32,System.Int32)
    name: GetCellValue(Of T)
    nameWithType: ExcelRangeBase.GetCellValue(Of T)
    fullName: OfficeOpenXml.ExcelRangeBase.GetCellValue(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.SetCellValue(System.Int32,System.Int32,System.Object)
  commentId: M:OfficeOpenXml.ExcelRangeBase.SetCellValue(System.Int32,System.Int32,System.Object)
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: SetCellValue(Int32, Int32, Object)
  nameWithType: ExcelRangeBase.SetCellValue(Int32, Int32, Object)
  fullName: OfficeOpenXml.ExcelRangeBase.SetCellValue(System.Int32, System.Int32, System.Object)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.SetCellValue(System.Int32,System.Int32,System.Object)
    name: SetCellValue
    nameWithType: ExcelRangeBase.SetCellValue
    fullName: OfficeOpenXml.ExcelRangeBase.SetCellValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.SetCellValue(System.Int32,System.Int32,System.Object)
    name: SetCellValue
    nameWithType: ExcelRangeBase.SetCellValue
    fullName: OfficeOpenXml.ExcelRangeBase.SetCellValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.UseImplicitItersection
  commentId: P:OfficeOpenXml.ExcelRangeBase.UseImplicitItersection
  parent: OfficeOpenXml.ExcelRangeBase
  name: UseImplicitItersection
  nameWithType: ExcelRangeBase.UseImplicitItersection
  fullName: OfficeOpenXml.ExcelRangeBase.UseImplicitItersection
- uid: OfficeOpenXml.ExcelRangeBase.FillNumber
  commentId: M:OfficeOpenXml.ExcelRangeBase.FillNumber
  parent: OfficeOpenXml.ExcelRangeBase
  name: FillNumber()
  nameWithType: ExcelRangeBase.FillNumber()
  fullName: OfficeOpenXml.ExcelRangeBase.FillNumber()
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.FillNumber
    name: FillNumber
    nameWithType: ExcelRangeBase.FillNumber
    fullName: OfficeOpenXml.ExcelRangeBase.FillNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.FillNumber
    name: FillNumber
    nameWithType: ExcelRangeBase.FillNumber
    fullName: OfficeOpenXml.ExcelRangeBase.FillNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.FillNumber(System.Nullable{System.Double},System.Double)
  commentId: M:OfficeOpenXml.ExcelRangeBase.FillNumber(System.Nullable{System.Double},System.Double)
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: FillNumber(Nullable<Double>, Double)
  nameWithType: ExcelRangeBase.FillNumber(Nullable<Double>, Double)
  fullName: OfficeOpenXml.ExcelRangeBase.FillNumber(System.Nullable<System.Double>, System.Double)
  nameWithType.vb: ExcelRangeBase.FillNumber(Nullable(Of Double), Double)
  fullName.vb: OfficeOpenXml.ExcelRangeBase.FillNumber(System.Nullable(Of System.Double), System.Double)
  name.vb: FillNumber(Nullable(Of Double), Double)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.FillNumber(System.Nullable{System.Double},System.Double)
    name: FillNumber
    nameWithType: ExcelRangeBase.FillNumber
    fullName: OfficeOpenXml.ExcelRangeBase.FillNumber
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.FillNumber(System.Nullable{System.Double},System.Double)
    name: FillNumber
    nameWithType: ExcelRangeBase.FillNumber
    fullName: OfficeOpenXml.ExcelRangeBase.FillNumber
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.FillNumber(System.Action{OfficeOpenXml.Core.Worksheet.Fill.FillNumberParams})
  commentId: M:OfficeOpenXml.ExcelRangeBase.FillNumber(System.Action{OfficeOpenXml.Core.Worksheet.Fill.FillNumberParams})
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: FillNumber(Action<FillNumberParams>)
  nameWithType: ExcelRangeBase.FillNumber(Action<FillNumberParams>)
  fullName: OfficeOpenXml.ExcelRangeBase.FillNumber(System.Action<OfficeOpenXml.Core.Worksheet.Fill.FillNumberParams>)
  nameWithType.vb: ExcelRangeBase.FillNumber(Action(Of FillNumberParams))
  fullName.vb: OfficeOpenXml.ExcelRangeBase.FillNumber(System.Action(Of OfficeOpenXml.Core.Worksheet.Fill.FillNumberParams))
  name.vb: FillNumber(Action(Of FillNumberParams))
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.FillNumber(System.Action{OfficeOpenXml.Core.Worksheet.Fill.FillNumberParams})
    name: FillNumber
    nameWithType: ExcelRangeBase.FillNumber
    fullName: OfficeOpenXml.ExcelRangeBase.FillNumber
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.Core.Worksheet.Fill.FillNumberParams
    name: FillNumberParams
    nameWithType: FillNumberParams
    fullName: OfficeOpenXml.Core.Worksheet.Fill.FillNumberParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.FillNumber(System.Action{OfficeOpenXml.Core.Worksheet.Fill.FillNumberParams})
    name: FillNumber
    nameWithType: ExcelRangeBase.FillNumber
    fullName: OfficeOpenXml.ExcelRangeBase.FillNumber
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.Core.Worksheet.Fill.FillNumberParams
    name: FillNumberParams
    nameWithType: FillNumberParams
    fullName: OfficeOpenXml.Core.Worksheet.Fill.FillNumberParams
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.FillDateTime
  commentId: M:OfficeOpenXml.ExcelRangeBase.FillDateTime
  parent: OfficeOpenXml.ExcelRangeBase
  name: FillDateTime()
  nameWithType: ExcelRangeBase.FillDateTime()
  fullName: OfficeOpenXml.ExcelRangeBase.FillDateTime()
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.FillDateTime
    name: FillDateTime
    nameWithType: ExcelRangeBase.FillDateTime
    fullName: OfficeOpenXml.ExcelRangeBase.FillDateTime
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.FillDateTime
    name: FillDateTime
    nameWithType: ExcelRangeBase.FillDateTime
    fullName: OfficeOpenXml.ExcelRangeBase.FillDateTime
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.FillDateTime(System.Nullable{System.DateTime},OfficeOpenXml.eDateTimeUnit,System.Int32)
  commentId: M:OfficeOpenXml.ExcelRangeBase.FillDateTime(System.Nullable{System.DateTime},OfficeOpenXml.eDateTimeUnit,System.Int32)
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: FillDateTime(Nullable<DateTime>, eDateTimeUnit, Int32)
  nameWithType: ExcelRangeBase.FillDateTime(Nullable<DateTime>, eDateTimeUnit, Int32)
  fullName: OfficeOpenXml.ExcelRangeBase.FillDateTime(System.Nullable<System.DateTime>, OfficeOpenXml.eDateTimeUnit, System.Int32)
  nameWithType.vb: ExcelRangeBase.FillDateTime(Nullable(Of DateTime), eDateTimeUnit, Int32)
  fullName.vb: OfficeOpenXml.ExcelRangeBase.FillDateTime(System.Nullable(Of System.DateTime), OfficeOpenXml.eDateTimeUnit, System.Int32)
  name.vb: FillDateTime(Nullable(Of DateTime), eDateTimeUnit, Int32)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.FillDateTime(System.Nullable{System.DateTime},OfficeOpenXml.eDateTimeUnit,System.Int32)
    name: FillDateTime
    nameWithType: ExcelRangeBase.FillDateTime
    fullName: OfficeOpenXml.ExcelRangeBase.FillDateTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.eDateTimeUnit
    name: eDateTimeUnit
    nameWithType: eDateTimeUnit
    fullName: OfficeOpenXml.eDateTimeUnit
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.FillDateTime(System.Nullable{System.DateTime},OfficeOpenXml.eDateTimeUnit,System.Int32)
    name: FillDateTime
    nameWithType: ExcelRangeBase.FillDateTime
    fullName: OfficeOpenXml.ExcelRangeBase.FillDateTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.eDateTimeUnit
    name: eDateTimeUnit
    nameWithType: eDateTimeUnit
    fullName: OfficeOpenXml.eDateTimeUnit
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.FillDateTime(System.Action{OfficeOpenXml.Core.Worksheet.Fill.FillDateParams})
  commentId: M:OfficeOpenXml.ExcelRangeBase.FillDateTime(System.Action{OfficeOpenXml.Core.Worksheet.Fill.FillDateParams})
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: FillDateTime(Action<FillDateParams>)
  nameWithType: ExcelRangeBase.FillDateTime(Action<FillDateParams>)
  fullName: OfficeOpenXml.ExcelRangeBase.FillDateTime(System.Action<OfficeOpenXml.Core.Worksheet.Fill.FillDateParams>)
  nameWithType.vb: ExcelRangeBase.FillDateTime(Action(Of FillDateParams))
  fullName.vb: OfficeOpenXml.ExcelRangeBase.FillDateTime(System.Action(Of OfficeOpenXml.Core.Worksheet.Fill.FillDateParams))
  name.vb: FillDateTime(Action(Of FillDateParams))
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.FillDateTime(System.Action{OfficeOpenXml.Core.Worksheet.Fill.FillDateParams})
    name: FillDateTime
    nameWithType: ExcelRangeBase.FillDateTime
    fullName: OfficeOpenXml.ExcelRangeBase.FillDateTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.Core.Worksheet.Fill.FillDateParams
    name: FillDateParams
    nameWithType: FillDateParams
    fullName: OfficeOpenXml.Core.Worksheet.Fill.FillDateParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.FillDateTime(System.Action{OfficeOpenXml.Core.Worksheet.Fill.FillDateParams})
    name: FillDateTime
    nameWithType: ExcelRangeBase.FillDateTime
    fullName: OfficeOpenXml.ExcelRangeBase.FillDateTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.Core.Worksheet.Fill.FillDateParams
    name: FillDateParams
    nameWithType: FillDateParams
    fullName: OfficeOpenXml.Core.Worksheet.Fill.FillDateParams
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.FillList``1(System.Collections.Generic.IEnumerable{{T}})
  commentId: M:OfficeOpenXml.ExcelRangeBase.FillList``1(System.Collections.Generic.IEnumerable{``0})
  parent: OfficeOpenXml.ExcelRangeBase
  definition: OfficeOpenXml.ExcelRangeBase.FillList``1(System.Collections.Generic.IEnumerable{``0})
  name: FillList<T>(IEnumerable<T>)
  nameWithType: ExcelRangeBase.FillList<T>(IEnumerable<T>)
  fullName: OfficeOpenXml.ExcelRangeBase.FillList<T>(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: ExcelRangeBase.FillList(Of T)(IEnumerable(Of T))
  fullName.vb: OfficeOpenXml.ExcelRangeBase.FillList(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: FillList(Of T)(IEnumerable(Of T))
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.FillList``1(System.Collections.Generic.IEnumerable{``0})
    name: FillList<T>
    nameWithType: ExcelRangeBase.FillList<T>
    fullName: OfficeOpenXml.ExcelRangeBase.FillList<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.FillList``1(System.Collections.Generic.IEnumerable{``0})
    name: FillList(Of T)
    nameWithType: ExcelRangeBase.FillList(Of T)
    fullName: OfficeOpenXml.ExcelRangeBase.FillList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.FillList``1(System.Collections.Generic.IEnumerable{{T}},System.Action{OfficeOpenXml.Core.Worksheet.Fill.FillListParams})
  commentId: M:OfficeOpenXml.ExcelRangeBase.FillList``1(System.Collections.Generic.IEnumerable{``0},System.Action{OfficeOpenXml.Core.Worksheet.Fill.FillListParams})
  parent: OfficeOpenXml.ExcelRangeBase
  definition: OfficeOpenXml.ExcelRangeBase.FillList``1(System.Collections.Generic.IEnumerable{``0},System.Action{OfficeOpenXml.Core.Worksheet.Fill.FillListParams})
  name: FillList<T>(IEnumerable<T>, Action<FillListParams>)
  nameWithType: ExcelRangeBase.FillList<T>(IEnumerable<T>, Action<FillListParams>)
  fullName: OfficeOpenXml.ExcelRangeBase.FillList<T>(System.Collections.Generic.IEnumerable<T>, System.Action<OfficeOpenXml.Core.Worksheet.Fill.FillListParams>)
  nameWithType.vb: ExcelRangeBase.FillList(Of T)(IEnumerable(Of T), Action(Of FillListParams))
  fullName.vb: OfficeOpenXml.ExcelRangeBase.FillList(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Action(Of OfficeOpenXml.Core.Worksheet.Fill.FillListParams))
  name.vb: FillList(Of T)(IEnumerable(Of T), Action(Of FillListParams))
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.FillList``1(System.Collections.Generic.IEnumerable{``0},System.Action{OfficeOpenXml.Core.Worksheet.Fill.FillListParams})
    name: FillList<T>
    nameWithType: ExcelRangeBase.FillList<T>
    fullName: OfficeOpenXml.ExcelRangeBase.FillList<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.Core.Worksheet.Fill.FillListParams
    name: FillListParams
    nameWithType: FillListParams
    fullName: OfficeOpenXml.Core.Worksheet.Fill.FillListParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.FillList``1(System.Collections.Generic.IEnumerable{``0},System.Action{OfficeOpenXml.Core.Worksheet.Fill.FillListParams})
    name: FillList(Of T)
    nameWithType: ExcelRangeBase.FillList(Of T)
    fullName: OfficeOpenXml.ExcelRangeBase.FillList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.Core.Worksheet.Fill.FillListParams
    name: FillListParams
    nameWithType: FillListParams
    fullName: OfficeOpenXml.Core.Worksheet.Fill.FillListParams
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.LoadFromDataReader(System.Data.IDataReader,System.Boolean,System.String,OfficeOpenXml.Table.TableStyles)
  commentId: M:OfficeOpenXml.ExcelRangeBase.LoadFromDataReader(System.Data.IDataReader,System.Boolean,System.String,OfficeOpenXml.Table.TableStyles)
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: LoadFromDataReader(IDataReader, Boolean, String, TableStyles)
  nameWithType: ExcelRangeBase.LoadFromDataReader(IDataReader, Boolean, String, TableStyles)
  fullName: OfficeOpenXml.ExcelRangeBase.LoadFromDataReader(System.Data.IDataReader, System.Boolean, System.String, OfficeOpenXml.Table.TableStyles)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromDataReader(System.Data.IDataReader,System.Boolean,System.String,OfficeOpenXml.Table.TableStyles)
    name: LoadFromDataReader
    nameWithType: ExcelRangeBase.LoadFromDataReader
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromDataReader
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.Table.TableStyles
    name: TableStyles
    nameWithType: TableStyles
    fullName: OfficeOpenXml.Table.TableStyles
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromDataReader(System.Data.IDataReader,System.Boolean,System.String,OfficeOpenXml.Table.TableStyles)
    name: LoadFromDataReader
    nameWithType: ExcelRangeBase.LoadFromDataReader
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromDataReader
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.Table.TableStyles
    name: TableStyles
    nameWithType: TableStyles
    fullName: OfficeOpenXml.Table.TableStyles
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.LoadFromDataReader(System.Data.IDataReader,System.Boolean)
  commentId: M:OfficeOpenXml.ExcelRangeBase.LoadFromDataReader(System.Data.IDataReader,System.Boolean)
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: LoadFromDataReader(IDataReader, Boolean)
  nameWithType: ExcelRangeBase.LoadFromDataReader(IDataReader, Boolean)
  fullName: OfficeOpenXml.ExcelRangeBase.LoadFromDataReader(System.Data.IDataReader, System.Boolean)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromDataReader(System.Data.IDataReader,System.Boolean)
    name: LoadFromDataReader
    nameWithType: ExcelRangeBase.LoadFromDataReader
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromDataReader
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromDataReader(System.Data.IDataReader,System.Boolean)
    name: LoadFromDataReader
    nameWithType: ExcelRangeBase.LoadFromDataReader
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromDataReader
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.LoadFromDataReaderAsync(System.Data.Common.DbDataReader,System.Boolean,System.String,OfficeOpenXml.Table.TableStyles,System.Nullable{System.Threading.CancellationToken})
  commentId: M:OfficeOpenXml.ExcelRangeBase.LoadFromDataReaderAsync(System.Data.Common.DbDataReader,System.Boolean,System.String,OfficeOpenXml.Table.TableStyles,System.Nullable{System.Threading.CancellationToken})
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: LoadFromDataReaderAsync(DbDataReader, Boolean, String, TableStyles, Nullable<CancellationToken>)
  nameWithType: ExcelRangeBase.LoadFromDataReaderAsync(DbDataReader, Boolean, String, TableStyles, Nullable<CancellationToken>)
  fullName: OfficeOpenXml.ExcelRangeBase.LoadFromDataReaderAsync(System.Data.Common.DbDataReader, System.Boolean, System.String, OfficeOpenXml.Table.TableStyles, System.Nullable<System.Threading.CancellationToken>)
  nameWithType.vb: ExcelRangeBase.LoadFromDataReaderAsync(DbDataReader, Boolean, String, TableStyles, Nullable(Of CancellationToken))
  fullName.vb: OfficeOpenXml.ExcelRangeBase.LoadFromDataReaderAsync(System.Data.Common.DbDataReader, System.Boolean, System.String, OfficeOpenXml.Table.TableStyles, System.Nullable(Of System.Threading.CancellationToken))
  name.vb: LoadFromDataReaderAsync(DbDataReader, Boolean, String, TableStyles, Nullable(Of CancellationToken))
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromDataReaderAsync(System.Data.Common.DbDataReader,System.Boolean,System.String,OfficeOpenXml.Table.TableStyles,System.Nullable{System.Threading.CancellationToken})
    name: LoadFromDataReaderAsync
    nameWithType: ExcelRangeBase.LoadFromDataReaderAsync
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromDataReaderAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.Common.DbDataReader
    name: DbDataReader
    nameWithType: DbDataReader
    fullName: System.Data.Common.DbDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.Table.TableStyles
    name: TableStyles
    nameWithType: TableStyles
    fullName: OfficeOpenXml.Table.TableStyles
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromDataReaderAsync(System.Data.Common.DbDataReader,System.Boolean,System.String,OfficeOpenXml.Table.TableStyles,System.Nullable{System.Threading.CancellationToken})
    name: LoadFromDataReaderAsync
    nameWithType: ExcelRangeBase.LoadFromDataReaderAsync
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromDataReaderAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.Common.DbDataReader
    name: DbDataReader
    nameWithType: DbDataReader
    fullName: System.Data.Common.DbDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.Table.TableStyles
    name: TableStyles
    nameWithType: TableStyles
    fullName: OfficeOpenXml.Table.TableStyles
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.LoadFromDataReaderAsync(System.Data.Common.DbDataReader,System.Boolean)
  commentId: M:OfficeOpenXml.ExcelRangeBase.LoadFromDataReaderAsync(System.Data.Common.DbDataReader,System.Boolean)
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: LoadFromDataReaderAsync(DbDataReader, Boolean)
  nameWithType: ExcelRangeBase.LoadFromDataReaderAsync(DbDataReader, Boolean)
  fullName: OfficeOpenXml.ExcelRangeBase.LoadFromDataReaderAsync(System.Data.Common.DbDataReader, System.Boolean)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromDataReaderAsync(System.Data.Common.DbDataReader,System.Boolean)
    name: LoadFromDataReaderAsync
    nameWithType: ExcelRangeBase.LoadFromDataReaderAsync
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromDataReaderAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.Common.DbDataReader
    name: DbDataReader
    nameWithType: DbDataReader
    fullName: System.Data.Common.DbDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromDataReaderAsync(System.Data.Common.DbDataReader,System.Boolean)
    name: LoadFromDataReaderAsync
    nameWithType: ExcelRangeBase.LoadFromDataReaderAsync
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromDataReaderAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.Common.DbDataReader
    name: DbDataReader
    nameWithType: DbDataReader
    fullName: System.Data.Common.DbDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.LoadFromDataReaderAsync(System.Data.Common.DbDataReader,System.Boolean,System.Threading.CancellationToken)
  commentId: M:OfficeOpenXml.ExcelRangeBase.LoadFromDataReaderAsync(System.Data.Common.DbDataReader,System.Boolean,System.Threading.CancellationToken)
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: LoadFromDataReaderAsync(DbDataReader, Boolean, CancellationToken)
  nameWithType: ExcelRangeBase.LoadFromDataReaderAsync(DbDataReader, Boolean, CancellationToken)
  fullName: OfficeOpenXml.ExcelRangeBase.LoadFromDataReaderAsync(System.Data.Common.DbDataReader, System.Boolean, System.Threading.CancellationToken)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromDataReaderAsync(System.Data.Common.DbDataReader,System.Boolean,System.Threading.CancellationToken)
    name: LoadFromDataReaderAsync
    nameWithType: ExcelRangeBase.LoadFromDataReaderAsync
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromDataReaderAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.Common.DbDataReader
    name: DbDataReader
    nameWithType: DbDataReader
    fullName: System.Data.Common.DbDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromDataReaderAsync(System.Data.Common.DbDataReader,System.Boolean,System.Threading.CancellationToken)
    name: LoadFromDataReaderAsync
    nameWithType: ExcelRangeBase.LoadFromDataReaderAsync
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromDataReaderAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.Common.DbDataReader
    name: DbDataReader
    nameWithType: DbDataReader
    fullName: System.Data.Common.DbDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.LoadFromDataTable(System.Data.DataTable,System.Boolean,System.Nullable{OfficeOpenXml.Table.TableStyles})
  commentId: M:OfficeOpenXml.ExcelRangeBase.LoadFromDataTable(System.Data.DataTable,System.Boolean,System.Nullable{OfficeOpenXml.Table.TableStyles})
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: LoadFromDataTable(DataTable, Boolean, Nullable<TableStyles>)
  nameWithType: ExcelRangeBase.LoadFromDataTable(DataTable, Boolean, Nullable<TableStyles>)
  fullName: OfficeOpenXml.ExcelRangeBase.LoadFromDataTable(System.Data.DataTable, System.Boolean, System.Nullable<OfficeOpenXml.Table.TableStyles>)
  nameWithType.vb: ExcelRangeBase.LoadFromDataTable(DataTable, Boolean, Nullable(Of TableStyles))
  fullName.vb: OfficeOpenXml.ExcelRangeBase.LoadFromDataTable(System.Data.DataTable, System.Boolean, System.Nullable(Of OfficeOpenXml.Table.TableStyles))
  name.vb: LoadFromDataTable(DataTable, Boolean, Nullable(Of TableStyles))
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromDataTable(System.Data.DataTable,System.Boolean,System.Nullable{OfficeOpenXml.Table.TableStyles})
    name: LoadFromDataTable
    nameWithType: ExcelRangeBase.LoadFromDataTable
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromDataTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.DataTable
    name: DataTable
    nameWithType: DataTable
    fullName: System.Data.DataTable
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.Table.TableStyles
    name: TableStyles
    nameWithType: TableStyles
    fullName: OfficeOpenXml.Table.TableStyles
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromDataTable(System.Data.DataTable,System.Boolean,System.Nullable{OfficeOpenXml.Table.TableStyles})
    name: LoadFromDataTable
    nameWithType: ExcelRangeBase.LoadFromDataTable
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromDataTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.DataTable
    name: DataTable
    nameWithType: DataTable
    fullName: System.Data.DataTable
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.Table.TableStyles
    name: TableStyles
    nameWithType: TableStyles
    fullName: OfficeOpenXml.Table.TableStyles
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.LoadFromDataTable(System.Data.DataTable,System.Boolean)
  commentId: M:OfficeOpenXml.ExcelRangeBase.LoadFromDataTable(System.Data.DataTable,System.Boolean)
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: LoadFromDataTable(DataTable, Boolean)
  nameWithType: ExcelRangeBase.LoadFromDataTable(DataTable, Boolean)
  fullName: OfficeOpenXml.ExcelRangeBase.LoadFromDataTable(System.Data.DataTable, System.Boolean)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromDataTable(System.Data.DataTable,System.Boolean)
    name: LoadFromDataTable
    nameWithType: ExcelRangeBase.LoadFromDataTable
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromDataTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.DataTable
    name: DataTable
    nameWithType: DataTable
    fullName: System.Data.DataTable
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromDataTable(System.Data.DataTable,System.Boolean)
    name: LoadFromDataTable
    nameWithType: ExcelRangeBase.LoadFromDataTable
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromDataTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.DataTable
    name: DataTable
    nameWithType: DataTable
    fullName: System.Data.DataTable
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.LoadFromDataTable(System.Data.DataTable)
  commentId: M:OfficeOpenXml.ExcelRangeBase.LoadFromDataTable(System.Data.DataTable)
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: LoadFromDataTable(DataTable)
  nameWithType: ExcelRangeBase.LoadFromDataTable(DataTable)
  fullName: OfficeOpenXml.ExcelRangeBase.LoadFromDataTable(System.Data.DataTable)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromDataTable(System.Data.DataTable)
    name: LoadFromDataTable
    nameWithType: ExcelRangeBase.LoadFromDataTable
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromDataTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.DataTable
    name: DataTable
    nameWithType: DataTable
    fullName: System.Data.DataTable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromDataTable(System.Data.DataTable)
    name: LoadFromDataTable
    nameWithType: ExcelRangeBase.LoadFromDataTable
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromDataTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.DataTable
    name: DataTable
    nameWithType: DataTable
    fullName: System.Data.DataTable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.LoadFromDataTable(System.Data.DataTable,System.Action{OfficeOpenXml.LoadFunctions.Params.LoadFromDataTableParams})
  commentId: M:OfficeOpenXml.ExcelRangeBase.LoadFromDataTable(System.Data.DataTable,System.Action{OfficeOpenXml.LoadFunctions.Params.LoadFromDataTableParams})
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: LoadFromDataTable(DataTable, Action<LoadFromDataTableParams>)
  nameWithType: ExcelRangeBase.LoadFromDataTable(DataTable, Action<LoadFromDataTableParams>)
  fullName: OfficeOpenXml.ExcelRangeBase.LoadFromDataTable(System.Data.DataTable, System.Action<OfficeOpenXml.LoadFunctions.Params.LoadFromDataTableParams>)
  nameWithType.vb: ExcelRangeBase.LoadFromDataTable(DataTable, Action(Of LoadFromDataTableParams))
  fullName.vb: OfficeOpenXml.ExcelRangeBase.LoadFromDataTable(System.Data.DataTable, System.Action(Of OfficeOpenXml.LoadFunctions.Params.LoadFromDataTableParams))
  name.vb: LoadFromDataTable(DataTable, Action(Of LoadFromDataTableParams))
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromDataTable(System.Data.DataTable,System.Action{OfficeOpenXml.LoadFunctions.Params.LoadFromDataTableParams})
    name: LoadFromDataTable
    nameWithType: ExcelRangeBase.LoadFromDataTable
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromDataTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.DataTable
    name: DataTable
    nameWithType: DataTable
    fullName: System.Data.DataTable
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.LoadFunctions.Params.LoadFromDataTableParams
    name: LoadFromDataTableParams
    nameWithType: LoadFromDataTableParams
    fullName: OfficeOpenXml.LoadFunctions.Params.LoadFromDataTableParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromDataTable(System.Data.DataTable,System.Action{OfficeOpenXml.LoadFunctions.Params.LoadFromDataTableParams})
    name: LoadFromDataTable
    nameWithType: ExcelRangeBase.LoadFromDataTable
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromDataTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.DataTable
    name: DataTable
    nameWithType: DataTable
    fullName: System.Data.DataTable
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.LoadFunctions.Params.LoadFromDataTableParams
    name: LoadFromDataTableParams
    nameWithType: LoadFromDataTableParams
    fullName: OfficeOpenXml.LoadFunctions.Params.LoadFromDataTableParams
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.LoadFromArrays(System.Collections.Generic.IEnumerable{System.Object[]})
  commentId: M:OfficeOpenXml.ExcelRangeBase.LoadFromArrays(System.Collections.Generic.IEnumerable{System.Object[]})
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: LoadFromArrays(IEnumerable<Object[]>)
  nameWithType: ExcelRangeBase.LoadFromArrays(IEnumerable<Object[]>)
  fullName: OfficeOpenXml.ExcelRangeBase.LoadFromArrays(System.Collections.Generic.IEnumerable<System.Object[]>)
  nameWithType.vb: ExcelRangeBase.LoadFromArrays(IEnumerable(Of Object()))
  fullName.vb: OfficeOpenXml.ExcelRangeBase.LoadFromArrays(System.Collections.Generic.IEnumerable(Of System.Object()))
  name.vb: LoadFromArrays(IEnumerable(Of Object()))
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromArrays(System.Collections.Generic.IEnumerable{System.Object[]})
    name: LoadFromArrays
    nameWithType: ExcelRangeBase.LoadFromArrays
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromArrays
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromArrays(System.Collections.Generic.IEnumerable{System.Object[]})
    name: LoadFromArrays
    nameWithType: ExcelRangeBase.LoadFromArrays
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromArrays
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.LoadFromCollection``1(System.Collections.Generic.IEnumerable{{T}})
  commentId: M:OfficeOpenXml.ExcelRangeBase.LoadFromCollection``1(System.Collections.Generic.IEnumerable{``0})
  parent: OfficeOpenXml.ExcelRangeBase
  definition: OfficeOpenXml.ExcelRangeBase.LoadFromCollection``1(System.Collections.Generic.IEnumerable{``0})
  name: LoadFromCollection<T>(IEnumerable<T>)
  nameWithType: ExcelRangeBase.LoadFromCollection<T>(IEnumerable<T>)
  fullName: OfficeOpenXml.ExcelRangeBase.LoadFromCollection<T>(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: ExcelRangeBase.LoadFromCollection(Of T)(IEnumerable(Of T))
  fullName.vb: OfficeOpenXml.ExcelRangeBase.LoadFromCollection(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: LoadFromCollection(Of T)(IEnumerable(Of T))
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromCollection``1(System.Collections.Generic.IEnumerable{``0})
    name: LoadFromCollection<T>
    nameWithType: ExcelRangeBase.LoadFromCollection<T>
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromCollection<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromCollection``1(System.Collections.Generic.IEnumerable{``0})
    name: LoadFromCollection(Of T)
    nameWithType: ExcelRangeBase.LoadFromCollection(Of T)
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromCollection(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.LoadFromCollection``1(System.Collections.Generic.IEnumerable{{T}},System.Boolean)
  commentId: M:OfficeOpenXml.ExcelRangeBase.LoadFromCollection``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)
  parent: OfficeOpenXml.ExcelRangeBase
  definition: OfficeOpenXml.ExcelRangeBase.LoadFromCollection``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)
  name: LoadFromCollection<T>(IEnumerable<T>, Boolean)
  nameWithType: ExcelRangeBase.LoadFromCollection<T>(IEnumerable<T>, Boolean)
  fullName: OfficeOpenXml.ExcelRangeBase.LoadFromCollection<T>(System.Collections.Generic.IEnumerable<T>, System.Boolean)
  nameWithType.vb: ExcelRangeBase.LoadFromCollection(Of T)(IEnumerable(Of T), Boolean)
  fullName.vb: OfficeOpenXml.ExcelRangeBase.LoadFromCollection(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Boolean)
  name.vb: LoadFromCollection(Of T)(IEnumerable(Of T), Boolean)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromCollection``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)
    name: LoadFromCollection<T>
    nameWithType: ExcelRangeBase.LoadFromCollection<T>
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromCollection<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromCollection``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)
    name: LoadFromCollection(Of T)
    nameWithType: ExcelRangeBase.LoadFromCollection(Of T)
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromCollection(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.LoadFromCollection``1(System.Collections.Generic.IEnumerable{{T}},System.Boolean,System.Nullable{OfficeOpenXml.Table.TableStyles})
  commentId: M:OfficeOpenXml.ExcelRangeBase.LoadFromCollection``1(System.Collections.Generic.IEnumerable{``0},System.Boolean,System.Nullable{OfficeOpenXml.Table.TableStyles})
  parent: OfficeOpenXml.ExcelRangeBase
  definition: OfficeOpenXml.ExcelRangeBase.LoadFromCollection``1(System.Collections.Generic.IEnumerable{``0},System.Boolean,System.Nullable{OfficeOpenXml.Table.TableStyles})
  name: LoadFromCollection<T>(IEnumerable<T>, Boolean, Nullable<TableStyles>)
  nameWithType: ExcelRangeBase.LoadFromCollection<T>(IEnumerable<T>, Boolean, Nullable<TableStyles>)
  fullName: OfficeOpenXml.ExcelRangeBase.LoadFromCollection<T>(System.Collections.Generic.IEnumerable<T>, System.Boolean, System.Nullable<OfficeOpenXml.Table.TableStyles>)
  nameWithType.vb: ExcelRangeBase.LoadFromCollection(Of T)(IEnumerable(Of T), Boolean, Nullable(Of TableStyles))
  fullName.vb: OfficeOpenXml.ExcelRangeBase.LoadFromCollection(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Boolean, System.Nullable(Of OfficeOpenXml.Table.TableStyles))
  name.vb: LoadFromCollection(Of T)(IEnumerable(Of T), Boolean, Nullable(Of TableStyles))
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromCollection``1(System.Collections.Generic.IEnumerable{``0},System.Boolean,System.Nullable{OfficeOpenXml.Table.TableStyles})
    name: LoadFromCollection<T>
    nameWithType: ExcelRangeBase.LoadFromCollection<T>
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromCollection<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.Table.TableStyles
    name: TableStyles
    nameWithType: TableStyles
    fullName: OfficeOpenXml.Table.TableStyles
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromCollection``1(System.Collections.Generic.IEnumerable{``0},System.Boolean,System.Nullable{OfficeOpenXml.Table.TableStyles})
    name: LoadFromCollection(Of T)
    nameWithType: ExcelRangeBase.LoadFromCollection(Of T)
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromCollection(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.Table.TableStyles
    name: TableStyles
    nameWithType: TableStyles
    fullName: OfficeOpenXml.Table.TableStyles
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.LoadFromCollection``1(System.Collections.Generic.IEnumerable{{T}},System.Boolean,System.Nullable{OfficeOpenXml.Table.TableStyles},System.Reflection.BindingFlags,System.Reflection.MemberInfo[])
  commentId: M:OfficeOpenXml.ExcelRangeBase.LoadFromCollection``1(System.Collections.Generic.IEnumerable{``0},System.Boolean,System.Nullable{OfficeOpenXml.Table.TableStyles},System.Reflection.BindingFlags,System.Reflection.MemberInfo[])
  parent: OfficeOpenXml.ExcelRangeBase
  definition: OfficeOpenXml.ExcelRangeBase.LoadFromCollection``1(System.Collections.Generic.IEnumerable{``0},System.Boolean,System.Nullable{OfficeOpenXml.Table.TableStyles},System.Reflection.BindingFlags,System.Reflection.MemberInfo[])
  name: LoadFromCollection<T>(IEnumerable<T>, Boolean, Nullable<TableStyles>, BindingFlags, MemberInfo[])
  nameWithType: ExcelRangeBase.LoadFromCollection<T>(IEnumerable<T>, Boolean, Nullable<TableStyles>, BindingFlags, MemberInfo[])
  fullName: OfficeOpenXml.ExcelRangeBase.LoadFromCollection<T>(System.Collections.Generic.IEnumerable<T>, System.Boolean, System.Nullable<OfficeOpenXml.Table.TableStyles>, System.Reflection.BindingFlags, System.Reflection.MemberInfo[])
  nameWithType.vb: ExcelRangeBase.LoadFromCollection(Of T)(IEnumerable(Of T), Boolean, Nullable(Of TableStyles), BindingFlags, MemberInfo())
  fullName.vb: OfficeOpenXml.ExcelRangeBase.LoadFromCollection(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Boolean, System.Nullable(Of OfficeOpenXml.Table.TableStyles), System.Reflection.BindingFlags, System.Reflection.MemberInfo())
  name.vb: LoadFromCollection(Of T)(IEnumerable(Of T), Boolean, Nullable(Of TableStyles), BindingFlags, MemberInfo())
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromCollection``1(System.Collections.Generic.IEnumerable{``0},System.Boolean,System.Nullable{OfficeOpenXml.Table.TableStyles},System.Reflection.BindingFlags,System.Reflection.MemberInfo[])
    name: LoadFromCollection<T>
    nameWithType: ExcelRangeBase.LoadFromCollection<T>
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromCollection<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.Table.TableStyles
    name: TableStyles
    nameWithType: TableStyles
    fullName: OfficeOpenXml.Table.TableStyles
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    nameWithType: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    nameWithType: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromCollection``1(System.Collections.Generic.IEnumerable{``0},System.Boolean,System.Nullable{OfficeOpenXml.Table.TableStyles},System.Reflection.BindingFlags,System.Reflection.MemberInfo[])
    name: LoadFromCollection(Of T)
    nameWithType: ExcelRangeBase.LoadFromCollection(Of T)
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromCollection(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.Table.TableStyles
    name: TableStyles
    nameWithType: TableStyles
    fullName: OfficeOpenXml.Table.TableStyles
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    nameWithType: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    nameWithType: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.LoadFromCollection``1(System.Collections.Generic.IEnumerable{{T}},System.Action{OfficeOpenXml.LoadFunctions.Params.LoadFromCollectionParams})
  commentId: M:OfficeOpenXml.ExcelRangeBase.LoadFromCollection``1(System.Collections.Generic.IEnumerable{``0},System.Action{OfficeOpenXml.LoadFunctions.Params.LoadFromCollectionParams})
  parent: OfficeOpenXml.ExcelRangeBase
  definition: OfficeOpenXml.ExcelRangeBase.LoadFromCollection``1(System.Collections.Generic.IEnumerable{``0},System.Action{OfficeOpenXml.LoadFunctions.Params.LoadFromCollectionParams})
  name: LoadFromCollection<T>(IEnumerable<T>, Action<LoadFromCollectionParams>)
  nameWithType: ExcelRangeBase.LoadFromCollection<T>(IEnumerable<T>, Action<LoadFromCollectionParams>)
  fullName: OfficeOpenXml.ExcelRangeBase.LoadFromCollection<T>(System.Collections.Generic.IEnumerable<T>, System.Action<OfficeOpenXml.LoadFunctions.Params.LoadFromCollectionParams>)
  nameWithType.vb: ExcelRangeBase.LoadFromCollection(Of T)(IEnumerable(Of T), Action(Of LoadFromCollectionParams))
  fullName.vb: OfficeOpenXml.ExcelRangeBase.LoadFromCollection(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Action(Of OfficeOpenXml.LoadFunctions.Params.LoadFromCollectionParams))
  name.vb: LoadFromCollection(Of T)(IEnumerable(Of T), Action(Of LoadFromCollectionParams))
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromCollection``1(System.Collections.Generic.IEnumerable{``0},System.Action{OfficeOpenXml.LoadFunctions.Params.LoadFromCollectionParams})
    name: LoadFromCollection<T>
    nameWithType: ExcelRangeBase.LoadFromCollection<T>
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromCollection<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.LoadFunctions.Params.LoadFromCollectionParams
    name: LoadFromCollectionParams
    nameWithType: LoadFromCollectionParams
    fullName: OfficeOpenXml.LoadFunctions.Params.LoadFromCollectionParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromCollection``1(System.Collections.Generic.IEnumerable{``0},System.Action{OfficeOpenXml.LoadFunctions.Params.LoadFromCollectionParams})
    name: LoadFromCollection(Of T)
    nameWithType: ExcelRangeBase.LoadFromCollection(Of T)
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromCollection(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.LoadFunctions.Params.LoadFromCollectionParams
    name: LoadFromCollectionParams
    nameWithType: LoadFromCollectionParams
    fullName: OfficeOpenXml.LoadFunctions.Params.LoadFromCollectionParams
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.LoadFromText(System.String)
  commentId: M:OfficeOpenXml.ExcelRangeBase.LoadFromText(System.String)
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: LoadFromText(String)
  nameWithType: ExcelRangeBase.LoadFromText(String)
  fullName: OfficeOpenXml.ExcelRangeBase.LoadFromText(System.String)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromText(System.String)
    name: LoadFromText
    nameWithType: ExcelRangeBase.LoadFromText
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromText(System.String)
    name: LoadFromText
    nameWithType: ExcelRangeBase.LoadFromText
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.LoadFromText(System.String,OfficeOpenXml.ExcelTextFormat)
  commentId: M:OfficeOpenXml.ExcelRangeBase.LoadFromText(System.String,OfficeOpenXml.ExcelTextFormat)
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: LoadFromText(String, ExcelTextFormat)
  nameWithType: ExcelRangeBase.LoadFromText(String, ExcelTextFormat)
  fullName: OfficeOpenXml.ExcelRangeBase.LoadFromText(System.String, OfficeOpenXml.ExcelTextFormat)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromText(System.String,OfficeOpenXml.ExcelTextFormat)
    name: LoadFromText
    nameWithType: ExcelRangeBase.LoadFromText
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ExcelTextFormat
    name: ExcelTextFormat
    nameWithType: ExcelTextFormat
    fullName: OfficeOpenXml.ExcelTextFormat
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromText(System.String,OfficeOpenXml.ExcelTextFormat)
    name: LoadFromText
    nameWithType: ExcelRangeBase.LoadFromText
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ExcelTextFormat
    name: ExcelTextFormat
    nameWithType: ExcelTextFormat
    fullName: OfficeOpenXml.ExcelTextFormat
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.LoadFromText(System.String,OfficeOpenXml.ExcelTextFormat,System.Nullable{OfficeOpenXml.Table.TableStyles},System.Boolean)
  commentId: M:OfficeOpenXml.ExcelRangeBase.LoadFromText(System.String,OfficeOpenXml.ExcelTextFormat,System.Nullable{OfficeOpenXml.Table.TableStyles},System.Boolean)
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: LoadFromText(String, ExcelTextFormat, Nullable<TableStyles>, Boolean)
  nameWithType: ExcelRangeBase.LoadFromText(String, ExcelTextFormat, Nullable<TableStyles>, Boolean)
  fullName: OfficeOpenXml.ExcelRangeBase.LoadFromText(System.String, OfficeOpenXml.ExcelTextFormat, System.Nullable<OfficeOpenXml.Table.TableStyles>, System.Boolean)
  nameWithType.vb: ExcelRangeBase.LoadFromText(String, ExcelTextFormat, Nullable(Of TableStyles), Boolean)
  fullName.vb: OfficeOpenXml.ExcelRangeBase.LoadFromText(System.String, OfficeOpenXml.ExcelTextFormat, System.Nullable(Of OfficeOpenXml.Table.TableStyles), System.Boolean)
  name.vb: LoadFromText(String, ExcelTextFormat, Nullable(Of TableStyles), Boolean)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromText(System.String,OfficeOpenXml.ExcelTextFormat,System.Nullable{OfficeOpenXml.Table.TableStyles},System.Boolean)
    name: LoadFromText
    nameWithType: ExcelRangeBase.LoadFromText
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ExcelTextFormat
    name: ExcelTextFormat
    nameWithType: ExcelTextFormat
    fullName: OfficeOpenXml.ExcelTextFormat
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.Table.TableStyles
    name: TableStyles
    nameWithType: TableStyles
    fullName: OfficeOpenXml.Table.TableStyles
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromText(System.String,OfficeOpenXml.ExcelTextFormat,System.Nullable{OfficeOpenXml.Table.TableStyles},System.Boolean)
    name: LoadFromText
    nameWithType: ExcelRangeBase.LoadFromText
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ExcelTextFormat
    name: ExcelTextFormat
    nameWithType: ExcelTextFormat
    fullName: OfficeOpenXml.ExcelTextFormat
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.Table.TableStyles
    name: TableStyles
    nameWithType: TableStyles
    fullName: OfficeOpenXml.Table.TableStyles
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.LoadFromText(System.IO.FileInfo)
  commentId: M:OfficeOpenXml.ExcelRangeBase.LoadFromText(System.IO.FileInfo)
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: LoadFromText(FileInfo)
  nameWithType: ExcelRangeBase.LoadFromText(FileInfo)
  fullName: OfficeOpenXml.ExcelRangeBase.LoadFromText(System.IO.FileInfo)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromText(System.IO.FileInfo)
    name: LoadFromText
    nameWithType: ExcelRangeBase.LoadFromText
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.FileInfo
    name: FileInfo
    nameWithType: FileInfo
    fullName: System.IO.FileInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromText(System.IO.FileInfo)
    name: LoadFromText
    nameWithType: ExcelRangeBase.LoadFromText
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.FileInfo
    name: FileInfo
    nameWithType: FileInfo
    fullName: System.IO.FileInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.LoadFromText(System.IO.FileInfo,OfficeOpenXml.ExcelTextFormat)
  commentId: M:OfficeOpenXml.ExcelRangeBase.LoadFromText(System.IO.FileInfo,OfficeOpenXml.ExcelTextFormat)
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: LoadFromText(FileInfo, ExcelTextFormat)
  nameWithType: ExcelRangeBase.LoadFromText(FileInfo, ExcelTextFormat)
  fullName: OfficeOpenXml.ExcelRangeBase.LoadFromText(System.IO.FileInfo, OfficeOpenXml.ExcelTextFormat)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromText(System.IO.FileInfo,OfficeOpenXml.ExcelTextFormat)
    name: LoadFromText
    nameWithType: ExcelRangeBase.LoadFromText
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.FileInfo
    name: FileInfo
    nameWithType: FileInfo
    fullName: System.IO.FileInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ExcelTextFormat
    name: ExcelTextFormat
    nameWithType: ExcelTextFormat
    fullName: OfficeOpenXml.ExcelTextFormat
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromText(System.IO.FileInfo,OfficeOpenXml.ExcelTextFormat)
    name: LoadFromText
    nameWithType: ExcelRangeBase.LoadFromText
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.FileInfo
    name: FileInfo
    nameWithType: FileInfo
    fullName: System.IO.FileInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ExcelTextFormat
    name: ExcelTextFormat
    nameWithType: ExcelTextFormat
    fullName: OfficeOpenXml.ExcelTextFormat
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.LoadFromText(System.IO.FileInfo,OfficeOpenXml.ExcelTextFormat,System.Nullable{OfficeOpenXml.Table.TableStyles},System.Boolean)
  commentId: M:OfficeOpenXml.ExcelRangeBase.LoadFromText(System.IO.FileInfo,OfficeOpenXml.ExcelTextFormat,System.Nullable{OfficeOpenXml.Table.TableStyles},System.Boolean)
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: LoadFromText(FileInfo, ExcelTextFormat, Nullable<TableStyles>, Boolean)
  nameWithType: ExcelRangeBase.LoadFromText(FileInfo, ExcelTextFormat, Nullable<TableStyles>, Boolean)
  fullName: OfficeOpenXml.ExcelRangeBase.LoadFromText(System.IO.FileInfo, OfficeOpenXml.ExcelTextFormat, System.Nullable<OfficeOpenXml.Table.TableStyles>, System.Boolean)
  nameWithType.vb: ExcelRangeBase.LoadFromText(FileInfo, ExcelTextFormat, Nullable(Of TableStyles), Boolean)
  fullName.vb: OfficeOpenXml.ExcelRangeBase.LoadFromText(System.IO.FileInfo, OfficeOpenXml.ExcelTextFormat, System.Nullable(Of OfficeOpenXml.Table.TableStyles), System.Boolean)
  name.vb: LoadFromText(FileInfo, ExcelTextFormat, Nullable(Of TableStyles), Boolean)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromText(System.IO.FileInfo,OfficeOpenXml.ExcelTextFormat,System.Nullable{OfficeOpenXml.Table.TableStyles},System.Boolean)
    name: LoadFromText
    nameWithType: ExcelRangeBase.LoadFromText
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.FileInfo
    name: FileInfo
    nameWithType: FileInfo
    fullName: System.IO.FileInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ExcelTextFormat
    name: ExcelTextFormat
    nameWithType: ExcelTextFormat
    fullName: OfficeOpenXml.ExcelTextFormat
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.Table.TableStyles
    name: TableStyles
    nameWithType: TableStyles
    fullName: OfficeOpenXml.Table.TableStyles
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromText(System.IO.FileInfo,OfficeOpenXml.ExcelTextFormat,System.Nullable{OfficeOpenXml.Table.TableStyles},System.Boolean)
    name: LoadFromText
    nameWithType: ExcelRangeBase.LoadFromText
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.FileInfo
    name: FileInfo
    nameWithType: FileInfo
    fullName: System.IO.FileInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ExcelTextFormat
    name: ExcelTextFormat
    nameWithType: ExcelTextFormat
    fullName: OfficeOpenXml.ExcelTextFormat
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.Table.TableStyles
    name: TableStyles
    nameWithType: TableStyles
    fullName: OfficeOpenXml.Table.TableStyles
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.LoadFromTextAsync(System.IO.FileInfo)
  commentId: M:OfficeOpenXml.ExcelRangeBase.LoadFromTextAsync(System.IO.FileInfo)
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: LoadFromTextAsync(FileInfo)
  nameWithType: ExcelRangeBase.LoadFromTextAsync(FileInfo)
  fullName: OfficeOpenXml.ExcelRangeBase.LoadFromTextAsync(System.IO.FileInfo)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromTextAsync(System.IO.FileInfo)
    name: LoadFromTextAsync
    nameWithType: ExcelRangeBase.LoadFromTextAsync
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromTextAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.FileInfo
    name: FileInfo
    nameWithType: FileInfo
    fullName: System.IO.FileInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromTextAsync(System.IO.FileInfo)
    name: LoadFromTextAsync
    nameWithType: ExcelRangeBase.LoadFromTextAsync
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromTextAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.FileInfo
    name: FileInfo
    nameWithType: FileInfo
    fullName: System.IO.FileInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.LoadFromTextAsync(System.IO.FileInfo,OfficeOpenXml.ExcelTextFormat)
  commentId: M:OfficeOpenXml.ExcelRangeBase.LoadFromTextAsync(System.IO.FileInfo,OfficeOpenXml.ExcelTextFormat)
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: LoadFromTextAsync(FileInfo, ExcelTextFormat)
  nameWithType: ExcelRangeBase.LoadFromTextAsync(FileInfo, ExcelTextFormat)
  fullName: OfficeOpenXml.ExcelRangeBase.LoadFromTextAsync(System.IO.FileInfo, OfficeOpenXml.ExcelTextFormat)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromTextAsync(System.IO.FileInfo,OfficeOpenXml.ExcelTextFormat)
    name: LoadFromTextAsync
    nameWithType: ExcelRangeBase.LoadFromTextAsync
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromTextAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.FileInfo
    name: FileInfo
    nameWithType: FileInfo
    fullName: System.IO.FileInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ExcelTextFormat
    name: ExcelTextFormat
    nameWithType: ExcelTextFormat
    fullName: OfficeOpenXml.ExcelTextFormat
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromTextAsync(System.IO.FileInfo,OfficeOpenXml.ExcelTextFormat)
    name: LoadFromTextAsync
    nameWithType: ExcelRangeBase.LoadFromTextAsync
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromTextAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.FileInfo
    name: FileInfo
    nameWithType: FileInfo
    fullName: System.IO.FileInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ExcelTextFormat
    name: ExcelTextFormat
    nameWithType: ExcelTextFormat
    fullName: OfficeOpenXml.ExcelTextFormat
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.LoadFromTextAsync(System.IO.FileInfo,OfficeOpenXml.ExcelTextFormat,OfficeOpenXml.Table.TableStyles,System.Boolean)
  commentId: M:OfficeOpenXml.ExcelRangeBase.LoadFromTextAsync(System.IO.FileInfo,OfficeOpenXml.ExcelTextFormat,OfficeOpenXml.Table.TableStyles,System.Boolean)
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: LoadFromTextAsync(FileInfo, ExcelTextFormat, TableStyles, Boolean)
  nameWithType: ExcelRangeBase.LoadFromTextAsync(FileInfo, ExcelTextFormat, TableStyles, Boolean)
  fullName: OfficeOpenXml.ExcelRangeBase.LoadFromTextAsync(System.IO.FileInfo, OfficeOpenXml.ExcelTextFormat, OfficeOpenXml.Table.TableStyles, System.Boolean)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromTextAsync(System.IO.FileInfo,OfficeOpenXml.ExcelTextFormat,OfficeOpenXml.Table.TableStyles,System.Boolean)
    name: LoadFromTextAsync
    nameWithType: ExcelRangeBase.LoadFromTextAsync
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromTextAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.FileInfo
    name: FileInfo
    nameWithType: FileInfo
    fullName: System.IO.FileInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ExcelTextFormat
    name: ExcelTextFormat
    nameWithType: ExcelTextFormat
    fullName: OfficeOpenXml.ExcelTextFormat
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.Table.TableStyles
    name: TableStyles
    nameWithType: TableStyles
    fullName: OfficeOpenXml.Table.TableStyles
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromTextAsync(System.IO.FileInfo,OfficeOpenXml.ExcelTextFormat,OfficeOpenXml.Table.TableStyles,System.Boolean)
    name: LoadFromTextAsync
    nameWithType: ExcelRangeBase.LoadFromTextAsync
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromTextAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.FileInfo
    name: FileInfo
    nameWithType: FileInfo
    fullName: System.IO.FileInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ExcelTextFormat
    name: ExcelTextFormat
    nameWithType: ExcelTextFormat
    fullName: OfficeOpenXml.ExcelTextFormat
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.Table.TableStyles
    name: TableStyles
    nameWithType: TableStyles
    fullName: OfficeOpenXml.Table.TableStyles
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries(System.Collections.Generic.IEnumerable{System.Collections.Generic.IDictionary{System.String,System.Object}})
  commentId: M:OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries(System.Collections.Generic.IEnumerable{System.Collections.Generic.IDictionary{System.String,System.Object}})
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: LoadFromDictionaries(IEnumerable<IDictionary<String, Object>>)
  nameWithType: ExcelRangeBase.LoadFromDictionaries(IEnumerable<IDictionary<String, Object>>)
  fullName: OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries(System.Collections.Generic.IEnumerable<System.Collections.Generic.IDictionary<System.String, System.Object>>)
  nameWithType.vb: ExcelRangeBase.LoadFromDictionaries(IEnumerable(Of IDictionary(Of String, Object)))
  fullName.vb: OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.IDictionary(Of System.String, System.Object)))
  name.vb: LoadFromDictionaries(IEnumerable(Of IDictionary(Of String, Object)))
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries(System.Collections.Generic.IEnumerable{System.Collections.Generic.IDictionary{System.String,System.Object}})
    name: LoadFromDictionaries
    nameWithType: ExcelRangeBase.LoadFromDictionaries
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries(System.Collections.Generic.IEnumerable{System.Collections.Generic.IDictionary{System.String,System.Object}})
    name: LoadFromDictionaries
    nameWithType: ExcelRangeBase.LoadFromDictionaries
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries(System.Collections.Generic.IEnumerable{System.Collections.Generic.IDictionary{System.String,System.Object}},System.Boolean)
  commentId: M:OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries(System.Collections.Generic.IEnumerable{System.Collections.Generic.IDictionary{System.String,System.Object}},System.Boolean)
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: LoadFromDictionaries(IEnumerable<IDictionary<String, Object>>, Boolean)
  nameWithType: ExcelRangeBase.LoadFromDictionaries(IEnumerable<IDictionary<String, Object>>, Boolean)
  fullName: OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries(System.Collections.Generic.IEnumerable<System.Collections.Generic.IDictionary<System.String, System.Object>>, System.Boolean)
  nameWithType.vb: ExcelRangeBase.LoadFromDictionaries(IEnumerable(Of IDictionary(Of String, Object)), Boolean)
  fullName.vb: OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.IDictionary(Of System.String, System.Object)), System.Boolean)
  name.vb: LoadFromDictionaries(IEnumerable(Of IDictionary(Of String, Object)), Boolean)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries(System.Collections.Generic.IEnumerable{System.Collections.Generic.IDictionary{System.String,System.Object}},System.Boolean)
    name: LoadFromDictionaries
    nameWithType: ExcelRangeBase.LoadFromDictionaries
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries(System.Collections.Generic.IEnumerable{System.Collections.Generic.IDictionary{System.String,System.Object}},System.Boolean)
    name: LoadFromDictionaries
    nameWithType: ExcelRangeBase.LoadFromDictionaries
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries(System.Collections.Generic.IEnumerable{System.Collections.Generic.IDictionary{System.String,System.Object}},System.Boolean,System.Nullable{OfficeOpenXml.Table.TableStyles})
  commentId: M:OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries(System.Collections.Generic.IEnumerable{System.Collections.Generic.IDictionary{System.String,System.Object}},System.Boolean,System.Nullable{OfficeOpenXml.Table.TableStyles})
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: LoadFromDictionaries(IEnumerable<IDictionary<String, Object>>, Boolean, Nullable<TableStyles>)
  nameWithType: ExcelRangeBase.LoadFromDictionaries(IEnumerable<IDictionary<String, Object>>, Boolean, Nullable<TableStyles>)
  fullName: OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries(System.Collections.Generic.IEnumerable<System.Collections.Generic.IDictionary<System.String, System.Object>>, System.Boolean, System.Nullable<OfficeOpenXml.Table.TableStyles>)
  nameWithType.vb: ExcelRangeBase.LoadFromDictionaries(IEnumerable(Of IDictionary(Of String, Object)), Boolean, Nullable(Of TableStyles))
  fullName.vb: OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.IDictionary(Of System.String, System.Object)), System.Boolean, System.Nullable(Of OfficeOpenXml.Table.TableStyles))
  name.vb: LoadFromDictionaries(IEnumerable(Of IDictionary(Of String, Object)), Boolean, Nullable(Of TableStyles))
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries(System.Collections.Generic.IEnumerable{System.Collections.Generic.IDictionary{System.String,System.Object}},System.Boolean,System.Nullable{OfficeOpenXml.Table.TableStyles})
    name: LoadFromDictionaries
    nameWithType: ExcelRangeBase.LoadFromDictionaries
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.Table.TableStyles
    name: TableStyles
    nameWithType: TableStyles
    fullName: OfficeOpenXml.Table.TableStyles
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries(System.Collections.Generic.IEnumerable{System.Collections.Generic.IDictionary{System.String,System.Object}},System.Boolean,System.Nullable{OfficeOpenXml.Table.TableStyles})
    name: LoadFromDictionaries
    nameWithType: ExcelRangeBase.LoadFromDictionaries
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.Table.TableStyles
    name: TableStyles
    nameWithType: TableStyles
    fullName: OfficeOpenXml.Table.TableStyles
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries(System.Collections.Generic.IEnumerable{System.Collections.Generic.IDictionary{System.String,System.Object}},System.Boolean,System.Nullable{OfficeOpenXml.Table.TableStyles},System.Collections.Generic.IEnumerable{System.String})
  commentId: M:OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries(System.Collections.Generic.IEnumerable{System.Collections.Generic.IDictionary{System.String,System.Object}},System.Boolean,System.Nullable{OfficeOpenXml.Table.TableStyles},System.Collections.Generic.IEnumerable{System.String})
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: LoadFromDictionaries(IEnumerable<IDictionary<String, Object>>, Boolean, Nullable<TableStyles>, IEnumerable<String>)
  nameWithType: ExcelRangeBase.LoadFromDictionaries(IEnumerable<IDictionary<String, Object>>, Boolean, Nullable<TableStyles>, IEnumerable<String>)
  fullName: OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries(System.Collections.Generic.IEnumerable<System.Collections.Generic.IDictionary<System.String, System.Object>>, System.Boolean, System.Nullable<OfficeOpenXml.Table.TableStyles>, System.Collections.Generic.IEnumerable<System.String>)
  nameWithType.vb: ExcelRangeBase.LoadFromDictionaries(IEnumerable(Of IDictionary(Of String, Object)), Boolean, Nullable(Of TableStyles), IEnumerable(Of String))
  fullName.vb: OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.IDictionary(Of System.String, System.Object)), System.Boolean, System.Nullable(Of OfficeOpenXml.Table.TableStyles), System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: LoadFromDictionaries(IEnumerable(Of IDictionary(Of String, Object)), Boolean, Nullable(Of TableStyles), IEnumerable(Of String))
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries(System.Collections.Generic.IEnumerable{System.Collections.Generic.IDictionary{System.String,System.Object}},System.Boolean,System.Nullable{OfficeOpenXml.Table.TableStyles},System.Collections.Generic.IEnumerable{System.String})
    name: LoadFromDictionaries
    nameWithType: ExcelRangeBase.LoadFromDictionaries
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.Table.TableStyles
    name: TableStyles
    nameWithType: TableStyles
    fullName: OfficeOpenXml.Table.TableStyles
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries(System.Collections.Generic.IEnumerable{System.Collections.Generic.IDictionary{System.String,System.Object}},System.Boolean,System.Nullable{OfficeOpenXml.Table.TableStyles},System.Collections.Generic.IEnumerable{System.String})
    name: LoadFromDictionaries
    nameWithType: ExcelRangeBase.LoadFromDictionaries
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.Table.TableStyles
    name: TableStyles
    nameWithType: TableStyles
    fullName: OfficeOpenXml.Table.TableStyles
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries(System.Collections.Generic.IEnumerable{System.Object},System.Boolean,System.Nullable{OfficeOpenXml.Table.TableStyles},System.Collections.Generic.IEnumerable{System.String})
  commentId: M:OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries(System.Collections.Generic.IEnumerable{System.Object},System.Boolean,System.Nullable{OfficeOpenXml.Table.TableStyles},System.Collections.Generic.IEnumerable{System.String})
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: LoadFromDictionaries(IEnumerable<Object>, Boolean, Nullable<TableStyles>, IEnumerable<String>)
  nameWithType: ExcelRangeBase.LoadFromDictionaries(IEnumerable<Object>, Boolean, Nullable<TableStyles>, IEnumerable<String>)
  fullName: OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries(System.Collections.Generic.IEnumerable<System.Object>, System.Boolean, System.Nullable<OfficeOpenXml.Table.TableStyles>, System.Collections.Generic.IEnumerable<System.String>)
  nameWithType.vb: ExcelRangeBase.LoadFromDictionaries(IEnumerable(Of ), Boolean, Nullable(Of TableStyles), IEnumerable(Of String))
  fullName.vb: OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries(System.Collections.Generic.IEnumerable(Of ), System.Boolean, System.Nullable(Of OfficeOpenXml.Table.TableStyles), System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: LoadFromDictionaries(IEnumerable(Of ), Boolean, Nullable(Of TableStyles), IEnumerable(Of String))
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries(System.Collections.Generic.IEnumerable{System.Object},System.Boolean,System.Nullable{OfficeOpenXml.Table.TableStyles},System.Collections.Generic.IEnumerable{System.String})
    name: LoadFromDictionaries
    nameWithType: ExcelRangeBase.LoadFromDictionaries
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.Table.TableStyles
    name: TableStyles
    nameWithType: TableStyles
    fullName: OfficeOpenXml.Table.TableStyles
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries(System.Collections.Generic.IEnumerable{System.Object},System.Boolean,System.Nullable{OfficeOpenXml.Table.TableStyles},System.Collections.Generic.IEnumerable{System.String})
    name: LoadFromDictionaries
    nameWithType: ExcelRangeBase.LoadFromDictionaries
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.Table.TableStyles
    name: TableStyles
    nameWithType: TableStyles
    fullName: OfficeOpenXml.Table.TableStyles
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries(System.Collections.Generic.IEnumerable{System.Collections.Generic.IDictionary{System.String,System.Object}},System.Action{OfficeOpenXml.LoadFunctions.Params.LoadFromDictionariesParams})
  commentId: M:OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries(System.Collections.Generic.IEnumerable{System.Collections.Generic.IDictionary{System.String,System.Object}},System.Action{OfficeOpenXml.LoadFunctions.Params.LoadFromDictionariesParams})
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: LoadFromDictionaries(IEnumerable<IDictionary<String, Object>>, Action<LoadFromDictionariesParams>)
  nameWithType: ExcelRangeBase.LoadFromDictionaries(IEnumerable<IDictionary<String, Object>>, Action<LoadFromDictionariesParams>)
  fullName: OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries(System.Collections.Generic.IEnumerable<System.Collections.Generic.IDictionary<System.String, System.Object>>, System.Action<OfficeOpenXml.LoadFunctions.Params.LoadFromDictionariesParams>)
  nameWithType.vb: ExcelRangeBase.LoadFromDictionaries(IEnumerable(Of IDictionary(Of String, Object)), Action(Of LoadFromDictionariesParams))
  fullName.vb: OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.IDictionary(Of System.String, System.Object)), System.Action(Of OfficeOpenXml.LoadFunctions.Params.LoadFromDictionariesParams))
  name.vb: LoadFromDictionaries(IEnumerable(Of IDictionary(Of String, Object)), Action(Of LoadFromDictionariesParams))
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries(System.Collections.Generic.IEnumerable{System.Collections.Generic.IDictionary{System.String,System.Object}},System.Action{OfficeOpenXml.LoadFunctions.Params.LoadFromDictionariesParams})
    name: LoadFromDictionaries
    nameWithType: ExcelRangeBase.LoadFromDictionaries
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.LoadFunctions.Params.LoadFromDictionariesParams
    name: LoadFromDictionariesParams
    nameWithType: LoadFromDictionariesParams
    fullName: OfficeOpenXml.LoadFunctions.Params.LoadFromDictionariesParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries(System.Collections.Generic.IEnumerable{System.Collections.Generic.IDictionary{System.String,System.Object}},System.Action{OfficeOpenXml.LoadFunctions.Params.LoadFromDictionariesParams})
    name: LoadFromDictionaries
    nameWithType: ExcelRangeBase.LoadFromDictionaries
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.LoadFunctions.Params.LoadFromDictionariesParams
    name: LoadFromDictionariesParams
    nameWithType: LoadFromDictionariesParams
    fullName: OfficeOpenXml.LoadFunctions.Params.LoadFromDictionariesParams
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries(System.Collections.Generic.IEnumerable{System.Object},System.Action{OfficeOpenXml.LoadFunctions.Params.LoadFromDictionariesParams})
  commentId: M:OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries(System.Collections.Generic.IEnumerable{System.Object},System.Action{OfficeOpenXml.LoadFunctions.Params.LoadFromDictionariesParams})
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: LoadFromDictionaries(IEnumerable<Object>, Action<LoadFromDictionariesParams>)
  nameWithType: ExcelRangeBase.LoadFromDictionaries(IEnumerable<Object>, Action<LoadFromDictionariesParams>)
  fullName: OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries(System.Collections.Generic.IEnumerable<System.Object>, System.Action<OfficeOpenXml.LoadFunctions.Params.LoadFromDictionariesParams>)
  nameWithType.vb: ExcelRangeBase.LoadFromDictionaries(IEnumerable(Of ), Action(Of LoadFromDictionariesParams))
  fullName.vb: OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries(System.Collections.Generic.IEnumerable(Of ), System.Action(Of OfficeOpenXml.LoadFunctions.Params.LoadFromDictionariesParams))
  name.vb: LoadFromDictionaries(IEnumerable(Of ), Action(Of LoadFromDictionariesParams))
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries(System.Collections.Generic.IEnumerable{System.Object},System.Action{OfficeOpenXml.LoadFunctions.Params.LoadFromDictionariesParams})
    name: LoadFromDictionaries
    nameWithType: ExcelRangeBase.LoadFromDictionaries
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.LoadFunctions.Params.LoadFromDictionariesParams
    name: LoadFromDictionariesParams
    nameWithType: LoadFromDictionariesParams
    fullName: OfficeOpenXml.LoadFunctions.Params.LoadFromDictionariesParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries(System.Collections.Generic.IEnumerable{System.Object},System.Action{OfficeOpenXml.LoadFunctions.Params.LoadFromDictionariesParams})
    name: LoadFromDictionaries
    nameWithType: ExcelRangeBase.LoadFromDictionaries
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromDictionaries
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.LoadFunctions.Params.LoadFromDictionariesParams
    name: LoadFromDictionariesParams
    nameWithType: LoadFromDictionariesParams
    fullName: OfficeOpenXml.LoadFunctions.Params.LoadFromDictionariesParams
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.ToDataTable
  commentId: M:OfficeOpenXml.ExcelRangeBase.ToDataTable
  parent: OfficeOpenXml.ExcelRangeBase
  name: ToDataTable()
  nameWithType: ExcelRangeBase.ToDataTable()
  fullName: OfficeOpenXml.ExcelRangeBase.ToDataTable()
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.ToDataTable
    name: ToDataTable
    nameWithType: ExcelRangeBase.ToDataTable
    fullName: OfficeOpenXml.ExcelRangeBase.ToDataTable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.ToDataTable
    name: ToDataTable
    nameWithType: ExcelRangeBase.ToDataTable
    fullName: OfficeOpenXml.ExcelRangeBase.ToDataTable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.ToDataTable(System.Action{OfficeOpenXml.Export.ToDataTable.ToDataTableOptions})
  commentId: M:OfficeOpenXml.ExcelRangeBase.ToDataTable(System.Action{OfficeOpenXml.Export.ToDataTable.ToDataTableOptions})
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: ToDataTable(Action<ToDataTableOptions>)
  nameWithType: ExcelRangeBase.ToDataTable(Action<ToDataTableOptions>)
  fullName: OfficeOpenXml.ExcelRangeBase.ToDataTable(System.Action<OfficeOpenXml.Export.ToDataTable.ToDataTableOptions>)
  nameWithType.vb: ExcelRangeBase.ToDataTable(Action(Of ToDataTableOptions))
  fullName.vb: OfficeOpenXml.ExcelRangeBase.ToDataTable(System.Action(Of OfficeOpenXml.Export.ToDataTable.ToDataTableOptions))
  name.vb: ToDataTable(Action(Of ToDataTableOptions))
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.ToDataTable(System.Action{OfficeOpenXml.Export.ToDataTable.ToDataTableOptions})
    name: ToDataTable
    nameWithType: ExcelRangeBase.ToDataTable
    fullName: OfficeOpenXml.ExcelRangeBase.ToDataTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.Export.ToDataTable.ToDataTableOptions
    name: ToDataTableOptions
    nameWithType: ToDataTableOptions
    fullName: OfficeOpenXml.Export.ToDataTable.ToDataTableOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.ToDataTable(System.Action{OfficeOpenXml.Export.ToDataTable.ToDataTableOptions})
    name: ToDataTable
    nameWithType: ExcelRangeBase.ToDataTable
    fullName: OfficeOpenXml.ExcelRangeBase.ToDataTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.Export.ToDataTable.ToDataTableOptions
    name: ToDataTableOptions
    nameWithType: ToDataTableOptions
    fullName: OfficeOpenXml.Export.ToDataTable.ToDataTableOptions
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.ToDataTable(OfficeOpenXml.Export.ToDataTable.ToDataTableOptions)
  commentId: M:OfficeOpenXml.ExcelRangeBase.ToDataTable(OfficeOpenXml.Export.ToDataTable.ToDataTableOptions)
  parent: OfficeOpenXml.ExcelRangeBase
  name: ToDataTable(ToDataTableOptions)
  nameWithType: ExcelRangeBase.ToDataTable(ToDataTableOptions)
  fullName: OfficeOpenXml.ExcelRangeBase.ToDataTable(OfficeOpenXml.Export.ToDataTable.ToDataTableOptions)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.ToDataTable(OfficeOpenXml.Export.ToDataTable.ToDataTableOptions)
    name: ToDataTable
    nameWithType: ExcelRangeBase.ToDataTable
    fullName: OfficeOpenXml.ExcelRangeBase.ToDataTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.Export.ToDataTable.ToDataTableOptions
    name: ToDataTableOptions
    nameWithType: ToDataTableOptions
    fullName: OfficeOpenXml.Export.ToDataTable.ToDataTableOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.ToDataTable(OfficeOpenXml.Export.ToDataTable.ToDataTableOptions)
    name: ToDataTable
    nameWithType: ExcelRangeBase.ToDataTable
    fullName: OfficeOpenXml.ExcelRangeBase.ToDataTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.Export.ToDataTable.ToDataTableOptions
    name: ToDataTableOptions
    nameWithType: ToDataTableOptions
    fullName: OfficeOpenXml.Export.ToDataTable.ToDataTableOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.ToDataTable(System.Action{OfficeOpenXml.Export.ToDataTable.ToDataTableOptions},System.Data.DataTable)
  commentId: M:OfficeOpenXml.ExcelRangeBase.ToDataTable(System.Action{OfficeOpenXml.Export.ToDataTable.ToDataTableOptions},System.Data.DataTable)
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: ToDataTable(Action<ToDataTableOptions>, DataTable)
  nameWithType: ExcelRangeBase.ToDataTable(Action<ToDataTableOptions>, DataTable)
  fullName: OfficeOpenXml.ExcelRangeBase.ToDataTable(System.Action<OfficeOpenXml.Export.ToDataTable.ToDataTableOptions>, System.Data.DataTable)
  nameWithType.vb: ExcelRangeBase.ToDataTable(Action(Of ToDataTableOptions), DataTable)
  fullName.vb: OfficeOpenXml.ExcelRangeBase.ToDataTable(System.Action(Of OfficeOpenXml.Export.ToDataTable.ToDataTableOptions), System.Data.DataTable)
  name.vb: ToDataTable(Action(Of ToDataTableOptions), DataTable)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.ToDataTable(System.Action{OfficeOpenXml.Export.ToDataTable.ToDataTableOptions},System.Data.DataTable)
    name: ToDataTable
    nameWithType: ExcelRangeBase.ToDataTable
    fullName: OfficeOpenXml.ExcelRangeBase.ToDataTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.Export.ToDataTable.ToDataTableOptions
    name: ToDataTableOptions
    nameWithType: ToDataTableOptions
    fullName: OfficeOpenXml.Export.ToDataTable.ToDataTableOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.DataTable
    name: DataTable
    nameWithType: DataTable
    fullName: System.Data.DataTable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.ToDataTable(System.Action{OfficeOpenXml.Export.ToDataTable.ToDataTableOptions},System.Data.DataTable)
    name: ToDataTable
    nameWithType: ExcelRangeBase.ToDataTable
    fullName: OfficeOpenXml.ExcelRangeBase.ToDataTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.Export.ToDataTable.ToDataTableOptions
    name: ToDataTableOptions
    nameWithType: ToDataTableOptions
    fullName: OfficeOpenXml.Export.ToDataTable.ToDataTableOptions
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.DataTable
    name: DataTable
    nameWithType: DataTable
    fullName: System.Data.DataTable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.ToDataTable(System.Data.DataTable)
  commentId: M:OfficeOpenXml.ExcelRangeBase.ToDataTable(System.Data.DataTable)
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: ToDataTable(DataTable)
  nameWithType: ExcelRangeBase.ToDataTable(DataTable)
  fullName: OfficeOpenXml.ExcelRangeBase.ToDataTable(System.Data.DataTable)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.ToDataTable(System.Data.DataTable)
    name: ToDataTable
    nameWithType: ExcelRangeBase.ToDataTable
    fullName: OfficeOpenXml.ExcelRangeBase.ToDataTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.DataTable
    name: DataTable
    nameWithType: DataTable
    fullName: System.Data.DataTable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.ToDataTable(System.Data.DataTable)
    name: ToDataTable
    nameWithType: ExcelRangeBase.ToDataTable
    fullName: OfficeOpenXml.ExcelRangeBase.ToDataTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.DataTable
    name: DataTable
    nameWithType: DataTable
    fullName: System.Data.DataTable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.ToDataTable(OfficeOpenXml.Export.ToDataTable.ToDataTableOptions,System.Data.DataTable)
  commentId: M:OfficeOpenXml.ExcelRangeBase.ToDataTable(OfficeOpenXml.Export.ToDataTable.ToDataTableOptions,System.Data.DataTable)
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: ToDataTable(ToDataTableOptions, DataTable)
  nameWithType: ExcelRangeBase.ToDataTable(ToDataTableOptions, DataTable)
  fullName: OfficeOpenXml.ExcelRangeBase.ToDataTable(OfficeOpenXml.Export.ToDataTable.ToDataTableOptions, System.Data.DataTable)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.ToDataTable(OfficeOpenXml.Export.ToDataTable.ToDataTableOptions,System.Data.DataTable)
    name: ToDataTable
    nameWithType: ExcelRangeBase.ToDataTable
    fullName: OfficeOpenXml.ExcelRangeBase.ToDataTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.Export.ToDataTable.ToDataTableOptions
    name: ToDataTableOptions
    nameWithType: ToDataTableOptions
    fullName: OfficeOpenXml.Export.ToDataTable.ToDataTableOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.DataTable
    name: DataTable
    nameWithType: DataTable
    fullName: System.Data.DataTable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.ToDataTable(OfficeOpenXml.Export.ToDataTable.ToDataTableOptions,System.Data.DataTable)
    name: ToDataTable
    nameWithType: ExcelRangeBase.ToDataTable
    fullName: OfficeOpenXml.ExcelRangeBase.ToDataTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.Export.ToDataTable.ToDataTableOptions
    name: ToDataTableOptions
    nameWithType: ToDataTableOptions
    fullName: OfficeOpenXml.Export.ToDataTable.ToDataTableOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.DataTable
    name: DataTable
    nameWithType: DataTable
    fullName: System.Data.DataTable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.ToText
  commentId: M:OfficeOpenXml.ExcelRangeBase.ToText
  parent: OfficeOpenXml.ExcelRangeBase
  name: ToText()
  nameWithType: ExcelRangeBase.ToText()
  fullName: OfficeOpenXml.ExcelRangeBase.ToText()
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.ToText
    name: ToText
    nameWithType: ExcelRangeBase.ToText
    fullName: OfficeOpenXml.ExcelRangeBase.ToText
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.ToText
    name: ToText
    nameWithType: ExcelRangeBase.ToText
    fullName: OfficeOpenXml.ExcelRangeBase.ToText
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.ToText(OfficeOpenXml.ExcelOutputTextFormat)
  commentId: M:OfficeOpenXml.ExcelRangeBase.ToText(OfficeOpenXml.ExcelOutputTextFormat)
  parent: OfficeOpenXml.ExcelRangeBase
  name: ToText(ExcelOutputTextFormat)
  nameWithType: ExcelRangeBase.ToText(ExcelOutputTextFormat)
  fullName: OfficeOpenXml.ExcelRangeBase.ToText(OfficeOpenXml.ExcelOutputTextFormat)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.ToText(OfficeOpenXml.ExcelOutputTextFormat)
    name: ToText
    nameWithType: ExcelRangeBase.ToText
    fullName: OfficeOpenXml.ExcelRangeBase.ToText
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.ExcelOutputTextFormat
    name: ExcelOutputTextFormat
    nameWithType: ExcelOutputTextFormat
    fullName: OfficeOpenXml.ExcelOutputTextFormat
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.ToText(OfficeOpenXml.ExcelOutputTextFormat)
    name: ToText
    nameWithType: ExcelRangeBase.ToText
    fullName: OfficeOpenXml.ExcelRangeBase.ToText
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.ExcelOutputTextFormat
    name: ExcelOutputTextFormat
    nameWithType: ExcelOutputTextFormat
    fullName: OfficeOpenXml.ExcelOutputTextFormat
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.SaveToText(System.IO.FileInfo,OfficeOpenXml.ExcelOutputTextFormat)
  commentId: M:OfficeOpenXml.ExcelRangeBase.SaveToText(System.IO.FileInfo,OfficeOpenXml.ExcelOutputTextFormat)
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: SaveToText(FileInfo, ExcelOutputTextFormat)
  nameWithType: ExcelRangeBase.SaveToText(FileInfo, ExcelOutputTextFormat)
  fullName: OfficeOpenXml.ExcelRangeBase.SaveToText(System.IO.FileInfo, OfficeOpenXml.ExcelOutputTextFormat)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.SaveToText(System.IO.FileInfo,OfficeOpenXml.ExcelOutputTextFormat)
    name: SaveToText
    nameWithType: ExcelRangeBase.SaveToText
    fullName: OfficeOpenXml.ExcelRangeBase.SaveToText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.FileInfo
    name: FileInfo
    nameWithType: FileInfo
    fullName: System.IO.FileInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ExcelOutputTextFormat
    name: ExcelOutputTextFormat
    nameWithType: ExcelOutputTextFormat
    fullName: OfficeOpenXml.ExcelOutputTextFormat
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.SaveToText(System.IO.FileInfo,OfficeOpenXml.ExcelOutputTextFormat)
    name: SaveToText
    nameWithType: ExcelRangeBase.SaveToText
    fullName: OfficeOpenXml.ExcelRangeBase.SaveToText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.FileInfo
    name: FileInfo
    nameWithType: FileInfo
    fullName: System.IO.FileInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ExcelOutputTextFormat
    name: ExcelOutputTextFormat
    nameWithType: ExcelOutputTextFormat
    fullName: OfficeOpenXml.ExcelOutputTextFormat
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.SaveToText(System.IO.Stream,OfficeOpenXml.ExcelOutputTextFormat)
  commentId: M:OfficeOpenXml.ExcelRangeBase.SaveToText(System.IO.Stream,OfficeOpenXml.ExcelOutputTextFormat)
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: SaveToText(Stream, ExcelOutputTextFormat)
  nameWithType: ExcelRangeBase.SaveToText(Stream, ExcelOutputTextFormat)
  fullName: OfficeOpenXml.ExcelRangeBase.SaveToText(System.IO.Stream, OfficeOpenXml.ExcelOutputTextFormat)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.SaveToText(System.IO.Stream,OfficeOpenXml.ExcelOutputTextFormat)
    name: SaveToText
    nameWithType: ExcelRangeBase.SaveToText
    fullName: OfficeOpenXml.ExcelRangeBase.SaveToText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ExcelOutputTextFormat
    name: ExcelOutputTextFormat
    nameWithType: ExcelOutputTextFormat
    fullName: OfficeOpenXml.ExcelOutputTextFormat
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.SaveToText(System.IO.Stream,OfficeOpenXml.ExcelOutputTextFormat)
    name: SaveToText
    nameWithType: ExcelRangeBase.SaveToText
    fullName: OfficeOpenXml.ExcelRangeBase.SaveToText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ExcelOutputTextFormat
    name: ExcelOutputTextFormat
    nameWithType: ExcelOutputTextFormat
    fullName: OfficeOpenXml.ExcelOutputTextFormat
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.ToTextAsync
  commentId: M:OfficeOpenXml.ExcelRangeBase.ToTextAsync
  parent: OfficeOpenXml.ExcelRangeBase
  name: ToTextAsync()
  nameWithType: ExcelRangeBase.ToTextAsync()
  fullName: OfficeOpenXml.ExcelRangeBase.ToTextAsync()
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.ToTextAsync
    name: ToTextAsync
    nameWithType: ExcelRangeBase.ToTextAsync
    fullName: OfficeOpenXml.ExcelRangeBase.ToTextAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.ToTextAsync
    name: ToTextAsync
    nameWithType: ExcelRangeBase.ToTextAsync
    fullName: OfficeOpenXml.ExcelRangeBase.ToTextAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.ToTextAsync(OfficeOpenXml.ExcelOutputTextFormat)
  commentId: M:OfficeOpenXml.ExcelRangeBase.ToTextAsync(OfficeOpenXml.ExcelOutputTextFormat)
  parent: OfficeOpenXml.ExcelRangeBase
  name: ToTextAsync(ExcelOutputTextFormat)
  nameWithType: ExcelRangeBase.ToTextAsync(ExcelOutputTextFormat)
  fullName: OfficeOpenXml.ExcelRangeBase.ToTextAsync(OfficeOpenXml.ExcelOutputTextFormat)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.ToTextAsync(OfficeOpenXml.ExcelOutputTextFormat)
    name: ToTextAsync
    nameWithType: ExcelRangeBase.ToTextAsync
    fullName: OfficeOpenXml.ExcelRangeBase.ToTextAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.ExcelOutputTextFormat
    name: ExcelOutputTextFormat
    nameWithType: ExcelOutputTextFormat
    fullName: OfficeOpenXml.ExcelOutputTextFormat
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.ToTextAsync(OfficeOpenXml.ExcelOutputTextFormat)
    name: ToTextAsync
    nameWithType: ExcelRangeBase.ToTextAsync
    fullName: OfficeOpenXml.ExcelRangeBase.ToTextAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.ExcelOutputTextFormat
    name: ExcelOutputTextFormat
    nameWithType: ExcelOutputTextFormat
    fullName: OfficeOpenXml.ExcelOutputTextFormat
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.SaveToTextAsync(System.IO.FileInfo,OfficeOpenXml.ExcelOutputTextFormat)
  commentId: M:OfficeOpenXml.ExcelRangeBase.SaveToTextAsync(System.IO.FileInfo,OfficeOpenXml.ExcelOutputTextFormat)
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: SaveToTextAsync(FileInfo, ExcelOutputTextFormat)
  nameWithType: ExcelRangeBase.SaveToTextAsync(FileInfo, ExcelOutputTextFormat)
  fullName: OfficeOpenXml.ExcelRangeBase.SaveToTextAsync(System.IO.FileInfo, OfficeOpenXml.ExcelOutputTextFormat)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.SaveToTextAsync(System.IO.FileInfo,OfficeOpenXml.ExcelOutputTextFormat)
    name: SaveToTextAsync
    nameWithType: ExcelRangeBase.SaveToTextAsync
    fullName: OfficeOpenXml.ExcelRangeBase.SaveToTextAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.FileInfo
    name: FileInfo
    nameWithType: FileInfo
    fullName: System.IO.FileInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ExcelOutputTextFormat
    name: ExcelOutputTextFormat
    nameWithType: ExcelOutputTextFormat
    fullName: OfficeOpenXml.ExcelOutputTextFormat
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.SaveToTextAsync(System.IO.FileInfo,OfficeOpenXml.ExcelOutputTextFormat)
    name: SaveToTextAsync
    nameWithType: ExcelRangeBase.SaveToTextAsync
    fullName: OfficeOpenXml.ExcelRangeBase.SaveToTextAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.FileInfo
    name: FileInfo
    nameWithType: FileInfo
    fullName: System.IO.FileInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ExcelOutputTextFormat
    name: ExcelOutputTextFormat
    nameWithType: ExcelOutputTextFormat
    fullName: OfficeOpenXml.ExcelOutputTextFormat
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.SaveToTextAsync(System.IO.Stream,OfficeOpenXml.ExcelOutputTextFormat)
  commentId: M:OfficeOpenXml.ExcelRangeBase.SaveToTextAsync(System.IO.Stream,OfficeOpenXml.ExcelOutputTextFormat)
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: SaveToTextAsync(Stream, ExcelOutputTextFormat)
  nameWithType: ExcelRangeBase.SaveToTextAsync(Stream, ExcelOutputTextFormat)
  fullName: OfficeOpenXml.ExcelRangeBase.SaveToTextAsync(System.IO.Stream, OfficeOpenXml.ExcelOutputTextFormat)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.SaveToTextAsync(System.IO.Stream,OfficeOpenXml.ExcelOutputTextFormat)
    name: SaveToTextAsync
    nameWithType: ExcelRangeBase.SaveToTextAsync
    fullName: OfficeOpenXml.ExcelRangeBase.SaveToTextAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ExcelOutputTextFormat
    name: ExcelOutputTextFormat
    nameWithType: ExcelOutputTextFormat
    fullName: OfficeOpenXml.ExcelOutputTextFormat
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.SaveToTextAsync(System.IO.Stream,OfficeOpenXml.ExcelOutputTextFormat)
    name: SaveToTextAsync
    nameWithType: ExcelRangeBase.SaveToTextAsync
    fullName: OfficeOpenXml.ExcelRangeBase.SaveToTextAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ExcelOutputTextFormat
    name: ExcelOutputTextFormat
    nameWithType: ExcelOutputTextFormat
    fullName: OfficeOpenXml.ExcelOutputTextFormat
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.ToJson
  commentId: M:OfficeOpenXml.ExcelRangeBase.ToJson
  parent: OfficeOpenXml.ExcelRangeBase
  name: ToJson()
  nameWithType: ExcelRangeBase.ToJson()
  fullName: OfficeOpenXml.ExcelRangeBase.ToJson()
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.ToJson
    name: ToJson
    nameWithType: ExcelRangeBase.ToJson
    fullName: OfficeOpenXml.ExcelRangeBase.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.ToJson
    name: ToJson
    nameWithType: ExcelRangeBase.ToJson
    fullName: OfficeOpenXml.ExcelRangeBase.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.ToJson(System.Action{OfficeOpenXml.JsonRangeExportSettings})
  commentId: M:OfficeOpenXml.ExcelRangeBase.ToJson(System.Action{OfficeOpenXml.JsonRangeExportSettings})
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: ToJson(Action<JsonRangeExportSettings>)
  nameWithType: ExcelRangeBase.ToJson(Action<JsonRangeExportSettings>)
  fullName: OfficeOpenXml.ExcelRangeBase.ToJson(System.Action<OfficeOpenXml.JsonRangeExportSettings>)
  nameWithType.vb: ExcelRangeBase.ToJson(Action(Of JsonRangeExportSettings))
  fullName.vb: OfficeOpenXml.ExcelRangeBase.ToJson(System.Action(Of OfficeOpenXml.JsonRangeExportSettings))
  name.vb: ToJson(Action(Of JsonRangeExportSettings))
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.ToJson(System.Action{OfficeOpenXml.JsonRangeExportSettings})
    name: ToJson
    nameWithType: ExcelRangeBase.ToJson
    fullName: OfficeOpenXml.ExcelRangeBase.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.JsonRangeExportSettings
    name: JsonRangeExportSettings
    nameWithType: JsonRangeExportSettings
    fullName: OfficeOpenXml.JsonRangeExportSettings
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.ToJson(System.Action{OfficeOpenXml.JsonRangeExportSettings})
    name: ToJson
    nameWithType: ExcelRangeBase.ToJson
    fullName: OfficeOpenXml.ExcelRangeBase.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.JsonRangeExportSettings
    name: JsonRangeExportSettings
    nameWithType: JsonRangeExportSettings
    fullName: OfficeOpenXml.JsonRangeExportSettings
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.SaveToJson(System.IO.Stream)
  commentId: M:OfficeOpenXml.ExcelRangeBase.SaveToJson(System.IO.Stream)
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: SaveToJson(Stream)
  nameWithType: ExcelRangeBase.SaveToJson(Stream)
  fullName: OfficeOpenXml.ExcelRangeBase.SaveToJson(System.IO.Stream)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.SaveToJson(System.IO.Stream)
    name: SaveToJson
    nameWithType: ExcelRangeBase.SaveToJson
    fullName: OfficeOpenXml.ExcelRangeBase.SaveToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.SaveToJson(System.IO.Stream)
    name: SaveToJson
    nameWithType: ExcelRangeBase.SaveToJson
    fullName: OfficeOpenXml.ExcelRangeBase.SaveToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.SaveToJson(System.IO.Stream,System.Action{OfficeOpenXml.JsonRangeExportSettings})
  commentId: M:OfficeOpenXml.ExcelRangeBase.SaveToJson(System.IO.Stream,System.Action{OfficeOpenXml.JsonRangeExportSettings})
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: SaveToJson(Stream, Action<JsonRangeExportSettings>)
  nameWithType: ExcelRangeBase.SaveToJson(Stream, Action<JsonRangeExportSettings>)
  fullName: OfficeOpenXml.ExcelRangeBase.SaveToJson(System.IO.Stream, System.Action<OfficeOpenXml.JsonRangeExportSettings>)
  nameWithType.vb: ExcelRangeBase.SaveToJson(Stream, Action(Of JsonRangeExportSettings))
  fullName.vb: OfficeOpenXml.ExcelRangeBase.SaveToJson(System.IO.Stream, System.Action(Of OfficeOpenXml.JsonRangeExportSettings))
  name.vb: SaveToJson(Stream, Action(Of JsonRangeExportSettings))
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.SaveToJson(System.IO.Stream,System.Action{OfficeOpenXml.JsonRangeExportSettings})
    name: SaveToJson
    nameWithType: ExcelRangeBase.SaveToJson
    fullName: OfficeOpenXml.ExcelRangeBase.SaveToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.JsonRangeExportSettings
    name: JsonRangeExportSettings
    nameWithType: JsonRangeExportSettings
    fullName: OfficeOpenXml.JsonRangeExportSettings
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.SaveToJson(System.IO.Stream,System.Action{OfficeOpenXml.JsonRangeExportSettings})
    name: SaveToJson
    nameWithType: ExcelRangeBase.SaveToJson
    fullName: OfficeOpenXml.ExcelRangeBase.SaveToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.JsonRangeExportSettings
    name: JsonRangeExportSettings
    nameWithType: JsonRangeExportSettings
    fullName: OfficeOpenXml.JsonRangeExportSettings
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.SaveToJsonAsync(System.IO.Stream)
  commentId: M:OfficeOpenXml.ExcelRangeBase.SaveToJsonAsync(System.IO.Stream)
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: SaveToJsonAsync(Stream)
  nameWithType: ExcelRangeBase.SaveToJsonAsync(Stream)
  fullName: OfficeOpenXml.ExcelRangeBase.SaveToJsonAsync(System.IO.Stream)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.SaveToJsonAsync(System.IO.Stream)
    name: SaveToJsonAsync
    nameWithType: ExcelRangeBase.SaveToJsonAsync
    fullName: OfficeOpenXml.ExcelRangeBase.SaveToJsonAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.SaveToJsonAsync(System.IO.Stream)
    name: SaveToJsonAsync
    nameWithType: ExcelRangeBase.SaveToJsonAsync
    fullName: OfficeOpenXml.ExcelRangeBase.SaveToJsonAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.SaveToJsonAsync(System.IO.Stream,System.Action{OfficeOpenXml.JsonRangeExportSettings})
  commentId: M:OfficeOpenXml.ExcelRangeBase.SaveToJsonAsync(System.IO.Stream,System.Action{OfficeOpenXml.JsonRangeExportSettings})
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: SaveToJsonAsync(Stream, Action<JsonRangeExportSettings>)
  nameWithType: ExcelRangeBase.SaveToJsonAsync(Stream, Action<JsonRangeExportSettings>)
  fullName: OfficeOpenXml.ExcelRangeBase.SaveToJsonAsync(System.IO.Stream, System.Action<OfficeOpenXml.JsonRangeExportSettings>)
  nameWithType.vb: ExcelRangeBase.SaveToJsonAsync(Stream, Action(Of JsonRangeExportSettings))
  fullName.vb: OfficeOpenXml.ExcelRangeBase.SaveToJsonAsync(System.IO.Stream, System.Action(Of OfficeOpenXml.JsonRangeExportSettings))
  name.vb: SaveToJsonAsync(Stream, Action(Of JsonRangeExportSettings))
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.SaveToJsonAsync(System.IO.Stream,System.Action{OfficeOpenXml.JsonRangeExportSettings})
    name: SaveToJsonAsync
    nameWithType: ExcelRangeBase.SaveToJsonAsync
    fullName: OfficeOpenXml.ExcelRangeBase.SaveToJsonAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.JsonRangeExportSettings
    name: JsonRangeExportSettings
    nameWithType: JsonRangeExportSettings
    fullName: OfficeOpenXml.JsonRangeExportSettings
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.SaveToJsonAsync(System.IO.Stream,System.Action{OfficeOpenXml.JsonRangeExportSettings})
    name: SaveToJsonAsync
    nameWithType: ExcelRangeBase.SaveToJsonAsync
    fullName: OfficeOpenXml.ExcelRangeBase.SaveToJsonAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.JsonRangeExportSettings
    name: JsonRangeExportSettings
    nameWithType: JsonRangeExportSettings
    fullName: OfficeOpenXml.JsonRangeExportSettings
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings``1(System.Func{OfficeOpenXml.Export.ToCollection.ToCollectionRow,{T}})
  commentId: M:OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings``1(System.Func{OfficeOpenXml.Export.ToCollection.ToCollectionRow,``0})
  parent: OfficeOpenXml.ExcelRangeBase
  definition: OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings``1(System.Func{OfficeOpenXml.Export.ToCollection.ToCollectionRow,``0})
  name: ToCollectionWithMappings<T>(Func<ToCollectionRow, T>)
  nameWithType: ExcelRangeBase.ToCollectionWithMappings<T>(Func<ToCollectionRow, T>)
  fullName: OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings<T>(System.Func<OfficeOpenXml.Export.ToCollection.ToCollectionRow, T>)
  nameWithType.vb: ExcelRangeBase.ToCollectionWithMappings(Of T)(Func(Of ToCollectionRow, T))
  fullName.vb: OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings(Of T)(System.Func(Of OfficeOpenXml.Export.ToCollection.ToCollectionRow, T))
  name.vb: ToCollectionWithMappings(Of T)(Func(Of ToCollectionRow, T))
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings``1(System.Func{OfficeOpenXml.Export.ToCollection.ToCollectionRow,``0})
    name: ToCollectionWithMappings<T>
    nameWithType: ExcelRangeBase.ToCollectionWithMappings<T>
    fullName: OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.Export.ToCollection.ToCollectionRow
    name: ToCollectionRow
    nameWithType: ToCollectionRow
    fullName: OfficeOpenXml.Export.ToCollection.ToCollectionRow
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings``1(System.Func{OfficeOpenXml.Export.ToCollection.ToCollectionRow,``0})
    name: ToCollectionWithMappings(Of T)
    nameWithType: ExcelRangeBase.ToCollectionWithMappings(Of T)
    fullName: OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.Export.ToCollection.ToCollectionRow
    name: ToCollectionRow
    nameWithType: ToCollectionRow
    fullName: OfficeOpenXml.Export.ToCollection.ToCollectionRow
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings``1(System.Func{OfficeOpenXml.Export.ToCollection.ToCollectionRow,{T}},System.Action{OfficeOpenXml.ToCollectionRangeOptions})
  commentId: M:OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings``1(System.Func{OfficeOpenXml.Export.ToCollection.ToCollectionRow,``0},System.Action{OfficeOpenXml.ToCollectionRangeOptions})
  parent: OfficeOpenXml.ExcelRangeBase
  definition: OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings``1(System.Func{OfficeOpenXml.Export.ToCollection.ToCollectionRow,``0},System.Action{OfficeOpenXml.ToCollectionRangeOptions})
  name: ToCollectionWithMappings<T>(Func<ToCollectionRow, T>, Action<ToCollectionRangeOptions>)
  nameWithType: ExcelRangeBase.ToCollectionWithMappings<T>(Func<ToCollectionRow, T>, Action<ToCollectionRangeOptions>)
  fullName: OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings<T>(System.Func<OfficeOpenXml.Export.ToCollection.ToCollectionRow, T>, System.Action<OfficeOpenXml.ToCollectionRangeOptions>)
  nameWithType.vb: ExcelRangeBase.ToCollectionWithMappings(Of T)(Func(Of ToCollectionRow, T), Action(Of ToCollectionRangeOptions))
  fullName.vb: OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings(Of T)(System.Func(Of OfficeOpenXml.Export.ToCollection.ToCollectionRow, T), System.Action(Of OfficeOpenXml.ToCollectionRangeOptions))
  name.vb: ToCollectionWithMappings(Of T)(Func(Of ToCollectionRow, T), Action(Of ToCollectionRangeOptions))
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings``1(System.Func{OfficeOpenXml.Export.ToCollection.ToCollectionRow,``0},System.Action{OfficeOpenXml.ToCollectionRangeOptions})
    name: ToCollectionWithMappings<T>
    nameWithType: ExcelRangeBase.ToCollectionWithMappings<T>
    fullName: OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.Export.ToCollection.ToCollectionRow
    name: ToCollectionRow
    nameWithType: ToCollectionRow
    fullName: OfficeOpenXml.Export.ToCollection.ToCollectionRow
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.ToCollectionRangeOptions
    name: ToCollectionRangeOptions
    nameWithType: ToCollectionRangeOptions
    fullName: OfficeOpenXml.ToCollectionRangeOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings``1(System.Func{OfficeOpenXml.Export.ToCollection.ToCollectionRow,``0},System.Action{OfficeOpenXml.ToCollectionRangeOptions})
    name: ToCollectionWithMappings(Of T)
    nameWithType: ExcelRangeBase.ToCollectionWithMappings(Of T)
    fullName: OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.Export.ToCollection.ToCollectionRow
    name: ToCollectionRow
    nameWithType: ToCollectionRow
    fullName: OfficeOpenXml.Export.ToCollection.ToCollectionRow
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.ToCollectionRangeOptions
    name: ToCollectionRangeOptions
    nameWithType: ToCollectionRangeOptions
    fullName: OfficeOpenXml.ToCollectionRangeOptions
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings``1(System.Func{OfficeOpenXml.Export.ToCollection.ToCollectionRow,{T}},OfficeOpenXml.ToCollectionRangeOptions)
  commentId: M:OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings``1(System.Func{OfficeOpenXml.Export.ToCollection.ToCollectionRow,``0},OfficeOpenXml.ToCollectionRangeOptions)
  parent: OfficeOpenXml.ExcelRangeBase
  definition: OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings``1(System.Func{OfficeOpenXml.Export.ToCollection.ToCollectionRow,``0},OfficeOpenXml.ToCollectionRangeOptions)
  name: ToCollectionWithMappings<T>(Func<ToCollectionRow, T>, ToCollectionRangeOptions)
  nameWithType: ExcelRangeBase.ToCollectionWithMappings<T>(Func<ToCollectionRow, T>, ToCollectionRangeOptions)
  fullName: OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings<T>(System.Func<OfficeOpenXml.Export.ToCollection.ToCollectionRow, T>, OfficeOpenXml.ToCollectionRangeOptions)
  nameWithType.vb: ExcelRangeBase.ToCollectionWithMappings(Of T)(Func(Of ToCollectionRow, T), ToCollectionRangeOptions)
  fullName.vb: OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings(Of T)(System.Func(Of OfficeOpenXml.Export.ToCollection.ToCollectionRow, T), OfficeOpenXml.ToCollectionRangeOptions)
  name.vb: ToCollectionWithMappings(Of T)(Func(Of ToCollectionRow, T), ToCollectionRangeOptions)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings``1(System.Func{OfficeOpenXml.Export.ToCollection.ToCollectionRow,``0},OfficeOpenXml.ToCollectionRangeOptions)
    name: ToCollectionWithMappings<T>
    nameWithType: ExcelRangeBase.ToCollectionWithMappings<T>
    fullName: OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.Export.ToCollection.ToCollectionRow
    name: ToCollectionRow
    nameWithType: ToCollectionRow
    fullName: OfficeOpenXml.Export.ToCollection.ToCollectionRow
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ToCollectionRangeOptions
    name: ToCollectionRangeOptions
    nameWithType: ToCollectionRangeOptions
    fullName: OfficeOpenXml.ToCollectionRangeOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings``1(System.Func{OfficeOpenXml.Export.ToCollection.ToCollectionRow,``0},OfficeOpenXml.ToCollectionRangeOptions)
    name: ToCollectionWithMappings(Of T)
    nameWithType: ExcelRangeBase.ToCollectionWithMappings(Of T)
    fullName: OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.Export.ToCollection.ToCollectionRow
    name: ToCollectionRow
    nameWithType: ToCollectionRow
    fullName: OfficeOpenXml.Export.ToCollection.ToCollectionRow
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ToCollectionRangeOptions
    name: ToCollectionRangeOptions
    nameWithType: ToCollectionRangeOptions
    fullName: OfficeOpenXml.ToCollectionRangeOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.ToCollection``1
  commentId: M:OfficeOpenXml.ExcelRangeBase.ToCollection``1
  parent: OfficeOpenXml.ExcelRangeBase
  name: ToCollection<T>()
  nameWithType: ExcelRangeBase.ToCollection<T>()
  fullName: OfficeOpenXml.ExcelRangeBase.ToCollection<T>()
  nameWithType.vb: ExcelRangeBase.ToCollection(Of T)()
  fullName.vb: OfficeOpenXml.ExcelRangeBase.ToCollection(Of T)()
  name.vb: ToCollection(Of T)()
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.ToCollection``1
    name: ToCollection<T>
    nameWithType: ExcelRangeBase.ToCollection<T>
    fullName: OfficeOpenXml.ExcelRangeBase.ToCollection<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.ToCollection``1
    name: ToCollection(Of T)
    nameWithType: ExcelRangeBase.ToCollection(Of T)
    fullName: OfficeOpenXml.ExcelRangeBase.ToCollection(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.ToCollection``1(System.Action{OfficeOpenXml.ToCollectionRangeOptions})
  commentId: M:OfficeOpenXml.ExcelRangeBase.ToCollection``1(System.Action{OfficeOpenXml.ToCollectionRangeOptions})
  parent: OfficeOpenXml.ExcelRangeBase
  isExternal: true
  name: ToCollection<T>(Action<ToCollectionRangeOptions>)
  nameWithType: ExcelRangeBase.ToCollection<T>(Action<ToCollectionRangeOptions>)
  fullName: OfficeOpenXml.ExcelRangeBase.ToCollection<T>(System.Action<OfficeOpenXml.ToCollectionRangeOptions>)
  nameWithType.vb: ExcelRangeBase.ToCollection(Of T)(Action(Of ToCollectionRangeOptions))
  fullName.vb: OfficeOpenXml.ExcelRangeBase.ToCollection(Of T)(System.Action(Of OfficeOpenXml.ToCollectionRangeOptions))
  name.vb: ToCollection(Of T)(Action(Of ToCollectionRangeOptions))
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.ToCollection``1(System.Action{OfficeOpenXml.ToCollectionRangeOptions})
    name: ToCollection<T>
    nameWithType: ExcelRangeBase.ToCollection<T>
    fullName: OfficeOpenXml.ExcelRangeBase.ToCollection<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.ToCollectionRangeOptions
    name: ToCollectionRangeOptions
    nameWithType: ToCollectionRangeOptions
    fullName: OfficeOpenXml.ToCollectionRangeOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.ToCollection``1(System.Action{OfficeOpenXml.ToCollectionRangeOptions})
    name: ToCollection(Of T)
    nameWithType: ExcelRangeBase.ToCollection(Of T)
    fullName: OfficeOpenXml.ExcelRangeBase.ToCollection(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.ToCollectionRangeOptions
    name: ToCollectionRangeOptions
    nameWithType: ToCollectionRangeOptions
    fullName: OfficeOpenXml.ToCollectionRangeOptions
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.ToCollection``1(OfficeOpenXml.ToCollectionRangeOptions)
  commentId: M:OfficeOpenXml.ExcelRangeBase.ToCollection``1(OfficeOpenXml.ToCollectionRangeOptions)
  parent: OfficeOpenXml.ExcelRangeBase
  name: ToCollection<T>(ToCollectionRangeOptions)
  nameWithType: ExcelRangeBase.ToCollection<T>(ToCollectionRangeOptions)
  fullName: OfficeOpenXml.ExcelRangeBase.ToCollection<T>(OfficeOpenXml.ToCollectionRangeOptions)
  nameWithType.vb: ExcelRangeBase.ToCollection(Of T)(ToCollectionRangeOptions)
  fullName.vb: OfficeOpenXml.ExcelRangeBase.ToCollection(Of T)(OfficeOpenXml.ToCollectionRangeOptions)
  name.vb: ToCollection(Of T)(ToCollectionRangeOptions)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.ToCollection``1(OfficeOpenXml.ToCollectionRangeOptions)
    name: ToCollection<T>
    nameWithType: ExcelRangeBase.ToCollection<T>
    fullName: OfficeOpenXml.ExcelRangeBase.ToCollection<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.ToCollectionRangeOptions
    name: ToCollectionRangeOptions
    nameWithType: ToCollectionRangeOptions
    fullName: OfficeOpenXml.ToCollectionRangeOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.ToCollection``1(OfficeOpenXml.ToCollectionRangeOptions)
    name: ToCollection(Of T)
    nameWithType: ExcelRangeBase.ToCollection(Of T)
    fullName: OfficeOpenXml.ExcelRangeBase.ToCollection(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.ToCollectionRangeOptions
    name: ToCollectionRangeOptions
    nameWithType: ToCollectionRangeOptions
    fullName: OfficeOpenXml.ToCollectionRangeOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelAddress.Address
  commentId: P:OfficeOpenXml.ExcelAddress.Address
  parent: OfficeOpenXml.ExcelAddress
  name: Address
  nameWithType: ExcelAddress.Address
  fullName: OfficeOpenXml.ExcelAddress.Address
- uid: OfficeOpenXml.ExcelAddressBase.SetAddress(System.String,OfficeOpenXml.ExcelWorkbook,System.String)
  commentId: M:OfficeOpenXml.ExcelAddressBase.SetAddress(System.String,OfficeOpenXml.ExcelWorkbook,System.String)
  parent: OfficeOpenXml.ExcelAddressBase
  isExternal: true
  name: SetAddress(String, ExcelWorkbook, String)
  nameWithType: ExcelAddressBase.SetAddress(String, ExcelWorkbook, String)
  fullName: OfficeOpenXml.ExcelAddressBase.SetAddress(System.String, OfficeOpenXml.ExcelWorkbook, System.String)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelAddressBase.SetAddress(System.String,OfficeOpenXml.ExcelWorkbook,System.String)
    name: SetAddress
    nameWithType: ExcelAddressBase.SetAddress
    fullName: OfficeOpenXml.ExcelAddressBase.SetAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ExcelWorkbook
    name: ExcelWorkbook
    nameWithType: ExcelWorkbook
    fullName: OfficeOpenXml.ExcelWorkbook
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelAddressBase.SetAddress(System.String,OfficeOpenXml.ExcelWorkbook,System.String)
    name: SetAddress
    nameWithType: ExcelAddressBase.SetAddress
    fullName: OfficeOpenXml.ExcelAddressBase.SetAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ExcelWorkbook
    name: ExcelWorkbook
    nameWithType: ExcelWorkbook
    fullName: OfficeOpenXml.ExcelWorkbook
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelAddressBase.BeforeChangeAddress
  commentId: M:OfficeOpenXml.ExcelAddressBase.BeforeChangeAddress
  parent: OfficeOpenXml.ExcelAddressBase
  name: BeforeChangeAddress()
  nameWithType: ExcelAddressBase.BeforeChangeAddress()
  fullName: OfficeOpenXml.ExcelAddressBase.BeforeChangeAddress()
  spec.csharp:
  - uid: OfficeOpenXml.ExcelAddressBase.BeforeChangeAddress
    name: BeforeChangeAddress
    nameWithType: ExcelAddressBase.BeforeChangeAddress
    fullName: OfficeOpenXml.ExcelAddressBase.BeforeChangeAddress
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelAddressBase.BeforeChangeAddress
    name: BeforeChangeAddress
    nameWithType: ExcelAddressBase.BeforeChangeAddress
    fullName: OfficeOpenXml.ExcelAddressBase.BeforeChangeAddress
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelAddressBase.Start
  commentId: P:OfficeOpenXml.ExcelAddressBase.Start
  parent: OfficeOpenXml.ExcelAddressBase
  name: Start
  nameWithType: ExcelAddressBase.Start
  fullName: OfficeOpenXml.ExcelAddressBase.Start
- uid: OfficeOpenXml.ExcelAddressBase.End
  commentId: P:OfficeOpenXml.ExcelAddressBase.End
  parent: OfficeOpenXml.ExcelAddressBase
  name: End
  nameWithType: ExcelAddressBase.End
  fullName: OfficeOpenXml.ExcelAddressBase.End
- uid: OfficeOpenXml.ExcelAddressBase.ExternalReferenceIndex
  commentId: P:OfficeOpenXml.ExcelAddressBase.ExternalReferenceIndex
  parent: OfficeOpenXml.ExcelAddressBase
  name: ExternalReferenceIndex
  nameWithType: ExcelAddressBase.ExternalReferenceIndex
  fullName: OfficeOpenXml.ExcelAddressBase.ExternalReferenceIndex
- uid: OfficeOpenXml.ExcelAddressBase.Table
  commentId: P:OfficeOpenXml.ExcelAddressBase.Table
  parent: OfficeOpenXml.ExcelAddressBase
  name: Table
  nameWithType: ExcelAddressBase.Table
  fullName: OfficeOpenXml.ExcelAddressBase.Table
- uid: OfficeOpenXml.ExcelAddressBase.AddressAbsolute
  commentId: P:OfficeOpenXml.ExcelAddressBase.AddressAbsolute
  parent: OfficeOpenXml.ExcelAddressBase
  name: AddressAbsolute
  nameWithType: ExcelAddressBase.AddressAbsolute
  fullName: OfficeOpenXml.ExcelAddressBase.AddressAbsolute
- uid: OfficeOpenXml.ExcelAddressBase.IsName
  commentId: P:OfficeOpenXml.ExcelAddressBase.IsName
  parent: OfficeOpenXml.ExcelAddressBase
  name: IsName
  nameWithType: ExcelAddressBase.IsName
  fullName: OfficeOpenXml.ExcelAddressBase.IsName
- uid: OfficeOpenXml.ExcelAddressBase.Validate
  commentId: M:OfficeOpenXml.ExcelAddressBase.Validate
  parent: OfficeOpenXml.ExcelAddressBase
  name: Validate()
  nameWithType: ExcelAddressBase.Validate()
  fullName: OfficeOpenXml.ExcelAddressBase.Validate()
  spec.csharp:
  - uid: OfficeOpenXml.ExcelAddressBase.Validate
    name: Validate
    nameWithType: ExcelAddressBase.Validate
    fullName: OfficeOpenXml.ExcelAddressBase.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelAddressBase.Validate
    name: Validate
    nameWithType: ExcelAddressBase.Validate
    fullName: OfficeOpenXml.ExcelAddressBase.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelAddressBase.Rows
  commentId: P:OfficeOpenXml.ExcelAddressBase.Rows
  parent: OfficeOpenXml.ExcelAddressBase
  name: Rows
  nameWithType: ExcelAddressBase.Rows
  fullName: OfficeOpenXml.ExcelAddressBase.Rows
- uid: OfficeOpenXml.ExcelAddressBase.Columns
  commentId: P:OfficeOpenXml.ExcelAddressBase.Columns
  parent: OfficeOpenXml.ExcelAddressBase
  name: Columns
  nameWithType: ExcelAddressBase.Columns
  fullName: OfficeOpenXml.ExcelAddressBase.Columns
- uid: OfficeOpenXml.ExcelAddressBase.IsFullRow
  commentId: P:OfficeOpenXml.ExcelAddressBase.IsFullRow
  parent: OfficeOpenXml.ExcelAddressBase
  name: IsFullRow
  nameWithType: ExcelAddressBase.IsFullRow
  fullName: OfficeOpenXml.ExcelAddressBase.IsFullRow
- uid: OfficeOpenXml.ExcelAddressBase.IsFullColumn
  commentId: P:OfficeOpenXml.ExcelAddressBase.IsFullColumn
  parent: OfficeOpenXml.ExcelAddressBase
  name: IsFullColumn
  nameWithType: ExcelAddressBase.IsFullColumn
  fullName: OfficeOpenXml.ExcelAddressBase.IsFullColumn
- uid: OfficeOpenXml.ExcelAddressBase.LocalAddress
  commentId: P:OfficeOpenXml.ExcelAddressBase.LocalAddress
  parent: OfficeOpenXml.ExcelAddressBase
  name: LocalAddress
  nameWithType: ExcelAddressBase.LocalAddress
  fullName: OfficeOpenXml.ExcelAddressBase.LocalAddress
- uid: OfficeOpenXml.ExcelAddressBase.IsExternal
  commentId: P:OfficeOpenXml.ExcelAddressBase.IsExternal
  parent: OfficeOpenXml.ExcelAddressBase
  name: IsExternal
  nameWithType: ExcelAddressBase.IsExternal
  fullName: OfficeOpenXml.ExcelAddressBase.IsExternal
- uid: OfficeOpenXml.ExcelCellBase.TranslateFromR1C1(System.String,System.Int32,System.Int32)
  commentId: M:OfficeOpenXml.ExcelCellBase.TranslateFromR1C1(System.String,System.Int32,System.Int32)
  parent: OfficeOpenXml.ExcelCellBase
  isExternal: true
  name: TranslateFromR1C1(String, Int32, Int32)
  nameWithType: ExcelCellBase.TranslateFromR1C1(String, Int32, Int32)
  fullName: OfficeOpenXml.ExcelCellBase.TranslateFromR1C1(System.String, System.Int32, System.Int32)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelCellBase.TranslateFromR1C1(System.String,System.Int32,System.Int32)
    name: TranslateFromR1C1
    nameWithType: ExcelCellBase.TranslateFromR1C1
    fullName: OfficeOpenXml.ExcelCellBase.TranslateFromR1C1
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelCellBase.TranslateFromR1C1(System.String,System.Int32,System.Int32)
    name: TranslateFromR1C1
    nameWithType: ExcelCellBase.TranslateFromR1C1
    fullName: OfficeOpenXml.ExcelCellBase.TranslateFromR1C1
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelCellBase.TranslateToR1C1(System.String,System.Int32,System.Int32)
  commentId: M:OfficeOpenXml.ExcelCellBase.TranslateToR1C1(System.String,System.Int32,System.Int32)
  parent: OfficeOpenXml.ExcelCellBase
  isExternal: true
  name: TranslateToR1C1(String, Int32, Int32)
  nameWithType: ExcelCellBase.TranslateToR1C1(String, Int32, Int32)
  fullName: OfficeOpenXml.ExcelCellBase.TranslateToR1C1(System.String, System.Int32, System.Int32)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelCellBase.TranslateToR1C1(System.String,System.Int32,System.Int32)
    name: TranslateToR1C1
    nameWithType: ExcelCellBase.TranslateToR1C1
    fullName: OfficeOpenXml.ExcelCellBase.TranslateToR1C1
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelCellBase.TranslateToR1C1(System.String,System.Int32,System.Int32)
    name: TranslateToR1C1
    nameWithType: ExcelCellBase.TranslateToR1C1
    fullName: OfficeOpenXml.ExcelCellBase.TranslateToR1C1
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelCellBase.GetColumnLetter(System.Int32)
  commentId: M:OfficeOpenXml.ExcelCellBase.GetColumnLetter(System.Int32)
  parent: OfficeOpenXml.ExcelCellBase
  isExternal: true
  name: GetColumnLetter(Int32)
  nameWithType: ExcelCellBase.GetColumnLetter(Int32)
  fullName: OfficeOpenXml.ExcelCellBase.GetColumnLetter(System.Int32)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelCellBase.GetColumnLetter(System.Int32)
    name: GetColumnLetter
    nameWithType: ExcelCellBase.GetColumnLetter
    fullName: OfficeOpenXml.ExcelCellBase.GetColumnLetter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelCellBase.GetColumnLetter(System.Int32)
    name: GetColumnLetter
    nameWithType: ExcelCellBase.GetColumnLetter
    fullName: OfficeOpenXml.ExcelCellBase.GetColumnLetter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelCellBase.GetColumnLetter(System.Int32,System.Boolean)
  commentId: M:OfficeOpenXml.ExcelCellBase.GetColumnLetter(System.Int32,System.Boolean)
  parent: OfficeOpenXml.ExcelCellBase
  isExternal: true
  name: GetColumnLetter(Int32, Boolean)
  nameWithType: ExcelCellBase.GetColumnLetter(Int32, Boolean)
  fullName: OfficeOpenXml.ExcelCellBase.GetColumnLetter(System.Int32, System.Boolean)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelCellBase.GetColumnLetter(System.Int32,System.Boolean)
    name: GetColumnLetter
    nameWithType: ExcelCellBase.GetColumnLetter
    fullName: OfficeOpenXml.ExcelCellBase.GetColumnLetter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelCellBase.GetColumnLetter(System.Int32,System.Boolean)
    name: GetColumnLetter
    nameWithType: ExcelCellBase.GetColumnLetter
    fullName: OfficeOpenXml.ExcelCellBase.GetColumnLetter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelCellBase.GetAddressRow(System.Int32,System.Boolean)
  commentId: M:OfficeOpenXml.ExcelCellBase.GetAddressRow(System.Int32,System.Boolean)
  parent: OfficeOpenXml.ExcelCellBase
  isExternal: true
  name: GetAddressRow(Int32, Boolean)
  nameWithType: ExcelCellBase.GetAddressRow(Int32, Boolean)
  fullName: OfficeOpenXml.ExcelCellBase.GetAddressRow(System.Int32, System.Boolean)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelCellBase.GetAddressRow(System.Int32,System.Boolean)
    name: GetAddressRow
    nameWithType: ExcelCellBase.GetAddressRow
    fullName: OfficeOpenXml.ExcelCellBase.GetAddressRow
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelCellBase.GetAddressRow(System.Int32,System.Boolean)
    name: GetAddressRow
    nameWithType: ExcelCellBase.GetAddressRow
    fullName: OfficeOpenXml.ExcelCellBase.GetAddressRow
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelCellBase.GetAddressCol(System.Int32,System.Boolean)
  commentId: M:OfficeOpenXml.ExcelCellBase.GetAddressCol(System.Int32,System.Boolean)
  parent: OfficeOpenXml.ExcelCellBase
  isExternal: true
  name: GetAddressCol(Int32, Boolean)
  nameWithType: ExcelCellBase.GetAddressCol(Int32, Boolean)
  fullName: OfficeOpenXml.ExcelCellBase.GetAddressCol(System.Int32, System.Boolean)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelCellBase.GetAddressCol(System.Int32,System.Boolean)
    name: GetAddressCol
    nameWithType: ExcelCellBase.GetAddressCol
    fullName: OfficeOpenXml.ExcelCellBase.GetAddressCol
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelCellBase.GetAddressCol(System.Int32,System.Boolean)
    name: GetAddressCol
    nameWithType: ExcelCellBase.GetAddressCol
    fullName: OfficeOpenXml.ExcelCellBase.GetAddressCol
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelCellBase.GetAddress(System.Int32,System.Int32)
  commentId: M:OfficeOpenXml.ExcelCellBase.GetAddress(System.Int32,System.Int32)
  parent: OfficeOpenXml.ExcelCellBase
  isExternal: true
  name: GetAddress(Int32, Int32)
  nameWithType: ExcelCellBase.GetAddress(Int32, Int32)
  fullName: OfficeOpenXml.ExcelCellBase.GetAddress(System.Int32, System.Int32)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelCellBase.GetAddress(System.Int32,System.Int32)
    name: GetAddress
    nameWithType: ExcelCellBase.GetAddress
    fullName: OfficeOpenXml.ExcelCellBase.GetAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelCellBase.GetAddress(System.Int32,System.Int32)
    name: GetAddress
    nameWithType: ExcelCellBase.GetAddress
    fullName: OfficeOpenXml.ExcelCellBase.GetAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelCellBase.GetAddress(System.Int32,System.Boolean,System.Int32,System.Boolean)
  commentId: M:OfficeOpenXml.ExcelCellBase.GetAddress(System.Int32,System.Boolean,System.Int32,System.Boolean)
  parent: OfficeOpenXml.ExcelCellBase
  isExternal: true
  name: GetAddress(Int32, Boolean, Int32, Boolean)
  nameWithType: ExcelCellBase.GetAddress(Int32, Boolean, Int32, Boolean)
  fullName: OfficeOpenXml.ExcelCellBase.GetAddress(System.Int32, System.Boolean, System.Int32, System.Boolean)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelCellBase.GetAddress(System.Int32,System.Boolean,System.Int32,System.Boolean)
    name: GetAddress
    nameWithType: ExcelCellBase.GetAddress
    fullName: OfficeOpenXml.ExcelCellBase.GetAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelCellBase.GetAddress(System.Int32,System.Boolean,System.Int32,System.Boolean)
    name: GetAddress
    nameWithType: ExcelCellBase.GetAddress
    fullName: OfficeOpenXml.ExcelCellBase.GetAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelCellBase.GetAddress(System.Int32,System.Int32,System.Boolean)
  commentId: M:OfficeOpenXml.ExcelCellBase.GetAddress(System.Int32,System.Int32,System.Boolean)
  parent: OfficeOpenXml.ExcelCellBase
  isExternal: true
  name: GetAddress(Int32, Int32, Boolean)
  nameWithType: ExcelCellBase.GetAddress(Int32, Int32, Boolean)
  fullName: OfficeOpenXml.ExcelCellBase.GetAddress(System.Int32, System.Int32, System.Boolean)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelCellBase.GetAddress(System.Int32,System.Int32,System.Boolean)
    name: GetAddress
    nameWithType: ExcelCellBase.GetAddress
    fullName: OfficeOpenXml.ExcelCellBase.GetAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelCellBase.GetAddress(System.Int32,System.Int32,System.Boolean)
    name: GetAddress
    nameWithType: ExcelCellBase.GetAddress
    fullName: OfficeOpenXml.ExcelCellBase.GetAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelCellBase.GetAddress(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:OfficeOpenXml.ExcelCellBase.GetAddress(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: OfficeOpenXml.ExcelCellBase
  isExternal: true
  name: GetAddress(Int32, Int32, Int32, Int32)
  nameWithType: ExcelCellBase.GetAddress(Int32, Int32, Int32, Int32)
  fullName: OfficeOpenXml.ExcelCellBase.GetAddress(System.Int32, System.Int32, System.Int32, System.Int32)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelCellBase.GetAddress(System.Int32,System.Int32,System.Int32,System.Int32)
    name: GetAddress
    nameWithType: ExcelCellBase.GetAddress
    fullName: OfficeOpenXml.ExcelCellBase.GetAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelCellBase.GetAddress(System.Int32,System.Int32,System.Int32,System.Int32)
    name: GetAddress
    nameWithType: ExcelCellBase.GetAddress
    fullName: OfficeOpenXml.ExcelCellBase.GetAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelCellBase.GetAddress(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  commentId: M:OfficeOpenXml.ExcelCellBase.GetAddress(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  parent: OfficeOpenXml.ExcelCellBase
  isExternal: true
  name: GetAddress(Int32, Int32, Int32, Int32, Boolean)
  nameWithType: ExcelCellBase.GetAddress(Int32, Int32, Int32, Int32, Boolean)
  fullName: OfficeOpenXml.ExcelCellBase.GetAddress(System.Int32, System.Int32, System.Int32, System.Int32, System.Boolean)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelCellBase.GetAddress(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
    name: GetAddress
    nameWithType: ExcelCellBase.GetAddress
    fullName: OfficeOpenXml.ExcelCellBase.GetAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelCellBase.GetAddress(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
    name: GetAddress
    nameWithType: ExcelCellBase.GetAddress
    fullName: OfficeOpenXml.ExcelCellBase.GetAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelCellBase.GetAddress(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:OfficeOpenXml.ExcelCellBase.GetAddress(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  parent: OfficeOpenXml.ExcelCellBase
  isExternal: true
  name: GetAddress(Int32, Int32, Int32, Int32, Boolean, Boolean, Boolean, Boolean)
  nameWithType: ExcelCellBase.GetAddress(Int32, Int32, Int32, Int32, Boolean, Boolean, Boolean, Boolean)
  fullName: OfficeOpenXml.ExcelCellBase.GetAddress(System.Int32, System.Int32, System.Int32, System.Int32, System.Boolean, System.Boolean, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelCellBase.GetAddress(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
    name: GetAddress
    nameWithType: ExcelCellBase.GetAddress
    fullName: OfficeOpenXml.ExcelCellBase.GetAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelCellBase.GetAddress(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
    name: GetAddress
    nameWithType: ExcelCellBase.GetAddress
    fullName: OfficeOpenXml.ExcelCellBase.GetAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelCellBase.GetFullAddress(System.String,System.String)
  commentId: M:OfficeOpenXml.ExcelCellBase.GetFullAddress(System.String,System.String)
  parent: OfficeOpenXml.ExcelCellBase
  isExternal: true
  name: GetFullAddress(String, String)
  nameWithType: ExcelCellBase.GetFullAddress(String, String)
  fullName: OfficeOpenXml.ExcelCellBase.GetFullAddress(System.String, System.String)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelCellBase.GetFullAddress(System.String,System.String)
    name: GetFullAddress
    nameWithType: ExcelCellBase.GetFullAddress
    fullName: OfficeOpenXml.ExcelCellBase.GetFullAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelCellBase.GetFullAddress(System.String,System.String)
    name: GetFullAddress
    nameWithType: ExcelCellBase.GetFullAddress
    fullName: OfficeOpenXml.ExcelCellBase.GetFullAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelCellBase.GetFullAddress(System.String,System.String,System.String)
  commentId: M:OfficeOpenXml.ExcelCellBase.GetFullAddress(System.String,System.String,System.String)
  parent: OfficeOpenXml.ExcelCellBase
  isExternal: true
  name: GetFullAddress(String, String, String)
  nameWithType: ExcelCellBase.GetFullAddress(String, String, String)
  fullName: OfficeOpenXml.ExcelCellBase.GetFullAddress(System.String, System.String, System.String)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelCellBase.GetFullAddress(System.String,System.String,System.String)
    name: GetFullAddress
    nameWithType: ExcelCellBase.GetFullAddress
    fullName: OfficeOpenXml.ExcelCellBase.GetFullAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelCellBase.GetFullAddress(System.String,System.String,System.String)
    name: GetFullAddress
    nameWithType: ExcelCellBase.GetFullAddress
    fullName: OfficeOpenXml.ExcelCellBase.GetFullAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelCellBase.IsSimpleAddress(System.String)
  commentId: M:OfficeOpenXml.ExcelCellBase.IsSimpleAddress(System.String)
  parent: OfficeOpenXml.ExcelCellBase
  isExternal: true
  name: IsSimpleAddress(String)
  nameWithType: ExcelCellBase.IsSimpleAddress(String)
  fullName: OfficeOpenXml.ExcelCellBase.IsSimpleAddress(System.String)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelCellBase.IsSimpleAddress(System.String)
    name: IsSimpleAddress
    nameWithType: ExcelCellBase.IsSimpleAddress
    fullName: OfficeOpenXml.ExcelCellBase.IsSimpleAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelCellBase.IsSimpleAddress(System.String)
    name: IsSimpleAddress
    nameWithType: ExcelCellBase.IsSimpleAddress
    fullName: OfficeOpenXml.ExcelCellBase.IsSimpleAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelCellBase.IsValidAddress(System.String)
  commentId: M:OfficeOpenXml.ExcelCellBase.IsValidAddress(System.String)
  parent: OfficeOpenXml.ExcelCellBase
  isExternal: true
  name: IsValidAddress(String)
  nameWithType: ExcelCellBase.IsValidAddress(String)
  fullName: OfficeOpenXml.ExcelCellBase.IsValidAddress(System.String)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelCellBase.IsValidAddress(System.String)
    name: IsValidAddress
    nameWithType: ExcelCellBase.IsValidAddress
    fullName: OfficeOpenXml.ExcelCellBase.IsValidAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelCellBase.IsValidAddress(System.String)
    name: IsValidAddress
    nameWithType: ExcelCellBase.IsValidAddress
    fullName: OfficeOpenXml.ExcelCellBase.IsValidAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelCellBase.IsValidTableAddress(System.String)
  commentId: M:OfficeOpenXml.ExcelCellBase.IsValidTableAddress(System.String)
  parent: OfficeOpenXml.ExcelCellBase
  isExternal: true
  name: IsValidTableAddress(String)
  nameWithType: ExcelCellBase.IsValidTableAddress(String)
  fullName: OfficeOpenXml.ExcelCellBase.IsValidTableAddress(System.String)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelCellBase.IsValidTableAddress(System.String)
    name: IsValidTableAddress
    nameWithType: ExcelCellBase.IsValidTableAddress
    fullName: OfficeOpenXml.ExcelCellBase.IsValidTableAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelCellBase.IsValidTableAddress(System.String)
    name: IsValidTableAddress
    nameWithType: ExcelCellBase.IsValidTableAddress
    fullName: OfficeOpenXml.ExcelCellBase.IsValidTableAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelCellBase.IsValidRangeAddress(System.String)
  commentId: M:OfficeOpenXml.ExcelCellBase.IsValidRangeAddress(System.String)
  parent: OfficeOpenXml.ExcelCellBase
  isExternal: true
  name: IsValidRangeAddress(String)
  nameWithType: ExcelCellBase.IsValidRangeAddress(String)
  fullName: OfficeOpenXml.ExcelCellBase.IsValidRangeAddress(System.String)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelCellBase.IsValidRangeAddress(System.String)
    name: IsValidRangeAddress
    nameWithType: ExcelCellBase.IsValidRangeAddress
    fullName: OfficeOpenXml.ExcelCellBase.IsValidRangeAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelCellBase.IsValidRangeAddress(System.String)
    name: IsValidRangeAddress
    nameWithType: ExcelCellBase.IsValidRangeAddress
    fullName: OfficeOpenXml.ExcelCellBase.IsValidRangeAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelCellBase.IsValidCellAddress(System.String)
  commentId: M:OfficeOpenXml.ExcelCellBase.IsValidCellAddress(System.String)
  parent: OfficeOpenXml.ExcelCellBase
  isExternal: true
  name: IsValidCellAddress(String)
  nameWithType: ExcelCellBase.IsValidCellAddress(String)
  fullName: OfficeOpenXml.ExcelCellBase.IsValidCellAddress(System.String)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelCellBase.IsValidCellAddress(System.String)
    name: IsValidCellAddress
    nameWithType: ExcelCellBase.IsValidCellAddress
    fullName: OfficeOpenXml.ExcelCellBase.IsValidCellAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelCellBase.IsValidCellAddress(System.String)
    name: IsValidCellAddress
    nameWithType: ExcelCellBase.IsValidCellAddress
    fullName: OfficeOpenXml.ExcelCellBase.IsValidCellAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.OfficeOpenXml.CalculationExtension.Calculate
  commentId: M:OfficeOpenXml.CalculationExtension.Calculate(OfficeOpenXml.ExcelRangeBase)
  parent: OfficeOpenXml.CalculationExtension
  definition: OfficeOpenXml.CalculationExtension.Calculate(OfficeOpenXml.ExcelRangeBase)
  name: Calculate()
  nameWithType: CalculationExtension.Calculate()
  fullName: OfficeOpenXml.CalculationExtension.Calculate()
  spec.csharp:
  - uid: OfficeOpenXml.CalculationExtension.Calculate
    name: Calculate
    nameWithType: CalculationExtension.Calculate
    fullName: OfficeOpenXml.CalculationExtension.Calculate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.CalculationExtension.Calculate
    name: Calculate
    nameWithType: CalculationExtension.Calculate
    fullName: OfficeOpenXml.CalculationExtension.Calculate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.OfficeOpenXml.CalculationExtension.Calculate(System.Action{OfficeOpenXml.FormulaParsing.ExcelCalculationOption})
  commentId: M:OfficeOpenXml.CalculationExtension.Calculate(OfficeOpenXml.ExcelRangeBase,System.Action{OfficeOpenXml.FormulaParsing.ExcelCalculationOption})
  parent: OfficeOpenXml.CalculationExtension
  definition: OfficeOpenXml.CalculationExtension.Calculate(OfficeOpenXml.ExcelRangeBase,System.Action{OfficeOpenXml.FormulaParsing.ExcelCalculationOption})
  name: Calculate(Action<ExcelCalculationOption>)
  nameWithType: CalculationExtension.Calculate(Action<ExcelCalculationOption>)
  fullName: OfficeOpenXml.CalculationExtension.Calculate(System.Action<OfficeOpenXml.FormulaParsing.ExcelCalculationOption>)
  nameWithType.vb: CalculationExtension.Calculate(Action(Of ExcelCalculationOption))
  fullName.vb: OfficeOpenXml.CalculationExtension.Calculate(System.Action(Of OfficeOpenXml.FormulaParsing.ExcelCalculationOption))
  name.vb: Calculate(Action(Of ExcelCalculationOption))
  spec.csharp:
  - uid: OfficeOpenXml.CalculationExtension.Calculate(System.Action{OfficeOpenXml.FormulaParsing.ExcelCalculationOption})
    name: Calculate
    nameWithType: CalculationExtension.Calculate
    fullName: OfficeOpenXml.CalculationExtension.Calculate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.FormulaParsing.ExcelCalculationOption
    name: ExcelCalculationOption
    nameWithType: ExcelCalculationOption
    fullName: OfficeOpenXml.FormulaParsing.ExcelCalculationOption
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.CalculationExtension.Calculate(System.Action{OfficeOpenXml.FormulaParsing.ExcelCalculationOption})
    name: Calculate
    nameWithType: CalculationExtension.Calculate
    fullName: OfficeOpenXml.CalculationExtension.Calculate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.FormulaParsing.ExcelCalculationOption
    name: ExcelCalculationOption
    nameWithType: ExcelCalculationOption
    fullName: OfficeOpenXml.FormulaParsing.ExcelCalculationOption
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.OfficeOpenXml.CalculationExtension.Calculate(OfficeOpenXml.FormulaParsing.ExcelCalculationOption)
  commentId: M:OfficeOpenXml.CalculationExtension.Calculate(OfficeOpenXml.ExcelRangeBase,OfficeOpenXml.FormulaParsing.ExcelCalculationOption)
  parent: OfficeOpenXml.CalculationExtension
  definition: OfficeOpenXml.CalculationExtension.Calculate(OfficeOpenXml.ExcelRangeBase,OfficeOpenXml.FormulaParsing.ExcelCalculationOption)
  name: Calculate(ExcelCalculationOption)
  nameWithType: CalculationExtension.Calculate(ExcelCalculationOption)
  fullName: OfficeOpenXml.CalculationExtension.Calculate(OfficeOpenXml.FormulaParsing.ExcelCalculationOption)
  spec.csharp:
  - uid: OfficeOpenXml.CalculationExtension.Calculate(OfficeOpenXml.FormulaParsing.ExcelCalculationOption)
    name: Calculate
    nameWithType: CalculationExtension.Calculate
    fullName: OfficeOpenXml.CalculationExtension.Calculate
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.FormulaParsing.ExcelCalculationOption
    name: ExcelCalculationOption
    nameWithType: ExcelCalculationOption
    fullName: OfficeOpenXml.FormulaParsing.ExcelCalculationOption
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.CalculationExtension.Calculate(OfficeOpenXml.FormulaParsing.ExcelCalculationOption)
    name: Calculate
    nameWithType: CalculationExtension.Calculate
    fullName: OfficeOpenXml.CalculationExtension.Calculate
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.FormulaParsing.ExcelCalculationOption
    name: ExcelCalculationOption
    nameWithType: ExcelCalculationOption
    fullName: OfficeOpenXml.FormulaParsing.ExcelCalculationOption
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.OfficeOpenXml.RangeExtensions.SkipColumns(System.Int32)
  commentId: M:OfficeOpenXml.RangeExtensions.SkipColumns(OfficeOpenXml.ExcelRangeBase,System.Int32)
  parent: OfficeOpenXml.RangeExtensions
  definition: OfficeOpenXml.RangeExtensions.SkipColumns(OfficeOpenXml.ExcelRangeBase,System.Int32)
  name: SkipColumns(Int32)
  nameWithType: RangeExtensions.SkipColumns(Int32)
  fullName: OfficeOpenXml.RangeExtensions.SkipColumns(System.Int32)
  spec.csharp:
  - uid: OfficeOpenXml.RangeExtensions.SkipColumns(System.Int32)
    name: SkipColumns
    nameWithType: RangeExtensions.SkipColumns
    fullName: OfficeOpenXml.RangeExtensions.SkipColumns
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.RangeExtensions.SkipColumns(System.Int32)
    name: SkipColumns
    nameWithType: RangeExtensions.SkipColumns
    fullName: OfficeOpenXml.RangeExtensions.SkipColumns
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.OfficeOpenXml.RangeExtensions.SkipRows(System.Int32)
  commentId: M:OfficeOpenXml.RangeExtensions.SkipRows(OfficeOpenXml.ExcelRangeBase,System.Int32)
  parent: OfficeOpenXml.RangeExtensions
  definition: OfficeOpenXml.RangeExtensions.SkipRows(OfficeOpenXml.ExcelRangeBase,System.Int32)
  name: SkipRows(Int32)
  nameWithType: RangeExtensions.SkipRows(Int32)
  fullName: OfficeOpenXml.RangeExtensions.SkipRows(System.Int32)
  spec.csharp:
  - uid: OfficeOpenXml.RangeExtensions.SkipRows(System.Int32)
    name: SkipRows
    nameWithType: RangeExtensions.SkipRows
    fullName: OfficeOpenXml.RangeExtensions.SkipRows
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.RangeExtensions.SkipRows(System.Int32)
    name: SkipRows
    nameWithType: RangeExtensions.SkipRows
    fullName: OfficeOpenXml.RangeExtensions.SkipRows
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.OfficeOpenXml.RangeExtensions.TakeColumns(System.Int32)
  commentId: M:OfficeOpenXml.RangeExtensions.TakeColumns(OfficeOpenXml.ExcelRangeBase,System.Int32)
  parent: OfficeOpenXml.RangeExtensions
  definition: OfficeOpenXml.RangeExtensions.TakeColumns(OfficeOpenXml.ExcelRangeBase,System.Int32)
  name: TakeColumns(Int32)
  nameWithType: RangeExtensions.TakeColumns(Int32)
  fullName: OfficeOpenXml.RangeExtensions.TakeColumns(System.Int32)
  spec.csharp:
  - uid: OfficeOpenXml.RangeExtensions.TakeColumns(System.Int32)
    name: TakeColumns
    nameWithType: RangeExtensions.TakeColumns
    fullName: OfficeOpenXml.RangeExtensions.TakeColumns
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.RangeExtensions.TakeColumns(System.Int32)
    name: TakeColumns
    nameWithType: RangeExtensions.TakeColumns
    fullName: OfficeOpenXml.RangeExtensions.TakeColumns
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.OfficeOpenXml.RangeExtensions.TakeRows(System.Int32)
  commentId: M:OfficeOpenXml.RangeExtensions.TakeRows(OfficeOpenXml.ExcelRangeBase,System.Int32)
  parent: OfficeOpenXml.RangeExtensions
  definition: OfficeOpenXml.RangeExtensions.TakeRows(OfficeOpenXml.ExcelRangeBase,System.Int32)
  name: TakeRows(Int32)
  nameWithType: RangeExtensions.TakeRows(Int32)
  fullName: OfficeOpenXml.RangeExtensions.TakeRows(System.Int32)
  spec.csharp:
  - uid: OfficeOpenXml.RangeExtensions.TakeRows(System.Int32)
    name: TakeRows
    nameWithType: RangeExtensions.TakeRows
    fullName: OfficeOpenXml.RangeExtensions.TakeRows
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.RangeExtensions.TakeRows(System.Int32)
    name: TakeRows
    nameWithType: RangeExtensions.TakeRows
    fullName: OfficeOpenXml.RangeExtensions.TakeRows
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.OfficeOpenXml.RangeExtensions.TakeSingleColumn(System.Int32)
  commentId: M:OfficeOpenXml.RangeExtensions.TakeSingleColumn(OfficeOpenXml.ExcelRangeBase,System.Int32)
  parent: OfficeOpenXml.RangeExtensions
  definition: OfficeOpenXml.RangeExtensions.TakeSingleColumn(OfficeOpenXml.ExcelRangeBase,System.Int32)
  name: TakeSingleColumn(Int32)
  nameWithType: RangeExtensions.TakeSingleColumn(Int32)
  fullName: OfficeOpenXml.RangeExtensions.TakeSingleColumn(System.Int32)
  spec.csharp:
  - uid: OfficeOpenXml.RangeExtensions.TakeSingleColumn(System.Int32)
    name: TakeSingleColumn
    nameWithType: RangeExtensions.TakeSingleColumn
    fullName: OfficeOpenXml.RangeExtensions.TakeSingleColumn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.RangeExtensions.TakeSingleColumn(System.Int32)
    name: TakeSingleColumn
    nameWithType: RangeExtensions.TakeSingleColumn
    fullName: OfficeOpenXml.RangeExtensions.TakeSingleColumn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.OfficeOpenXml.RangeExtensions.TakeColumnsBetween(System.Int32,System.Int32)
  commentId: M:OfficeOpenXml.RangeExtensions.TakeColumnsBetween(OfficeOpenXml.ExcelRangeBase,System.Int32,System.Int32)
  parent: OfficeOpenXml.RangeExtensions
  definition: OfficeOpenXml.RangeExtensions.TakeColumnsBetween(OfficeOpenXml.ExcelRangeBase,System.Int32,System.Int32)
  name: TakeColumnsBetween(Int32, Int32)
  nameWithType: RangeExtensions.TakeColumnsBetween(Int32, Int32)
  fullName: OfficeOpenXml.RangeExtensions.TakeColumnsBetween(System.Int32, System.Int32)
  spec.csharp:
  - uid: OfficeOpenXml.RangeExtensions.TakeColumnsBetween(System.Int32,System.Int32)
    name: TakeColumnsBetween
    nameWithType: RangeExtensions.TakeColumnsBetween
    fullName: OfficeOpenXml.RangeExtensions.TakeColumnsBetween
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.RangeExtensions.TakeColumnsBetween(System.Int32,System.Int32)
    name: TakeColumnsBetween
    nameWithType: RangeExtensions.TakeColumnsBetween
    fullName: OfficeOpenXml.RangeExtensions.TakeColumnsBetween
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.OfficeOpenXml.RangeExtensions.TakeSingleRow(System.Int32)
  commentId: M:OfficeOpenXml.RangeExtensions.TakeSingleRow(OfficeOpenXml.ExcelRangeBase,System.Int32)
  parent: OfficeOpenXml.RangeExtensions
  definition: OfficeOpenXml.RangeExtensions.TakeSingleRow(OfficeOpenXml.ExcelRangeBase,System.Int32)
  name: TakeSingleRow(Int32)
  nameWithType: RangeExtensions.TakeSingleRow(Int32)
  fullName: OfficeOpenXml.RangeExtensions.TakeSingleRow(System.Int32)
  spec.csharp:
  - uid: OfficeOpenXml.RangeExtensions.TakeSingleRow(System.Int32)
    name: TakeSingleRow
    nameWithType: RangeExtensions.TakeSingleRow
    fullName: OfficeOpenXml.RangeExtensions.TakeSingleRow
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.RangeExtensions.TakeSingleRow(System.Int32)
    name: TakeSingleRow
    nameWithType: RangeExtensions.TakeSingleRow
    fullName: OfficeOpenXml.RangeExtensions.TakeSingleRow
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.OfficeOpenXml.RangeExtensions.TakeRowsBetween(System.Int32,System.Int32)
  commentId: M:OfficeOpenXml.RangeExtensions.TakeRowsBetween(OfficeOpenXml.ExcelRangeBase,System.Int32,System.Int32)
  parent: OfficeOpenXml.RangeExtensions
  definition: OfficeOpenXml.RangeExtensions.TakeRowsBetween(OfficeOpenXml.ExcelRangeBase,System.Int32,System.Int32)
  name: TakeRowsBetween(Int32, Int32)
  nameWithType: RangeExtensions.TakeRowsBetween(Int32, Int32)
  fullName: OfficeOpenXml.RangeExtensions.TakeRowsBetween(System.Int32, System.Int32)
  spec.csharp:
  - uid: OfficeOpenXml.RangeExtensions.TakeRowsBetween(System.Int32,System.Int32)
    name: TakeRowsBetween
    nameWithType: RangeExtensions.TakeRowsBetween
    fullName: OfficeOpenXml.RangeExtensions.TakeRowsBetween
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.RangeExtensions.TakeRowsBetween(System.Int32,System.Int32)
    name: TakeRowsBetween
    nameWithType: RangeExtensions.TakeRowsBetween
    fullName: OfficeOpenXml.RangeExtensions.TakeRowsBetween
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.OfficeOpenXml.RangeExtensions.TakeSingleCell(System.Int32,System.Int32)
  commentId: M:OfficeOpenXml.RangeExtensions.TakeSingleCell(OfficeOpenXml.ExcelRangeBase,System.Int32,System.Int32)
  parent: OfficeOpenXml.RangeExtensions
  definition: OfficeOpenXml.RangeExtensions.TakeSingleCell(OfficeOpenXml.ExcelRangeBase,System.Int32,System.Int32)
  name: TakeSingleCell(Int32, Int32)
  nameWithType: RangeExtensions.TakeSingleCell(Int32, Int32)
  fullName: OfficeOpenXml.RangeExtensions.TakeSingleCell(System.Int32, System.Int32)
  spec.csharp:
  - uid: OfficeOpenXml.RangeExtensions.TakeSingleCell(System.Int32,System.Int32)
    name: TakeSingleCell
    nameWithType: RangeExtensions.TakeSingleCell
    fullName: OfficeOpenXml.RangeExtensions.TakeSingleCell
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.RangeExtensions.TakeSingleCell(System.Int32,System.Int32)
    name: TakeSingleCell
    nameWithType: RangeExtensions.TakeSingleCell
    fullName: OfficeOpenXml.RangeExtensions.TakeSingleCell
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.FillList``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:OfficeOpenXml.ExcelRangeBase.FillList``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: FillList<T>(IEnumerable<T>)
  nameWithType: ExcelRangeBase.FillList<T>(IEnumerable<T>)
  fullName: OfficeOpenXml.ExcelRangeBase.FillList<T>(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: ExcelRangeBase.FillList(Of T)(IEnumerable(Of T))
  fullName.vb: OfficeOpenXml.ExcelRangeBase.FillList(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: FillList(Of T)(IEnumerable(Of T))
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.FillList``1(System.Collections.Generic.IEnumerable{``0})
    name: FillList<T>
    nameWithType: ExcelRangeBase.FillList<T>
    fullName: OfficeOpenXml.ExcelRangeBase.FillList<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.FillList``1(System.Collections.Generic.IEnumerable{``0})
    name: FillList(Of T)
    nameWithType: ExcelRangeBase.FillList(Of T)
    fullName: OfficeOpenXml.ExcelRangeBase.FillList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.FillList``1(System.Collections.Generic.IEnumerable{``0},System.Action{OfficeOpenXml.Core.Worksheet.Fill.FillListParams})
  commentId: M:OfficeOpenXml.ExcelRangeBase.FillList``1(System.Collections.Generic.IEnumerable{``0},System.Action{OfficeOpenXml.Core.Worksheet.Fill.FillListParams})
  isExternal: true
  name: FillList<T>(IEnumerable<T>, Action<FillListParams>)
  nameWithType: ExcelRangeBase.FillList<T>(IEnumerable<T>, Action<FillListParams>)
  fullName: OfficeOpenXml.ExcelRangeBase.FillList<T>(System.Collections.Generic.IEnumerable<T>, System.Action<OfficeOpenXml.Core.Worksheet.Fill.FillListParams>)
  nameWithType.vb: ExcelRangeBase.FillList(Of T)(IEnumerable(Of T), Action(Of FillListParams))
  fullName.vb: OfficeOpenXml.ExcelRangeBase.FillList(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Action(Of OfficeOpenXml.Core.Worksheet.Fill.FillListParams))
  name.vb: FillList(Of T)(IEnumerable(Of T), Action(Of FillListParams))
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.FillList``1(System.Collections.Generic.IEnumerable{``0},System.Action{OfficeOpenXml.Core.Worksheet.Fill.FillListParams})
    name: FillList<T>
    nameWithType: ExcelRangeBase.FillList<T>
    fullName: OfficeOpenXml.ExcelRangeBase.FillList<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.Core.Worksheet.Fill.FillListParams
    name: FillListParams
    nameWithType: FillListParams
    fullName: OfficeOpenXml.Core.Worksheet.Fill.FillListParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.FillList``1(System.Collections.Generic.IEnumerable{``0},System.Action{OfficeOpenXml.Core.Worksheet.Fill.FillListParams})
    name: FillList(Of T)
    nameWithType: ExcelRangeBase.FillList(Of T)
    fullName: OfficeOpenXml.ExcelRangeBase.FillList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.Core.Worksheet.Fill.FillListParams
    name: FillListParams
    nameWithType: FillListParams
    fullName: OfficeOpenXml.Core.Worksheet.Fill.FillListParams
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.LoadFromCollection``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:OfficeOpenXml.ExcelRangeBase.LoadFromCollection``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: LoadFromCollection<T>(IEnumerable<T>)
  nameWithType: ExcelRangeBase.LoadFromCollection<T>(IEnumerable<T>)
  fullName: OfficeOpenXml.ExcelRangeBase.LoadFromCollection<T>(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: ExcelRangeBase.LoadFromCollection(Of T)(IEnumerable(Of T))
  fullName.vb: OfficeOpenXml.ExcelRangeBase.LoadFromCollection(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: LoadFromCollection(Of T)(IEnumerable(Of T))
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromCollection``1(System.Collections.Generic.IEnumerable{``0})
    name: LoadFromCollection<T>
    nameWithType: ExcelRangeBase.LoadFromCollection<T>
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromCollection<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromCollection``1(System.Collections.Generic.IEnumerable{``0})
    name: LoadFromCollection(Of T)
    nameWithType: ExcelRangeBase.LoadFromCollection(Of T)
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromCollection(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.LoadFromCollection``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)
  commentId: M:OfficeOpenXml.ExcelRangeBase.LoadFromCollection``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)
  isExternal: true
  name: LoadFromCollection<T>(IEnumerable<T>, Boolean)
  nameWithType: ExcelRangeBase.LoadFromCollection<T>(IEnumerable<T>, Boolean)
  fullName: OfficeOpenXml.ExcelRangeBase.LoadFromCollection<T>(System.Collections.Generic.IEnumerable<T>, System.Boolean)
  nameWithType.vb: ExcelRangeBase.LoadFromCollection(Of T)(IEnumerable(Of T), Boolean)
  fullName.vb: OfficeOpenXml.ExcelRangeBase.LoadFromCollection(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Boolean)
  name.vb: LoadFromCollection(Of T)(IEnumerable(Of T), Boolean)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromCollection``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)
    name: LoadFromCollection<T>
    nameWithType: ExcelRangeBase.LoadFromCollection<T>
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromCollection<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromCollection``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)
    name: LoadFromCollection(Of T)
    nameWithType: ExcelRangeBase.LoadFromCollection(Of T)
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromCollection(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.LoadFromCollection``1(System.Collections.Generic.IEnumerable{``0},System.Boolean,System.Nullable{OfficeOpenXml.Table.TableStyles})
  commentId: M:OfficeOpenXml.ExcelRangeBase.LoadFromCollection``1(System.Collections.Generic.IEnumerable{``0},System.Boolean,System.Nullable{OfficeOpenXml.Table.TableStyles})
  isExternal: true
  name: LoadFromCollection<T>(IEnumerable<T>, Boolean, Nullable<TableStyles>)
  nameWithType: ExcelRangeBase.LoadFromCollection<T>(IEnumerable<T>, Boolean, Nullable<TableStyles>)
  fullName: OfficeOpenXml.ExcelRangeBase.LoadFromCollection<T>(System.Collections.Generic.IEnumerable<T>, System.Boolean, System.Nullable<OfficeOpenXml.Table.TableStyles>)
  nameWithType.vb: ExcelRangeBase.LoadFromCollection(Of T)(IEnumerable(Of T), Boolean, Nullable(Of TableStyles))
  fullName.vb: OfficeOpenXml.ExcelRangeBase.LoadFromCollection(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Boolean, System.Nullable(Of OfficeOpenXml.Table.TableStyles))
  name.vb: LoadFromCollection(Of T)(IEnumerable(Of T), Boolean, Nullable(Of TableStyles))
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromCollection``1(System.Collections.Generic.IEnumerable{``0},System.Boolean,System.Nullable{OfficeOpenXml.Table.TableStyles})
    name: LoadFromCollection<T>
    nameWithType: ExcelRangeBase.LoadFromCollection<T>
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromCollection<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.Table.TableStyles
    name: TableStyles
    nameWithType: TableStyles
    fullName: OfficeOpenXml.Table.TableStyles
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromCollection``1(System.Collections.Generic.IEnumerable{``0},System.Boolean,System.Nullable{OfficeOpenXml.Table.TableStyles})
    name: LoadFromCollection(Of T)
    nameWithType: ExcelRangeBase.LoadFromCollection(Of T)
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromCollection(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.Table.TableStyles
    name: TableStyles
    nameWithType: TableStyles
    fullName: OfficeOpenXml.Table.TableStyles
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.LoadFromCollection``1(System.Collections.Generic.IEnumerable{``0},System.Boolean,System.Nullable{OfficeOpenXml.Table.TableStyles},System.Reflection.BindingFlags,System.Reflection.MemberInfo[])
  commentId: M:OfficeOpenXml.ExcelRangeBase.LoadFromCollection``1(System.Collections.Generic.IEnumerable{``0},System.Boolean,System.Nullable{OfficeOpenXml.Table.TableStyles},System.Reflection.BindingFlags,System.Reflection.MemberInfo[])
  isExternal: true
  name: LoadFromCollection<T>(IEnumerable<T>, Boolean, Nullable<TableStyles>, BindingFlags, MemberInfo[])
  nameWithType: ExcelRangeBase.LoadFromCollection<T>(IEnumerable<T>, Boolean, Nullable<TableStyles>, BindingFlags, MemberInfo[])
  fullName: OfficeOpenXml.ExcelRangeBase.LoadFromCollection<T>(System.Collections.Generic.IEnumerable<T>, System.Boolean, System.Nullable<OfficeOpenXml.Table.TableStyles>, System.Reflection.BindingFlags, System.Reflection.MemberInfo[])
  nameWithType.vb: ExcelRangeBase.LoadFromCollection(Of T)(IEnumerable(Of T), Boolean, Nullable(Of TableStyles), BindingFlags, MemberInfo())
  fullName.vb: OfficeOpenXml.ExcelRangeBase.LoadFromCollection(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Boolean, System.Nullable(Of OfficeOpenXml.Table.TableStyles), System.Reflection.BindingFlags, System.Reflection.MemberInfo())
  name.vb: LoadFromCollection(Of T)(IEnumerable(Of T), Boolean, Nullable(Of TableStyles), BindingFlags, MemberInfo())
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromCollection``1(System.Collections.Generic.IEnumerable{``0},System.Boolean,System.Nullable{OfficeOpenXml.Table.TableStyles},System.Reflection.BindingFlags,System.Reflection.MemberInfo[])
    name: LoadFromCollection<T>
    nameWithType: ExcelRangeBase.LoadFromCollection<T>
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromCollection<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.Table.TableStyles
    name: TableStyles
    nameWithType: TableStyles
    fullName: OfficeOpenXml.Table.TableStyles
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    nameWithType: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    nameWithType: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromCollection``1(System.Collections.Generic.IEnumerable{``0},System.Boolean,System.Nullable{OfficeOpenXml.Table.TableStyles},System.Reflection.BindingFlags,System.Reflection.MemberInfo[])
    name: LoadFromCollection(Of T)
    nameWithType: ExcelRangeBase.LoadFromCollection(Of T)
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromCollection(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.Table.TableStyles
    name: TableStyles
    nameWithType: TableStyles
    fullName: OfficeOpenXml.Table.TableStyles
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    nameWithType: BindingFlags
    fullName: System.Reflection.BindingFlags
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    nameWithType: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.LoadFromCollection``1(System.Collections.Generic.IEnumerable{``0},System.Action{OfficeOpenXml.LoadFunctions.Params.LoadFromCollectionParams})
  commentId: M:OfficeOpenXml.ExcelRangeBase.LoadFromCollection``1(System.Collections.Generic.IEnumerable{``0},System.Action{OfficeOpenXml.LoadFunctions.Params.LoadFromCollectionParams})
  isExternal: true
  name: LoadFromCollection<T>(IEnumerable<T>, Action<LoadFromCollectionParams>)
  nameWithType: ExcelRangeBase.LoadFromCollection<T>(IEnumerable<T>, Action<LoadFromCollectionParams>)
  fullName: OfficeOpenXml.ExcelRangeBase.LoadFromCollection<T>(System.Collections.Generic.IEnumerable<T>, System.Action<OfficeOpenXml.LoadFunctions.Params.LoadFromCollectionParams>)
  nameWithType.vb: ExcelRangeBase.LoadFromCollection(Of T)(IEnumerable(Of T), Action(Of LoadFromCollectionParams))
  fullName.vb: OfficeOpenXml.ExcelRangeBase.LoadFromCollection(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Action(Of OfficeOpenXml.LoadFunctions.Params.LoadFromCollectionParams))
  name.vb: LoadFromCollection(Of T)(IEnumerable(Of T), Action(Of LoadFromCollectionParams))
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromCollection``1(System.Collections.Generic.IEnumerable{``0},System.Action{OfficeOpenXml.LoadFunctions.Params.LoadFromCollectionParams})
    name: LoadFromCollection<T>
    nameWithType: ExcelRangeBase.LoadFromCollection<T>
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromCollection<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.LoadFunctions.Params.LoadFromCollectionParams
    name: LoadFromCollectionParams
    nameWithType: LoadFromCollectionParams
    fullName: OfficeOpenXml.LoadFunctions.Params.LoadFromCollectionParams
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.LoadFromCollection``1(System.Collections.Generic.IEnumerable{``0},System.Action{OfficeOpenXml.LoadFunctions.Params.LoadFromCollectionParams})
    name: LoadFromCollection(Of T)
    nameWithType: ExcelRangeBase.LoadFromCollection(Of T)
    fullName: OfficeOpenXml.ExcelRangeBase.LoadFromCollection(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.LoadFunctions.Params.LoadFromCollectionParams
    name: LoadFromCollectionParams
    nameWithType: LoadFromCollectionParams
    fullName: OfficeOpenXml.LoadFunctions.Params.LoadFromCollectionParams
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings``1(System.Func{OfficeOpenXml.Export.ToCollection.ToCollectionRow,``0})
  commentId: M:OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings``1(System.Func{OfficeOpenXml.Export.ToCollection.ToCollectionRow,``0})
  isExternal: true
  name: ToCollectionWithMappings<T>(Func<ToCollectionRow, T>)
  nameWithType: ExcelRangeBase.ToCollectionWithMappings<T>(Func<ToCollectionRow, T>)
  fullName: OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings<T>(System.Func<OfficeOpenXml.Export.ToCollection.ToCollectionRow, T>)
  nameWithType.vb: ExcelRangeBase.ToCollectionWithMappings(Of T)(Func(Of ToCollectionRow, T))
  fullName.vb: OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings(Of T)(System.Func(Of OfficeOpenXml.Export.ToCollection.ToCollectionRow, T))
  name.vb: ToCollectionWithMappings(Of T)(Func(Of ToCollectionRow, T))
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings``1(System.Func{OfficeOpenXml.Export.ToCollection.ToCollectionRow,``0})
    name: ToCollectionWithMappings<T>
    nameWithType: ExcelRangeBase.ToCollectionWithMappings<T>
    fullName: OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.Export.ToCollection.ToCollectionRow
    name: ToCollectionRow
    nameWithType: ToCollectionRow
    fullName: OfficeOpenXml.Export.ToCollection.ToCollectionRow
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings``1(System.Func{OfficeOpenXml.Export.ToCollection.ToCollectionRow,``0})
    name: ToCollectionWithMappings(Of T)
    nameWithType: ExcelRangeBase.ToCollectionWithMappings(Of T)
    fullName: OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.Export.ToCollection.ToCollectionRow
    name: ToCollectionRow
    nameWithType: ToCollectionRow
    fullName: OfficeOpenXml.Export.ToCollection.ToCollectionRow
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings``1(System.Func{OfficeOpenXml.Export.ToCollection.ToCollectionRow,``0},System.Action{OfficeOpenXml.ToCollectionRangeOptions})
  commentId: M:OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings``1(System.Func{OfficeOpenXml.Export.ToCollection.ToCollectionRow,``0},System.Action{OfficeOpenXml.ToCollectionRangeOptions})
  isExternal: true
  name: ToCollectionWithMappings<T>(Func<ToCollectionRow, T>, Action<ToCollectionRangeOptions>)
  nameWithType: ExcelRangeBase.ToCollectionWithMappings<T>(Func<ToCollectionRow, T>, Action<ToCollectionRangeOptions>)
  fullName: OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings<T>(System.Func<OfficeOpenXml.Export.ToCollection.ToCollectionRow, T>, System.Action<OfficeOpenXml.ToCollectionRangeOptions>)
  nameWithType.vb: ExcelRangeBase.ToCollectionWithMappings(Of T)(Func(Of ToCollectionRow, T), Action(Of ToCollectionRangeOptions))
  fullName.vb: OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings(Of T)(System.Func(Of OfficeOpenXml.Export.ToCollection.ToCollectionRow, T), System.Action(Of OfficeOpenXml.ToCollectionRangeOptions))
  name.vb: ToCollectionWithMappings(Of T)(Func(Of ToCollectionRow, T), Action(Of ToCollectionRangeOptions))
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings``1(System.Func{OfficeOpenXml.Export.ToCollection.ToCollectionRow,``0},System.Action{OfficeOpenXml.ToCollectionRangeOptions})
    name: ToCollectionWithMappings<T>
    nameWithType: ExcelRangeBase.ToCollectionWithMappings<T>
    fullName: OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.Export.ToCollection.ToCollectionRow
    name: ToCollectionRow
    nameWithType: ToCollectionRow
    fullName: OfficeOpenXml.Export.ToCollection.ToCollectionRow
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.ToCollectionRangeOptions
    name: ToCollectionRangeOptions
    nameWithType: ToCollectionRangeOptions
    fullName: OfficeOpenXml.ToCollectionRangeOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings``1(System.Func{OfficeOpenXml.Export.ToCollection.ToCollectionRow,``0},System.Action{OfficeOpenXml.ToCollectionRangeOptions})
    name: ToCollectionWithMappings(Of T)
    nameWithType: ExcelRangeBase.ToCollectionWithMappings(Of T)
    fullName: OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.Export.ToCollection.ToCollectionRow
    name: ToCollectionRow
    nameWithType: ToCollectionRow
    fullName: OfficeOpenXml.Export.ToCollection.ToCollectionRow
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.ToCollectionRangeOptions
    name: ToCollectionRangeOptions
    nameWithType: ToCollectionRangeOptions
    fullName: OfficeOpenXml.ToCollectionRangeOptions
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings``1(System.Func{OfficeOpenXml.Export.ToCollection.ToCollectionRow,``0},OfficeOpenXml.ToCollectionRangeOptions)
  commentId: M:OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings``1(System.Func{OfficeOpenXml.Export.ToCollection.ToCollectionRow,``0},OfficeOpenXml.ToCollectionRangeOptions)
  isExternal: true
  name: ToCollectionWithMappings<T>(Func<ToCollectionRow, T>, ToCollectionRangeOptions)
  nameWithType: ExcelRangeBase.ToCollectionWithMappings<T>(Func<ToCollectionRow, T>, ToCollectionRangeOptions)
  fullName: OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings<T>(System.Func<OfficeOpenXml.Export.ToCollection.ToCollectionRow, T>, OfficeOpenXml.ToCollectionRangeOptions)
  nameWithType.vb: ExcelRangeBase.ToCollectionWithMappings(Of T)(Func(Of ToCollectionRow, T), ToCollectionRangeOptions)
  fullName.vb: OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings(Of T)(System.Func(Of OfficeOpenXml.Export.ToCollection.ToCollectionRow, T), OfficeOpenXml.ToCollectionRangeOptions)
  name.vb: ToCollectionWithMappings(Of T)(Func(Of ToCollectionRow, T), ToCollectionRangeOptions)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings``1(System.Func{OfficeOpenXml.Export.ToCollection.ToCollectionRow,``0},OfficeOpenXml.ToCollectionRangeOptions)
    name: ToCollectionWithMappings<T>
    nameWithType: ExcelRangeBase.ToCollectionWithMappings<T>
    fullName: OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.Export.ToCollection.ToCollectionRow
    name: ToCollectionRow
    nameWithType: ToCollectionRow
    fullName: OfficeOpenXml.Export.ToCollection.ToCollectionRow
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ToCollectionRangeOptions
    name: ToCollectionRangeOptions
    nameWithType: ToCollectionRangeOptions
    fullName: OfficeOpenXml.ToCollectionRangeOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings``1(System.Func{OfficeOpenXml.Export.ToCollection.ToCollectionRow,``0},OfficeOpenXml.ToCollectionRangeOptions)
    name: ToCollectionWithMappings(Of T)
    nameWithType: ExcelRangeBase.ToCollectionWithMappings(Of T)
    fullName: OfficeOpenXml.ExcelRangeBase.ToCollectionWithMappings(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.Export.ToCollection.ToCollectionRow
    name: ToCollectionRow
    nameWithType: ToCollectionRow
    fullName: OfficeOpenXml.Export.ToCollection.ToCollectionRow
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ToCollectionRangeOptions
    name: ToCollectionRangeOptions
    nameWithType: ToCollectionRangeOptions
    fullName: OfficeOpenXml.ToCollectionRangeOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.CalculationExtension.Calculate(OfficeOpenXml.ExcelRangeBase)
  commentId: M:OfficeOpenXml.CalculationExtension.Calculate(OfficeOpenXml.ExcelRangeBase)
  name: Calculate(ExcelRangeBase)
  nameWithType: CalculationExtension.Calculate(ExcelRangeBase)
  fullName: OfficeOpenXml.CalculationExtension.Calculate(OfficeOpenXml.ExcelRangeBase)
  spec.csharp:
  - uid: OfficeOpenXml.CalculationExtension.Calculate(OfficeOpenXml.ExcelRangeBase)
    name: Calculate
    nameWithType: CalculationExtension.Calculate
    fullName: OfficeOpenXml.CalculationExtension.Calculate
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.ExcelRangeBase
    name: ExcelRangeBase
    nameWithType: ExcelRangeBase
    fullName: OfficeOpenXml.ExcelRangeBase
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.CalculationExtension.Calculate(OfficeOpenXml.ExcelRangeBase)
    name: Calculate
    nameWithType: CalculationExtension.Calculate
    fullName: OfficeOpenXml.CalculationExtension.Calculate
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.ExcelRangeBase
    name: ExcelRangeBase
    nameWithType: ExcelRangeBase
    fullName: OfficeOpenXml.ExcelRangeBase
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.CalculationExtension
  commentId: T:OfficeOpenXml.CalculationExtension
  parent: OfficeOpenXml
  name: CalculationExtension
  nameWithType: CalculationExtension
  fullName: OfficeOpenXml.CalculationExtension
- uid: OfficeOpenXml.CalculationExtension.Calculate(OfficeOpenXml.ExcelRangeBase,System.Action{OfficeOpenXml.FormulaParsing.ExcelCalculationOption})
  commentId: M:OfficeOpenXml.CalculationExtension.Calculate(OfficeOpenXml.ExcelRangeBase,System.Action{OfficeOpenXml.FormulaParsing.ExcelCalculationOption})
  isExternal: true
  name: Calculate(ExcelRangeBase, Action<ExcelCalculationOption>)
  nameWithType: CalculationExtension.Calculate(ExcelRangeBase, Action<ExcelCalculationOption>)
  fullName: OfficeOpenXml.CalculationExtension.Calculate(OfficeOpenXml.ExcelRangeBase, System.Action<OfficeOpenXml.FormulaParsing.ExcelCalculationOption>)
  nameWithType.vb: CalculationExtension.Calculate(ExcelRangeBase, Action(Of ExcelCalculationOption))
  fullName.vb: OfficeOpenXml.CalculationExtension.Calculate(OfficeOpenXml.ExcelRangeBase, System.Action(Of OfficeOpenXml.FormulaParsing.ExcelCalculationOption))
  name.vb: Calculate(ExcelRangeBase, Action(Of ExcelCalculationOption))
  spec.csharp:
  - uid: OfficeOpenXml.CalculationExtension.Calculate(OfficeOpenXml.ExcelRangeBase,System.Action{OfficeOpenXml.FormulaParsing.ExcelCalculationOption})
    name: Calculate
    nameWithType: CalculationExtension.Calculate
    fullName: OfficeOpenXml.CalculationExtension.Calculate
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.ExcelRangeBase
    name: ExcelRangeBase
    nameWithType: ExcelRangeBase
    fullName: OfficeOpenXml.ExcelRangeBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.FormulaParsing.ExcelCalculationOption
    name: ExcelCalculationOption
    nameWithType: ExcelCalculationOption
    fullName: OfficeOpenXml.FormulaParsing.ExcelCalculationOption
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.CalculationExtension.Calculate(OfficeOpenXml.ExcelRangeBase,System.Action{OfficeOpenXml.FormulaParsing.ExcelCalculationOption})
    name: Calculate
    nameWithType: CalculationExtension.Calculate
    fullName: OfficeOpenXml.CalculationExtension.Calculate
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.ExcelRangeBase
    name: ExcelRangeBase
    nameWithType: ExcelRangeBase
    fullName: OfficeOpenXml.ExcelRangeBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.FormulaParsing.ExcelCalculationOption
    name: ExcelCalculationOption
    nameWithType: ExcelCalculationOption
    fullName: OfficeOpenXml.FormulaParsing.ExcelCalculationOption
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.CalculationExtension.Calculate(OfficeOpenXml.ExcelRangeBase,OfficeOpenXml.FormulaParsing.ExcelCalculationOption)
  commentId: M:OfficeOpenXml.CalculationExtension.Calculate(OfficeOpenXml.ExcelRangeBase,OfficeOpenXml.FormulaParsing.ExcelCalculationOption)
  name: Calculate(ExcelRangeBase, ExcelCalculationOption)
  nameWithType: CalculationExtension.Calculate(ExcelRangeBase, ExcelCalculationOption)
  fullName: OfficeOpenXml.CalculationExtension.Calculate(OfficeOpenXml.ExcelRangeBase, OfficeOpenXml.FormulaParsing.ExcelCalculationOption)
  spec.csharp:
  - uid: OfficeOpenXml.CalculationExtension.Calculate(OfficeOpenXml.ExcelRangeBase,OfficeOpenXml.FormulaParsing.ExcelCalculationOption)
    name: Calculate
    nameWithType: CalculationExtension.Calculate
    fullName: OfficeOpenXml.CalculationExtension.Calculate
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.ExcelRangeBase
    name: ExcelRangeBase
    nameWithType: ExcelRangeBase
    fullName: OfficeOpenXml.ExcelRangeBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.FormulaParsing.ExcelCalculationOption
    name: ExcelCalculationOption
    nameWithType: ExcelCalculationOption
    fullName: OfficeOpenXml.FormulaParsing.ExcelCalculationOption
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.CalculationExtension.Calculate(OfficeOpenXml.ExcelRangeBase,OfficeOpenXml.FormulaParsing.ExcelCalculationOption)
    name: Calculate
    nameWithType: CalculationExtension.Calculate
    fullName: OfficeOpenXml.CalculationExtension.Calculate
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.ExcelRangeBase
    name: ExcelRangeBase
    nameWithType: ExcelRangeBase
    fullName: OfficeOpenXml.ExcelRangeBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.FormulaParsing.ExcelCalculationOption
    name: ExcelCalculationOption
    nameWithType: ExcelCalculationOption
    fullName: OfficeOpenXml.FormulaParsing.ExcelCalculationOption
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.RangeExtensions.SkipColumns(OfficeOpenXml.ExcelRangeBase,System.Int32)
  commentId: M:OfficeOpenXml.RangeExtensions.SkipColumns(OfficeOpenXml.ExcelRangeBase,System.Int32)
  isExternal: true
  name: SkipColumns(ExcelRangeBase, Int32)
  nameWithType: RangeExtensions.SkipColumns(ExcelRangeBase, Int32)
  fullName: OfficeOpenXml.RangeExtensions.SkipColumns(OfficeOpenXml.ExcelRangeBase, System.Int32)
  spec.csharp:
  - uid: OfficeOpenXml.RangeExtensions.SkipColumns(OfficeOpenXml.ExcelRangeBase,System.Int32)
    name: SkipColumns
    nameWithType: RangeExtensions.SkipColumns
    fullName: OfficeOpenXml.RangeExtensions.SkipColumns
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.ExcelRangeBase
    name: ExcelRangeBase
    nameWithType: ExcelRangeBase
    fullName: OfficeOpenXml.ExcelRangeBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.RangeExtensions.SkipColumns(OfficeOpenXml.ExcelRangeBase,System.Int32)
    name: SkipColumns
    nameWithType: RangeExtensions.SkipColumns
    fullName: OfficeOpenXml.RangeExtensions.SkipColumns
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.ExcelRangeBase
    name: ExcelRangeBase
    nameWithType: ExcelRangeBase
    fullName: OfficeOpenXml.ExcelRangeBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.RangeExtensions
  commentId: T:OfficeOpenXml.RangeExtensions
  parent: OfficeOpenXml
  name: RangeExtensions
  nameWithType: RangeExtensions
  fullName: OfficeOpenXml.RangeExtensions
- uid: OfficeOpenXml.RangeExtensions.SkipRows(OfficeOpenXml.ExcelRangeBase,System.Int32)
  commentId: M:OfficeOpenXml.RangeExtensions.SkipRows(OfficeOpenXml.ExcelRangeBase,System.Int32)
  isExternal: true
  name: SkipRows(ExcelRangeBase, Int32)
  nameWithType: RangeExtensions.SkipRows(ExcelRangeBase, Int32)
  fullName: OfficeOpenXml.RangeExtensions.SkipRows(OfficeOpenXml.ExcelRangeBase, System.Int32)
  spec.csharp:
  - uid: OfficeOpenXml.RangeExtensions.SkipRows(OfficeOpenXml.ExcelRangeBase,System.Int32)
    name: SkipRows
    nameWithType: RangeExtensions.SkipRows
    fullName: OfficeOpenXml.RangeExtensions.SkipRows
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.ExcelRangeBase
    name: ExcelRangeBase
    nameWithType: ExcelRangeBase
    fullName: OfficeOpenXml.ExcelRangeBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.RangeExtensions.SkipRows(OfficeOpenXml.ExcelRangeBase,System.Int32)
    name: SkipRows
    nameWithType: RangeExtensions.SkipRows
    fullName: OfficeOpenXml.RangeExtensions.SkipRows
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.ExcelRangeBase
    name: ExcelRangeBase
    nameWithType: ExcelRangeBase
    fullName: OfficeOpenXml.ExcelRangeBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.RangeExtensions.TakeColumns(OfficeOpenXml.ExcelRangeBase,System.Int32)
  commentId: M:OfficeOpenXml.RangeExtensions.TakeColumns(OfficeOpenXml.ExcelRangeBase,System.Int32)
  isExternal: true
  name: TakeColumns(ExcelRangeBase, Int32)
  nameWithType: RangeExtensions.TakeColumns(ExcelRangeBase, Int32)
  fullName: OfficeOpenXml.RangeExtensions.TakeColumns(OfficeOpenXml.ExcelRangeBase, System.Int32)
  spec.csharp:
  - uid: OfficeOpenXml.RangeExtensions.TakeColumns(OfficeOpenXml.ExcelRangeBase,System.Int32)
    name: TakeColumns
    nameWithType: RangeExtensions.TakeColumns
    fullName: OfficeOpenXml.RangeExtensions.TakeColumns
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.ExcelRangeBase
    name: ExcelRangeBase
    nameWithType: ExcelRangeBase
    fullName: OfficeOpenXml.ExcelRangeBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.RangeExtensions.TakeColumns(OfficeOpenXml.ExcelRangeBase,System.Int32)
    name: TakeColumns
    nameWithType: RangeExtensions.TakeColumns
    fullName: OfficeOpenXml.RangeExtensions.TakeColumns
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.ExcelRangeBase
    name: ExcelRangeBase
    nameWithType: ExcelRangeBase
    fullName: OfficeOpenXml.ExcelRangeBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.RangeExtensions.TakeRows(OfficeOpenXml.ExcelRangeBase,System.Int32)
  commentId: M:OfficeOpenXml.RangeExtensions.TakeRows(OfficeOpenXml.ExcelRangeBase,System.Int32)
  isExternal: true
  name: TakeRows(ExcelRangeBase, Int32)
  nameWithType: RangeExtensions.TakeRows(ExcelRangeBase, Int32)
  fullName: OfficeOpenXml.RangeExtensions.TakeRows(OfficeOpenXml.ExcelRangeBase, System.Int32)
  spec.csharp:
  - uid: OfficeOpenXml.RangeExtensions.TakeRows(OfficeOpenXml.ExcelRangeBase,System.Int32)
    name: TakeRows
    nameWithType: RangeExtensions.TakeRows
    fullName: OfficeOpenXml.RangeExtensions.TakeRows
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.ExcelRangeBase
    name: ExcelRangeBase
    nameWithType: ExcelRangeBase
    fullName: OfficeOpenXml.ExcelRangeBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.RangeExtensions.TakeRows(OfficeOpenXml.ExcelRangeBase,System.Int32)
    name: TakeRows
    nameWithType: RangeExtensions.TakeRows
    fullName: OfficeOpenXml.RangeExtensions.TakeRows
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.ExcelRangeBase
    name: ExcelRangeBase
    nameWithType: ExcelRangeBase
    fullName: OfficeOpenXml.ExcelRangeBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.RangeExtensions.TakeSingleColumn(OfficeOpenXml.ExcelRangeBase,System.Int32)
  commentId: M:OfficeOpenXml.RangeExtensions.TakeSingleColumn(OfficeOpenXml.ExcelRangeBase,System.Int32)
  isExternal: true
  name: TakeSingleColumn(ExcelRangeBase, Int32)
  nameWithType: RangeExtensions.TakeSingleColumn(ExcelRangeBase, Int32)
  fullName: OfficeOpenXml.RangeExtensions.TakeSingleColumn(OfficeOpenXml.ExcelRangeBase, System.Int32)
  spec.csharp:
  - uid: OfficeOpenXml.RangeExtensions.TakeSingleColumn(OfficeOpenXml.ExcelRangeBase,System.Int32)
    name: TakeSingleColumn
    nameWithType: RangeExtensions.TakeSingleColumn
    fullName: OfficeOpenXml.RangeExtensions.TakeSingleColumn
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.ExcelRangeBase
    name: ExcelRangeBase
    nameWithType: ExcelRangeBase
    fullName: OfficeOpenXml.ExcelRangeBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.RangeExtensions.TakeSingleColumn(OfficeOpenXml.ExcelRangeBase,System.Int32)
    name: TakeSingleColumn
    nameWithType: RangeExtensions.TakeSingleColumn
    fullName: OfficeOpenXml.RangeExtensions.TakeSingleColumn
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.ExcelRangeBase
    name: ExcelRangeBase
    nameWithType: ExcelRangeBase
    fullName: OfficeOpenXml.ExcelRangeBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.RangeExtensions.TakeColumnsBetween(OfficeOpenXml.ExcelRangeBase,System.Int32,System.Int32)
  commentId: M:OfficeOpenXml.RangeExtensions.TakeColumnsBetween(OfficeOpenXml.ExcelRangeBase,System.Int32,System.Int32)
  isExternal: true
  name: TakeColumnsBetween(ExcelRangeBase, Int32, Int32)
  nameWithType: RangeExtensions.TakeColumnsBetween(ExcelRangeBase, Int32, Int32)
  fullName: OfficeOpenXml.RangeExtensions.TakeColumnsBetween(OfficeOpenXml.ExcelRangeBase, System.Int32, System.Int32)
  spec.csharp:
  - uid: OfficeOpenXml.RangeExtensions.TakeColumnsBetween(OfficeOpenXml.ExcelRangeBase,System.Int32,System.Int32)
    name: TakeColumnsBetween
    nameWithType: RangeExtensions.TakeColumnsBetween
    fullName: OfficeOpenXml.RangeExtensions.TakeColumnsBetween
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.ExcelRangeBase
    name: ExcelRangeBase
    nameWithType: ExcelRangeBase
    fullName: OfficeOpenXml.ExcelRangeBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.RangeExtensions.TakeColumnsBetween(OfficeOpenXml.ExcelRangeBase,System.Int32,System.Int32)
    name: TakeColumnsBetween
    nameWithType: RangeExtensions.TakeColumnsBetween
    fullName: OfficeOpenXml.RangeExtensions.TakeColumnsBetween
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.ExcelRangeBase
    name: ExcelRangeBase
    nameWithType: ExcelRangeBase
    fullName: OfficeOpenXml.ExcelRangeBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.RangeExtensions.TakeSingleRow(OfficeOpenXml.ExcelRangeBase,System.Int32)
  commentId: M:OfficeOpenXml.RangeExtensions.TakeSingleRow(OfficeOpenXml.ExcelRangeBase,System.Int32)
  isExternal: true
  name: TakeSingleRow(ExcelRangeBase, Int32)
  nameWithType: RangeExtensions.TakeSingleRow(ExcelRangeBase, Int32)
  fullName: OfficeOpenXml.RangeExtensions.TakeSingleRow(OfficeOpenXml.ExcelRangeBase, System.Int32)
  spec.csharp:
  - uid: OfficeOpenXml.RangeExtensions.TakeSingleRow(OfficeOpenXml.ExcelRangeBase,System.Int32)
    name: TakeSingleRow
    nameWithType: RangeExtensions.TakeSingleRow
    fullName: OfficeOpenXml.RangeExtensions.TakeSingleRow
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.ExcelRangeBase
    name: ExcelRangeBase
    nameWithType: ExcelRangeBase
    fullName: OfficeOpenXml.ExcelRangeBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.RangeExtensions.TakeSingleRow(OfficeOpenXml.ExcelRangeBase,System.Int32)
    name: TakeSingleRow
    nameWithType: RangeExtensions.TakeSingleRow
    fullName: OfficeOpenXml.RangeExtensions.TakeSingleRow
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.ExcelRangeBase
    name: ExcelRangeBase
    nameWithType: ExcelRangeBase
    fullName: OfficeOpenXml.ExcelRangeBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.RangeExtensions.TakeRowsBetween(OfficeOpenXml.ExcelRangeBase,System.Int32,System.Int32)
  commentId: M:OfficeOpenXml.RangeExtensions.TakeRowsBetween(OfficeOpenXml.ExcelRangeBase,System.Int32,System.Int32)
  isExternal: true
  name: TakeRowsBetween(ExcelRangeBase, Int32, Int32)
  nameWithType: RangeExtensions.TakeRowsBetween(ExcelRangeBase, Int32, Int32)
  fullName: OfficeOpenXml.RangeExtensions.TakeRowsBetween(OfficeOpenXml.ExcelRangeBase, System.Int32, System.Int32)
  spec.csharp:
  - uid: OfficeOpenXml.RangeExtensions.TakeRowsBetween(OfficeOpenXml.ExcelRangeBase,System.Int32,System.Int32)
    name: TakeRowsBetween
    nameWithType: RangeExtensions.TakeRowsBetween
    fullName: OfficeOpenXml.RangeExtensions.TakeRowsBetween
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.ExcelRangeBase
    name: ExcelRangeBase
    nameWithType: ExcelRangeBase
    fullName: OfficeOpenXml.ExcelRangeBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.RangeExtensions.TakeRowsBetween(OfficeOpenXml.ExcelRangeBase,System.Int32,System.Int32)
    name: TakeRowsBetween
    nameWithType: RangeExtensions.TakeRowsBetween
    fullName: OfficeOpenXml.RangeExtensions.TakeRowsBetween
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.ExcelRangeBase
    name: ExcelRangeBase
    nameWithType: ExcelRangeBase
    fullName: OfficeOpenXml.ExcelRangeBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.RangeExtensions.TakeSingleCell(OfficeOpenXml.ExcelRangeBase,System.Int32,System.Int32)
  commentId: M:OfficeOpenXml.RangeExtensions.TakeSingleCell(OfficeOpenXml.ExcelRangeBase,System.Int32,System.Int32)
  isExternal: true
  name: TakeSingleCell(ExcelRangeBase, Int32, Int32)
  nameWithType: RangeExtensions.TakeSingleCell(ExcelRangeBase, Int32, Int32)
  fullName: OfficeOpenXml.RangeExtensions.TakeSingleCell(OfficeOpenXml.ExcelRangeBase, System.Int32, System.Int32)
  spec.csharp:
  - uid: OfficeOpenXml.RangeExtensions.TakeSingleCell(OfficeOpenXml.ExcelRangeBase,System.Int32,System.Int32)
    name: TakeSingleCell
    nameWithType: RangeExtensions.TakeSingleCell
    fullName: OfficeOpenXml.RangeExtensions.TakeSingleCell
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.ExcelRangeBase
    name: ExcelRangeBase
    nameWithType: ExcelRangeBase
    fullName: OfficeOpenXml.ExcelRangeBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.RangeExtensions.TakeSingleCell(OfficeOpenXml.ExcelRangeBase,System.Int32,System.Int32)
    name: TakeSingleCell
    nameWithType: RangeExtensions.TakeSingleCell
    fullName: OfficeOpenXml.RangeExtensions.TakeSingleCell
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.ExcelRangeBase
    name: ExcelRangeBase
    nameWithType: ExcelRangeBase
    fullName: OfficeOpenXml.ExcelRangeBase
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelNamedRange.Name*
  commentId: Overload:OfficeOpenXml.ExcelNamedRange.Name
  name: Name
  nameWithType: ExcelNamedRange.Name
  fullName: OfficeOpenXml.ExcelNamedRange.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OfficeOpenXml.ExcelNamedRange.LocalSheetId*
  commentId: Overload:OfficeOpenXml.ExcelNamedRange.LocalSheetId
  name: LocalSheetId
  nameWithType: ExcelNamedRange.LocalSheetId
  fullName: OfficeOpenXml.ExcelNamedRange.LocalSheetId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: OfficeOpenXml.ExcelNamedRange.IsNameHidden*
  commentId: Overload:OfficeOpenXml.ExcelNamedRange.IsNameHidden
  name: IsNameHidden
  nameWithType: ExcelNamedRange.IsNameHidden
  fullName: OfficeOpenXml.ExcelNamedRange.IsNameHidden
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: OfficeOpenXml.ExcelNamedRange.NameComment*
  commentId: Overload:OfficeOpenXml.ExcelNamedRange.NameComment
  name: NameComment
  nameWithType: ExcelNamedRange.NameComment
  fullName: OfficeOpenXml.ExcelNamedRange.NameComment
- uid: OfficeOpenXml.ExcelAddressBase.ToString
  commentId: M:OfficeOpenXml.ExcelAddressBase.ToString
  parent: OfficeOpenXml.ExcelAddressBase
  name: ToString()
  nameWithType: ExcelAddressBase.ToString()
  fullName: OfficeOpenXml.ExcelAddressBase.ToString()
  spec.csharp:
  - uid: OfficeOpenXml.ExcelAddressBase.ToString
    name: ToString
    nameWithType: ExcelAddressBase.ToString
    fullName: OfficeOpenXml.ExcelAddressBase.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelAddressBase.ToString
    name: ToString
    nameWithType: ExcelAddressBase.ToString
    fullName: OfficeOpenXml.ExcelAddressBase.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelNamedRange.ToString*
  commentId: Overload:OfficeOpenXml.ExcelNamedRange.ToString
  name: ToString
  nameWithType: ExcelNamedRange.ToString
  fullName: OfficeOpenXml.ExcelNamedRange.ToString
- uid: OfficeOpenXml.ExcelAddressBase.Equals(System.Object)
  commentId: M:OfficeOpenXml.ExcelAddressBase.Equals(System.Object)
  parent: OfficeOpenXml.ExcelAddressBase
  isExternal: true
  name: Equals(Object)
  nameWithType: ExcelAddressBase.Equals(Object)
  fullName: OfficeOpenXml.ExcelAddressBase.Equals(System.Object)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelAddressBase.Equals(System.Object)
    name: Equals
    nameWithType: ExcelAddressBase.Equals
    fullName: OfficeOpenXml.ExcelAddressBase.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelAddressBase.Equals(System.Object)
    name: Equals
    nameWithType: ExcelAddressBase.Equals
    fullName: OfficeOpenXml.ExcelAddressBase.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelNamedRange.Equals*
  commentId: Overload:OfficeOpenXml.ExcelNamedRange.Equals
  name: Equals
  nameWithType: ExcelNamedRange.Equals
  fullName: OfficeOpenXml.ExcelNamedRange.Equals
- uid: OfficeOpenXml.ExcelAddressBase.GetHashCode
  commentId: M:OfficeOpenXml.ExcelAddressBase.GetHashCode
  parent: OfficeOpenXml.ExcelAddressBase
  name: GetHashCode()
  nameWithType: ExcelAddressBase.GetHashCode()
  fullName: OfficeOpenXml.ExcelAddressBase.GetHashCode()
  spec.csharp:
  - uid: OfficeOpenXml.ExcelAddressBase.GetHashCode
    name: GetHashCode
    nameWithType: ExcelAddressBase.GetHashCode
    fullName: OfficeOpenXml.ExcelAddressBase.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelAddressBase.GetHashCode
    name: GetHashCode
    nameWithType: ExcelAddressBase.GetHashCode
    fullName: OfficeOpenXml.ExcelAddressBase.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelNamedRange.GetHashCode*
  commentId: Overload:OfficeOpenXml.ExcelNamedRange.GetHashCode
  name: GetHashCode
  nameWithType: ExcelNamedRange.GetHashCode
  fullName: OfficeOpenXml.ExcelNamedRange.GetHashCode
