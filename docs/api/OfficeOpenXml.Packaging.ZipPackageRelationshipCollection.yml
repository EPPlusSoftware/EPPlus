### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.Packaging.ZipPackageRelationshipCollection
  commentId: T:OfficeOpenXml.Packaging.ZipPackageRelationshipCollection
  id: ZipPackageRelationshipCollection
  parent: OfficeOpenXml.Packaging
  children:
  - OfficeOpenXml.Packaging.ZipPackageRelationshipCollection._rels
  - OfficeOpenXml.Packaging.ZipPackageRelationshipCollection.Count
  - OfficeOpenXml.Packaging.ZipPackageRelationshipCollection.GetEnumerator
  - OfficeOpenXml.Packaging.ZipPackageRelationshipCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  - vb
  name: ZipPackageRelationshipCollection
  nameWithType: ZipPackageRelationshipCollection
  fullName: OfficeOpenXml.Packaging.ZipPackageRelationshipCollection
  type: Class
  source:
    remote:
      path: src/EPPlus/Packaging/ZipPackageRelationshipCollection.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ZipPackageRelationshipCollection
    path: ../src/EPPlus/Packaging/ZipPackageRelationshipCollection.cs
    startLine: 24
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Packaging
  summary: "\nA collection of package relationships\n"
  example: []
  syntax:
    content: 'public class ZipPackageRelationshipCollection : IEnumerable<ZipPackageRelationship>, IEnumerable'
    content.vb: >-
      Public Class ZipPackageRelationshipCollection
          Implements IEnumerable(Of ZipPackageRelationship), IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable{OfficeOpenXml.Packaging.ZipPackageRelationship}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OfficeOpenXml.Packaging.ZipPackageRelationshipCollection._rels
  commentId: F:OfficeOpenXml.Packaging.ZipPackageRelationshipCollection._rels
  id: _rels
  parent: OfficeOpenXml.Packaging.ZipPackageRelationshipCollection
  langs:
  - csharp
  - vb
  name: _rels
  nameWithType: ZipPackageRelationshipCollection._rels
  fullName: OfficeOpenXml.Packaging.ZipPackageRelationshipCollection._rels
  type: Field
  source:
    remote:
      path: src/EPPlus/Packaging/ZipPackageRelationshipCollection.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: _rels
    path: ../src/EPPlus/Packaging/ZipPackageRelationshipCollection.cs
    startLine: 29
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Packaging
  summary: "\nRelationships dictionary\n"
  example: []
  syntax:
    content: protected Dictionary<string, ZipPackageRelationship> _rels
    return:
      type: System.Collections.Generic.Dictionary{System.String,OfficeOpenXml.Packaging.ZipPackageRelationship}
    content.vb: Protected _rels As Dictionary(Of String, ZipPackageRelationship)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: OfficeOpenXml.Packaging.ZipPackageRelationshipCollection.GetEnumerator
  commentId: M:OfficeOpenXml.Packaging.ZipPackageRelationshipCollection.GetEnumerator
  id: GetEnumerator
  parent: OfficeOpenXml.Packaging.ZipPackageRelationshipCollection
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: ZipPackageRelationshipCollection.GetEnumerator()
  fullName: OfficeOpenXml.Packaging.ZipPackageRelationshipCollection.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/EPPlus/Packaging/ZipPackageRelationshipCollection.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: GetEnumerator
    path: ../src/EPPlus/Packaging/ZipPackageRelationshipCollection.cs
    startLine: 38
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Packaging
  summary: "\nGets the enumerator for the collection\n"
  example: []
  syntax:
    content: public IEnumerator<ZipPackageRelationship> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{OfficeOpenXml.Packaging.ZipPackageRelationship}
      description: the enumerator
    content.vb: Public Function GetEnumerator As IEnumerator(Of ZipPackageRelationship)
  overload: OfficeOpenXml.Packaging.ZipPackageRelationshipCollection.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{OfficeOpenXml.Packaging.ZipPackageRelationship}.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Packaging.ZipPackageRelationshipCollection.System#Collections#IEnumerable#GetEnumerator
  commentId: M:OfficeOpenXml.Packaging.ZipPackageRelationshipCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: OfficeOpenXml.Packaging.ZipPackageRelationshipCollection
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: ZipPackageRelationshipCollection.IEnumerable.GetEnumerator()
  fullName: OfficeOpenXml.Packaging.ZipPackageRelationshipCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/EPPlus/Packaging/ZipPackageRelationshipCollection.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: System.Collections.IEnumerable.GetEnumerator
    path: ../src/EPPlus/Packaging/ZipPackageRelationshipCollection.cs
    startLine: 43
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Packaging
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    return:
      type: System.Collections.IEnumerator
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
  overload: OfficeOpenXml.Packaging.ZipPackageRelationshipCollection.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: ZipPackageRelationshipCollection.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
- uid: OfficeOpenXml.Packaging.ZipPackageRelationshipCollection.Count
  commentId: P:OfficeOpenXml.Packaging.ZipPackageRelationshipCollection.Count
  id: Count
  parent: OfficeOpenXml.Packaging.ZipPackageRelationshipCollection
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: ZipPackageRelationshipCollection.Count
  fullName: OfficeOpenXml.Packaging.ZipPackageRelationshipCollection.Count
  type: Property
  source:
    remote:
      path: src/EPPlus/Packaging/ZipPackageRelationshipCollection.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Count
    path: ../src/EPPlus/Packaging/ZipPackageRelationshipCollection.cs
    startLine: 100
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Packaging
  summary: "\nNumber of items in the collection\n"
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: OfficeOpenXml.Packaging.ZipPackageRelationshipCollection.Count*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: OfficeOpenXml.Packaging
  commentId: N:OfficeOpenXml.Packaging
  name: OfficeOpenXml.Packaging
  nameWithType: OfficeOpenXml.Packaging
  fullName: OfficeOpenXml.Packaging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IEnumerable{OfficeOpenXml.Packaging.ZipPackageRelationship}
  commentId: T:System.Collections.Generic.IEnumerable{OfficeOpenXml.Packaging.ZipPackageRelationship}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ZipPackageRelationship>
  nameWithType: IEnumerable<ZipPackageRelationship>
  fullName: System.Collections.Generic.IEnumerable<OfficeOpenXml.Packaging.ZipPackageRelationship>
  nameWithType.vb: IEnumerable(Of ZipPackageRelationship)
  fullName.vb: System.Collections.Generic.IEnumerable(Of OfficeOpenXml.Packaging.ZipPackageRelationship)
  name.vb: IEnumerable(Of ZipPackageRelationship)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.Packaging.ZipPackageRelationship
    name: ZipPackageRelationship
    nameWithType: ZipPackageRelationship
    fullName: OfficeOpenXml.Packaging.ZipPackageRelationship
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.Packaging.ZipPackageRelationship
    name: ZipPackageRelationship
    nameWithType: ZipPackageRelationship
    fullName: OfficeOpenXml.Packaging.ZipPackageRelationship
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Collections.Generic.Dictionary{System.String,OfficeOpenXml.Packaging.ZipPackageRelationship}
  commentId: T:System.Collections.Generic.Dictionary{System.String,OfficeOpenXml.Packaging.ZipPackageRelationship}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, ZipPackageRelationship>
  nameWithType: Dictionary<String, ZipPackageRelationship>
  fullName: System.Collections.Generic.Dictionary<System.String, OfficeOpenXml.Packaging.ZipPackageRelationship>
  nameWithType.vb: Dictionary(Of String, ZipPackageRelationship)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, OfficeOpenXml.Packaging.ZipPackageRelationship)
  name.vb: Dictionary(Of String, ZipPackageRelationship)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.Packaging.ZipPackageRelationship
    name: ZipPackageRelationship
    nameWithType: ZipPackageRelationship
    fullName: OfficeOpenXml.Packaging.ZipPackageRelationship
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.Packaging.ZipPackageRelationship
    name: ZipPackageRelationship
    nameWithType: ZipPackageRelationship
    fullName: OfficeOpenXml.Packaging.ZipPackageRelationship
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Packaging.ZipPackageRelationshipCollection.GetEnumerator*
  commentId: Overload:OfficeOpenXml.Packaging.ZipPackageRelationshipCollection.GetEnumerator
  name: GetEnumerator
  nameWithType: ZipPackageRelationshipCollection.GetEnumerator
  fullName: OfficeOpenXml.Packaging.ZipPackageRelationshipCollection.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{OfficeOpenXml.Packaging.ZipPackageRelationship}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{OfficeOpenXml.Packaging.ZipPackageRelationship}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{OfficeOpenXml.Packaging.ZipPackageRelationship}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<ZipPackageRelationship>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<OfficeOpenXml.Packaging.ZipPackageRelationship>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of ZipPackageRelationship).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of OfficeOpenXml.Packaging.ZipPackageRelationship).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<ZipPackageRelationship>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<OfficeOpenXml.Packaging.ZipPackageRelationship>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of ZipPackageRelationship).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of OfficeOpenXml.Packaging.ZipPackageRelationship).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{OfficeOpenXml.Packaging.ZipPackageRelationship}
  commentId: T:System.Collections.Generic.IEnumerator{OfficeOpenXml.Packaging.ZipPackageRelationship}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<ZipPackageRelationship>
  nameWithType: IEnumerator<ZipPackageRelationship>
  fullName: System.Collections.Generic.IEnumerator<OfficeOpenXml.Packaging.ZipPackageRelationship>
  nameWithType.vb: IEnumerator(Of ZipPackageRelationship)
  fullName.vb: System.Collections.Generic.IEnumerator(Of OfficeOpenXml.Packaging.ZipPackageRelationship)
  name.vb: IEnumerator(Of ZipPackageRelationship)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.Packaging.ZipPackageRelationship
    name: ZipPackageRelationship
    nameWithType: ZipPackageRelationship
    fullName: OfficeOpenXml.Packaging.ZipPackageRelationship
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.Packaging.ZipPackageRelationship
    name: ZipPackageRelationship
    nameWithType: ZipPackageRelationship
    fullName: OfficeOpenXml.Packaging.ZipPackageRelationship
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Packaging.ZipPackageRelationshipCollection.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:OfficeOpenXml.Packaging.ZipPackageRelationshipCollection.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator
  nameWithType: ZipPackageRelationshipCollection.IEnumerable.GetEnumerator
  fullName: OfficeOpenXml.Packaging.ZipPackageRelationshipCollection.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: ZipPackageRelationshipCollection.System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: OfficeOpenXml.Packaging.ZipPackageRelationshipCollection.Count*
  commentId: Overload:OfficeOpenXml.Packaging.ZipPackageRelationshipCollection.Count
  name: Count
  nameWithType: ZipPackageRelationshipCollection.Count
  fullName: OfficeOpenXml.Packaging.ZipPackageRelationshipCollection.Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
