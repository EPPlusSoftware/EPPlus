### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.DateTime.Workdays.AdditionalHolidayDays
  commentId: T:OfficeOpenXml.FormulaParsing.Excel.Functions.DateTime.Workdays.AdditionalHolidayDays
  id: AdditionalHolidayDays
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.DateTime.Workdays
  children:
  - OfficeOpenXml.FormulaParsing.Excel.Functions.DateTime.Workdays.AdditionalHolidayDays.#ctor(OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument)
  - OfficeOpenXml.FormulaParsing.Excel.Functions.DateTime.Workdays.AdditionalHolidayDays.AdditionalDates
  langs:
  - csharp
  - vb
  name: AdditionalHolidayDays
  nameWithType: AdditionalHolidayDays
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.DateTime.Workdays.AdditionalHolidayDays
  type: Class
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Excel/Functions/DateTime/Workdays/AdditionalHolidayDays.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: AdditionalHolidayDays
    path: ../src/EPPlus/FormulaParsing/Excel/Functions/DateTime/Workdays/AdditionalHolidayDays.cs
    startLine: 21
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Excel.Functions.DateTime.Workdays
  syntax:
    content: public class AdditionalHolidayDays
    content.vb: Public Class AdditionalHolidayDays
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.DateTime.Workdays.AdditionalHolidayDays.#ctor(OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.DateTime.Workdays.AdditionalHolidayDays.#ctor(OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument)
  id: '#ctor(OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument)'
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.DateTime.Workdays.AdditionalHolidayDays
  langs:
  - csharp
  - vb
  name: AdditionalHolidayDays(FunctionArgument)
  nameWithType: AdditionalHolidayDays.AdditionalHolidayDays(FunctionArgument)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.DateTime.Workdays.AdditionalHolidayDays.AdditionalHolidayDays(OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument)
  type: Constructor
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Excel/Functions/DateTime/Workdays/AdditionalHolidayDays.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: .ctor
    path: ../src/EPPlus/FormulaParsing/Excel/Functions/DateTime/Workdays/AdditionalHolidayDays.cs
    startLine: 26
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Excel.Functions.DateTime.Workdays
  syntax:
    content: public AdditionalHolidayDays(FunctionArgument holidayArg)
    parameters:
    - id: holidayArg
      type: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    content.vb: Public Sub New(holidayArg As FunctionArgument)
  overload: OfficeOpenXml.FormulaParsing.Excel.Functions.DateTime.Workdays.AdditionalHolidayDays.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.DateTime.Workdays.AdditionalHolidayDays.AdditionalDates
  commentId: P:OfficeOpenXml.FormulaParsing.Excel.Functions.DateTime.Workdays.AdditionalHolidayDays.AdditionalDates
  id: AdditionalDates
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.DateTime.Workdays.AdditionalHolidayDays
  langs:
  - csharp
  - vb
  name: AdditionalDates
  nameWithType: AdditionalHolidayDays.AdditionalDates
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.DateTime.Workdays.AdditionalHolidayDays.AdditionalDates
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Excel/Functions/DateTime/Workdays/AdditionalHolidayDays.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: AdditionalDates
    path: ../src/EPPlus/FormulaParsing/Excel/Functions/DateTime/Workdays/AdditionalHolidayDays.cs
    startLine: 32
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Excel.Functions.DateTime.Workdays
  syntax:
    content: public IEnumerable<DateTime> AdditionalDates { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.DateTime}
    content.vb: Public ReadOnly Property AdditionalDates As IEnumerable(Of Date)
  overload: OfficeOpenXml.FormulaParsing.Excel.Functions.DateTime.Workdays.AdditionalHolidayDays.AdditionalDates*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.DateTime.Workdays
  commentId: N:OfficeOpenXml.FormulaParsing.Excel.Functions.DateTime.Workdays
  name: OfficeOpenXml.FormulaParsing.Excel.Functions.DateTime.Workdays
  nameWithType: OfficeOpenXml.FormulaParsing.Excel.Functions.DateTime.Workdays
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.DateTime.Workdays
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.DateTime.Workdays.AdditionalHolidayDays.#ctor*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Excel.Functions.DateTime.Workdays.AdditionalHolidayDays.#ctor
  name: AdditionalHolidayDays
  nameWithType: AdditionalHolidayDays.AdditionalHolidayDays
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.DateTime.Workdays.AdditionalHolidayDays.AdditionalHolidayDays
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  commentId: T:OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions
  name: FunctionArgument
  nameWithType: FunctionArgument
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions
  commentId: N:OfficeOpenXml.FormulaParsing.Excel.Functions
  name: OfficeOpenXml.FormulaParsing.Excel.Functions
  nameWithType: OfficeOpenXml.FormulaParsing.Excel.Functions
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.DateTime.Workdays.AdditionalHolidayDays.AdditionalDates*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Excel.Functions.DateTime.Workdays.AdditionalHolidayDays.AdditionalDates
  name: AdditionalDates
  nameWithType: AdditionalHolidayDays.AdditionalDates
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.DateTime.Workdays.AdditionalHolidayDays.AdditionalDates
- uid: System.Collections.Generic.IEnumerable{System.DateTime}
  commentId: T:System.Collections.Generic.IEnumerable{System.DateTime}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<DateTime>
  nameWithType: IEnumerable<DateTime>
  fullName: System.Collections.Generic.IEnumerable<System.DateTime>
  nameWithType.vb: IEnumerable(Of DateTime)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.DateTime)
  name.vb: IEnumerable(Of DateTime)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
