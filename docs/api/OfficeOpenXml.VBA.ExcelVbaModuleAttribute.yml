### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.VBA.ExcelVbaModuleAttribute
  commentId: T:OfficeOpenXml.VBA.ExcelVbaModuleAttribute
  id: ExcelVbaModuleAttribute
  parent: OfficeOpenXml.VBA
  children:
  - OfficeOpenXml.VBA.ExcelVbaModuleAttribute.DataType
  - OfficeOpenXml.VBA.ExcelVbaModuleAttribute.Name
  - OfficeOpenXml.VBA.ExcelVbaModuleAttribute.ToString
  - OfficeOpenXml.VBA.ExcelVbaModuleAttribute.Value
  langs:
  - csharp
  - vb
  name: ExcelVbaModuleAttribute
  nameWithType: ExcelVbaModuleAttribute
  fullName: OfficeOpenXml.VBA.ExcelVbaModuleAttribute
  type: Class
  source:
    remote:
      path: src/EPPlus/Vba/ExcelVbaModuleAttribute.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ExcelVbaModuleAttribute
    path: ../src/EPPlus/Vba/ExcelVbaModuleAttribute.cs
    startLine: 17
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.VBA
  summary: "\nA VBA modual attribute\n"
  example: []
  syntax:
    content: public class ExcelVbaModuleAttribute
    content.vb: Public Class ExcelVbaModuleAttribute
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OfficeOpenXml.VBA.ExcelVbaModuleAttribute.Name
  commentId: P:OfficeOpenXml.VBA.ExcelVbaModuleAttribute.Name
  id: Name
  parent: OfficeOpenXml.VBA.ExcelVbaModuleAttribute
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ExcelVbaModuleAttribute.Name
  fullName: OfficeOpenXml.VBA.ExcelVbaModuleAttribute.Name
  type: Property
  source:
    remote:
      path: src/EPPlus/Vba/ExcelVbaModuleAttribute.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Name
    path: ../src/EPPlus/Vba/ExcelVbaModuleAttribute.cs
    startLine: 26
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.VBA
  summary: "\nThe name of the attribute\n"
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: OfficeOpenXml.VBA.ExcelVbaModuleAttribute.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.VBA.ExcelVbaModuleAttribute.DataType
  commentId: P:OfficeOpenXml.VBA.ExcelVbaModuleAttribute.DataType
  id: DataType
  parent: OfficeOpenXml.VBA.ExcelVbaModuleAttribute
  langs:
  - csharp
  - vb
  name: DataType
  nameWithType: ExcelVbaModuleAttribute.DataType
  fullName: OfficeOpenXml.VBA.ExcelVbaModuleAttribute.DataType
  type: Property
  source:
    remote:
      path: src/EPPlus/Vba/ExcelVbaModuleAttribute.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: DataType
    path: ../src/EPPlus/Vba/ExcelVbaModuleAttribute.cs
    startLine: 30
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.VBA
  summary: "\nThe datatype. Determine if the attribute uses double quotes around the value.\n"
  example: []
  syntax:
    content: public eAttributeDataType DataType { get; }
    parameters: []
    return:
      type: OfficeOpenXml.VBA.eAttributeDataType
    content.vb: Public ReadOnly Property DataType As eAttributeDataType
  overload: OfficeOpenXml.VBA.ExcelVbaModuleAttribute.DataType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.VBA.ExcelVbaModuleAttribute.Value
  commentId: P:OfficeOpenXml.VBA.ExcelVbaModuleAttribute.Value
  id: Value
  parent: OfficeOpenXml.VBA.ExcelVbaModuleAttribute
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: ExcelVbaModuleAttribute.Value
  fullName: OfficeOpenXml.VBA.ExcelVbaModuleAttribute.Value
  type: Property
  source:
    remote:
      path: src/EPPlus/Vba/ExcelVbaModuleAttribute.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Value
    path: ../src/EPPlus/Vba/ExcelVbaModuleAttribute.cs
    startLine: 34
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.VBA
  summary: "\nThe value of the attribute without any double quotes.\n"
  example: []
  syntax:
    content: public string Value { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Value As String
  overload: OfficeOpenXml.VBA.ExcelVbaModuleAttribute.Value*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.VBA.ExcelVbaModuleAttribute.ToString
  commentId: M:OfficeOpenXml.VBA.ExcelVbaModuleAttribute.ToString
  id: ToString
  parent: OfficeOpenXml.VBA.ExcelVbaModuleAttribute
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ExcelVbaModuleAttribute.ToString()
  fullName: OfficeOpenXml.VBA.ExcelVbaModuleAttribute.ToString()
  type: Method
  source:
    remote:
      path: src/EPPlus/Vba/ExcelVbaModuleAttribute.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ToString
    path: ../src/EPPlus/Vba/ExcelVbaModuleAttribute.cs
    startLine: 39
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.VBA
  summary: "\nConverts the object to a string\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: The name of the VBA module attribute
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: OfficeOpenXml.VBA.ExcelVbaModuleAttribute.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: OfficeOpenXml.VBA
  commentId: N:OfficeOpenXml.VBA
  name: OfficeOpenXml.VBA
  nameWithType: OfficeOpenXml.VBA
  fullName: OfficeOpenXml.VBA
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml.VBA.ExcelVbaModuleAttribute.Name*
  commentId: Overload:OfficeOpenXml.VBA.ExcelVbaModuleAttribute.Name
  name: Name
  nameWithType: ExcelVbaModuleAttribute.Name
  fullName: OfficeOpenXml.VBA.ExcelVbaModuleAttribute.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OfficeOpenXml.VBA.ExcelVbaModuleAttribute.DataType*
  commentId: Overload:OfficeOpenXml.VBA.ExcelVbaModuleAttribute.DataType
  name: DataType
  nameWithType: ExcelVbaModuleAttribute.DataType
  fullName: OfficeOpenXml.VBA.ExcelVbaModuleAttribute.DataType
- uid: OfficeOpenXml.VBA.eAttributeDataType
  commentId: T:OfficeOpenXml.VBA.eAttributeDataType
  parent: OfficeOpenXml.VBA
  name: eAttributeDataType
  nameWithType: eAttributeDataType
  fullName: OfficeOpenXml.VBA.eAttributeDataType
- uid: OfficeOpenXml.VBA.ExcelVbaModuleAttribute.Value*
  commentId: Overload:OfficeOpenXml.VBA.ExcelVbaModuleAttribute.Value
  name: Value
  nameWithType: ExcelVbaModuleAttribute.Value
  fullName: OfficeOpenXml.VBA.ExcelVbaModuleAttribute.Value
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.VBA.ExcelVbaModuleAttribute.ToString*
  commentId: Overload:OfficeOpenXml.VBA.ExcelVbaModuleAttribute.ToString
  name: ToString
  nameWithType: ExcelVbaModuleAttribute.ToString
  fullName: OfficeOpenXml.VBA.ExcelVbaModuleAttribute.ToString
