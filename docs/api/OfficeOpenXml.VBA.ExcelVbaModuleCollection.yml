### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.VBA.ExcelVbaModuleCollection
  commentId: T:OfficeOpenXml.VBA.ExcelVbaModuleCollection
  id: ExcelVbaModuleCollection
  parent: OfficeOpenXml.VBA
  children:
  - OfficeOpenXml.VBA.ExcelVbaModuleCollection.AddClass(System.String,System.Boolean)
  - OfficeOpenXml.VBA.ExcelVbaModuleCollection.AddModule(System.String)
  langs:
  - csharp
  - vb
  name: ExcelVbaModuleCollection
  nameWithType: ExcelVbaModuleCollection
  fullName: OfficeOpenXml.VBA.ExcelVbaModuleCollection
  type: Class
  source:
    remote:
      path: src/EPPlus/Vba/ExcelVBAModuleCollection.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ExcelVbaModuleCollection
    path: ../src/EPPlus/Vba/ExcelVBAModuleCollection.cs
    startLine: 19
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.VBA
  summary: "\nCollection class for VBA modules\n"
  example: []
  syntax:
    content: 'public class ExcelVbaModuleCollection : ExcelVBACollectionBase<ExcelVBAModule>, IEnumerable<ExcelVBAModule>, IEnumerable'
    content.vb: >-
      Public Class ExcelVbaModuleCollection
          Inherits ExcelVBACollectionBase(Of ExcelVBAModule)
          Implements IEnumerable(Of ExcelVBAModule), IEnumerable
  inheritance:
  - System.Object
  - OfficeOpenXml.VBA.ExcelVBACollectionBase{OfficeOpenXml.VBA.ExcelVBAModule}
  implements:
  - System.Collections.Generic.IEnumerable{OfficeOpenXml.VBA.ExcelVBAModule}
  - System.Collections.IEnumerable
  inheritedMembers:
  - OfficeOpenXml.VBA.ExcelVBACollectionBase{OfficeOpenXml.VBA.ExcelVBAModule}._list
  - OfficeOpenXml.VBA.ExcelVBACollectionBase{OfficeOpenXml.VBA.ExcelVBAModule}.GetEnumerator
  - OfficeOpenXml.VBA.ExcelVBACollectionBase{OfficeOpenXml.VBA.ExcelVBAModule}.System#Collections#IEnumerable#GetEnumerator
  - OfficeOpenXml.VBA.ExcelVBACollectionBase{OfficeOpenXml.VBA.ExcelVBAModule}.Item(System.String)
  - OfficeOpenXml.VBA.ExcelVBACollectionBase{OfficeOpenXml.VBA.ExcelVBAModule}.Item(System.Int32)
  - OfficeOpenXml.VBA.ExcelVBACollectionBase{OfficeOpenXml.VBA.ExcelVBAModule}.Count
  - OfficeOpenXml.VBA.ExcelVBACollectionBase{OfficeOpenXml.VBA.ExcelVBAModule}.Exists(System.String)
  - OfficeOpenXml.VBA.ExcelVBACollectionBase{OfficeOpenXml.VBA.ExcelVBAModule}.Remove(OfficeOpenXml.VBA.ExcelVBAModule)
  - OfficeOpenXml.VBA.ExcelVBACollectionBase{OfficeOpenXml.VBA.ExcelVBAModule}.RemoveAt(System.Int32)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OfficeOpenXml.VBA.ExcelVbaModuleCollection.AddModule(System.String)
  commentId: M:OfficeOpenXml.VBA.ExcelVbaModuleCollection.AddModule(System.String)
  id: AddModule(System.String)
  parent: OfficeOpenXml.VBA.ExcelVbaModuleCollection
  langs:
  - csharp
  - vb
  name: AddModule(String)
  nameWithType: ExcelVbaModuleCollection.AddModule(String)
  fullName: OfficeOpenXml.VBA.ExcelVbaModuleCollection.AddModule(System.String)
  type: Method
  source:
    remote:
      path: src/EPPlus/Vba/ExcelVBAModuleCollection.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: AddModule
    path: ../src/EPPlus/Vba/ExcelVBAModuleCollection.cs
    startLine: 35
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.VBA
  summary: "\nAdds a new VBA Module\n"
  example: []
  syntax:
    content: public ExcelVBAModule AddModule(string Name)
    parameters:
    - id: Name
      type: System.String
      description: The name of the module
    return:
      type: OfficeOpenXml.VBA.ExcelVBAModule
      description: The module object
    content.vb: Public Function AddModule(Name As String) As ExcelVBAModule
  overload: OfficeOpenXml.VBA.ExcelVbaModuleCollection.AddModule*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.VBA.ExcelVbaModuleCollection.AddClass(System.String,System.Boolean)
  commentId: M:OfficeOpenXml.VBA.ExcelVbaModuleCollection.AddClass(System.String,System.Boolean)
  id: AddClass(System.String,System.Boolean)
  parent: OfficeOpenXml.VBA.ExcelVbaModuleCollection
  langs:
  - csharp
  - vb
  name: AddClass(String, Boolean)
  nameWithType: ExcelVbaModuleCollection.AddClass(String, Boolean)
  fullName: OfficeOpenXml.VBA.ExcelVbaModuleCollection.AddClass(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/EPPlus/Vba/ExcelVBAModuleCollection.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: AddClass
    path: ../src/EPPlus/Vba/ExcelVBAModuleCollection.cs
    startLine: 55
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.VBA
  summary: "\nAdds a new VBA class\n"
  example: []
  syntax:
    content: public ExcelVBAModule AddClass(string Name, bool Exposed)
    parameters:
    - id: Name
      type: System.String
      description: The name of the class
    - id: Exposed
      type: System.Boolean
      description: Private or Public not createble
    return:
      type: OfficeOpenXml.VBA.ExcelVBAModule
      description: The class object
    content.vb: Public Function AddClass(Name As String, Exposed As Boolean) As ExcelVBAModule
  overload: OfficeOpenXml.VBA.ExcelVbaModuleCollection.AddClass*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: OfficeOpenXml.VBA
  commentId: N:OfficeOpenXml.VBA
  name: OfficeOpenXml.VBA
  nameWithType: OfficeOpenXml.VBA
  fullName: OfficeOpenXml.VBA
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OfficeOpenXml.VBA.ExcelVBACollectionBase{OfficeOpenXml.VBA.ExcelVBAModule}
  commentId: T:OfficeOpenXml.VBA.ExcelVBACollectionBase{OfficeOpenXml.VBA.ExcelVBAModule}
  parent: OfficeOpenXml.VBA
  definition: OfficeOpenXml.VBA.ExcelVBACollectionBase`1
  name: ExcelVBACollectionBase<ExcelVBAModule>
  nameWithType: ExcelVBACollectionBase<ExcelVBAModule>
  fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase<OfficeOpenXml.VBA.ExcelVBAModule>
  nameWithType.vb: ExcelVBACollectionBase(Of ExcelVBAModule)
  fullName.vb: OfficeOpenXml.VBA.ExcelVBACollectionBase(Of OfficeOpenXml.VBA.ExcelVBAModule)
  name.vb: ExcelVBACollectionBase(Of ExcelVBAModule)
  spec.csharp:
  - uid: OfficeOpenXml.VBA.ExcelVBACollectionBase`1
    name: ExcelVBACollectionBase
    nameWithType: ExcelVBACollectionBase
    fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.VBA.ExcelVBAModule
    name: ExcelVBAModule
    nameWithType: ExcelVBAModule
    fullName: OfficeOpenXml.VBA.ExcelVBAModule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OfficeOpenXml.VBA.ExcelVBACollectionBase`1
    name: ExcelVBACollectionBase
    nameWithType: ExcelVBACollectionBase
    fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.VBA.ExcelVBAModule
    name: ExcelVBAModule
    nameWithType: ExcelVBAModule
    fullName: OfficeOpenXml.VBA.ExcelVBAModule
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{OfficeOpenXml.VBA.ExcelVBAModule}
  commentId: T:System.Collections.Generic.IEnumerable{OfficeOpenXml.VBA.ExcelVBAModule}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ExcelVBAModule>
  nameWithType: IEnumerable<ExcelVBAModule>
  fullName: System.Collections.Generic.IEnumerable<OfficeOpenXml.VBA.ExcelVBAModule>
  nameWithType.vb: IEnumerable(Of ExcelVBAModule)
  fullName.vb: System.Collections.Generic.IEnumerable(Of OfficeOpenXml.VBA.ExcelVBAModule)
  name.vb: IEnumerable(Of ExcelVBAModule)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.VBA.ExcelVBAModule
    name: ExcelVBAModule
    nameWithType: ExcelVBAModule
    fullName: OfficeOpenXml.VBA.ExcelVBAModule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.VBA.ExcelVBAModule
    name: ExcelVBAModule
    nameWithType: ExcelVBAModule
    fullName: OfficeOpenXml.VBA.ExcelVBAModule
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: OfficeOpenXml.VBA.ExcelVBACollectionBase{OfficeOpenXml.VBA.ExcelVBAModule}._list
  commentId: F:OfficeOpenXml.VBA.ExcelVBACollectionBase{OfficeOpenXml.VBA.ExcelVBAModule}._list
  parent: OfficeOpenXml.VBA.ExcelVBACollectionBase{OfficeOpenXml.VBA.ExcelVBAModule}
  definition: OfficeOpenXml.VBA.ExcelVBACollectionBase`1._list
  name: _list
  nameWithType: ExcelVBACollectionBase<ExcelVBAModule>._list
  fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase<OfficeOpenXml.VBA.ExcelVBAModule>._list
  nameWithType.vb: ExcelVBACollectionBase(Of ExcelVBAModule)._list
  fullName.vb: OfficeOpenXml.VBA.ExcelVBACollectionBase(Of OfficeOpenXml.VBA.ExcelVBAModule)._list
- uid: OfficeOpenXml.VBA.ExcelVBACollectionBase{OfficeOpenXml.VBA.ExcelVBAModule}.GetEnumerator
  commentId: M:OfficeOpenXml.VBA.ExcelVBACollectionBase{OfficeOpenXml.VBA.ExcelVBAModule}.GetEnumerator
  parent: OfficeOpenXml.VBA.ExcelVBACollectionBase{OfficeOpenXml.VBA.ExcelVBAModule}
  definition: OfficeOpenXml.VBA.ExcelVBACollectionBase`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: ExcelVBACollectionBase<ExcelVBAModule>.GetEnumerator()
  fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase<OfficeOpenXml.VBA.ExcelVBAModule>.GetEnumerator()
  nameWithType.vb: ExcelVBACollectionBase(Of ExcelVBAModule).GetEnumerator()
  fullName.vb: OfficeOpenXml.VBA.ExcelVBACollectionBase(Of OfficeOpenXml.VBA.ExcelVBAModule).GetEnumerator()
  spec.csharp:
  - uid: OfficeOpenXml.VBA.ExcelVBACollectionBase`1.GetEnumerator
    name: GetEnumerator
    nameWithType: ExcelVBACollectionBase<ExcelVBAModule>.GetEnumerator
    fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase<OfficeOpenXml.VBA.ExcelVBAModule>.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.VBA.ExcelVBACollectionBase`1.GetEnumerator
    name: GetEnumerator
    nameWithType: ExcelVBACollectionBase(Of ExcelVBAModule).GetEnumerator
    fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase(Of OfficeOpenXml.VBA.ExcelVBAModule).GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.VBA.ExcelVBACollectionBase{OfficeOpenXml.VBA.ExcelVBAModule}.System#Collections#IEnumerable#GetEnumerator
  commentId: M:OfficeOpenXml.VBA.ExcelVBACollectionBase{OfficeOpenXml.VBA.ExcelVBAModule}.System#Collections#IEnumerable#GetEnumerator
  parent: OfficeOpenXml.VBA.ExcelVBACollectionBase{OfficeOpenXml.VBA.ExcelVBAModule}
  definition: OfficeOpenXml.VBA.ExcelVBACollectionBase`1.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  nameWithType: ExcelVBACollectionBase<ExcelVBAModule>.IEnumerable.GetEnumerator()
  fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase<OfficeOpenXml.VBA.ExcelVBAModule>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: ExcelVBACollectionBase(Of ExcelVBAModule).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: OfficeOpenXml.VBA.ExcelVBACollectionBase(Of OfficeOpenXml.VBA.ExcelVBAModule).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: OfficeOpenXml.VBA.ExcelVBACollectionBase`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: ExcelVBACollectionBase<ExcelVBAModule>.IEnumerable.GetEnumerator
    fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase<OfficeOpenXml.VBA.ExcelVBAModule>.System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.VBA.ExcelVBACollectionBase`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: ExcelVBACollectionBase(Of ExcelVBAModule).System.Collections.IEnumerable.GetEnumerator
    fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase(Of OfficeOpenXml.VBA.ExcelVBAModule).System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.VBA.ExcelVBACollectionBase{OfficeOpenXml.VBA.ExcelVBAModule}.Item(System.String)
  commentId: P:OfficeOpenXml.VBA.ExcelVBACollectionBase{OfficeOpenXml.VBA.ExcelVBAModule}.Item(System.String)
  parent: OfficeOpenXml.VBA.ExcelVBACollectionBase{OfficeOpenXml.VBA.ExcelVBAModule}
  definition: OfficeOpenXml.VBA.ExcelVBACollectionBase`1.Item(System.String)
  name: Item[String]
  nameWithType: ExcelVBACollectionBase<ExcelVBAModule>.Item[String]
  fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase<OfficeOpenXml.VBA.ExcelVBAModule>.Item[System.String]
  nameWithType.vb: ExcelVBACollectionBase(Of ExcelVBAModule).Item(String)
  fullName.vb: OfficeOpenXml.VBA.ExcelVBACollectionBase(Of OfficeOpenXml.VBA.ExcelVBAModule).Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: OfficeOpenXml.VBA.ExcelVBACollectionBase`1.Item(System.String)
    name: Item
    nameWithType: ExcelVBACollectionBase<ExcelVBAModule>.Item
    fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase<OfficeOpenXml.VBA.ExcelVBAModule>.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: OfficeOpenXml.VBA.ExcelVBACollectionBase`1.Item(System.String)
    name: Item
    nameWithType: ExcelVBACollectionBase(Of ExcelVBAModule).Item
    fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase(Of OfficeOpenXml.VBA.ExcelVBAModule).Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.VBA.ExcelVBACollectionBase{OfficeOpenXml.VBA.ExcelVBAModule}.Item(System.Int32)
  commentId: P:OfficeOpenXml.VBA.ExcelVBACollectionBase{OfficeOpenXml.VBA.ExcelVBAModule}.Item(System.Int32)
  parent: OfficeOpenXml.VBA.ExcelVBACollectionBase{OfficeOpenXml.VBA.ExcelVBAModule}
  definition: OfficeOpenXml.VBA.ExcelVBACollectionBase`1.Item(System.Int32)
  name: Item[Int32]
  nameWithType: ExcelVBACollectionBase<ExcelVBAModule>.Item[Int32]
  fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase<OfficeOpenXml.VBA.ExcelVBAModule>.Item[System.Int32]
  nameWithType.vb: ExcelVBACollectionBase(Of ExcelVBAModule).Item(Int32)
  fullName.vb: OfficeOpenXml.VBA.ExcelVBACollectionBase(Of OfficeOpenXml.VBA.ExcelVBAModule).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: OfficeOpenXml.VBA.ExcelVBACollectionBase`1.Item(System.Int32)
    name: Item
    nameWithType: ExcelVBACollectionBase<ExcelVBAModule>.Item
    fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase<OfficeOpenXml.VBA.ExcelVBAModule>.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: OfficeOpenXml.VBA.ExcelVBACollectionBase`1.Item(System.Int32)
    name: Item
    nameWithType: ExcelVBACollectionBase(Of ExcelVBAModule).Item
    fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase(Of OfficeOpenXml.VBA.ExcelVBAModule).Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.VBA.ExcelVBACollectionBase{OfficeOpenXml.VBA.ExcelVBAModule}.Count
  commentId: P:OfficeOpenXml.VBA.ExcelVBACollectionBase{OfficeOpenXml.VBA.ExcelVBAModule}.Count
  parent: OfficeOpenXml.VBA.ExcelVBACollectionBase{OfficeOpenXml.VBA.ExcelVBAModule}
  definition: OfficeOpenXml.VBA.ExcelVBACollectionBase`1.Count
  name: Count
  nameWithType: ExcelVBACollectionBase<ExcelVBAModule>.Count
  fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase<OfficeOpenXml.VBA.ExcelVBAModule>.Count
  nameWithType.vb: ExcelVBACollectionBase(Of ExcelVBAModule).Count
  fullName.vb: OfficeOpenXml.VBA.ExcelVBACollectionBase(Of OfficeOpenXml.VBA.ExcelVBAModule).Count
- uid: OfficeOpenXml.VBA.ExcelVBACollectionBase{OfficeOpenXml.VBA.ExcelVBAModule}.Exists(System.String)
  commentId: M:OfficeOpenXml.VBA.ExcelVBACollectionBase{OfficeOpenXml.VBA.ExcelVBAModule}.Exists(System.String)
  parent: OfficeOpenXml.VBA.ExcelVBACollectionBase{OfficeOpenXml.VBA.ExcelVBAModule}
  definition: OfficeOpenXml.VBA.ExcelVBACollectionBase`1.Exists(System.String)
  name: Exists(String)
  nameWithType: ExcelVBACollectionBase<ExcelVBAModule>.Exists(String)
  fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase<OfficeOpenXml.VBA.ExcelVBAModule>.Exists(System.String)
  nameWithType.vb: ExcelVBACollectionBase(Of ExcelVBAModule).Exists(String)
  fullName.vb: OfficeOpenXml.VBA.ExcelVBACollectionBase(Of OfficeOpenXml.VBA.ExcelVBAModule).Exists(System.String)
  spec.csharp:
  - uid: OfficeOpenXml.VBA.ExcelVBACollectionBase`1.Exists(System.String)
    name: Exists
    nameWithType: ExcelVBACollectionBase<ExcelVBAModule>.Exists
    fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase<OfficeOpenXml.VBA.ExcelVBAModule>.Exists
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.VBA.ExcelVBACollectionBase`1.Exists(System.String)
    name: Exists
    nameWithType: ExcelVBACollectionBase(Of ExcelVBAModule).Exists
    fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase(Of OfficeOpenXml.VBA.ExcelVBAModule).Exists
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.VBA.ExcelVBACollectionBase{OfficeOpenXml.VBA.ExcelVBAModule}.Remove(OfficeOpenXml.VBA.ExcelVBAModule)
  commentId: M:OfficeOpenXml.VBA.ExcelVBACollectionBase{OfficeOpenXml.VBA.ExcelVBAModule}.Remove(OfficeOpenXml.VBA.ExcelVBAModule)
  parent: OfficeOpenXml.VBA.ExcelVBACollectionBase{OfficeOpenXml.VBA.ExcelVBAModule}
  definition: OfficeOpenXml.VBA.ExcelVBACollectionBase`1.Remove(`0)
  name: Remove(ExcelVBAModule)
  nameWithType: ExcelVBACollectionBase<ExcelVBAModule>.Remove(ExcelVBAModule)
  fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase<OfficeOpenXml.VBA.ExcelVBAModule>.Remove(OfficeOpenXml.VBA.ExcelVBAModule)
  nameWithType.vb: ExcelVBACollectionBase(Of ExcelVBAModule).Remove(ExcelVBAModule)
  fullName.vb: OfficeOpenXml.VBA.ExcelVBACollectionBase(Of OfficeOpenXml.VBA.ExcelVBAModule).Remove(OfficeOpenXml.VBA.ExcelVBAModule)
  spec.csharp:
  - uid: OfficeOpenXml.VBA.ExcelVBACollectionBase`1.Remove(`0)
    name: Remove
    nameWithType: ExcelVBACollectionBase<ExcelVBAModule>.Remove
    fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase<OfficeOpenXml.VBA.ExcelVBAModule>.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.VBA.ExcelVBAModule
    name: ExcelVBAModule
    nameWithType: ExcelVBAModule
    fullName: OfficeOpenXml.VBA.ExcelVBAModule
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.VBA.ExcelVBACollectionBase`1.Remove(`0)
    name: Remove
    nameWithType: ExcelVBACollectionBase(Of ExcelVBAModule).Remove
    fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase(Of OfficeOpenXml.VBA.ExcelVBAModule).Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.VBA.ExcelVBAModule
    name: ExcelVBAModule
    nameWithType: ExcelVBAModule
    fullName: OfficeOpenXml.VBA.ExcelVBAModule
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.VBA.ExcelVBACollectionBase{OfficeOpenXml.VBA.ExcelVBAModule}.RemoveAt(System.Int32)
  commentId: M:OfficeOpenXml.VBA.ExcelVBACollectionBase{OfficeOpenXml.VBA.ExcelVBAModule}.RemoveAt(System.Int32)
  parent: OfficeOpenXml.VBA.ExcelVBACollectionBase{OfficeOpenXml.VBA.ExcelVBAModule}
  definition: OfficeOpenXml.VBA.ExcelVBACollectionBase`1.RemoveAt(System.Int32)
  name: RemoveAt(Int32)
  nameWithType: ExcelVBACollectionBase<ExcelVBAModule>.RemoveAt(Int32)
  fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase<OfficeOpenXml.VBA.ExcelVBAModule>.RemoveAt(System.Int32)
  nameWithType.vb: ExcelVBACollectionBase(Of ExcelVBAModule).RemoveAt(Int32)
  fullName.vb: OfficeOpenXml.VBA.ExcelVBACollectionBase(Of OfficeOpenXml.VBA.ExcelVBAModule).RemoveAt(System.Int32)
  spec.csharp:
  - uid: OfficeOpenXml.VBA.ExcelVBACollectionBase`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: ExcelVBACollectionBase<ExcelVBAModule>.RemoveAt
    fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase<OfficeOpenXml.VBA.ExcelVBAModule>.RemoveAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.VBA.ExcelVBACollectionBase`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: ExcelVBACollectionBase(Of ExcelVBAModule).RemoveAt
    fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase(Of OfficeOpenXml.VBA.ExcelVBAModule).RemoveAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml.VBA.ExcelVBACollectionBase`1
  commentId: T:OfficeOpenXml.VBA.ExcelVBACollectionBase`1
  name: ExcelVBACollectionBase<T>
  nameWithType: ExcelVBACollectionBase<T>
  fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase<T>
  nameWithType.vb: ExcelVBACollectionBase(Of T)
  fullName.vb: OfficeOpenXml.VBA.ExcelVBACollectionBase(Of T)
  name.vb: ExcelVBACollectionBase(Of T)
  spec.csharp:
  - uid: OfficeOpenXml.VBA.ExcelVBACollectionBase`1
    name: ExcelVBACollectionBase
    nameWithType: ExcelVBACollectionBase
    fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OfficeOpenXml.VBA.ExcelVBACollectionBase`1
    name: ExcelVBACollectionBase
    nameWithType: ExcelVBACollectionBase
    fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: OfficeOpenXml.VBA.ExcelVBACollectionBase`1._list
  commentId: F:OfficeOpenXml.VBA.ExcelVBACollectionBase`1._list
  name: _list
  nameWithType: ExcelVBACollectionBase<T>._list
  fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase<T>._list
  nameWithType.vb: ExcelVBACollectionBase(Of T)._list
  fullName.vb: OfficeOpenXml.VBA.ExcelVBACollectionBase(Of T)._list
- uid: OfficeOpenXml.VBA.ExcelVBACollectionBase`1.GetEnumerator
  commentId: M:OfficeOpenXml.VBA.ExcelVBACollectionBase`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: ExcelVBACollectionBase<T>.GetEnumerator()
  fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase<T>.GetEnumerator()
  nameWithType.vb: ExcelVBACollectionBase(Of T).GetEnumerator()
  fullName.vb: OfficeOpenXml.VBA.ExcelVBACollectionBase(Of T).GetEnumerator()
  spec.csharp:
  - uid: OfficeOpenXml.VBA.ExcelVBACollectionBase`1.GetEnumerator
    name: GetEnumerator
    nameWithType: ExcelVBACollectionBase<T>.GetEnumerator
    fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase<T>.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.VBA.ExcelVBACollectionBase`1.GetEnumerator
    name: GetEnumerator
    nameWithType: ExcelVBACollectionBase(Of T).GetEnumerator
    fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase(Of T).GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.VBA.ExcelVBACollectionBase`1.System#Collections#IEnumerable#GetEnumerator
  commentId: M:OfficeOpenXml.VBA.ExcelVBACollectionBase`1.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  nameWithType: ExcelVBACollectionBase<T>.IEnumerable.GetEnumerator()
  fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase<T>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: ExcelVBACollectionBase(Of T).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: OfficeOpenXml.VBA.ExcelVBACollectionBase(Of T).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: OfficeOpenXml.VBA.ExcelVBACollectionBase`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: ExcelVBACollectionBase<T>.IEnumerable.GetEnumerator
    fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase<T>.System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.VBA.ExcelVBACollectionBase`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: ExcelVBACollectionBase(Of T).System.Collections.IEnumerable.GetEnumerator
    fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase(Of T).System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.VBA.ExcelVBACollectionBase`1.Item(System.String)
  commentId: P:OfficeOpenXml.VBA.ExcelVBACollectionBase`1.Item(System.String)
  isExternal: true
  name: Item[String]
  nameWithType: ExcelVBACollectionBase<T>.Item[String]
  fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase<T>.Item[System.String]
  nameWithType.vb: ExcelVBACollectionBase(Of T).Item(String)
  fullName.vb: OfficeOpenXml.VBA.ExcelVBACollectionBase(Of T).Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: OfficeOpenXml.VBA.ExcelVBACollectionBase`1.Item(System.String)
    name: Item
    nameWithType: ExcelVBACollectionBase<T>.Item
    fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase<T>.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: OfficeOpenXml.VBA.ExcelVBACollectionBase`1.Item(System.String)
    name: Item
    nameWithType: ExcelVBACollectionBase(Of T).Item
    fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase(Of T).Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.VBA.ExcelVBACollectionBase`1.Item(System.Int32)
  commentId: P:OfficeOpenXml.VBA.ExcelVBACollectionBase`1.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: ExcelVBACollectionBase<T>.Item[Int32]
  fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase<T>.Item[System.Int32]
  nameWithType.vb: ExcelVBACollectionBase(Of T).Item(Int32)
  fullName.vb: OfficeOpenXml.VBA.ExcelVBACollectionBase(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: OfficeOpenXml.VBA.ExcelVBACollectionBase`1.Item(System.Int32)
    name: Item
    nameWithType: ExcelVBACollectionBase<T>.Item
    fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase<T>.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: OfficeOpenXml.VBA.ExcelVBACollectionBase`1.Item(System.Int32)
    name: Item
    nameWithType: ExcelVBACollectionBase(Of T).Item
    fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase(Of T).Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.VBA.ExcelVBACollectionBase`1.Count
  commentId: P:OfficeOpenXml.VBA.ExcelVBACollectionBase`1.Count
  name: Count
  nameWithType: ExcelVBACollectionBase<T>.Count
  fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase<T>.Count
  nameWithType.vb: ExcelVBACollectionBase(Of T).Count
  fullName.vb: OfficeOpenXml.VBA.ExcelVBACollectionBase(Of T).Count
- uid: OfficeOpenXml.VBA.ExcelVBACollectionBase`1.Exists(System.String)
  commentId: M:OfficeOpenXml.VBA.ExcelVBACollectionBase`1.Exists(System.String)
  isExternal: true
  name: Exists(String)
  nameWithType: ExcelVBACollectionBase<T>.Exists(String)
  fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase<T>.Exists(System.String)
  nameWithType.vb: ExcelVBACollectionBase(Of T).Exists(String)
  fullName.vb: OfficeOpenXml.VBA.ExcelVBACollectionBase(Of T).Exists(System.String)
  spec.csharp:
  - uid: OfficeOpenXml.VBA.ExcelVBACollectionBase`1.Exists(System.String)
    name: Exists
    nameWithType: ExcelVBACollectionBase<T>.Exists
    fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase<T>.Exists
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.VBA.ExcelVBACollectionBase`1.Exists(System.String)
    name: Exists
    nameWithType: ExcelVBACollectionBase(Of T).Exists
    fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase(Of T).Exists
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.VBA.ExcelVBACollectionBase`1.Remove(`0)
  commentId: M:OfficeOpenXml.VBA.ExcelVBACollectionBase`1.Remove(`0)
  name: Remove(T)
  nameWithType: ExcelVBACollectionBase<T>.Remove(T)
  fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase<T>.Remove(T)
  nameWithType.vb: ExcelVBACollectionBase(Of T).Remove(T)
  fullName.vb: OfficeOpenXml.VBA.ExcelVBACollectionBase(Of T).Remove(T)
  spec.csharp:
  - uid: OfficeOpenXml.VBA.ExcelVBACollectionBase`1.Remove(`0)
    name: Remove
    nameWithType: ExcelVBACollectionBase<T>.Remove
    fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase<T>.Remove
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.VBA.ExcelVBACollectionBase`1.Remove(`0)
    name: Remove
    nameWithType: ExcelVBACollectionBase(Of T).Remove
    fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase(Of T).Remove
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.VBA.ExcelVBACollectionBase`1.RemoveAt(System.Int32)
  commentId: M:OfficeOpenXml.VBA.ExcelVBACollectionBase`1.RemoveAt(System.Int32)
  isExternal: true
  name: RemoveAt(Int32)
  nameWithType: ExcelVBACollectionBase<T>.RemoveAt(Int32)
  fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase<T>.RemoveAt(System.Int32)
  nameWithType.vb: ExcelVBACollectionBase(Of T).RemoveAt(Int32)
  fullName.vb: OfficeOpenXml.VBA.ExcelVBACollectionBase(Of T).RemoveAt(System.Int32)
  spec.csharp:
  - uid: OfficeOpenXml.VBA.ExcelVBACollectionBase`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: ExcelVBACollectionBase<T>.RemoveAt
    fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase<T>.RemoveAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.VBA.ExcelVBACollectionBase`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: ExcelVBACollectionBase(Of T).RemoveAt
    fullName: OfficeOpenXml.VBA.ExcelVBACollectionBase(Of T).RemoveAt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.VBA.ExcelVbaModuleCollection.AddModule*
  commentId: Overload:OfficeOpenXml.VBA.ExcelVbaModuleCollection.AddModule
  name: AddModule
  nameWithType: ExcelVbaModuleCollection.AddModule
  fullName: OfficeOpenXml.VBA.ExcelVbaModuleCollection.AddModule
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OfficeOpenXml.VBA.ExcelVBAModule
  commentId: T:OfficeOpenXml.VBA.ExcelVBAModule
  parent: OfficeOpenXml.VBA
  name: ExcelVBAModule
  nameWithType: ExcelVBAModule
  fullName: OfficeOpenXml.VBA.ExcelVBAModule
- uid: OfficeOpenXml.VBA.ExcelVbaModuleCollection.AddClass*
  commentId: Overload:OfficeOpenXml.VBA.ExcelVbaModuleCollection.AddClass
  name: AddClass
  nameWithType: ExcelVbaModuleCollection.AddClass
  fullName: OfficeOpenXml.VBA.ExcelVbaModuleCollection.AddClass
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
