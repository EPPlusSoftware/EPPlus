### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartTitle
  commentId: T:OfficeOpenXml.Drawing.Chart.ExcelChartTitle
  id: ExcelChartTitle
  parent: OfficeOpenXml.Drawing.Chart
  children:
  - OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Anchor
  - OfficeOpenXml.Drawing.Chart.ExcelChartTitle.AnchorCtr
  - OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Border
  - OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Effect
  - OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Fill
  - OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Font
  - OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Overlay
  - OfficeOpenXml.Drawing.Chart.ExcelChartTitle.RichText
  - OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Rotation
  - OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Text
  - OfficeOpenXml.Drawing.Chart.ExcelChartTitle.TextBody
  - OfficeOpenXml.Drawing.Chart.ExcelChartTitle.TextVertical
  - OfficeOpenXml.Drawing.Chart.ExcelChartTitle.ThreeD
  langs:
  - csharp
  - vb
  name: ExcelChartTitle
  nameWithType: ExcelChartTitle
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartTitle
  type: Class
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartTitle.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ExcelChartTitle
    path: ../src/EPPlus/Drawing/Chart/ExcelChartTitle.cs
    startLine: 27
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nThe title of a chart\n"
  example: []
  syntax:
    content: 'public abstract class ExcelChartTitle : XmlHelper'
    content.vb: >-
      Public MustInherit Class ExcelChartTitle
          Inherits XmlHelper
  inheritance:
  - System.Object
  - OfficeOpenXml.XmlHelper
  derivedClasses:
  - OfficeOpenXml.Drawing.Chart.ChartEx.ExcelChartExTitle
  - OfficeOpenXml.Drawing.Chart.ExcelChartTitleStandard
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Text
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Text
  id: Text
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartTitle
  langs:
  - csharp
  - vb
  name: Text
  nameWithType: ExcelChartTitle.Text
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Text
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartTitle.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Text
    path: ../src/EPPlus/Drawing/Chart/ExcelChartTitle.cs
    startLine: 79
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nThe text\n"
  example: []
  syntax:
    content: public abstract string Text { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public MustOverride Property Text As String
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Text*
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Border
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Border
  id: Border
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartTitle
  langs:
  - csharp
  - vb
  name: Border
  nameWithType: ExcelChartTitle.Border
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Border
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartTitle.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Border
    path: ../src/EPPlus/Drawing/Chart/ExcelChartTitle.cs
    startLine: 88
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nA reference to the border properties\n"
  example: []
  syntax:
    content: public ExcelDrawingBorder Border { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.ExcelDrawingBorder
    content.vb: Public ReadOnly Property Border As ExcelDrawingBorder
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Border*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Fill
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Fill
  id: Fill
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartTitle
  langs:
  - csharp
  - vb
  name: Fill
  nameWithType: ExcelChartTitle.Fill
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Fill
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartTitle.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Fill
    path: ../src/EPPlus/Drawing/Chart/ExcelChartTitle.cs
    startLine: 103
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nA reference to the fill properties\n"
  example: []
  syntax:
    content: public ExcelDrawingFill Fill { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.ExcelDrawingFill
    content.vb: Public ReadOnly Property Fill As ExcelDrawingFill
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Fill*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Font
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Font
  id: Font
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartTitle
  langs:
  - csharp
  - vb
  name: Font
  nameWithType: ExcelChartTitle.Font
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Font
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartTitle.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Font
    path: ../src/EPPlus/Drawing/Chart/ExcelChartTitle.cs
    startLine: 119
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nA reference to the font properties\n"
  example: []
  syntax:
    content: public ExcelTextFont Font { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Style.ExcelTextFont
    content.vb: Public ReadOnly Property Font As ExcelTextFont
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Font*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.TextBody
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartTitle.TextBody
  id: TextBody
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartTitle
  langs:
  - csharp
  - vb
  name: TextBody
  nameWithType: ExcelChartTitle.TextBody
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.TextBody
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartTitle.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: TextBody
    path: ../src/EPPlus/Drawing/Chart/ExcelChartTitle.cs
    startLine: 138
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nAccess to text body properties\n"
  example: []
  syntax:
    content: public ExcelTextBody TextBody { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.ExcelTextBody
    content.vb: Public ReadOnly Property TextBody As ExcelTextBody
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.TextBody*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Effect
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Effect
  id: Effect
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartTitle
  langs:
  - csharp
  - vb
  name: Effect
  nameWithType: ExcelChartTitle.Effect
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Effect
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartTitle.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Effect
    path: ../src/EPPlus/Drawing/Chart/ExcelChartTitle.cs
    startLine: 153
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nEffects\n"
  example: []
  syntax:
    content: public ExcelDrawingEffectStyle Effect { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingEffectStyle
    content.vb: Public ReadOnly Property Effect As ExcelDrawingEffectStyle
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Effect*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.ThreeD
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartTitle.ThreeD
  id: ThreeD
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartTitle
  langs:
  - csharp
  - vb
  name: ThreeD
  nameWithType: ExcelChartTitle.ThreeD
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.ThreeD
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartTitle.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ThreeD
    path: ../src/EPPlus/Drawing/Chart/ExcelChartTitle.cs
    startLine: 168
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\n3D properties\n"
  example: []
  syntax:
    content: public ExcelDrawing3D ThreeD { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.Style.ThreeD.ExcelDrawing3D
    content.vb: Public ReadOnly Property ThreeD As ExcelDrawing3D
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.ThreeD*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.RichText
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartTitle.RichText
  id: RichText
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartTitle
  langs:
  - csharp
  - vb
  name: RichText
  nameWithType: ExcelChartTitle.RichText
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.RichText
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartTitle.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: RichText
    path: ../src/EPPlus/Drawing/Chart/ExcelChartTitle.cs
    startLine: 188
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nRichtext\n"
  example: []
  syntax:
    content: public ExcelParagraphCollection RichText { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Style.ExcelParagraphCollection
    content.vb: Public ReadOnly Property RichText As ExcelParagraphCollection
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.RichText*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Overlay
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Overlay
  id: Overlay
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartTitle
  langs:
  - csharp
  - vb
  name: Overlay
  nameWithType: ExcelChartTitle.Overlay
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Overlay
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartTitle.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Overlay
    path: ../src/EPPlus/Drawing/Chart/ExcelChartTitle.cs
    startLine: 223
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nShow without overlaping the chart.\n"
  example: []
  syntax:
    content: public bool Overlay { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Overlay As Boolean
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Overlay*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.AnchorCtr
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartTitle.AnchorCtr
  id: AnchorCtr
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartTitle
  langs:
  - csharp
  - vb
  name: AnchorCtr
  nameWithType: ExcelChartTitle.AnchorCtr
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.AnchorCtr
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartTitle.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: AnchorCtr
    path: ../src/EPPlus/Drawing/Chart/ExcelChartTitle.cs
    startLine: 251
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nThe centering of the text. Centers the text to the smallest possible text container.\n"
  example: []
  syntax:
    content: public bool AnchorCtr { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property AnchorCtr As Boolean
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.AnchorCtr*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Anchor
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Anchor
  id: Anchor
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartTitle
  langs:
  - csharp
  - vb
  name: Anchor
  nameWithType: ExcelChartTitle.Anchor
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Anchor
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartTitle.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Anchor
    path: ../src/EPPlus/Drawing/Chart/ExcelChartTitle.cs
    startLine: 265
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nHow the text is anchored\n"
  example: []
  syntax:
    content: public eTextAnchoringType Anchor { get; set; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.eTextAnchoringType
    content.vb: Public Property Anchor As eTextAnchoringType
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Anchor*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.TextVertical
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartTitle.TextVertical
  id: TextVertical
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartTitle
  langs:
  - csharp
  - vb
  name: TextVertical
  nameWithType: ExcelChartTitle.TextVertical
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.TextVertical
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartTitle.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: TextVertical
    path: ../src/EPPlus/Drawing/Chart/ExcelChartTitle.cs
    startLine: 280
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nVertical text\n"
  example: []
  syntax:
    content: public eTextVerticalType TextVertical { get; set; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.eTextVerticalType
    content.vb: Public Property TextVertical As eTextVerticalType
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.TextVertical*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Rotation
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Rotation
  id: Rotation
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartTitle
  langs:
  - csharp
  - vb
  name: Rotation
  nameWithType: ExcelChartTitle.Rotation
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Rotation
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartTitle.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Rotation
    path: ../src/EPPlus/Drawing/Chart/ExcelChartTitle.cs
    startLine: 294
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nRotation in degrees (0-360)\n"
  example: []
  syntax:
    content: public double Rotation { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Rotation As Double
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Rotation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: OfficeOpenXml.Drawing.Chart
  commentId: N:OfficeOpenXml.Drawing.Chart
  name: OfficeOpenXml.Drawing.Chart
  nameWithType: OfficeOpenXml.Drawing.Chart
  fullName: OfficeOpenXml.Drawing.Chart
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OfficeOpenXml.XmlHelper
  commentId: T:OfficeOpenXml.XmlHelper
  parent: OfficeOpenXml
  name: XmlHelper
  nameWithType: XmlHelper
  fullName: OfficeOpenXml.XmlHelper
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml
  commentId: N:OfficeOpenXml
  name: OfficeOpenXml
  nameWithType: OfficeOpenXml
  fullName: OfficeOpenXml
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Text*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Text
  name: Text
  nameWithType: ExcelChartTitle.Text
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Text
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Border*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Border
  name: Border
  nameWithType: ExcelChartTitle.Border
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Border
- uid: OfficeOpenXml.Drawing.ExcelDrawingBorder
  commentId: T:OfficeOpenXml.Drawing.ExcelDrawingBorder
  parent: OfficeOpenXml.Drawing
  name: ExcelDrawingBorder
  nameWithType: ExcelDrawingBorder
  fullName: OfficeOpenXml.Drawing.ExcelDrawingBorder
- uid: OfficeOpenXml.Drawing
  commentId: N:OfficeOpenXml.Drawing
  name: OfficeOpenXml.Drawing
  nameWithType: OfficeOpenXml.Drawing
  fullName: OfficeOpenXml.Drawing
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Fill*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Fill
  name: Fill
  nameWithType: ExcelChartTitle.Fill
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Fill
- uid: OfficeOpenXml.Drawing.ExcelDrawingFill
  commentId: T:OfficeOpenXml.Drawing.ExcelDrawingFill
  parent: OfficeOpenXml.Drawing
  name: ExcelDrawingFill
  nameWithType: ExcelDrawingFill
  fullName: OfficeOpenXml.Drawing.ExcelDrawingFill
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Font*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Font
  name: Font
  nameWithType: ExcelChartTitle.Font
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Font
- uid: OfficeOpenXml.Style.ExcelTextFont
  commentId: T:OfficeOpenXml.Style.ExcelTextFont
  parent: OfficeOpenXml.Style
  name: ExcelTextFont
  nameWithType: ExcelTextFont
  fullName: OfficeOpenXml.Style.ExcelTextFont
- uid: OfficeOpenXml.Style
  commentId: N:OfficeOpenXml.Style
  name: OfficeOpenXml.Style
  nameWithType: OfficeOpenXml.Style
  fullName: OfficeOpenXml.Style
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.TextBody*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartTitle.TextBody
  name: TextBody
  nameWithType: ExcelChartTitle.TextBody
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.TextBody
- uid: OfficeOpenXml.Drawing.ExcelTextBody
  commentId: T:OfficeOpenXml.Drawing.ExcelTextBody
  parent: OfficeOpenXml.Drawing
  name: ExcelTextBody
  nameWithType: ExcelTextBody
  fullName: OfficeOpenXml.Drawing.ExcelTextBody
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Effect*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Effect
  name: Effect
  nameWithType: ExcelChartTitle.Effect
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Effect
- uid: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingEffectStyle
  commentId: T:OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingEffectStyle
  parent: OfficeOpenXml.Drawing.Style.Effect
  name: ExcelDrawingEffectStyle
  nameWithType: ExcelDrawingEffectStyle
  fullName: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingEffectStyle
- uid: OfficeOpenXml.Drawing.Style.Effect
  commentId: N:OfficeOpenXml.Drawing.Style.Effect
  name: OfficeOpenXml.Drawing.Style.Effect
  nameWithType: OfficeOpenXml.Drawing.Style.Effect
  fullName: OfficeOpenXml.Drawing.Style.Effect
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.ThreeD*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartTitle.ThreeD
  name: ThreeD
  nameWithType: ExcelChartTitle.ThreeD
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.ThreeD
- uid: OfficeOpenXml.Drawing.Style.ThreeD.ExcelDrawing3D
  commentId: T:OfficeOpenXml.Drawing.Style.ThreeD.ExcelDrawing3D
  parent: OfficeOpenXml.Drawing.Style.ThreeD
  name: ExcelDrawing3D
  nameWithType: ExcelDrawing3D
  fullName: OfficeOpenXml.Drawing.Style.ThreeD.ExcelDrawing3D
- uid: OfficeOpenXml.Drawing.Style.ThreeD
  commentId: N:OfficeOpenXml.Drawing.Style.ThreeD
  name: OfficeOpenXml.Drawing.Style.ThreeD
  nameWithType: OfficeOpenXml.Drawing.Style.ThreeD
  fullName: OfficeOpenXml.Drawing.Style.ThreeD
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.RichText*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartTitle.RichText
  name: RichText
  nameWithType: ExcelChartTitle.RichText
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.RichText
- uid: OfficeOpenXml.Style.ExcelParagraphCollection
  commentId: T:OfficeOpenXml.Style.ExcelParagraphCollection
  parent: OfficeOpenXml.Style
  name: ExcelParagraphCollection
  nameWithType: ExcelParagraphCollection
  fullName: OfficeOpenXml.Style.ExcelParagraphCollection
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Overlay*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Overlay
  name: Overlay
  nameWithType: ExcelChartTitle.Overlay
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Overlay
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.AnchorCtr*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartTitle.AnchorCtr
  name: AnchorCtr
  nameWithType: ExcelChartTitle.AnchorCtr
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.AnchorCtr
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Anchor*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Anchor
  name: Anchor
  nameWithType: ExcelChartTitle.Anchor
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Anchor
- uid: OfficeOpenXml.Drawing.eTextAnchoringType
  commentId: T:OfficeOpenXml.Drawing.eTextAnchoringType
  parent: OfficeOpenXml.Drawing
  name: eTextAnchoringType
  nameWithType: eTextAnchoringType
  fullName: OfficeOpenXml.Drawing.eTextAnchoringType
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.TextVertical*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartTitle.TextVertical
  name: TextVertical
  nameWithType: ExcelChartTitle.TextVertical
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.TextVertical
- uid: OfficeOpenXml.Drawing.eTextVerticalType
  commentId: T:OfficeOpenXml.Drawing.eTextVerticalType
  parent: OfficeOpenXml.Drawing
  name: eTextVerticalType
  nameWithType: eTextVerticalType
  fullName: OfficeOpenXml.Drawing.eTextVerticalType
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Rotation*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Rotation
  name: Rotation
  nameWithType: ExcelChartTitle.Rotation
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartTitle.Rotation
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
