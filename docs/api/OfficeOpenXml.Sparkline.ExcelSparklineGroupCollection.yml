### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection
  commentId: T:OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection
  id: ExcelSparklineGroupCollection
  parent: OfficeOpenXml.Sparkline
  children:
  - OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.Add(OfficeOpenXml.Sparkline.eSparklineType,OfficeOpenXml.ExcelAddressBase,OfficeOpenXml.ExcelAddressBase)
  - OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.Count
  - OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.GetEnumerator
  - OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.Item(System.Int32)
  - OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.Remove(OfficeOpenXml.Sparkline.ExcelSparklineGroup)
  - OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.RemoveAt(System.Int32)
  - OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  - vb
  name: ExcelSparklineGroupCollection
  nameWithType: ExcelSparklineGroupCollection
  fullName: OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection
  type: Class
  source:
    remote:
      path: src/EPPlus/Sparkline/ExcelSparklineGroupCollection.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ExcelSparklineGroupCollection
    path: ../src/EPPlus/Sparkline/ExcelSparklineGroupCollection.cs
    startLine: 24
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Sparkline
  summary: "\nA collection of sparkline groups\n"
  example: []
  syntax:
    content: 'public class ExcelSparklineGroupCollection : IEnumerable<ExcelSparklineGroup>, IEnumerable'
    content.vb: >-
      Public Class ExcelSparklineGroupCollection
          Implements IEnumerable(Of ExcelSparklineGroup), IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable{OfficeOpenXml.Sparkline.ExcelSparklineGroup}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.Count
  commentId: P:OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.Count
  id: Count
  parent: OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: ExcelSparklineGroupCollection.Count
  fullName: OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.Count
  type: Property
  source:
    remote:
      path: src/EPPlus/Sparkline/ExcelSparklineGroupCollection.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Count
    path: ../src/EPPlus/Sparkline/ExcelSparklineGroupCollection.cs
    startLine: 42
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Sparkline
  summary: "\nNumber of items in the collection\n"
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.Count*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.Add(OfficeOpenXml.Sparkline.eSparklineType,OfficeOpenXml.ExcelAddressBase,OfficeOpenXml.ExcelAddressBase)
  commentId: M:OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.Add(OfficeOpenXml.Sparkline.eSparklineType,OfficeOpenXml.ExcelAddressBase,OfficeOpenXml.ExcelAddressBase)
  id: Add(OfficeOpenXml.Sparkline.eSparklineType,OfficeOpenXml.ExcelAddressBase,OfficeOpenXml.ExcelAddressBase)
  parent: OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection
  langs:
  - csharp
  - vb
  name: Add(eSparklineType, ExcelAddressBase, ExcelAddressBase)
  nameWithType: ExcelSparklineGroupCollection.Add(eSparklineType, ExcelAddressBase, ExcelAddressBase)
  fullName: OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.Add(OfficeOpenXml.Sparkline.eSparklineType, OfficeOpenXml.ExcelAddressBase, OfficeOpenXml.ExcelAddressBase)
  type: Method
  source:
    remote:
      path: src/EPPlus/Sparkline/ExcelSparklineGroupCollection.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Add
    path: ../src/EPPlus/Sparkline/ExcelSparklineGroupCollection.cs
    startLine: 56
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Sparkline
  summary: "\nAdds a new sparklinegroup to the collection\n"
  example: []
  syntax:
    content: public ExcelSparklineGroup Add(eSparklineType type, ExcelAddressBase locationRange, ExcelAddressBase dataRange)
    parameters:
    - id: type
      type: OfficeOpenXml.Sparkline.eSparklineType
      description: Type of sparkline
    - id: locationRange
      type: OfficeOpenXml.ExcelAddressBase
      description: The location of the sparkline group. The range must have one row or column and must match the number of rows/columns in the datarange
    - id: dataRange
      type: OfficeOpenXml.ExcelAddressBase
      description: The data for the sparkline group
    return:
      type: OfficeOpenXml.Sparkline.ExcelSparklineGroup
      description: ''
    content.vb: Public Function Add(type As eSparklineType, locationRange As ExcelAddressBase, dataRange As ExcelAddressBase) As ExcelSparklineGroup
  overload: OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.Item(System.Int32)
  commentId: P:OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: ExcelSparklineGroupCollection.Item[Int32]
  fullName: OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/EPPlus/Sparkline/ExcelSparklineGroupCollection.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: this[]
    path: ../src/EPPlus/Sparkline/ExcelSparklineGroupCollection.cs
    startLine: 181
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Sparkline
  summary: "\nReturns the sparklinegroup at the specified position.  \n"
  example: []
  syntax:
    content: public ExcelSparklineGroup this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: The position of the Sparklinegroup. 0-base
    return:
      type: OfficeOpenXml.Sparkline.ExcelSparklineGroup
      description: ''
    content.vb: Public ReadOnly Property Item(index As Integer) As ExcelSparklineGroup
  overload: OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.Item*
  nameWithType.vb: ExcelSparklineGroupCollection.Item(Int32)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.Item(System.Int32)
  name.vb: Item(Int32)
- uid: OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.GetEnumerator
  commentId: M:OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.GetEnumerator
  id: GetEnumerator
  parent: OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: ExcelSparklineGroupCollection.GetEnumerator()
  fullName: OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/EPPlus/Sparkline/ExcelSparklineGroupCollection.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: GetEnumerator
    path: ../src/EPPlus/Sparkline/ExcelSparklineGroupCollection.cs
    startLine: 192
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Sparkline
  summary: "\nThe enumerator for the collection\n"
  example: []
  syntax:
    content: public IEnumerator<ExcelSparklineGroup> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{OfficeOpenXml.Sparkline.ExcelSparklineGroup}
      description: The enumerator
    content.vb: Public Function GetEnumerator As IEnumerator(Of ExcelSparklineGroup)
  overload: OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{OfficeOpenXml.Sparkline.ExcelSparklineGroup}.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.System#Collections#IEnumerable#GetEnumerator
  commentId: M:OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: ExcelSparklineGroupCollection.IEnumerable.GetEnumerator()
  fullName: OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/EPPlus/Sparkline/ExcelSparklineGroupCollection.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: System.Collections.IEnumerable.GetEnumerator
    path: ../src/EPPlus/Sparkline/ExcelSparklineGroupCollection.cs
    startLine: 197
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Sparkline
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    return:
      type: System.Collections.IEnumerator
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
  overload: OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: ExcelSparklineGroupCollection.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
- uid: OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.RemoveAt(System.Int32)
  commentId: M:OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection
  langs:
  - csharp
  - vb
  name: RemoveAt(Int32)
  nameWithType: ExcelSparklineGroupCollection.RemoveAt(Int32)
  fullName: OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.RemoveAt(System.Int32)
  type: Method
  source:
    remote:
      path: src/EPPlus/Sparkline/ExcelSparklineGroupCollection.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: RemoveAt
    path: ../src/EPPlus/Sparkline/ExcelSparklineGroupCollection.cs
    startLine: 205
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Sparkline
  summary: "\nRemoves the sparkline.\n"
  example: []
  syntax:
    content: public void RemoveAt(int index)
    parameters:
    - id: index
      type: System.Int32
      description: The index of the item to be removed
    content.vb: Public Sub RemoveAt(index As Integer)
  overload: OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.RemoveAt*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.Remove(OfficeOpenXml.Sparkline.ExcelSparklineGroup)
  commentId: M:OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.Remove(OfficeOpenXml.Sparkline.ExcelSparklineGroup)
  id: Remove(OfficeOpenXml.Sparkline.ExcelSparklineGroup)
  parent: OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection
  langs:
  - csharp
  - vb
  name: Remove(ExcelSparklineGroup)
  nameWithType: ExcelSparklineGroupCollection.Remove(ExcelSparklineGroup)
  fullName: OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.Remove(OfficeOpenXml.Sparkline.ExcelSparklineGroup)
  type: Method
  source:
    remote:
      path: src/EPPlus/Sparkline/ExcelSparklineGroupCollection.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Remove
    path: ../src/EPPlus/Sparkline/ExcelSparklineGroupCollection.cs
    startLine: 213
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Sparkline
  summary: "\nRemoves the sparkline.\n"
  example: []
  syntax:
    content: public void Remove(ExcelSparklineGroup sparklineGroup)
    parameters:
    - id: sparklineGroup
      type: OfficeOpenXml.Sparkline.ExcelSparklineGroup
      description: The sparklinegroup to be removed
    content.vb: Public Sub Remove(sparklineGroup As ExcelSparklineGroup)
  overload: OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.Remove*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: OfficeOpenXml.Sparkline
  commentId: N:OfficeOpenXml.Sparkline
  name: OfficeOpenXml.Sparkline
  nameWithType: OfficeOpenXml.Sparkline
  fullName: OfficeOpenXml.Sparkline
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IEnumerable{OfficeOpenXml.Sparkline.ExcelSparklineGroup}
  commentId: T:System.Collections.Generic.IEnumerable{OfficeOpenXml.Sparkline.ExcelSparklineGroup}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ExcelSparklineGroup>
  nameWithType: IEnumerable<ExcelSparklineGroup>
  fullName: System.Collections.Generic.IEnumerable<OfficeOpenXml.Sparkline.ExcelSparklineGroup>
  nameWithType.vb: IEnumerable(Of ExcelSparklineGroup)
  fullName.vb: System.Collections.Generic.IEnumerable(Of OfficeOpenXml.Sparkline.ExcelSparklineGroup)
  name.vb: IEnumerable(Of ExcelSparklineGroup)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.Sparkline.ExcelSparklineGroup
    name: ExcelSparklineGroup
    nameWithType: ExcelSparklineGroup
    fullName: OfficeOpenXml.Sparkline.ExcelSparklineGroup
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.Sparkline.ExcelSparklineGroup
    name: ExcelSparklineGroup
    nameWithType: ExcelSparklineGroup
    fullName: OfficeOpenXml.Sparkline.ExcelSparklineGroup
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.Count*
  commentId: Overload:OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.Count
  name: Count
  nameWithType: ExcelSparklineGroupCollection.Count
  fullName: OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.Add*
  commentId: Overload:OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.Add
  name: Add
  nameWithType: ExcelSparklineGroupCollection.Add
  fullName: OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.Add
- uid: OfficeOpenXml.Sparkline.eSparklineType
  commentId: T:OfficeOpenXml.Sparkline.eSparklineType
  parent: OfficeOpenXml.Sparkline
  name: eSparklineType
  nameWithType: eSparklineType
  fullName: OfficeOpenXml.Sparkline.eSparklineType
- uid: OfficeOpenXml.ExcelAddressBase
  commentId: T:OfficeOpenXml.ExcelAddressBase
  parent: OfficeOpenXml
  name: ExcelAddressBase
  nameWithType: ExcelAddressBase
  fullName: OfficeOpenXml.ExcelAddressBase
- uid: OfficeOpenXml.Sparkline.ExcelSparklineGroup
  commentId: T:OfficeOpenXml.Sparkline.ExcelSparklineGroup
  parent: OfficeOpenXml.Sparkline
  name: ExcelSparklineGroup
  nameWithType: ExcelSparklineGroup
  fullName: OfficeOpenXml.Sparkline.ExcelSparklineGroup
- uid: OfficeOpenXml
  commentId: N:OfficeOpenXml
  name: OfficeOpenXml
  nameWithType: OfficeOpenXml
  fullName: OfficeOpenXml
- uid: OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.Item*
  commentId: Overload:OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.Item
  name: Item
  nameWithType: ExcelSparklineGroupCollection.Item
  fullName: OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.Item
- uid: OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.GetEnumerator*
  commentId: Overload:OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.GetEnumerator
  name: GetEnumerator
  nameWithType: ExcelSparklineGroupCollection.GetEnumerator
  fullName: OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{OfficeOpenXml.Sparkline.ExcelSparklineGroup}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{OfficeOpenXml.Sparkline.ExcelSparklineGroup}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{OfficeOpenXml.Sparkline.ExcelSparklineGroup}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<ExcelSparklineGroup>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<OfficeOpenXml.Sparkline.ExcelSparklineGroup>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of ExcelSparklineGroup).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of OfficeOpenXml.Sparkline.ExcelSparklineGroup).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<ExcelSparklineGroup>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<OfficeOpenXml.Sparkline.ExcelSparklineGroup>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of ExcelSparklineGroup).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of OfficeOpenXml.Sparkline.ExcelSparklineGroup).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{OfficeOpenXml.Sparkline.ExcelSparklineGroup}
  commentId: T:System.Collections.Generic.IEnumerator{OfficeOpenXml.Sparkline.ExcelSparklineGroup}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<ExcelSparklineGroup>
  nameWithType: IEnumerator<ExcelSparklineGroup>
  fullName: System.Collections.Generic.IEnumerator<OfficeOpenXml.Sparkline.ExcelSparklineGroup>
  nameWithType.vb: IEnumerator(Of ExcelSparklineGroup)
  fullName.vb: System.Collections.Generic.IEnumerator(Of OfficeOpenXml.Sparkline.ExcelSparklineGroup)
  name.vb: IEnumerator(Of ExcelSparklineGroup)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.Sparkline.ExcelSparklineGroup
    name: ExcelSparklineGroup
    nameWithType: ExcelSparklineGroup
    fullName: OfficeOpenXml.Sparkline.ExcelSparklineGroup
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.Sparkline.ExcelSparklineGroup
    name: ExcelSparklineGroup
    nameWithType: ExcelSparklineGroup
    fullName: OfficeOpenXml.Sparkline.ExcelSparklineGroup
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator
  nameWithType: ExcelSparklineGroupCollection.IEnumerable.GetEnumerator
  fullName: OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: ExcelSparklineGroupCollection.System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.RemoveAt*
  commentId: Overload:OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.RemoveAt
  name: RemoveAt
  nameWithType: ExcelSparklineGroupCollection.RemoveAt
  fullName: OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.RemoveAt
- uid: OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.Remove*
  commentId: Overload:OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.Remove
  name: Remove
  nameWithType: ExcelSparklineGroupCollection.Remove
  fullName: OfficeOpenXml.Sparkline.ExcelSparklineGroupCollection.Remove
