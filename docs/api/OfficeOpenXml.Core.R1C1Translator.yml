### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.Core.R1C1Translator
  commentId: T:OfficeOpenXml.Core.R1C1Translator
  id: R1C1Translator
  parent: OfficeOpenXml.Core
  children:
  - OfficeOpenXml.Core.R1C1Translator.FromR1C1(System.String,System.Int32,System.Int32,System.Boolean)
  - OfficeOpenXml.Core.R1C1Translator.FromR1C1Formula(System.String,System.Int32,System.Int32,System.Boolean)
  - OfficeOpenXml.Core.R1C1Translator.ToR1C1(OfficeOpenXml.ExcelAddressBase,System.Int32,System.Int32)
  - OfficeOpenXml.Core.R1C1Translator.ToR1C1Formula(System.String,System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: R1C1Translator
  nameWithType: R1C1Translator
  fullName: OfficeOpenXml.Core.R1C1Translator
  type: Class
  source:
    remote:
      path: src/EPPlus/Core/R1C1Translator.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: R1C1Translator
    path: ../src/EPPlus/Core/R1C1Translator.cs
    startLine: 23
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Core
  summary: "\nTranslate addresses between the R1C1 and A1 notation\n"
  example: []
  syntax:
    content: public static class R1C1Translator
    content.vb: Public Module R1C1Translator
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: OfficeOpenXml.Core.R1C1Translator.FromR1C1Formula(System.String,System.Int32,System.Int32,System.Boolean)
  commentId: M:OfficeOpenXml.Core.R1C1Translator.FromR1C1Formula(System.String,System.Int32,System.Int32,System.Boolean)
  id: FromR1C1Formula(System.String,System.Int32,System.Int32,System.Boolean)
  parent: OfficeOpenXml.Core.R1C1Translator
  langs:
  - csharp
  - vb
  name: FromR1C1Formula(String, Int32, Int32, Boolean)
  nameWithType: R1C1Translator.FromR1C1Formula(String, Int32, Int32, Boolean)
  fullName: OfficeOpenXml.Core.R1C1Translator.FromR1C1Formula(System.String, System.Int32, System.Int32, System.Boolean)
  type: Method
  source:
    remote:
      path: src/EPPlus/Core/R1C1Translator.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: FromR1C1Formula
    path: ../src/EPPlus/Core/R1C1Translator.cs
    startLine: 42
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Core
  summary: "\nTranslate addresses in a formula from R1C1 to A1\n"
  example: []
  syntax:
    content: public static string FromR1C1Formula(string formula, int row, int col, bool rollIfOverflow = false)
    parameters:
    - id: formula
      type: System.String
      description: The formula
    - id: row
      type: System.Int32
      description: The row of the cell to calculate from
    - id: col
      type: System.Int32
      description: The column of the cell to calculate from
    - id: rollIfOverflow
      type: System.Boolean
      description: If row or col exceeds the maximum value the row/col will start over from 1
    return:
      type: System.String
      description: The formula in A1 notation
    content.vb: Public Shared Function FromR1C1Formula(formula As String, row As Integer, col As Integer, rollIfOverflow As Boolean = False) As String
  overload: OfficeOpenXml.Core.R1C1Translator.FromR1C1Formula*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: OfficeOpenXml.Core.R1C1Translator.ToR1C1Formula(System.String,System.Int32,System.Int32)
  commentId: M:OfficeOpenXml.Core.R1C1Translator.ToR1C1Formula(System.String,System.Int32,System.Int32)
  id: ToR1C1Formula(System.String,System.Int32,System.Int32)
  parent: OfficeOpenXml.Core.R1C1Translator
  langs:
  - csharp
  - vb
  name: ToR1C1Formula(String, Int32, Int32)
  nameWithType: R1C1Translator.ToR1C1Formula(String, Int32, Int32)
  fullName: OfficeOpenXml.Core.R1C1Translator.ToR1C1Formula(System.String, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/EPPlus/Core/R1C1Translator.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ToR1C1Formula
    path: ../src/EPPlus/Core/R1C1Translator.cs
    startLine: 94
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Core
  summary: "\nTranslate addresses in a formula from A1 to R1C1\n"
  example: []
  syntax:
    content: public static string ToR1C1Formula(string formula, int row, int col)
    parameters:
    - id: formula
      type: System.String
      description: The formula
    - id: row
      type: System.Int32
      description: The row of the cell to calculate from
    - id: col
      type: System.Int32
      description: The column of the cell to calculate from
    return:
      type: System.String
      description: The formula in R1C1 notation
    content.vb: Public Shared Function ToR1C1Formula(formula As String, row As Integer, col As Integer) As String
  overload: OfficeOpenXml.Core.R1C1Translator.ToR1C1Formula*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: OfficeOpenXml.Core.R1C1Translator.FromR1C1(System.String,System.Int32,System.Int32,System.Boolean)
  commentId: M:OfficeOpenXml.Core.R1C1Translator.FromR1C1(System.String,System.Int32,System.Int32,System.Boolean)
  id: FromR1C1(System.String,System.Int32,System.Int32,System.Boolean)
  parent: OfficeOpenXml.Core.R1C1Translator
  langs:
  - csharp
  - vb
  name: FromR1C1(String, Int32, Int32, Boolean)
  nameWithType: R1C1Translator.FromR1C1(String, Int32, Int32, Boolean)
  fullName: OfficeOpenXml.Core.R1C1Translator.FromR1C1(System.String, System.Int32, System.Int32, System.Boolean)
  type: Method
  source:
    remote:
      path: src/EPPlus/Core/R1C1Translator.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: FromR1C1
    path: ../src/EPPlus/Core/R1C1Translator.cs
    startLine: 147
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Core
  summary: "\nTranslate an address from R1C1 to A1\n"
  example: []
  syntax:
    content: public static string FromR1C1(string r1C1Address, int row, int col, bool rollIfOverflow = false)
    parameters:
    - id: r1C1Address
      type: System.String
      description: The address
    - id: row
      type: System.Int32
      description: The row of the cell to calculate from
    - id: col
      type: System.Int32
      description: The column of the cell to calculate from
    - id: rollIfOverflow
      type: System.Boolean
      description: If row or col exceeds the maximum value the row/col will start over from 1
    return:
      type: System.String
      description: The address in A1 notation
    content.vb: Public Shared Function FromR1C1(r1C1Address As String, row As Integer, col As Integer, rollIfOverflow As Boolean = False) As String
  overload: OfficeOpenXml.Core.R1C1Translator.FromR1C1*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: OfficeOpenXml.Core.R1C1Translator.ToR1C1(OfficeOpenXml.ExcelAddressBase,System.Int32,System.Int32)
  commentId: M:OfficeOpenXml.Core.R1C1Translator.ToR1C1(OfficeOpenXml.ExcelAddressBase,System.Int32,System.Int32)
  id: ToR1C1(OfficeOpenXml.ExcelAddressBase,System.Int32,System.Int32)
  parent: OfficeOpenXml.Core.R1C1Translator
  langs:
  - csharp
  - vb
  name: ToR1C1(ExcelAddressBase, Int32, Int32)
  nameWithType: R1C1Translator.ToR1C1(ExcelAddressBase, Int32, Int32)
  fullName: OfficeOpenXml.Core.R1C1Translator.ToR1C1(OfficeOpenXml.ExcelAddressBase, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/EPPlus/Core/R1C1Translator.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ToR1C1
    path: ../src/EPPlus/Core/R1C1Translator.cs
    startLine: 267
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Core
  summary: "\nTranslate an address from A1 to R1C1\n"
  example: []
  syntax:
    content: public static string ToR1C1(ExcelAddressBase address, int row, int col)
    parameters:
    - id: address
      type: OfficeOpenXml.ExcelAddressBase
      description: The address
    - id: row
      type: System.Int32
      description: The row of the cell to calculate from
    - id: col
      type: System.Int32
      description: The column of the cell to calculate from
    return:
      type: System.String
      description: The address in R1C1 notation
    content.vb: Public Shared Function ToR1C1(address As ExcelAddressBase, row As Integer, col As Integer) As String
  overload: OfficeOpenXml.Core.R1C1Translator.ToR1C1*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: OfficeOpenXml.Core
  commentId: N:OfficeOpenXml.Core
  name: OfficeOpenXml.Core
  nameWithType: OfficeOpenXml.Core
  fullName: OfficeOpenXml.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml.Core.R1C1Translator.FromR1C1Formula*
  commentId: Overload:OfficeOpenXml.Core.R1C1Translator.FromR1C1Formula
  name: FromR1C1Formula
  nameWithType: R1C1Translator.FromR1C1Formula
  fullName: OfficeOpenXml.Core.R1C1Translator.FromR1C1Formula
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: OfficeOpenXml.Core.R1C1Translator.ToR1C1Formula*
  commentId: Overload:OfficeOpenXml.Core.R1C1Translator.ToR1C1Formula
  name: ToR1C1Formula
  nameWithType: R1C1Translator.ToR1C1Formula
  fullName: OfficeOpenXml.Core.R1C1Translator.ToR1C1Formula
- uid: OfficeOpenXml.Core.R1C1Translator.FromR1C1*
  commentId: Overload:OfficeOpenXml.Core.R1C1Translator.FromR1C1
  name: FromR1C1
  nameWithType: R1C1Translator.FromR1C1
  fullName: OfficeOpenXml.Core.R1C1Translator.FromR1C1
- uid: OfficeOpenXml.Core.R1C1Translator.ToR1C1*
  commentId: Overload:OfficeOpenXml.Core.R1C1Translator.ToR1C1
  name: ToR1C1
  nameWithType: R1C1Translator.ToR1C1
  fullName: OfficeOpenXml.Core.R1C1Translator.ToR1C1
- uid: OfficeOpenXml.ExcelAddressBase
  commentId: T:OfficeOpenXml.ExcelAddressBase
  parent: OfficeOpenXml
  name: ExcelAddressBase
  nameWithType: ExcelAddressBase
  fullName: OfficeOpenXml.ExcelAddressBase
- uid: OfficeOpenXml
  commentId: N:OfficeOpenXml
  name: OfficeOpenXml
  nameWithType: OfficeOpenXml
  fullName: OfficeOpenXml
