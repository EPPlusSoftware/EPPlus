### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaAddressBase
  commentId: T:OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaAddressBase
  id: FormulaAddressBase
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  children:
  - OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaAddressBase.ExternalReferenceIx
  - OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaAddressBase.WorksheetIx
  langs:
  - csharp
  - vb
  name: FormulaAddressBase
  nameWithType: FormulaAddressBase
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaAddressBase
  type: Class
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/FormulaAddress.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: FormulaAddressBase
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/FormulaAddress.cs
    startLine: 506
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nFormula address base\n"
  example: []
  syntax:
    content: public class FormulaAddressBase
    content.vb: Public Class FormulaAddressBase
  inheritance:
  - System.Object
  derivedClasses:
  - OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaRangeAddress
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaAddressBase.ExternalReferenceIx
  commentId: F:OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaAddressBase.ExternalReferenceIx
  id: ExternalReferenceIx
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaAddressBase
  langs:
  - csharp
  - vb
  name: ExternalReferenceIx
  nameWithType: FormulaAddressBase.ExternalReferenceIx
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaAddressBase.ExternalReferenceIx
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/FormulaAddress.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ExternalReferenceIx
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/FormulaAddress.cs
    startLine: 513
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nExternal reference index. \n-1 means the current workbook.\nshort.MinValue - Invalid reference.\n"
  example: []
  syntax:
    content: public int ExternalReferenceIx
    return:
      type: System.Int32
    content.vb: Public ExternalReferenceIx As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaAddressBase.WorksheetIx
  commentId: F:OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaAddressBase.WorksheetIx
  id: WorksheetIx
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaAddressBase
  langs:
  - csharp
  - vb
  name: WorksheetIx
  nameWithType: FormulaAddressBase.WorksheetIx
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaAddressBase.WorksheetIx
  type: Field
  source:
    remote:
      path: src/EPPlus/FormulaParsing/LexicalAnalysis/FormulaAddress.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: WorksheetIx
    path: ../src/EPPlus/FormulaParsing/LexicalAnalysis/FormulaAddress.cs
    startLine: 519
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  summary: "\nWorksheet index in the package.\n-1             - Non-existing worksheet\nshort.MinValue - Not set. \n"
  example: []
  syntax:
    content: public int WorksheetIx
    return:
      type: System.Int32
    content.vb: Public WorksheetIx As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  commentId: N:OfficeOpenXml.FormulaParsing.LexicalAnalysis
  name: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  nameWithType: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
