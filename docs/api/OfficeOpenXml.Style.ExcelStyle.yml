### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.Style.ExcelStyle
  commentId: T:OfficeOpenXml.Style.ExcelStyle
  id: ExcelStyle
  parent: OfficeOpenXml.Style
  children:
  - OfficeOpenXml.Style.ExcelStyle.Border
  - OfficeOpenXml.Style.ExcelStyle.Fill
  - OfficeOpenXml.Style.ExcelStyle.Font
  - OfficeOpenXml.Style.ExcelStyle.Hidden
  - OfficeOpenXml.Style.ExcelStyle.HorizontalAlignment
  - OfficeOpenXml.Style.ExcelStyle.Indent
  - OfficeOpenXml.Style.ExcelStyle.JustifyLastLine
  - OfficeOpenXml.Style.ExcelStyle.Locked
  - OfficeOpenXml.Style.ExcelStyle.Numberformat
  - OfficeOpenXml.Style.ExcelStyle.QuotePrefix
  - OfficeOpenXml.Style.ExcelStyle.ReadingOrder
  - OfficeOpenXml.Style.ExcelStyle.SetTextVertical
  - OfficeOpenXml.Style.ExcelStyle.ShrinkToFit
  - OfficeOpenXml.Style.ExcelStyle.TextRotation
  - OfficeOpenXml.Style.ExcelStyle.VerticalAlignment
  - OfficeOpenXml.Style.ExcelStyle.WrapText
  - OfficeOpenXml.Style.ExcelStyle.XfId
  langs:
  - csharp
  - vb
  name: ExcelStyle
  nameWithType: ExcelStyle
  fullName: OfficeOpenXml.Style.ExcelStyle
  type: Class
  source:
    remote:
      path: src/EPPlus/Style/ExcelStyle.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ExcelStyle
    path: ../src/EPPlus/Style/ExcelStyle.cs
    startLine: 22
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style
  summary: "\nToplevel class for cell styling\n"
  example: []
  syntax:
    content: 'public sealed class ExcelStyle : StyleBase'
    content.vb: >-
      Public NotInheritable Class ExcelStyle
          Inherits StyleBase
  inheritance:
  - System.Object
  - OfficeOpenXml.Style.StyleBase
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: OfficeOpenXml.Style.ExcelStyle.Numberformat
  commentId: P:OfficeOpenXml.Style.ExcelStyle.Numberformat
  id: Numberformat
  parent: OfficeOpenXml.Style.ExcelStyle
  langs:
  - csharp
  - vb
  name: Numberformat
  nameWithType: ExcelStyle.Numberformat
  fullName: OfficeOpenXml.Style.ExcelStyle.Numberformat
  type: Property
  source:
    remote:
      path: src/EPPlus/Style/ExcelStyle.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Numberformat
    path: ../src/EPPlus/Style/ExcelStyle.cs
    startLine: 67
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style
  summary: "\nNumberformat\n"
  example: []
  syntax:
    content: public ExcelNumberFormat Numberformat { get; set; }
    parameters: []
    return:
      type: OfficeOpenXml.Style.ExcelNumberFormat
    content.vb: Public Property Numberformat As ExcelNumberFormat
  overload: OfficeOpenXml.Style.ExcelStyle.Numberformat*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Style.ExcelStyle.Font
  commentId: P:OfficeOpenXml.Style.ExcelStyle.Font
  id: Font
  parent: OfficeOpenXml.Style.ExcelStyle
  langs:
  - csharp
  - vb
  name: Font
  nameWithType: ExcelStyle.Font
  fullName: OfficeOpenXml.Style.ExcelStyle.Font
  type: Property
  source:
    remote:
      path: src/EPPlus/Style/ExcelStyle.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Font
    path: ../src/EPPlus/Style/ExcelStyle.cs
    startLine: 71
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style
  summary: "\nFont styling\n"
  example: []
  syntax:
    content: public ExcelFont Font { get; set; }
    parameters: []
    return:
      type: OfficeOpenXml.Style.ExcelFont
    content.vb: Public Property Font As ExcelFont
  overload: OfficeOpenXml.Style.ExcelStyle.Font*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Style.ExcelStyle.Fill
  commentId: P:OfficeOpenXml.Style.ExcelStyle.Fill
  id: Fill
  parent: OfficeOpenXml.Style.ExcelStyle
  langs:
  - csharp
  - vb
  name: Fill
  nameWithType: ExcelStyle.Fill
  fullName: OfficeOpenXml.Style.ExcelStyle.Fill
  type: Property
  source:
    remote:
      path: src/EPPlus/Style/ExcelStyle.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Fill
    path: ../src/EPPlus/Style/ExcelStyle.cs
    startLine: 75
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style
  summary: "\nFill Styling\n"
  example: []
  syntax:
    content: public ExcelFill Fill { get; set; }
    parameters: []
    return:
      type: OfficeOpenXml.Style.ExcelFill
    content.vb: Public Property Fill As ExcelFill
  overload: OfficeOpenXml.Style.ExcelStyle.Fill*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Style.ExcelStyle.Border
  commentId: P:OfficeOpenXml.Style.ExcelStyle.Border
  id: Border
  parent: OfficeOpenXml.Style.ExcelStyle
  langs:
  - csharp
  - vb
  name: Border
  nameWithType: ExcelStyle.Border
  fullName: OfficeOpenXml.Style.ExcelStyle.Border
  type: Property
  source:
    remote:
      path: src/EPPlus/Style/ExcelStyle.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Border
    path: ../src/EPPlus/Style/ExcelStyle.cs
    startLine: 79
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style
  summary: "\nBorder \n"
  example: []
  syntax:
    content: public Border Border { get; set; }
    parameters: []
    return:
      type: OfficeOpenXml.Style.Border
    content.vb: Public Property Border As Border
  overload: OfficeOpenXml.Style.ExcelStyle.Border*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Style.ExcelStyle.HorizontalAlignment
  commentId: P:OfficeOpenXml.Style.ExcelStyle.HorizontalAlignment
  id: HorizontalAlignment
  parent: OfficeOpenXml.Style.ExcelStyle
  langs:
  - csharp
  - vb
  name: HorizontalAlignment
  nameWithType: ExcelStyle.HorizontalAlignment
  fullName: OfficeOpenXml.Style.ExcelStyle.HorizontalAlignment
  type: Property
  source:
    remote:
      path: src/EPPlus/Style/ExcelStyle.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: HorizontalAlignment
    path: ../src/EPPlus/Style/ExcelStyle.cs
    startLine: 83
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style
  summary: "\nThe horizontal alignment in the cell\n"
  example: []
  syntax:
    content: public ExcelHorizontalAlignment HorizontalAlignment { get; set; }
    parameters: []
    return:
      type: OfficeOpenXml.Style.ExcelHorizontalAlignment
    content.vb: Public Property HorizontalAlignment As ExcelHorizontalAlignment
  overload: OfficeOpenXml.Style.ExcelStyle.HorizontalAlignment*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Style.ExcelStyle.VerticalAlignment
  commentId: P:OfficeOpenXml.Style.ExcelStyle.VerticalAlignment
  id: VerticalAlignment
  parent: OfficeOpenXml.Style.ExcelStyle
  langs:
  - csharp
  - vb
  name: VerticalAlignment
  nameWithType: ExcelStyle.VerticalAlignment
  fullName: OfficeOpenXml.Style.ExcelStyle.VerticalAlignment
  type: Property
  source:
    remote:
      path: src/EPPlus/Style/ExcelStyle.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: VerticalAlignment
    path: ../src/EPPlus/Style/ExcelStyle.cs
    startLine: 97
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style
  summary: "\nThe vertical alignment in the cell\n"
  example: []
  syntax:
    content: public ExcelVerticalAlignment VerticalAlignment { get; set; }
    parameters: []
    return:
      type: OfficeOpenXml.Style.ExcelVerticalAlignment
    content.vb: Public Property VerticalAlignment As ExcelVerticalAlignment
  overload: OfficeOpenXml.Style.ExcelStyle.VerticalAlignment*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Style.ExcelStyle.JustifyLastLine
  commentId: P:OfficeOpenXml.Style.ExcelStyle.JustifyLastLine
  id: JustifyLastLine
  parent: OfficeOpenXml.Style.ExcelStyle
  langs:
  - csharp
  - vb
  name: JustifyLastLine
  nameWithType: ExcelStyle.JustifyLastLine
  fullName: OfficeOpenXml.Style.ExcelStyle.JustifyLastLine
  type: Property
  source:
    remote:
      path: src/EPPlus/Style/ExcelStyle.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: JustifyLastLine
    path: ../src/EPPlus/Style/ExcelStyle.cs
    startLine: 112
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style
  summary: "\nIf the cells justified or distributed alignment should be used on the last line of text.\n"
  example: []
  syntax:
    content: public bool JustifyLastLine { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property JustifyLastLine As Boolean
  overload: OfficeOpenXml.Style.ExcelStyle.JustifyLastLine*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Style.ExcelStyle.WrapText
  commentId: P:OfficeOpenXml.Style.ExcelStyle.WrapText
  id: WrapText
  parent: OfficeOpenXml.Style.ExcelStyle
  langs:
  - csharp
  - vb
  name: WrapText
  nameWithType: ExcelStyle.WrapText
  fullName: OfficeOpenXml.Style.ExcelStyle.WrapText
  type: Property
  source:
    remote:
      path: src/EPPlus/Style/ExcelStyle.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: WrapText
    path: ../src/EPPlus/Style/ExcelStyle.cs
    startLine: 126
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style
  summary: "\nWrap the text\n"
  example: []
  syntax:
    content: public bool WrapText { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property WrapText As Boolean
  overload: OfficeOpenXml.Style.ExcelStyle.WrapText*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Style.ExcelStyle.ReadingOrder
  commentId: P:OfficeOpenXml.Style.ExcelStyle.ReadingOrder
  id: ReadingOrder
  parent: OfficeOpenXml.Style.ExcelStyle
  langs:
  - csharp
  - vb
  name: ReadingOrder
  nameWithType: ExcelStyle.ReadingOrder
  fullName: OfficeOpenXml.Style.ExcelStyle.ReadingOrder
  type: Property
  source:
    remote:
      path: src/EPPlus/Style/ExcelStyle.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ReadingOrder
    path: ../src/EPPlus/Style/ExcelStyle.cs
    startLine: 140
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style
  summary: "\nReadingorder\n"
  example: []
  syntax:
    content: public ExcelReadingOrder ReadingOrder { get; set; }
    parameters: []
    return:
      type: OfficeOpenXml.Style.ExcelReadingOrder
    content.vb: Public Property ReadingOrder As ExcelReadingOrder
  overload: OfficeOpenXml.Style.ExcelStyle.ReadingOrder*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Style.ExcelStyle.SetTextVertical
  commentId: M:OfficeOpenXml.Style.ExcelStyle.SetTextVertical
  id: SetTextVertical
  parent: OfficeOpenXml.Style.ExcelStyle
  langs:
  - csharp
  - vb
  name: SetTextVertical()
  nameWithType: ExcelStyle.SetTextVertical()
  fullName: OfficeOpenXml.Style.ExcelStyle.SetTextVertical()
  type: Method
  source:
    remote:
      path: src/EPPlus/Style/ExcelStyle.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: SetTextVertical
    path: ../src/EPPlus/Style/ExcelStyle.cs
    startLine: 154
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style
  summary: "\nMakes the text vertically. This is the same as setting <xref href=\"OfficeOpenXml.Style.ExcelStyle.TextRotation\" data-throw-if-not-resolved=\"false\"></xref> to 255.\n"
  example: []
  syntax:
    content: public void SetTextVertical()
    content.vb: Public Sub SetTextVertical
  overload: OfficeOpenXml.Style.ExcelStyle.SetTextVertical*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Style.ExcelStyle.ShrinkToFit
  commentId: P:OfficeOpenXml.Style.ExcelStyle.ShrinkToFit
  id: ShrinkToFit
  parent: OfficeOpenXml.Style.ExcelStyle
  langs:
  - csharp
  - vb
  name: ShrinkToFit
  nameWithType: ExcelStyle.ShrinkToFit
  fullName: OfficeOpenXml.Style.ExcelStyle.ShrinkToFit
  type: Property
  source:
    remote:
      path: src/EPPlus/Style/ExcelStyle.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ShrinkToFit
    path: ../src/EPPlus/Style/ExcelStyle.cs
    startLine: 162
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style
  summary: "\nShrink the text to fit\n"
  example: []
  syntax:
    content: public bool ShrinkToFit { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ShrinkToFit As Boolean
  overload: OfficeOpenXml.Style.ExcelStyle.ShrinkToFit*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Style.ExcelStyle.Indent
  commentId: P:OfficeOpenXml.Style.ExcelStyle.Indent
  id: Indent
  parent: OfficeOpenXml.Style.ExcelStyle
  langs:
  - csharp
  - vb
  name: Indent
  nameWithType: ExcelStyle.Indent
  fullName: OfficeOpenXml.Style.ExcelStyle.Indent
  type: Property
  source:
    remote:
      path: src/EPPlus/Style/ExcelStyle.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Indent
    path: ../src/EPPlus/Style/ExcelStyle.cs
    startLine: 176
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style
  summary: "\nThe margin between the border and the text\n"
  example: []
  syntax:
    content: public int Indent { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Indent As Integer
  overload: OfficeOpenXml.Style.ExcelStyle.Indent*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Style.ExcelStyle.TextRotation
  commentId: P:OfficeOpenXml.Style.ExcelStyle.TextRotation
  id: TextRotation
  parent: OfficeOpenXml.Style.ExcelStyle
  langs:
  - csharp
  - vb
  name: TextRotation
  nameWithType: ExcelStyle.TextRotation
  fullName: OfficeOpenXml.Style.ExcelStyle.TextRotation
  type: Property
  source:
    remote:
      path: src/EPPlus/Style/ExcelStyle.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: TextRotation
    path: ../src/EPPlus/Style/ExcelStyle.cs
    startLine: 195
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style
  summary: "\nText orientation in degrees. Values range from 0 to 180 or 255. \nSetting the rotation to 255 will align text vertically.\n"
  example: []
  syntax:
    content: public int TextRotation { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property TextRotation As Integer
  overload: OfficeOpenXml.Style.ExcelStyle.TextRotation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Style.ExcelStyle.Locked
  commentId: P:OfficeOpenXml.Style.ExcelStyle.Locked
  id: Locked
  parent: OfficeOpenXml.Style.ExcelStyle
  langs:
  - csharp
  - vb
  name: Locked
  nameWithType: ExcelStyle.Locked
  fullName: OfficeOpenXml.Style.ExcelStyle.Locked
  type: Property
  source:
    remote:
      path: src/EPPlus/Style/ExcelStyle.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Locked
    path: ../src/EPPlus/Style/ExcelStyle.cs
    startLine: 214
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style
  summary: "\nIf true the cell is locked for editing when the sheet is protected\n<xref href=\"OfficeOpenXml.ExcelWorksheet.Protection\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public bool Locked { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Locked As Boolean
  overload: OfficeOpenXml.Style.ExcelStyle.Locked*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Style.ExcelStyle.Hidden
  commentId: P:OfficeOpenXml.Style.ExcelStyle.Hidden
  id: Hidden
  parent: OfficeOpenXml.Style.ExcelStyle
  langs:
  - csharp
  - vb
  name: Hidden
  nameWithType: ExcelStyle.Hidden
  fullName: OfficeOpenXml.Style.ExcelStyle.Hidden
  type: Property
  source:
    remote:
      path: src/EPPlus/Style/ExcelStyle.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Hidden
    path: ../src/EPPlus/Style/ExcelStyle.cs
    startLine: 229
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style
  summary: "\nIf true the formula is hidden when the sheet is protected.\n<xref href=\"OfficeOpenXml.ExcelWorksheet.Protection\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public bool Hidden { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Hidden As Boolean
  overload: OfficeOpenXml.Style.ExcelStyle.Hidden*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Style.ExcelStyle.QuotePrefix
  commentId: P:OfficeOpenXml.Style.ExcelStyle.QuotePrefix
  id: QuotePrefix
  parent: OfficeOpenXml.Style.ExcelStyle
  langs:
  - csharp
  - vb
  name: QuotePrefix
  nameWithType: ExcelStyle.QuotePrefix
  fullName: OfficeOpenXml.Style.ExcelStyle.QuotePrefix
  type: Property
  source:
    remote:
      path: src/EPPlus/Style/ExcelStyle.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: QuotePrefix
    path: ../src/EPPlus/Style/ExcelStyle.cs
    startLine: 244
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style
  summary: "\nIf true the cell has a quote prefix, which indicates the value of the cell is text.\n"
  example: []
  syntax:
    content: public bool QuotePrefix { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property QuotePrefix As Boolean
  overload: OfficeOpenXml.Style.ExcelStyle.QuotePrefix*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Style.ExcelStyle.XfId
  commentId: P:OfficeOpenXml.Style.ExcelStyle.XfId
  id: XfId
  parent: OfficeOpenXml.Style.ExcelStyle
  langs:
  - csharp
  - vb
  name: XfId
  nameWithType: ExcelStyle.XfId
  fullName: OfficeOpenXml.Style.ExcelStyle.XfId
  type: Property
  source:
    remote:
      path: src/EPPlus/Style/ExcelStyle.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: XfId
    path: ../src/EPPlus/Style/ExcelStyle.cs
    startLine: 260
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style
  summary: "\nThe index in the style collection\n"
  example: []
  syntax:
    content: public int XfId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property XfId As Integer
  overload: OfficeOpenXml.Style.ExcelStyle.XfId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: OfficeOpenXml.Style
  commentId: N:OfficeOpenXml.Style
  name: OfficeOpenXml.Style
  nameWithType: OfficeOpenXml.Style
  fullName: OfficeOpenXml.Style
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OfficeOpenXml.Style.StyleBase
  commentId: T:OfficeOpenXml.Style.StyleBase
  parent: OfficeOpenXml.Style
  name: StyleBase
  nameWithType: StyleBase
  fullName: OfficeOpenXml.Style.StyleBase
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml.Style.ExcelStyle.Numberformat*
  commentId: Overload:OfficeOpenXml.Style.ExcelStyle.Numberformat
  name: Numberformat
  nameWithType: ExcelStyle.Numberformat
  fullName: OfficeOpenXml.Style.ExcelStyle.Numberformat
- uid: OfficeOpenXml.Style.ExcelNumberFormat
  commentId: T:OfficeOpenXml.Style.ExcelNumberFormat
  parent: OfficeOpenXml.Style
  name: ExcelNumberFormat
  nameWithType: ExcelNumberFormat
  fullName: OfficeOpenXml.Style.ExcelNumberFormat
- uid: OfficeOpenXml.Style.ExcelStyle.Font*
  commentId: Overload:OfficeOpenXml.Style.ExcelStyle.Font
  name: Font
  nameWithType: ExcelStyle.Font
  fullName: OfficeOpenXml.Style.ExcelStyle.Font
- uid: OfficeOpenXml.Style.ExcelFont
  commentId: T:OfficeOpenXml.Style.ExcelFont
  parent: OfficeOpenXml.Style
  name: ExcelFont
  nameWithType: ExcelFont
  fullName: OfficeOpenXml.Style.ExcelFont
- uid: OfficeOpenXml.Style.ExcelStyle.Fill*
  commentId: Overload:OfficeOpenXml.Style.ExcelStyle.Fill
  name: Fill
  nameWithType: ExcelStyle.Fill
  fullName: OfficeOpenXml.Style.ExcelStyle.Fill
- uid: OfficeOpenXml.Style.ExcelFill
  commentId: T:OfficeOpenXml.Style.ExcelFill
  parent: OfficeOpenXml.Style
  name: ExcelFill
  nameWithType: ExcelFill
  fullName: OfficeOpenXml.Style.ExcelFill
- uid: OfficeOpenXml.Style.ExcelStyle.Border*
  commentId: Overload:OfficeOpenXml.Style.ExcelStyle.Border
  name: Border
  nameWithType: ExcelStyle.Border
  fullName: OfficeOpenXml.Style.ExcelStyle.Border
- uid: OfficeOpenXml.Style.Border
  commentId: T:OfficeOpenXml.Style.Border
  parent: OfficeOpenXml.Style
  name: Border
  nameWithType: Border
  fullName: OfficeOpenXml.Style.Border
- uid: OfficeOpenXml.Style.ExcelStyle.HorizontalAlignment*
  commentId: Overload:OfficeOpenXml.Style.ExcelStyle.HorizontalAlignment
  name: HorizontalAlignment
  nameWithType: ExcelStyle.HorizontalAlignment
  fullName: OfficeOpenXml.Style.ExcelStyle.HorizontalAlignment
- uid: OfficeOpenXml.Style.ExcelHorizontalAlignment
  commentId: T:OfficeOpenXml.Style.ExcelHorizontalAlignment
  parent: OfficeOpenXml.Style
  name: ExcelHorizontalAlignment
  nameWithType: ExcelHorizontalAlignment
  fullName: OfficeOpenXml.Style.ExcelHorizontalAlignment
- uid: OfficeOpenXml.Style.ExcelStyle.VerticalAlignment*
  commentId: Overload:OfficeOpenXml.Style.ExcelStyle.VerticalAlignment
  name: VerticalAlignment
  nameWithType: ExcelStyle.VerticalAlignment
  fullName: OfficeOpenXml.Style.ExcelStyle.VerticalAlignment
- uid: OfficeOpenXml.Style.ExcelVerticalAlignment
  commentId: T:OfficeOpenXml.Style.ExcelVerticalAlignment
  parent: OfficeOpenXml.Style
  name: ExcelVerticalAlignment
  nameWithType: ExcelVerticalAlignment
  fullName: OfficeOpenXml.Style.ExcelVerticalAlignment
- uid: OfficeOpenXml.Style.ExcelStyle.JustifyLastLine*
  commentId: Overload:OfficeOpenXml.Style.ExcelStyle.JustifyLastLine
  name: JustifyLastLine
  nameWithType: ExcelStyle.JustifyLastLine
  fullName: OfficeOpenXml.Style.ExcelStyle.JustifyLastLine
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: OfficeOpenXml.Style.ExcelStyle.WrapText*
  commentId: Overload:OfficeOpenXml.Style.ExcelStyle.WrapText
  name: WrapText
  nameWithType: ExcelStyle.WrapText
  fullName: OfficeOpenXml.Style.ExcelStyle.WrapText
- uid: OfficeOpenXml.Style.ExcelStyle.ReadingOrder*
  commentId: Overload:OfficeOpenXml.Style.ExcelStyle.ReadingOrder
  name: ReadingOrder
  nameWithType: ExcelStyle.ReadingOrder
  fullName: OfficeOpenXml.Style.ExcelStyle.ReadingOrder
- uid: OfficeOpenXml.Style.ExcelReadingOrder
  commentId: T:OfficeOpenXml.Style.ExcelReadingOrder
  parent: OfficeOpenXml.Style
  name: ExcelReadingOrder
  nameWithType: ExcelReadingOrder
  fullName: OfficeOpenXml.Style.ExcelReadingOrder
- uid: OfficeOpenXml.Style.ExcelStyle.TextRotation
  commentId: P:OfficeOpenXml.Style.ExcelStyle.TextRotation
  isExternal: true
- uid: OfficeOpenXml.Style.ExcelStyle.SetTextVertical*
  commentId: Overload:OfficeOpenXml.Style.ExcelStyle.SetTextVertical
  name: SetTextVertical
  nameWithType: ExcelStyle.SetTextVertical
  fullName: OfficeOpenXml.Style.ExcelStyle.SetTextVertical
- uid: OfficeOpenXml.Style.ExcelStyle.ShrinkToFit*
  commentId: Overload:OfficeOpenXml.Style.ExcelStyle.ShrinkToFit
  name: ShrinkToFit
  nameWithType: ExcelStyle.ShrinkToFit
  fullName: OfficeOpenXml.Style.ExcelStyle.ShrinkToFit
- uid: OfficeOpenXml.Style.ExcelStyle.Indent*
  commentId: Overload:OfficeOpenXml.Style.ExcelStyle.Indent
  name: Indent
  nameWithType: ExcelStyle.Indent
  fullName: OfficeOpenXml.Style.ExcelStyle.Indent
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: OfficeOpenXml.Style.ExcelStyle.TextRotation*
  commentId: Overload:OfficeOpenXml.Style.ExcelStyle.TextRotation
  name: TextRotation
  nameWithType: ExcelStyle.TextRotation
  fullName: OfficeOpenXml.Style.ExcelStyle.TextRotation
- uid: OfficeOpenXml.ExcelWorksheet.Protection
  commentId: P:OfficeOpenXml.ExcelWorksheet.Protection
  parent: OfficeOpenXml.ExcelWorksheet
  name: Protection
  nameWithType: ExcelWorksheet.Protection
  fullName: OfficeOpenXml.ExcelWorksheet.Protection
- uid: OfficeOpenXml.Style.ExcelStyle.Locked*
  commentId: Overload:OfficeOpenXml.Style.ExcelStyle.Locked
  name: Locked
  nameWithType: ExcelStyle.Locked
  fullName: OfficeOpenXml.Style.ExcelStyle.Locked
- uid: OfficeOpenXml.ExcelWorksheet
  commentId: T:OfficeOpenXml.ExcelWorksheet
  parent: OfficeOpenXml
  name: ExcelWorksheet
  nameWithType: ExcelWorksheet
  fullName: OfficeOpenXml.ExcelWorksheet
- uid: OfficeOpenXml
  commentId: N:OfficeOpenXml
  name: OfficeOpenXml
  nameWithType: OfficeOpenXml
  fullName: OfficeOpenXml
- uid: OfficeOpenXml.Style.ExcelStyle.Hidden*
  commentId: Overload:OfficeOpenXml.Style.ExcelStyle.Hidden
  name: Hidden
  nameWithType: ExcelStyle.Hidden
  fullName: OfficeOpenXml.Style.ExcelStyle.Hidden
- uid: OfficeOpenXml.Style.ExcelStyle.QuotePrefix*
  commentId: Overload:OfficeOpenXml.Style.ExcelStyle.QuotePrefix
  name: QuotePrefix
  nameWithType: ExcelStyle.QuotePrefix
  fullName: OfficeOpenXml.Style.ExcelStyle.QuotePrefix
- uid: OfficeOpenXml.Style.ExcelStyle.XfId*
  commentId: Overload:OfficeOpenXml.Style.ExcelStyle.XfId
  name: XfId
  nameWithType: ExcelStyle.XfId
  fullName: OfficeOpenXml.Style.ExcelStyle.XfId
