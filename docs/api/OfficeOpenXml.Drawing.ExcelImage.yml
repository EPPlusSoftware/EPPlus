### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.Drawing.ExcelImage
  commentId: T:OfficeOpenXml.Drawing.ExcelImage
  id: ExcelImage
  parent: OfficeOpenXml.Drawing
  children:
  - OfficeOpenXml.Drawing.ExcelImage.#ctor
  - OfficeOpenXml.Drawing.ExcelImage.#ctor(System.Byte[],OfficeOpenXml.Drawing.ePictureType)
  - OfficeOpenXml.Drawing.ExcelImage.#ctor(System.IO.FileInfo)
  - OfficeOpenXml.Drawing.ExcelImage.#ctor(System.IO.Stream,OfficeOpenXml.Drawing.ePictureType)
  - OfficeOpenXml.Drawing.ExcelImage.#ctor(System.String)
  - OfficeOpenXml.Drawing.ExcelImage.Bounds
  - OfficeOpenXml.Drawing.ExcelImage.HasImage
  - OfficeOpenXml.Drawing.ExcelImage.ImageBytes
  - OfficeOpenXml.Drawing.ExcelImage.SetImage(OfficeOpenXml.Drawing.ExcelImage)
  - OfficeOpenXml.Drawing.ExcelImage.SetImage(System.Byte[],OfficeOpenXml.Drawing.ePictureType)
  - OfficeOpenXml.Drawing.ExcelImage.SetImage(System.IO.FileInfo)
  - OfficeOpenXml.Drawing.ExcelImage.SetImage(System.IO.Stream,OfficeOpenXml.Drawing.ePictureType)
  - OfficeOpenXml.Drawing.ExcelImage.SetImage(System.String)
  - OfficeOpenXml.Drawing.ExcelImage.SetImageAsync(System.IO.FileInfo)
  - OfficeOpenXml.Drawing.ExcelImage.SetImageAsync(System.IO.Stream,OfficeOpenXml.Drawing.ePictureType)
  - OfficeOpenXml.Drawing.ExcelImage.SetImageAsync(System.String)
  - OfficeOpenXml.Drawing.ExcelImage.Type
  langs:
  - csharp
  - vb
  name: ExcelImage
  nameWithType: ExcelImage
  fullName: OfficeOpenXml.Drawing.ExcelImage
  type: Class
  source:
    remote:
      path: src/EPPlus/Drawing/ExcelImage.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ExcelImage
    path: ../src/EPPlus/Drawing/ExcelImage.cs
    startLine: 27
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nRepresents an image \n"
  example: []
  syntax:
    content: public class ExcelImage
    content.vb: Public Class ExcelImage
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OfficeOpenXml.Drawing.ExcelImage.#ctor
  commentId: M:OfficeOpenXml.Drawing.ExcelImage.#ctor
  id: '#ctor'
  parent: OfficeOpenXml.Drawing.ExcelImage
  langs:
  - csharp
  - vb
  name: ExcelImage()
  nameWithType: ExcelImage.ExcelImage()
  fullName: OfficeOpenXml.Drawing.ExcelImage.ExcelImage()
  type: Constructor
  source:
    remote:
      path: src/EPPlus/Drawing/ExcelImage.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: .ctor
    path: ../src/EPPlus/Drawing/ExcelImage.cs
    startLine: 42
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nCreates an ExcelImage to be used as template for adding images.\n"
  example: []
  syntax:
    content: public ExcelImage()
    content.vb: Public Sub New
  overload: OfficeOpenXml.Drawing.ExcelImage.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.ExcelImage.#ctor(System.String)
  commentId: M:OfficeOpenXml.Drawing.ExcelImage.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: OfficeOpenXml.Drawing.ExcelImage
  langs:
  - csharp
  - vb
  name: ExcelImage(String)
  nameWithType: ExcelImage.ExcelImage(String)
  fullName: OfficeOpenXml.Drawing.ExcelImage.ExcelImage(System.String)
  type: Constructor
  source:
    remote:
      path: src/EPPlus/Drawing/ExcelImage.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: .ctor
    path: ../src/EPPlus/Drawing/ExcelImage.cs
    startLine: 50
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nCreates an ExcelImage to be used as template for adding images.\n"
  example: []
  syntax:
    content: public ExcelImage(string imagePath)
    parameters:
    - id: imagePath
      type: System.String
      description: A path to the image file to load
    content.vb: Public Sub New(imagePath As String)
  overload: OfficeOpenXml.Drawing.ExcelImage.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.ExcelImage.#ctor(System.IO.FileInfo)
  commentId: M:OfficeOpenXml.Drawing.ExcelImage.#ctor(System.IO.FileInfo)
  id: '#ctor(System.IO.FileInfo)'
  parent: OfficeOpenXml.Drawing.ExcelImage
  langs:
  - csharp
  - vb
  name: ExcelImage(FileInfo)
  nameWithType: ExcelImage.ExcelImage(FileInfo)
  fullName: OfficeOpenXml.Drawing.ExcelImage.ExcelImage(System.IO.FileInfo)
  type: Constructor
  source:
    remote:
      path: src/EPPlus/Drawing/ExcelImage.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: .ctor
    path: ../src/EPPlus/Drawing/ExcelImage.cs
    startLine: 58
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nCreates an ExcelImage to be used as template for adding images.\n"
  example: []
  syntax:
    content: public ExcelImage(FileInfo imageFile)
    parameters:
    - id: imageFile
      type: System.IO.FileInfo
      description: A FileInfo referencing the image file to load
    content.vb: Public Sub New(imageFile As FileInfo)
  overload: OfficeOpenXml.Drawing.ExcelImage.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.ExcelImage.#ctor(System.IO.Stream,OfficeOpenXml.Drawing.ePictureType)
  commentId: M:OfficeOpenXml.Drawing.ExcelImage.#ctor(System.IO.Stream,OfficeOpenXml.Drawing.ePictureType)
  id: '#ctor(System.IO.Stream,OfficeOpenXml.Drawing.ePictureType)'
  parent: OfficeOpenXml.Drawing.ExcelImage
  langs:
  - csharp
  - vb
  name: ExcelImage(Stream, ePictureType)
  nameWithType: ExcelImage.ExcelImage(Stream, ePictureType)
  fullName: OfficeOpenXml.Drawing.ExcelImage.ExcelImage(System.IO.Stream, OfficeOpenXml.Drawing.ePictureType)
  type: Constructor
  source:
    remote:
      path: src/EPPlus/Drawing/ExcelImage.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: .ctor
    path: ../src/EPPlus/Drawing/ExcelImage.cs
    startLine: 67
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nCreates an ExcelImage to be used as template for adding images.\n"
  example: []
  syntax:
    content: public ExcelImage(Stream imageStream, ePictureType pictureType)
    parameters:
    - id: imageStream
      type: System.IO.Stream
      description: The stream containing the image
    - id: pictureType
      type: OfficeOpenXml.Drawing.ePictureType
      description: The type of image loaded in the stream
    content.vb: Public Sub New(imageStream As Stream, pictureType As ePictureType)
  overload: OfficeOpenXml.Drawing.ExcelImage.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.ExcelImage.#ctor(System.Byte[],OfficeOpenXml.Drawing.ePictureType)
  commentId: M:OfficeOpenXml.Drawing.ExcelImage.#ctor(System.Byte[],OfficeOpenXml.Drawing.ePictureType)
  id: '#ctor(System.Byte[],OfficeOpenXml.Drawing.ePictureType)'
  parent: OfficeOpenXml.Drawing.ExcelImage
  langs:
  - csharp
  - vb
  name: ExcelImage(Byte[], ePictureType)
  nameWithType: ExcelImage.ExcelImage(Byte[], ePictureType)
  fullName: OfficeOpenXml.Drawing.ExcelImage.ExcelImage(System.Byte[], OfficeOpenXml.Drawing.ePictureType)
  type: Constructor
  source:
    remote:
      path: src/EPPlus/Drawing/ExcelImage.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: .ctor
    path: ../src/EPPlus/Drawing/ExcelImage.cs
    startLine: 76
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nCreates an ExcelImage to be used as template for adding images.\n"
  example: []
  syntax:
    content: public ExcelImage(byte[] imageBytes, ePictureType pictureType)
    parameters:
    - id: imageBytes
      type: System.Byte[]
      description: The image as a byte array
    - id: pictureType
      type: OfficeOpenXml.Drawing.ePictureType
      description: The type of image loaded in the stream
    content.vb: Public Sub New(imageBytes As Byte(), pictureType As ePictureType)
  overload: OfficeOpenXml.Drawing.ExcelImage.#ctor*
  nameWithType.vb: ExcelImage.ExcelImage(Byte(), ePictureType)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: OfficeOpenXml.Drawing.ExcelImage.ExcelImage(System.Byte(), OfficeOpenXml.Drawing.ePictureType)
  name.vb: ExcelImage(Byte(), ePictureType)
- uid: OfficeOpenXml.Drawing.ExcelImage.HasImage
  commentId: P:OfficeOpenXml.Drawing.ExcelImage.HasImage
  id: HasImage
  parent: OfficeOpenXml.Drawing.ExcelImage
  langs:
  - csharp
  - vb
  name: HasImage
  nameWithType: ExcelImage.HasImage
  fullName: OfficeOpenXml.Drawing.ExcelImage.HasImage
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/ExcelImage.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: HasImage
    path: ../src/EPPlus/Drawing/ExcelImage.cs
    startLine: 83
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nIf this object contains an image.\n"
  example: []
  syntax:
    content: public bool HasImage { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasImage As Boolean
  overload: OfficeOpenXml.Drawing.ExcelImage.HasImage*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Drawing.ExcelImage.Type
  commentId: P:OfficeOpenXml.Drawing.ExcelImage.Type
  id: Type
  parent: OfficeOpenXml.Drawing.ExcelImage
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: ExcelImage.Type
  fullName: OfficeOpenXml.Drawing.ExcelImage.Type
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/ExcelImage.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Type
    path: ../src/EPPlus/Drawing/ExcelImage.cs
    startLine: 93
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nThe type of image.\n"
  example: []
  syntax:
    content: public ePictureType? Type { get; }
    parameters: []
    return:
      type: System.Nullable{OfficeOpenXml.Drawing.ePictureType}
    content.vb: Public ReadOnly Property Type As ePictureType?
  overload: OfficeOpenXml.Drawing.ExcelImage.Type*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Drawing.ExcelImage.ImageBytes
  commentId: P:OfficeOpenXml.Drawing.ExcelImage.ImageBytes
  id: ImageBytes
  parent: OfficeOpenXml.Drawing.ExcelImage
  langs:
  - csharp
  - vb
  name: ImageBytes
  nameWithType: ExcelImage.ImageBytes
  fullName: OfficeOpenXml.Drawing.ExcelImage.ImageBytes
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/ExcelImage.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ImageBytes
    path: ../src/EPPlus/Drawing/ExcelImage.cs
    startLine: 102
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nThe image as a byte array.\n"
  example: []
  syntax:
    content: public byte[] ImageBytes { get; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public ReadOnly Property ImageBytes As Byte()
  overload: OfficeOpenXml.Drawing.ExcelImage.ImageBytes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Drawing.ExcelImage.Bounds
  commentId: P:OfficeOpenXml.Drawing.ExcelImage.Bounds
  id: Bounds
  parent: OfficeOpenXml.Drawing.ExcelImage
  langs:
  - csharp
  - vb
  name: Bounds
  nameWithType: ExcelImage.Bounds
  fullName: OfficeOpenXml.Drawing.ExcelImage.Bounds
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/ExcelImage.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Bounds
    path: ../src/EPPlus/Drawing/ExcelImage.cs
    startLine: 110
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nThe image bounds and resolution\n"
  example: []
  syntax:
    content: public ExcelImageInfo Bounds { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.ExcelImageInfo
    content.vb: Public ReadOnly Property Bounds As ExcelImageInfo
  overload: OfficeOpenXml.Drawing.ExcelImage.Bounds*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Drawing.ExcelImage.SetImage(System.String)
  commentId: M:OfficeOpenXml.Drawing.ExcelImage.SetImage(System.String)
  id: SetImage(System.String)
  parent: OfficeOpenXml.Drawing.ExcelImage
  langs:
  - csharp
  - vb
  name: SetImage(String)
  nameWithType: ExcelImage.SetImage(String)
  fullName: OfficeOpenXml.Drawing.ExcelImage.SetImage(System.String)
  type: Method
  source:
    remote:
      path: src/EPPlus/Drawing/ExcelImage.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: SetImage
    path: ../src/EPPlus/Drawing/ExcelImage.cs
    startLine: 119
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nSets a new image. \n"
  example: []
  syntax:
    content: public void SetImage(string imagePath)
    parameters:
    - id: imagePath
      type: System.String
      description: The path to the image file.
    content.vb: Public Sub SetImage(imagePath As String)
  overload: OfficeOpenXml.Drawing.ExcelImage.SetImage*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.ExcelImage.SetImage(System.IO.FileInfo)
  commentId: M:OfficeOpenXml.Drawing.ExcelImage.SetImage(System.IO.FileInfo)
  id: SetImage(System.IO.FileInfo)
  parent: OfficeOpenXml.Drawing.ExcelImage
  langs:
  - csharp
  - vb
  name: SetImage(FileInfo)
  nameWithType: ExcelImage.SetImage(FileInfo)
  fullName: OfficeOpenXml.Drawing.ExcelImage.SetImage(System.IO.FileInfo)
  type: Method
  source:
    remote:
      path: src/EPPlus/Drawing/ExcelImage.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: SetImage
    path: ../src/EPPlus/Drawing/ExcelImage.cs
    startLine: 137
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nSets a new image. \n"
  example: []
  syntax:
    content: public void SetImage(FileInfo imageFile)
    parameters:
    - id: imageFile
      type: System.IO.FileInfo
      description: The image file.
    content.vb: Public Sub SetImage(imageFile As FileInfo)
  overload: OfficeOpenXml.Drawing.ExcelImage.SetImage*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.ExcelImage.SetImage(System.Byte[],OfficeOpenXml.Drawing.ePictureType)
  commentId: M:OfficeOpenXml.Drawing.ExcelImage.SetImage(System.Byte[],OfficeOpenXml.Drawing.ePictureType)
  id: SetImage(System.Byte[],OfficeOpenXml.Drawing.ePictureType)
  parent: OfficeOpenXml.Drawing.ExcelImage
  langs:
  - csharp
  - vb
  name: SetImage(Byte[], ePictureType)
  nameWithType: ExcelImage.SetImage(Byte[], ePictureType)
  fullName: OfficeOpenXml.Drawing.ExcelImage.SetImage(System.Byte[], OfficeOpenXml.Drawing.ePictureType)
  type: Method
  source:
    remote:
      path: src/EPPlus/Drawing/ExcelImage.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: SetImage
    path: ../src/EPPlus/Drawing/ExcelImage.cs
    startLine: 156
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nSets a new image. \n"
  example: []
  syntax:
    content: public ExcelImage SetImage(byte[] imageBytes, ePictureType pictureType)
    parameters:
    - id: imageBytes
      type: System.Byte[]
      description: The image as a byte array.
    - id: pictureType
      type: OfficeOpenXml.Drawing.ePictureType
      description: The type of image.
    return:
      type: OfficeOpenXml.Drawing.ExcelImage
    content.vb: Public Function SetImage(imageBytes As Byte(), pictureType As ePictureType) As ExcelImage
  overload: OfficeOpenXml.Drawing.ExcelImage.SetImage*
  nameWithType.vb: ExcelImage.SetImage(Byte(), ePictureType)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: OfficeOpenXml.Drawing.ExcelImage.SetImage(System.Byte(), OfficeOpenXml.Drawing.ePictureType)
  name.vb: SetImage(Byte(), ePictureType)
- uid: OfficeOpenXml.Drawing.ExcelImage.SetImage(OfficeOpenXml.Drawing.ExcelImage)
  commentId: M:OfficeOpenXml.Drawing.ExcelImage.SetImage(OfficeOpenXml.Drawing.ExcelImage)
  id: SetImage(OfficeOpenXml.Drawing.ExcelImage)
  parent: OfficeOpenXml.Drawing.ExcelImage
  langs:
  - csharp
  - vb
  name: SetImage(ExcelImage)
  nameWithType: ExcelImage.SetImage(ExcelImage)
  fullName: OfficeOpenXml.Drawing.ExcelImage.SetImage(OfficeOpenXml.Drawing.ExcelImage)
  type: Method
  source:
    remote:
      path: src/EPPlus/Drawing/ExcelImage.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: SetImage
    path: ../src/EPPlus/Drawing/ExcelImage.cs
    startLine: 165
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nSets a new image. \n"
  example: []
  syntax:
    content: public ExcelImage SetImage(ExcelImage image)
    parameters:
    - id: image
      type: OfficeOpenXml.Drawing.ExcelImage
      description: The image object to use.
    return:
      type: OfficeOpenXml.Drawing.ExcelImage
    content.vb: Public Function SetImage(image As ExcelImage) As ExcelImage
  overload: OfficeOpenXml.Drawing.ExcelImage.SetImage*
  seealso:
  - linkId: OfficeOpenXml.Drawing.ExcelImage
    commentId: T:OfficeOpenXml.Drawing.ExcelImage
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.ExcelImage.SetImage(System.IO.Stream,OfficeOpenXml.Drawing.ePictureType)
  commentId: M:OfficeOpenXml.Drawing.ExcelImage.SetImage(System.IO.Stream,OfficeOpenXml.Drawing.ePictureType)
  id: SetImage(System.IO.Stream,OfficeOpenXml.Drawing.ePictureType)
  parent: OfficeOpenXml.Drawing.ExcelImage
  langs:
  - csharp
  - vb
  name: SetImage(Stream, ePictureType)
  nameWithType: ExcelImage.SetImage(Stream, ePictureType)
  fullName: OfficeOpenXml.Drawing.ExcelImage.SetImage(System.IO.Stream, OfficeOpenXml.Drawing.ePictureType)
  type: Method
  source:
    remote:
      path: src/EPPlus/Drawing/ExcelImage.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: SetImage
    path: ../src/EPPlus/Drawing/ExcelImage.cs
    startLine: 179
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nSets a new image. \n"
  example: []
  syntax:
    content: public ExcelImage SetImage(Stream imageStream, ePictureType pictureType)
    parameters:
    - id: imageStream
      type: System.IO.Stream
      description: The stream containing the image.
    - id: pictureType
      type: OfficeOpenXml.Drawing.ePictureType
      description: The type of image.
    return:
      type: OfficeOpenXml.Drawing.ExcelImage
    content.vb: Public Function SetImage(imageStream As Stream, pictureType As ePictureType) As ExcelImage
  overload: OfficeOpenXml.Drawing.ExcelImage.SetImage*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.ExcelImage.SetImageAsync(System.IO.Stream,OfficeOpenXml.Drawing.ePictureType)
  commentId: M:OfficeOpenXml.Drawing.ExcelImage.SetImageAsync(System.IO.Stream,OfficeOpenXml.Drawing.ePictureType)
  id: SetImageAsync(System.IO.Stream,OfficeOpenXml.Drawing.ePictureType)
  parent: OfficeOpenXml.Drawing.ExcelImage
  langs:
  - csharp
  - vb
  name: SetImageAsync(Stream, ePictureType)
  nameWithType: ExcelImage.SetImageAsync(Stream, ePictureType)
  fullName: OfficeOpenXml.Drawing.ExcelImage.SetImageAsync(System.IO.Stream, OfficeOpenXml.Drawing.ePictureType)
  type: Method
  source:
    remote:
      path: src/EPPlus/Drawing/ExcelImage.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: SetImageAsync
    path: ../src/EPPlus/Drawing/ExcelImage.cs
    startLine: 204
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nSets a new image. \n"
  example: []
  syntax:
    content: public async Task<ExcelImage> SetImageAsync(Stream imageStream, ePictureType pictureType)
    parameters:
    - id: imageStream
      type: System.IO.Stream
      description: The stream containing the image.
    - id: pictureType
      type: OfficeOpenXml.Drawing.ePictureType
      description: The type of image.
    return:
      type: System.Threading.Tasks.Task{OfficeOpenXml.Drawing.ExcelImage}
    content.vb: Public Function SetImageAsync(imageStream As Stream, pictureType As ePictureType) As Task(Of ExcelImage)
  overload: OfficeOpenXml.Drawing.ExcelImage.SetImageAsync*
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.ExcelImage.SetImageAsync(System.String)
  commentId: M:OfficeOpenXml.Drawing.ExcelImage.SetImageAsync(System.String)
  id: SetImageAsync(System.String)
  parent: OfficeOpenXml.Drawing.ExcelImage
  langs:
  - csharp
  - vb
  name: SetImageAsync(String)
  nameWithType: ExcelImage.SetImageAsync(String)
  fullName: OfficeOpenXml.Drawing.ExcelImage.SetImageAsync(System.String)
  type: Method
  source:
    remote:
      path: src/EPPlus/Drawing/ExcelImage.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: SetImageAsync
    path: ../src/EPPlus/Drawing/ExcelImage.cs
    startLine: 227
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nSets a new image. \n"
  example: []
  syntax:
    content: public async Task<ExcelImage> SetImageAsync(string imagePath)
    parameters:
    - id: imagePath
      type: System.String
      description: The path to the image file.
    return:
      type: System.Threading.Tasks.Task{OfficeOpenXml.Drawing.ExcelImage}
    content.vb: Public Function SetImageAsync(imagePath As String) As Task(Of ExcelImage)
  overload: OfficeOpenXml.Drawing.ExcelImage.SetImageAsync*
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.ExcelImage.SetImageAsync(System.IO.FileInfo)
  commentId: M:OfficeOpenXml.Drawing.ExcelImage.SetImageAsync(System.IO.FileInfo)
  id: SetImageAsync(System.IO.FileInfo)
  parent: OfficeOpenXml.Drawing.ExcelImage
  langs:
  - csharp
  - vb
  name: SetImageAsync(FileInfo)
  nameWithType: ExcelImage.SetImageAsync(FileInfo)
  fullName: OfficeOpenXml.Drawing.ExcelImage.SetImageAsync(System.IO.FileInfo)
  type: Method
  source:
    remote:
      path: src/EPPlus/Drawing/ExcelImage.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: SetImageAsync
    path: ../src/EPPlus/Drawing/ExcelImage.cs
    startLine: 240
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nSets a new image. \n"
  example: []
  syntax:
    content: public async Task<ExcelImage> SetImageAsync(FileInfo imageFile)
    parameters:
    - id: imageFile
      type: System.IO.FileInfo
      description: The image file.
    return:
      type: System.Threading.Tasks.Task{OfficeOpenXml.Drawing.ExcelImage}
    content.vb: Public Function SetImageAsync(imageFile As FileInfo) As Task(Of ExcelImage)
  overload: OfficeOpenXml.Drawing.ExcelImage.SetImageAsync*
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
references:
- uid: OfficeOpenXml.Drawing
  commentId: N:OfficeOpenXml.Drawing
  name: OfficeOpenXml.Drawing
  nameWithType: OfficeOpenXml.Drawing
  fullName: OfficeOpenXml.Drawing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml.Drawing.ExcelImage.#ctor*
  commentId: Overload:OfficeOpenXml.Drawing.ExcelImage.#ctor
  name: ExcelImage
  nameWithType: ExcelImage.ExcelImage
  fullName: OfficeOpenXml.Drawing.ExcelImage.ExcelImage
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.FileInfo
  commentId: T:System.IO.FileInfo
  parent: System.IO
  isExternal: true
  name: FileInfo
  nameWithType: FileInfo
  fullName: System.IO.FileInfo
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: OfficeOpenXml.Drawing.ePictureType
  commentId: T:OfficeOpenXml.Drawing.ePictureType
  parent: OfficeOpenXml.Drawing
  name: ePictureType
  nameWithType: ePictureType
  fullName: OfficeOpenXml.Drawing.ePictureType
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: OfficeOpenXml.Drawing.ExcelImage.HasImage*
  commentId: Overload:OfficeOpenXml.Drawing.ExcelImage.HasImage
  name: HasImage
  nameWithType: ExcelImage.HasImage
  fullName: OfficeOpenXml.Drawing.ExcelImage.HasImage
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: OfficeOpenXml.Drawing.ExcelImage.Type*
  commentId: Overload:OfficeOpenXml.Drawing.ExcelImage.Type
  name: Type
  nameWithType: ExcelImage.Type
  fullName: OfficeOpenXml.Drawing.ExcelImage.Type
- uid: System.Nullable{OfficeOpenXml.Drawing.ePictureType}
  commentId: T:System.Nullable{OfficeOpenXml.Drawing.ePictureType}
  parent: System
  definition: System.Nullable`1
  name: Nullable<ePictureType>
  nameWithType: Nullable<ePictureType>
  fullName: System.Nullable<OfficeOpenXml.Drawing.ePictureType>
  nameWithType.vb: Nullable(Of ePictureType)
  fullName.vb: System.Nullable(Of OfficeOpenXml.Drawing.ePictureType)
  name.vb: Nullable(Of ePictureType)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.Drawing.ePictureType
    name: ePictureType
    nameWithType: ePictureType
    fullName: OfficeOpenXml.Drawing.ePictureType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.Drawing.ePictureType
    name: ePictureType
    nameWithType: ePictureType
    fullName: OfficeOpenXml.Drawing.ePictureType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Drawing.ExcelImage.ImageBytes*
  commentId: Overload:OfficeOpenXml.Drawing.ExcelImage.ImageBytes
  name: ImageBytes
  nameWithType: ExcelImage.ImageBytes
  fullName: OfficeOpenXml.Drawing.ExcelImage.ImageBytes
- uid: OfficeOpenXml.Drawing.ExcelImage.Bounds*
  commentId: Overload:OfficeOpenXml.Drawing.ExcelImage.Bounds
  name: Bounds
  nameWithType: ExcelImage.Bounds
  fullName: OfficeOpenXml.Drawing.ExcelImage.Bounds
- uid: OfficeOpenXml.Drawing.ExcelImageInfo
  commentId: T:OfficeOpenXml.Drawing.ExcelImageInfo
  parent: OfficeOpenXml.Drawing
  name: ExcelImageInfo
  nameWithType: ExcelImageInfo
  fullName: OfficeOpenXml.Drawing.ExcelImageInfo
- uid: OfficeOpenXml.Drawing.ExcelImage.SetImage*
  commentId: Overload:OfficeOpenXml.Drawing.ExcelImage.SetImage
  name: SetImage
  nameWithType: ExcelImage.SetImage
  fullName: OfficeOpenXml.Drawing.ExcelImage.SetImage
- uid: OfficeOpenXml.Drawing.ExcelImage
  commentId: T:OfficeOpenXml.Drawing.ExcelImage
  parent: OfficeOpenXml.Drawing
  name: ExcelImage
  nameWithType: ExcelImage
  fullName: OfficeOpenXml.Drawing.ExcelImage
- uid: OfficeOpenXml.Drawing.ExcelImage.SetImageAsync*
  commentId: Overload:OfficeOpenXml.Drawing.ExcelImage.SetImageAsync
  name: SetImageAsync
  nameWithType: ExcelImage.SetImageAsync
  fullName: OfficeOpenXml.Drawing.ExcelImage.SetImageAsync
- uid: System.Threading.Tasks.Task{OfficeOpenXml.Drawing.ExcelImage}
  commentId: T:System.Threading.Tasks.Task{OfficeOpenXml.Drawing.ExcelImage}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ExcelImage>
  nameWithType: Task<ExcelImage>
  fullName: System.Threading.Tasks.Task<OfficeOpenXml.Drawing.ExcelImage>
  nameWithType.vb: Task(Of ExcelImage)
  fullName.vb: System.Threading.Tasks.Task(Of OfficeOpenXml.Drawing.ExcelImage)
  name.vb: Task(Of ExcelImage)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.Drawing.ExcelImage
    name: ExcelImage
    nameWithType: ExcelImage
    fullName: OfficeOpenXml.Drawing.ExcelImage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.Drawing.ExcelImage
    name: ExcelImage
    nameWithType: ExcelImage
    fullName: OfficeOpenXml.Drawing.ExcelImage
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
