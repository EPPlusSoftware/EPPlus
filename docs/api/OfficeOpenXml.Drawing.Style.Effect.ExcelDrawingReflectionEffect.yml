### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect
  commentId: T:OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect
  id: ExcelDrawingReflectionEffect
  parent: OfficeOpenXml.Drawing.Style.Effect
  children:
  - OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.Alignment
  - OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.BlurRadius
  - OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.Direction
  - OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.EndOpacity
  - OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.EndPosition
  - OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.FadeDirection
  - OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.HorizontalScalingFactor
  - OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.HorizontalSkewAngle
  - OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.RotateWithShape
  - OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.StartOpacity
  - OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.StartPosition
  - OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.VerticalScalingFactor
  - OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.VerticalSkewAngle
  langs:
  - csharp
  - vb
  name: ExcelDrawingReflectionEffect
  nameWithType: ExcelDrawingReflectionEffect
  fullName: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect
  type: Class
  source:
    remote:
      path: src/EPPlus/Drawing/Style/Effect/ExcelDrawingReflectionEffect.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ExcelDrawingReflectionEffect
    path: ../src/EPPlus/Drawing/Style/Effect/ExcelDrawingReflectionEffect.cs
    startLine: 22
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Style.Effect
  summary: "\nThe reflection effect\n"
  example: []
  syntax:
    content: 'public class ExcelDrawingReflectionEffect : ExcelDrawingShadowEffectBase'
    content.vb: >-
      Public Class ExcelDrawingReflectionEffect
          Inherits ExcelDrawingShadowEffectBase
  inheritance:
  - System.Object
  - OfficeOpenXml.XmlHelper
  - OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingEffectBase
  - OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingShadowEffectBase
  inheritedMembers:
  - OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingShadowEffectBase.Distance
  - OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingEffectBase.Delete
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.StartPosition
  commentId: P:OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.StartPosition
  id: StartPosition
  parent: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect
  langs:
  - csharp
  - vb
  name: StartPosition
  nameWithType: ExcelDrawingReflectionEffect.StartPosition
  fullName: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.StartPosition
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Style/Effect/ExcelDrawingReflectionEffect.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: StartPosition
    path: ../src/EPPlus/Drawing/Style/Effect/ExcelDrawingReflectionEffect.cs
    startLine: 56
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Style.Effect
  summary: "\nThe start position along the alpha gradient ramp of the alpha value.\n"
  example: []
  syntax:
    content: public double? StartPosition { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: Public Property StartPosition As Double?
  overload: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.StartPosition*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.StartOpacity
  commentId: P:OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.StartOpacity
  id: StartOpacity
  parent: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect
  langs:
  - csharp
  - vb
  name: StartOpacity
  nameWithType: ExcelDrawingReflectionEffect.StartOpacity
  fullName: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.StartOpacity
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Style/Effect/ExcelDrawingReflectionEffect.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: StartOpacity
    path: ../src/EPPlus/Drawing/Style/Effect/ExcelDrawingReflectionEffect.cs
    startLine: 70
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Style.Effect
  summary: "\nThe starting reflection opacity\n"
  example: []
  syntax:
    content: public double? StartOpacity { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: Public Property StartOpacity As Double?
  overload: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.StartOpacity*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.EndPosition
  commentId: P:OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.EndPosition
  id: EndPosition
  parent: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect
  langs:
  - csharp
  - vb
  name: EndPosition
  nameWithType: ExcelDrawingReflectionEffect.EndPosition
  fullName: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.EndPosition
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Style/Effect/ExcelDrawingReflectionEffect.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: EndPosition
    path: ../src/EPPlus/Drawing/Style/Effect/ExcelDrawingReflectionEffect.cs
    startLine: 85
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Style.Effect
  summary: "\nThe end position along the alpha gradient ramp of the alpha value.\n"
  example: []
  syntax:
    content: public double? EndPosition { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: Public Property EndPosition As Double?
  overload: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.EndPosition*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.EndOpacity
  commentId: P:OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.EndOpacity
  id: EndOpacity
  parent: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect
  langs:
  - csharp
  - vb
  name: EndOpacity
  nameWithType: ExcelDrawingReflectionEffect.EndOpacity
  fullName: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.EndOpacity
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Style/Effect/ExcelDrawingReflectionEffect.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: EndOpacity
    path: ../src/EPPlus/Drawing/Style/Effect/ExcelDrawingReflectionEffect.cs
    startLine: 99
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Style.Effect
  summary: "\nThe ending reflection opacity\n"
  example: []
  syntax:
    content: public double? EndOpacity { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: Public Property EndOpacity As Double?
  overload: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.EndOpacity*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.FadeDirection
  commentId: P:OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.FadeDirection
  id: FadeDirection
  parent: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect
  langs:
  - csharp
  - vb
  name: FadeDirection
  nameWithType: ExcelDrawingReflectionEffect.FadeDirection
  fullName: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.FadeDirection
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Style/Effect/ExcelDrawingReflectionEffect.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: FadeDirection
    path: ../src/EPPlus/Drawing/Style/Effect/ExcelDrawingReflectionEffect.cs
    startLine: 113
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Style.Effect
  summary: "\nThe direction to offset the reflection\n"
  example: []
  syntax:
    content: public double? FadeDirection { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: Public Property FadeDirection As Double?
  overload: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.FadeDirection*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.Alignment
  commentId: P:OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.Alignment
  id: Alignment
  parent: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect
  langs:
  - csharp
  - vb
  name: Alignment
  nameWithType: ExcelDrawingReflectionEffect.Alignment
  fullName: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.Alignment
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Style/Effect/ExcelDrawingReflectionEffect.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Alignment
    path: ../src/EPPlus/Drawing/Style/Effect/ExcelDrawingReflectionEffect.cs
    startLine: 127
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Style.Effect
  summary: "\nAlignment\n"
  example: []
  syntax:
    content: public eRectangleAlignment Alignment { get; set; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.eRectangleAlignment
    content.vb: Public Property Alignment As eRectangleAlignment
  overload: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.Alignment*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.RotateWithShape
  commentId: P:OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.RotateWithShape
  id: RotateWithShape
  parent: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect
  langs:
  - csharp
  - vb
  name: RotateWithShape
  nameWithType: ExcelDrawingReflectionEffect.RotateWithShape
  fullName: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.RotateWithShape
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Style/Effect/ExcelDrawingReflectionEffect.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: RotateWithShape
    path: ../src/EPPlus/Drawing/Style/Effect/ExcelDrawingReflectionEffect.cs
    startLine: 148
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Style.Effect
  summary: "\nIf the shadow rotates with the shape\n"
  example: []
  syntax:
    content: public bool RotateWithShape { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property RotateWithShape As Boolean
  overload: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.RotateWithShape*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.HorizontalSkewAngle
  commentId: P:OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.HorizontalSkewAngle
  id: HorizontalSkewAngle
  parent: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect
  langs:
  - csharp
  - vb
  name: HorizontalSkewAngle
  nameWithType: ExcelDrawingReflectionEffect.HorizontalSkewAngle
  fullName: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.HorizontalSkewAngle
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Style/Effect/ExcelDrawingReflectionEffect.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: HorizontalSkewAngle
    path: ../src/EPPlus/Drawing/Style/Effect/ExcelDrawingReflectionEffect.cs
    startLine: 163
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Style.Effect
  summary: "\nHorizontal skew angle.\nRanges from -90 to 90 degrees \n"
  example: []
  syntax:
    content: public double? HorizontalSkewAngle { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: Public Property HorizontalSkewAngle As Double?
  overload: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.HorizontalSkewAngle*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.VerticalSkewAngle
  commentId: P:OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.VerticalSkewAngle
  id: VerticalSkewAngle
  parent: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect
  langs:
  - csharp
  - vb
  name: VerticalSkewAngle
  nameWithType: ExcelDrawingReflectionEffect.VerticalSkewAngle
  fullName: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.VerticalSkewAngle
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Style/Effect/ExcelDrawingReflectionEffect.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: VerticalSkewAngle
    path: ../src/EPPlus/Drawing/Style/Effect/ExcelDrawingReflectionEffect.cs
    startLine: 178
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Style.Effect
  summary: "\nVertical skew angle.\nRanges from -90 to 90 degrees \n"
  example: []
  syntax:
    content: public double? VerticalSkewAngle { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: Public Property VerticalSkewAngle As Double?
  overload: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.VerticalSkewAngle*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.HorizontalScalingFactor
  commentId: P:OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.HorizontalScalingFactor
  id: HorizontalScalingFactor
  parent: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect
  langs:
  - csharp
  - vb
  name: HorizontalScalingFactor
  nameWithType: ExcelDrawingReflectionEffect.HorizontalScalingFactor
  fullName: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.HorizontalScalingFactor
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Style/Effect/ExcelDrawingReflectionEffect.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: HorizontalScalingFactor
    path: ../src/EPPlus/Drawing/Style/Effect/ExcelDrawingReflectionEffect.cs
    startLine: 193
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Style.Effect
  summary: "\nHorizontal scaling factor in percentage .\nA negative value causes a flip.\n"
  example: []
  syntax:
    content: public double? HorizontalScalingFactor { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: Public Property HorizontalScalingFactor As Double?
  overload: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.HorizontalScalingFactor*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.VerticalScalingFactor
  commentId: P:OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.VerticalScalingFactor
  id: VerticalScalingFactor
  parent: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect
  langs:
  - csharp
  - vb
  name: VerticalScalingFactor
  nameWithType: ExcelDrawingReflectionEffect.VerticalScalingFactor
  fullName: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.VerticalScalingFactor
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Style/Effect/ExcelDrawingReflectionEffect.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: VerticalScalingFactor
    path: ../src/EPPlus/Drawing/Style/Effect/ExcelDrawingReflectionEffect.cs
    startLine: 208
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Style.Effect
  summary: "\nVertical scaling factor in percentage .\nA negative value causes a flip.\n"
  example: []
  syntax:
    content: public double? VerticalScalingFactor { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: Public Property VerticalScalingFactor As Double?
  overload: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.VerticalScalingFactor*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.Direction
  commentId: P:OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.Direction
  id: Direction
  parent: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect
  langs:
  - csharp
  - vb
  name: Direction
  nameWithType: ExcelDrawingReflectionEffect.Direction
  fullName: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.Direction
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Style/Effect/ExcelDrawingReflectionEffect.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Direction
    path: ../src/EPPlus/Drawing/Style/Effect/ExcelDrawingReflectionEffect.cs
    startLine: 222
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Style.Effect
  summary: "\nThe direction to offset the shadow\n"
  example: []
  syntax:
    content: public double? Direction { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: Public Property Direction As Double?
  overload: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.Direction*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.BlurRadius
  commentId: P:OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.BlurRadius
  id: BlurRadius
  parent: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect
  langs:
  - csharp
  - vb
  name: BlurRadius
  nameWithType: ExcelDrawingReflectionEffect.BlurRadius
  fullName: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.BlurRadius
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Style/Effect/ExcelDrawingReflectionEffect.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: BlurRadius
    path: ../src/EPPlus/Drawing/Style/Effect/ExcelDrawingReflectionEffect.cs
    startLine: 236
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Style.Effect
  summary: "\nThe blur radius.\n"
  example: []
  syntax:
    content: public double? BlurRadius { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: Public Property BlurRadius As Double?
  overload: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.BlurRadius*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: OfficeOpenXml.Drawing.Style.Effect
  commentId: N:OfficeOpenXml.Drawing.Style.Effect
  name: OfficeOpenXml.Drawing.Style.Effect
  nameWithType: OfficeOpenXml.Drawing.Style.Effect
  fullName: OfficeOpenXml.Drawing.Style.Effect
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OfficeOpenXml.XmlHelper
  commentId: T:OfficeOpenXml.XmlHelper
  parent: OfficeOpenXml
  name: XmlHelper
  nameWithType: XmlHelper
  fullName: OfficeOpenXml.XmlHelper
- uid: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingEffectBase
  commentId: T:OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingEffectBase
  parent: OfficeOpenXml.Drawing.Style.Effect
  name: ExcelDrawingEffectBase
  nameWithType: ExcelDrawingEffectBase
  fullName: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingEffectBase
- uid: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingShadowEffectBase
  commentId: T:OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingShadowEffectBase
  parent: OfficeOpenXml.Drawing.Style.Effect
  name: ExcelDrawingShadowEffectBase
  nameWithType: ExcelDrawingShadowEffectBase
  fullName: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingShadowEffectBase
- uid: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingShadowEffectBase.Distance
  commentId: P:OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingShadowEffectBase.Distance
  parent: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingShadowEffectBase
  name: Distance
  nameWithType: ExcelDrawingShadowEffectBase.Distance
  fullName: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingShadowEffectBase.Distance
- uid: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingEffectBase.Delete
  commentId: M:OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingEffectBase.Delete
  parent: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingEffectBase
  name: Delete()
  nameWithType: ExcelDrawingEffectBase.Delete()
  fullName: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingEffectBase.Delete()
  spec.csharp:
  - uid: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingEffectBase.Delete
    name: Delete
    nameWithType: ExcelDrawingEffectBase.Delete
    fullName: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingEffectBase.Delete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingEffectBase.Delete
    name: Delete
    nameWithType: ExcelDrawingEffectBase.Delete
    fullName: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingEffectBase.Delete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml
  commentId: N:OfficeOpenXml
  name: OfficeOpenXml
  nameWithType: OfficeOpenXml
  fullName: OfficeOpenXml
- uid: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.StartPosition*
  commentId: Overload:OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.StartPosition
  name: StartPosition
  nameWithType: ExcelDrawingReflectionEffect.StartPosition
  fullName: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.StartPosition
- uid: System.Nullable{System.Double}
  commentId: T:System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  nameWithType.vb: Nullable(Of Double)
  fullName.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.StartOpacity*
  commentId: Overload:OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.StartOpacity
  name: StartOpacity
  nameWithType: ExcelDrawingReflectionEffect.StartOpacity
  fullName: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.StartOpacity
- uid: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.EndPosition*
  commentId: Overload:OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.EndPosition
  name: EndPosition
  nameWithType: ExcelDrawingReflectionEffect.EndPosition
  fullName: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.EndPosition
- uid: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.EndOpacity*
  commentId: Overload:OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.EndOpacity
  name: EndOpacity
  nameWithType: ExcelDrawingReflectionEffect.EndOpacity
  fullName: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.EndOpacity
- uid: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.FadeDirection*
  commentId: Overload:OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.FadeDirection
  name: FadeDirection
  nameWithType: ExcelDrawingReflectionEffect.FadeDirection
  fullName: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.FadeDirection
- uid: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.Alignment*
  commentId: Overload:OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.Alignment
  name: Alignment
  nameWithType: ExcelDrawingReflectionEffect.Alignment
  fullName: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.Alignment
- uid: OfficeOpenXml.Drawing.eRectangleAlignment
  commentId: T:OfficeOpenXml.Drawing.eRectangleAlignment
  parent: OfficeOpenXml.Drawing
  name: eRectangleAlignment
  nameWithType: eRectangleAlignment
  fullName: OfficeOpenXml.Drawing.eRectangleAlignment
- uid: OfficeOpenXml.Drawing
  commentId: N:OfficeOpenXml.Drawing
  name: OfficeOpenXml.Drawing
  nameWithType: OfficeOpenXml.Drawing
  fullName: OfficeOpenXml.Drawing
- uid: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.RotateWithShape*
  commentId: Overload:OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.RotateWithShape
  name: RotateWithShape
  nameWithType: ExcelDrawingReflectionEffect.RotateWithShape
  fullName: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.RotateWithShape
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.HorizontalSkewAngle*
  commentId: Overload:OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.HorizontalSkewAngle
  name: HorizontalSkewAngle
  nameWithType: ExcelDrawingReflectionEffect.HorizontalSkewAngle
  fullName: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.HorizontalSkewAngle
- uid: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.VerticalSkewAngle*
  commentId: Overload:OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.VerticalSkewAngle
  name: VerticalSkewAngle
  nameWithType: ExcelDrawingReflectionEffect.VerticalSkewAngle
  fullName: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.VerticalSkewAngle
- uid: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.HorizontalScalingFactor*
  commentId: Overload:OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.HorizontalScalingFactor
  name: HorizontalScalingFactor
  nameWithType: ExcelDrawingReflectionEffect.HorizontalScalingFactor
  fullName: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.HorizontalScalingFactor
- uid: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.VerticalScalingFactor*
  commentId: Overload:OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.VerticalScalingFactor
  name: VerticalScalingFactor
  nameWithType: ExcelDrawingReflectionEffect.VerticalScalingFactor
  fullName: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.VerticalScalingFactor
- uid: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.Direction*
  commentId: Overload:OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.Direction
  name: Direction
  nameWithType: ExcelDrawingReflectionEffect.Direction
  fullName: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.Direction
- uid: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.BlurRadius*
  commentId: Overload:OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.BlurRadius
  name: BlurRadius
  nameWithType: ExcelDrawingReflectionEffect.BlurRadius
  fullName: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingReflectionEffect.BlurRadius
