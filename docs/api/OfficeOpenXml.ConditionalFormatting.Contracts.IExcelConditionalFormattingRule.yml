### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule
  commentId: T:OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule
  id: IExcelConditionalFormattingRule
  parent: OfficeOpenXml.ConditionalFormatting.Contracts
  children:
  - OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.Address
  - OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.As
  - OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.PivotTable
  - OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.Priority
  - OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.StopIfTrue
  - OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.Style
  - OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.Type
  langs:
  - csharp
  - vb
  name: IExcelConditionalFormattingRule
  nameWithType: IExcelConditionalFormattingRule
  fullName: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule
  type: Interface
  source:
    remote:
      path: src/EPPlus/ConditionalFormatting/Contracts/IExcelConditionalFormattingRule.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: IExcelConditionalFormattingRule
    path: ../src/EPPlus/ConditionalFormatting/Contracts/IExcelConditionalFormattingRule.cs
    startLine: 21
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.ConditionalFormatting.Contracts
  summary: "\nInterface for conditional formatting rule\n"
  example: []
  syntax:
    content: public interface IExcelConditionalFormattingRule
    content.vb: Public Interface IExcelConditionalFormattingRule
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.Type
  commentId: P:OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.Type
  id: Type
  parent: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: IExcelConditionalFormattingRule.Type
  fullName: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.Type
  type: Property
  source:
    remote:
      path: src/EPPlus/ConditionalFormatting/Contracts/IExcelConditionalFormattingRule.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Type
    path: ../src/EPPlus/ConditionalFormatting/Contracts/IExcelConditionalFormattingRule.cs
    startLine: 26
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.ConditionalFormatting.Contracts
  summary: "\nThe type of conditional formatting rule.\n"
  example: []
  syntax:
    content: eExcelConditionalFormattingRuleType Type { get; }
    parameters: []
    return:
      type: OfficeOpenXml.ConditionalFormatting.eExcelConditionalFormattingRuleType
    content.vb: ReadOnly Property Type As eExcelConditionalFormattingRuleType
  overload: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.Type*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.Address
  commentId: P:OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.Address
  id: Address
  parent: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule
  langs:
  - csharp
  - vb
  name: Address
  nameWithType: IExcelConditionalFormattingRule.Address
  fullName: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.Address
  type: Property
  source:
    remote:
      path: src/EPPlus/ConditionalFormatting/Contracts/IExcelConditionalFormattingRule.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Address
    path: ../src/EPPlus/ConditionalFormatting/Contracts/IExcelConditionalFormattingRule.cs
    startLine: 31
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.ConditionalFormatting.Contracts
  summary: "\n<p>The range over which these conditional formatting rules apply.</p>\n"
  example: []
  syntax:
    content: ExcelAddress Address { get; set; }
    parameters: []
    return:
      type: OfficeOpenXml.ExcelAddress
    content.vb: Property Address As ExcelAddress
  overload: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.Address*
  modifiers.csharp:
  - get
  - set
- uid: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.Priority
  commentId: P:OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.Priority
  id: Priority
  parent: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule
  langs:
  - csharp
  - vb
  name: Priority
  nameWithType: IExcelConditionalFormattingRule.Priority
  fullName: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.Priority
  type: Property
  source:
    remote:
      path: src/EPPlus/ConditionalFormatting/Contracts/IExcelConditionalFormattingRule.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Priority
    path: ../src/EPPlus/ConditionalFormatting/Contracts/IExcelConditionalFormattingRule.cs
    startLine: 37
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.ConditionalFormatting.Contracts
  summary: "\nThe priority of the rule. \nPriority for the rule gets lower the higher this number is. 1 is the highest priority.\n"
  example: []
  syntax:
    content: int Priority { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Property Priority As Integer
  overload: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.Priority*
  modifiers.csharp:
  - get
  - set
- uid: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.StopIfTrue
  commentId: P:OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.StopIfTrue
  id: StopIfTrue
  parent: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule
  langs:
  - csharp
  - vb
  name: StopIfTrue
  nameWithType: IExcelConditionalFormattingRule.StopIfTrue
  fullName: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.StopIfTrue
  type: Property
  source:
    remote:
      path: src/EPPlus/ConditionalFormatting/Contracts/IExcelConditionalFormattingRule.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: StopIfTrue
    path: ../src/EPPlus/ConditionalFormatting/Contracts/IExcelConditionalFormattingRule.cs
    startLine: 42
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.ConditionalFormatting.Contracts
  summary: "\nIf this property is true, no rules with lower priority should be applied over this rule.\n"
  example: []
  syntax:
    content: bool StopIfTrue { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property StopIfTrue As Boolean
  overload: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.StopIfTrue*
  modifiers.csharp:
  - get
  - set
- uid: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.Style
  commentId: P:OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.Style
  id: Style
  parent: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule
  langs:
  - csharp
  - vb
  name: Style
  nameWithType: IExcelConditionalFormattingRule.Style
  fullName: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.Style
  type: Property
  source:
    remote:
      path: src/EPPlus/ConditionalFormatting/Contracts/IExcelConditionalFormattingRule.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Style
    path: ../src/EPPlus/ConditionalFormatting/Contracts/IExcelConditionalFormattingRule.cs
    startLine: 47
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.ConditionalFormatting.Contracts
  summary: "\nGives access to the differencial styling (DXF) for the rule.\n"
  example: []
  syntax:
    content: ExcelDxfStyleConditionalFormatting Style { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Style.Dxf.ExcelDxfStyleConditionalFormatting
    content.vb: ReadOnly Property Style As ExcelDxfStyleConditionalFormatting
  overload: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.Style*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.PivotTable
  commentId: P:OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.PivotTable
  id: PivotTable
  parent: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule
  langs:
  - csharp
  - vb
  name: PivotTable
  nameWithType: IExcelConditionalFormattingRule.PivotTable
  fullName: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.PivotTable
  type: Property
  source:
    remote:
      path: src/EPPlus/ConditionalFormatting/Contracts/IExcelConditionalFormattingRule.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: PivotTable
    path: ../src/EPPlus/ConditionalFormatting/Contracts/IExcelConditionalFormattingRule.cs
    startLine: 52
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.ConditionalFormatting.Contracts
  summary: "\nIndicates that the conditional formatting is associated with a PivotTable\n"
  example: []
  syntax:
    content: bool PivotTable { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property PivotTable As Boolean
  overload: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.PivotTable*
  modifiers.csharp:
  - get
  - set
- uid: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.As
  commentId: P:OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.As
  id: As
  parent: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule
  langs:
  - csharp
  - vb
  name: As
  nameWithType: IExcelConditionalFormattingRule.As
  fullName: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.As
  type: Property
  source:
    remote:
      path: src/EPPlus/ConditionalFormatting/Contracts/IExcelConditionalFormattingRule.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: As
    path: ../src/EPPlus/ConditionalFormatting/Contracts/IExcelConditionalFormattingRule.cs
    startLine: 56
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.ConditionalFormatting.Contracts
  summary: "\nType case propterty for the base class.\n"
  example: []
  syntax:
    content: ExcelConditionalFormattingAsType As { get; }
    parameters: []
    return:
      type: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingAsType
    content.vb: ReadOnly Property As As ExcelConditionalFormattingAsType
  overload: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.As*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: OfficeOpenXml.ConditionalFormatting.Contracts
  commentId: N:OfficeOpenXml.ConditionalFormatting.Contracts
  name: OfficeOpenXml.ConditionalFormatting.Contracts
  nameWithType: OfficeOpenXml.ConditionalFormatting.Contracts
  fullName: OfficeOpenXml.ConditionalFormatting.Contracts
- uid: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.Type*
  commentId: Overload:OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.Type
  name: Type
  nameWithType: IExcelConditionalFormattingRule.Type
  fullName: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.Type
- uid: OfficeOpenXml.ConditionalFormatting.eExcelConditionalFormattingRuleType
  commentId: T:OfficeOpenXml.ConditionalFormatting.eExcelConditionalFormattingRuleType
  parent: OfficeOpenXml.ConditionalFormatting
  name: eExcelConditionalFormattingRuleType
  nameWithType: eExcelConditionalFormattingRuleType
  fullName: OfficeOpenXml.ConditionalFormatting.eExcelConditionalFormattingRuleType
- uid: OfficeOpenXml.ConditionalFormatting
  commentId: N:OfficeOpenXml.ConditionalFormatting
  name: OfficeOpenXml.ConditionalFormatting
  nameWithType: OfficeOpenXml.ConditionalFormatting
  fullName: OfficeOpenXml.ConditionalFormatting
- uid: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.Address*
  commentId: Overload:OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.Address
  name: Address
  nameWithType: IExcelConditionalFormattingRule.Address
  fullName: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.Address
- uid: OfficeOpenXml.ExcelAddress
  commentId: T:OfficeOpenXml.ExcelAddress
  parent: OfficeOpenXml
  name: ExcelAddress
  nameWithType: ExcelAddress
  fullName: OfficeOpenXml.ExcelAddress
- uid: OfficeOpenXml
  commentId: N:OfficeOpenXml
  name: OfficeOpenXml
  nameWithType: OfficeOpenXml
  fullName: OfficeOpenXml
- uid: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.Priority*
  commentId: Overload:OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.Priority
  name: Priority
  nameWithType: IExcelConditionalFormattingRule.Priority
  fullName: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.Priority
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.StopIfTrue*
  commentId: Overload:OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.StopIfTrue
  name: StopIfTrue
  nameWithType: IExcelConditionalFormattingRule.StopIfTrue
  fullName: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.StopIfTrue
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.Style*
  commentId: Overload:OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.Style
  name: Style
  nameWithType: IExcelConditionalFormattingRule.Style
  fullName: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.Style
- uid: OfficeOpenXml.Style.Dxf.ExcelDxfStyleConditionalFormatting
  commentId: T:OfficeOpenXml.Style.Dxf.ExcelDxfStyleConditionalFormatting
  parent: OfficeOpenXml.Style.Dxf
  name: ExcelDxfStyleConditionalFormatting
  nameWithType: ExcelDxfStyleConditionalFormatting
  fullName: OfficeOpenXml.Style.Dxf.ExcelDxfStyleConditionalFormatting
- uid: OfficeOpenXml.Style.Dxf
  commentId: N:OfficeOpenXml.Style.Dxf
  name: OfficeOpenXml.Style.Dxf
  nameWithType: OfficeOpenXml.Style.Dxf
  fullName: OfficeOpenXml.Style.Dxf
- uid: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.PivotTable*
  commentId: Overload:OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.PivotTable
  name: PivotTable
  nameWithType: IExcelConditionalFormattingRule.PivotTable
  fullName: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.PivotTable
- uid: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.As*
  commentId: Overload:OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.As
  name: As
  nameWithType: IExcelConditionalFormattingRule.As
  fullName: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule.As
- uid: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingAsType
  commentId: T:OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingAsType
  parent: OfficeOpenXml.ConditionalFormatting
  name: ExcelConditionalFormattingAsType
  nameWithType: ExcelConditionalFormattingAsType
  fullName: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingAsType
