### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.ExcelProtection
  commentId: T:OfficeOpenXml.ExcelProtection
  id: ExcelProtection
  parent: OfficeOpenXml
  children:
  - OfficeOpenXml.ExcelProtection.LockRevision
  - OfficeOpenXml.ExcelProtection.LockStructure
  - OfficeOpenXml.ExcelProtection.LockWindows
  - OfficeOpenXml.ExcelProtection.SetPassword(System.String)
  - OfficeOpenXml.ExcelProtection.WriteProtection
  langs:
  - csharp
  - vb
  name: ExcelProtection
  nameWithType: ExcelProtection
  fullName: OfficeOpenXml.ExcelProtection
  type: Class
  source:
    remote:
      path: src/EPPlus/ExcelProtection.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ExcelProtection
    path: ../src/EPPlus/ExcelProtection.cs
    startLine: 25
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  summary: "\nSets protection on the workbook level\n<xref href=\"OfficeOpenXml.ExcelEncryption\" data-throw-if-not-resolved=\"false\"></xref> \n<xref href=\"OfficeOpenXml.ExcelSheetProtection\" data-throw-if-not-resolved=\"false\"></xref> \n"
  example: []
  syntax:
    content: 'public class ExcelProtection : XmlHelper'
    content.vb: >-
      Public Class ExcelProtection
          Inherits XmlHelper
  inheritance:
  - System.Object
  - OfficeOpenXml.XmlHelper
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OfficeOpenXml.ExcelProtection.SetPassword(System.String)
  commentId: M:OfficeOpenXml.ExcelProtection.SetPassword(System.String)
  id: SetPassword(System.String)
  parent: OfficeOpenXml.ExcelProtection
  langs:
  - csharp
  - vb
  name: SetPassword(String)
  nameWithType: ExcelProtection.SetPassword(String)
  fullName: OfficeOpenXml.ExcelProtection.SetPassword(System.String)
  type: Method
  source:
    remote:
      path: src/EPPlus/ExcelProtection.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: SetPassword
    path: ../src/EPPlus/ExcelProtection.cs
    startLine: 37
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  summary: "\nSets a password for the workbook. This does not encrypt the workbook. \n"
  example: []
  syntax:
    content: public void SetPassword(string Password)
    parameters:
    - id: Password
      type: System.String
      description: 'The password. '
    content.vb: Public Sub SetPassword(Password As String)
  overload: OfficeOpenXml.ExcelProtection.SetPassword*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.ExcelProtection.LockStructure
  commentId: P:OfficeOpenXml.ExcelProtection.LockStructure
  id: LockStructure
  parent: OfficeOpenXml.ExcelProtection
  langs:
  - csharp
  - vb
  name: LockStructure
  nameWithType: ExcelProtection.LockStructure
  fullName: OfficeOpenXml.ExcelProtection.LockStructure
  type: Property
  source:
    remote:
      path: src/EPPlus/ExcelProtection.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: LockStructure
    path: ../src/EPPlus/ExcelProtection.cs
    startLine: 52
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  summary: "\nLocks the structure,which prevents users from adding or deleting worksheets or from displaying hidden worksheets.\n"
  example: []
  syntax:
    content: public bool LockStructure { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property LockStructure As Boolean
  overload: OfficeOpenXml.ExcelProtection.LockStructure*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.ExcelProtection.LockWindows
  commentId: P:OfficeOpenXml.ExcelProtection.LockWindows
  id: LockWindows
  parent: OfficeOpenXml.ExcelProtection
  langs:
  - csharp
  - vb
  name: LockWindows
  nameWithType: ExcelProtection.LockWindows
  fullName: OfficeOpenXml.ExcelProtection.LockWindows
  type: Property
  source:
    remote:
      path: src/EPPlus/ExcelProtection.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: LockWindows
    path: ../src/EPPlus/ExcelProtection.cs
    startLine: 67
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  summary: "\nLocks the position of the workbook window.\n"
  example: []
  syntax:
    content: public bool LockWindows { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property LockWindows As Boolean
  overload: OfficeOpenXml.ExcelProtection.LockWindows*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.ExcelProtection.LockRevision
  commentId: P:OfficeOpenXml.ExcelProtection.LockRevision
  id: LockRevision
  parent: OfficeOpenXml.ExcelProtection
  langs:
  - csharp
  - vb
  name: LockRevision
  nameWithType: ExcelProtection.LockRevision
  fullName: OfficeOpenXml.ExcelProtection.LockRevision
  type: Property
  source:
    remote:
      path: src/EPPlus/ExcelProtection.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: LockRevision
    path: ../src/EPPlus/ExcelProtection.cs
    startLine: 83
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  summary: "\nLock the workbook for revision\n"
  example: []
  syntax:
    content: public bool LockRevision { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property LockRevision As Boolean
  overload: OfficeOpenXml.ExcelProtection.LockRevision*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.ExcelProtection.WriteProtection
  commentId: P:OfficeOpenXml.ExcelProtection.WriteProtection
  id: WriteProtection
  parent: OfficeOpenXml.ExcelProtection
  langs:
  - csharp
  - vb
  name: WriteProtection
  nameWithType: ExcelProtection.WriteProtection
  fullName: OfficeOpenXml.ExcelProtection.WriteProtection
  type: Property
  source:
    remote:
      path: src/EPPlus/ExcelProtection.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: WriteProtection
    path: ../src/EPPlus/ExcelProtection.cs
    startLine: 98
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  summary: "\nFile sharing settings for the workbook.\n"
  example: []
  syntax:
    content: public ExcelWriteProtection WriteProtection { get; }
    parameters: []
    return:
      type: OfficeOpenXml.ExcelWriteProtection
    content.vb: Public ReadOnly Property WriteProtection As ExcelWriteProtection
  overload: OfficeOpenXml.ExcelProtection.WriteProtection*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: OfficeOpenXml.ExcelEncryption
  commentId: T:OfficeOpenXml.ExcelEncryption
  parent: OfficeOpenXml
  name: ExcelEncryption
  nameWithType: ExcelEncryption
  fullName: OfficeOpenXml.ExcelEncryption
- uid: OfficeOpenXml.ExcelSheetProtection
  commentId: T:OfficeOpenXml.ExcelSheetProtection
  parent: OfficeOpenXml
  name: ExcelSheetProtection
  nameWithType: ExcelSheetProtection
  fullName: OfficeOpenXml.ExcelSheetProtection
- uid: OfficeOpenXml
  commentId: N:OfficeOpenXml
  name: OfficeOpenXml
  nameWithType: OfficeOpenXml
  fullName: OfficeOpenXml
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OfficeOpenXml.XmlHelper
  commentId: T:OfficeOpenXml.XmlHelper
  parent: OfficeOpenXml
  name: XmlHelper
  nameWithType: XmlHelper
  fullName: OfficeOpenXml.XmlHelper
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml.ExcelProtection.SetPassword*
  commentId: Overload:OfficeOpenXml.ExcelProtection.SetPassword
  name: SetPassword
  nameWithType: ExcelProtection.SetPassword
  fullName: OfficeOpenXml.ExcelProtection.SetPassword
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OfficeOpenXml.ExcelProtection.LockStructure*
  commentId: Overload:OfficeOpenXml.ExcelProtection.LockStructure
  name: LockStructure
  nameWithType: ExcelProtection.LockStructure
  fullName: OfficeOpenXml.ExcelProtection.LockStructure
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: OfficeOpenXml.ExcelProtection.LockWindows*
  commentId: Overload:OfficeOpenXml.ExcelProtection.LockWindows
  name: LockWindows
  nameWithType: ExcelProtection.LockWindows
  fullName: OfficeOpenXml.ExcelProtection.LockWindows
- uid: OfficeOpenXml.ExcelProtection.LockRevision*
  commentId: Overload:OfficeOpenXml.ExcelProtection.LockRevision
  name: LockRevision
  nameWithType: ExcelProtection.LockRevision
  fullName: OfficeOpenXml.ExcelProtection.LockRevision
- uid: OfficeOpenXml.ExcelProtection.WriteProtection*
  commentId: Overload:OfficeOpenXml.ExcelProtection.WriteProtection
  name: WriteProtection
  nameWithType: ExcelProtection.WriteProtection
  fullName: OfficeOpenXml.ExcelProtection.WriteProtection
- uid: OfficeOpenXml.ExcelWriteProtection
  commentId: T:OfficeOpenXml.ExcelWriteProtection
  parent: OfficeOpenXml
  name: ExcelWriteProtection
  nameWithType: ExcelWriteProtection
  fullName: OfficeOpenXml.ExcelWriteProtection
