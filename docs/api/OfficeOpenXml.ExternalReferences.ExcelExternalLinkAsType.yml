### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.ExternalReferences.ExcelExternalLinkAsType
  commentId: T:OfficeOpenXml.ExternalReferences.ExcelExternalLinkAsType
  id: ExcelExternalLinkAsType
  parent: OfficeOpenXml.ExternalReferences
  children:
  - OfficeOpenXml.ExternalReferences.ExcelExternalLinkAsType.DdeLink
  - OfficeOpenXml.ExternalReferences.ExcelExternalLinkAsType.ExternalWorkbook
  - OfficeOpenXml.ExternalReferences.ExcelExternalLinkAsType.OleLink
  - OfficeOpenXml.ExternalReferences.ExcelExternalLinkAsType.Type``1
  langs:
  - csharp
  - vb
  name: ExcelExternalLinkAsType
  nameWithType: ExcelExternalLinkAsType
  fullName: OfficeOpenXml.ExternalReferences.ExcelExternalLinkAsType
  type: Class
  source:
    remote:
      path: src/EPPlus/ExternalReferences/ExcelExternalLinkAsType.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ExcelExternalLinkAsType
    path: ../src/EPPlus/ExternalReferences/ExcelExternalLinkAsType.cs
    startLine: 17
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.ExternalReferences
  summary: "\nProvides a simple way to type cast <xref href=\"OfficeOpenXml.ExternalReferences.ExcelExternalLink\" data-throw-if-not-resolved=\"false\"></xref> object top its top level class.\n"
  example: []
  syntax:
    content: public class ExcelExternalLinkAsType
    content.vb: Public Class ExcelExternalLinkAsType
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OfficeOpenXml.ExternalReferences.ExcelExternalLinkAsType.Type``1
  commentId: M:OfficeOpenXml.ExternalReferences.ExcelExternalLinkAsType.Type``1
  id: Type``1
  parent: OfficeOpenXml.ExternalReferences.ExcelExternalLinkAsType
  langs:
  - csharp
  - vb
  name: Type<T>()
  nameWithType: ExcelExternalLinkAsType.Type<T>()
  fullName: OfficeOpenXml.ExternalReferences.ExcelExternalLinkAsType.Type<T>()
  type: Method
  source:
    remote:
      path: src/EPPlus/ExternalReferences/ExcelExternalLinkAsType.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Type
    path: ../src/EPPlus/ExternalReferences/ExcelExternalLinkAsType.cs
    startLine: 29
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.ExternalReferences
  summary: "\nConverts the external link to it&apos;s top level .\n"
  example: []
  syntax:
    content: >-
      public T Type<T>()
          where T : ExcelExternalLink
    typeParameters:
    - id: T
      description: The type of external link. T must be inherited from ExcelExternalLink
    return:
      type: '{T}'
      description: The external link as type T
    content.vb: Public Function Type(Of T As ExcelExternalLink) As T
  overload: OfficeOpenXml.ExternalReferences.ExcelExternalLinkAsType.Type*
  nameWithType.vb: ExcelExternalLinkAsType.Type(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: OfficeOpenXml.ExternalReferences.ExcelExternalLinkAsType.Type(Of T)()
  name.vb: Type(Of T)()
- uid: OfficeOpenXml.ExternalReferences.ExcelExternalLinkAsType.ExternalWorkbook
  commentId: P:OfficeOpenXml.ExternalReferences.ExcelExternalLinkAsType.ExternalWorkbook
  id: ExternalWorkbook
  parent: OfficeOpenXml.ExternalReferences.ExcelExternalLinkAsType
  langs:
  - csharp
  - vb
  name: ExternalWorkbook
  nameWithType: ExcelExternalLinkAsType.ExternalWorkbook
  fullName: OfficeOpenXml.ExternalReferences.ExcelExternalLinkAsType.ExternalWorkbook
  type: Property
  source:
    remote:
      path: src/EPPlus/ExternalReferences/ExcelExternalLinkAsType.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ExternalWorkbook
    path: ../src/EPPlus/ExternalReferences/ExcelExternalLinkAsType.cs
    startLine: 36
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.ExternalReferences
  summary: "\nReturn the external link as an external workbook. If the external link is not of type <xref href=\"OfficeOpenXml.ExternalReferences.ExcelExternalWorkbook\" data-throw-if-not-resolved=\"false\"></xref>, null is returned\n"
  example: []
  syntax:
    content: public ExcelExternalWorkbook ExternalWorkbook { get; }
    parameters: []
    return:
      type: OfficeOpenXml.ExternalReferences.ExcelExternalWorkbook
    content.vb: Public ReadOnly Property ExternalWorkbook As ExcelExternalWorkbook
  overload: OfficeOpenXml.ExternalReferences.ExcelExternalLinkAsType.ExternalWorkbook*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.ExternalReferences.ExcelExternalLinkAsType.DdeLink
  commentId: P:OfficeOpenXml.ExternalReferences.ExcelExternalLinkAsType.DdeLink
  id: DdeLink
  parent: OfficeOpenXml.ExternalReferences.ExcelExternalLinkAsType
  langs:
  - csharp
  - vb
  name: DdeLink
  nameWithType: ExcelExternalLinkAsType.DdeLink
  fullName: OfficeOpenXml.ExternalReferences.ExcelExternalLinkAsType.DdeLink
  type: Property
  source:
    remote:
      path: src/EPPlus/ExternalReferences/ExcelExternalLinkAsType.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: DdeLink
    path: ../src/EPPlus/ExternalReferences/ExcelExternalLinkAsType.cs
    startLine: 46
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.ExternalReferences
  summary: "\nReturn the external link as a dde link. If the external link is not of type <xref href=\"OfficeOpenXml.ExternalReferences.ExcelExternalDdeLink\" data-throw-if-not-resolved=\"false\"></xref>, null is returned\n"
  example: []
  syntax:
    content: public ExcelExternalDdeLink DdeLink { get; }
    parameters: []
    return:
      type: OfficeOpenXml.ExternalReferences.ExcelExternalDdeLink
    content.vb: Public ReadOnly Property DdeLink As ExcelExternalDdeLink
  overload: OfficeOpenXml.ExternalReferences.ExcelExternalLinkAsType.DdeLink*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.ExternalReferences.ExcelExternalLinkAsType.OleLink
  commentId: P:OfficeOpenXml.ExternalReferences.ExcelExternalLinkAsType.OleLink
  id: OleLink
  parent: OfficeOpenXml.ExternalReferences.ExcelExternalLinkAsType
  langs:
  - csharp
  - vb
  name: OleLink
  nameWithType: ExcelExternalLinkAsType.OleLink
  fullName: OfficeOpenXml.ExternalReferences.ExcelExternalLinkAsType.OleLink
  type: Property
  source:
    remote:
      path: src/EPPlus/ExternalReferences/ExcelExternalLinkAsType.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: OleLink
    path: ../src/EPPlus/ExternalReferences/ExcelExternalLinkAsType.cs
    startLine: 56
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.ExternalReferences
  summary: "\nReturn the external link as a ole link. If the external link is not of type <xref href=\"OfficeOpenXml.ExternalReferences.ExcelExternalOleLink\" data-throw-if-not-resolved=\"false\"></xref>, null is returned\n"
  example: []
  syntax:
    content: public ExcelExternalOleLink OleLink { get; }
    parameters: []
    return:
      type: OfficeOpenXml.ExternalReferences.ExcelExternalOleLink
    content.vb: Public ReadOnly Property OleLink As ExcelExternalOleLink
  overload: OfficeOpenXml.ExternalReferences.ExcelExternalLinkAsType.OleLink*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: OfficeOpenXml.ExternalReferences.ExcelExternalLink
  commentId: T:OfficeOpenXml.ExternalReferences.ExcelExternalLink
  parent: OfficeOpenXml.ExternalReferences
  name: ExcelExternalLink
  nameWithType: ExcelExternalLink
  fullName: OfficeOpenXml.ExternalReferences.ExcelExternalLink
- uid: OfficeOpenXml.ExternalReferences
  commentId: N:OfficeOpenXml.ExternalReferences
  name: OfficeOpenXml.ExternalReferences
  nameWithType: OfficeOpenXml.ExternalReferences
  fullName: OfficeOpenXml.ExternalReferences
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml.ExternalReferences.ExcelExternalLinkAsType.Type*
  commentId: Overload:OfficeOpenXml.ExternalReferences.ExcelExternalLinkAsType.Type
  name: Type
  nameWithType: ExcelExternalLinkAsType.Type
  fullName: OfficeOpenXml.ExternalReferences.ExcelExternalLinkAsType.Type
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: OfficeOpenXml.ExternalReferences.ExcelExternalWorkbook
  commentId: T:OfficeOpenXml.ExternalReferences.ExcelExternalWorkbook
  parent: OfficeOpenXml.ExternalReferences
  name: ExcelExternalWorkbook
  nameWithType: ExcelExternalWorkbook
  fullName: OfficeOpenXml.ExternalReferences.ExcelExternalWorkbook
- uid: OfficeOpenXml.ExternalReferences.ExcelExternalLinkAsType.ExternalWorkbook*
  commentId: Overload:OfficeOpenXml.ExternalReferences.ExcelExternalLinkAsType.ExternalWorkbook
  name: ExternalWorkbook
  nameWithType: ExcelExternalLinkAsType.ExternalWorkbook
  fullName: OfficeOpenXml.ExternalReferences.ExcelExternalLinkAsType.ExternalWorkbook
- uid: OfficeOpenXml.ExternalReferences.ExcelExternalDdeLink
  commentId: T:OfficeOpenXml.ExternalReferences.ExcelExternalDdeLink
  parent: OfficeOpenXml.ExternalReferences
  name: ExcelExternalDdeLink
  nameWithType: ExcelExternalDdeLink
  fullName: OfficeOpenXml.ExternalReferences.ExcelExternalDdeLink
- uid: OfficeOpenXml.ExternalReferences.ExcelExternalLinkAsType.DdeLink*
  commentId: Overload:OfficeOpenXml.ExternalReferences.ExcelExternalLinkAsType.DdeLink
  name: DdeLink
  nameWithType: ExcelExternalLinkAsType.DdeLink
  fullName: OfficeOpenXml.ExternalReferences.ExcelExternalLinkAsType.DdeLink
- uid: OfficeOpenXml.ExternalReferences.ExcelExternalOleLink
  commentId: T:OfficeOpenXml.ExternalReferences.ExcelExternalOleLink
  parent: OfficeOpenXml.ExternalReferences
  name: ExcelExternalOleLink
  nameWithType: ExcelExternalOleLink
  fullName: OfficeOpenXml.ExternalReferences.ExcelExternalOleLink
- uid: OfficeOpenXml.ExternalReferences.ExcelExternalLinkAsType.OleLink*
  commentId: Overload:OfficeOpenXml.ExternalReferences.ExcelExternalLinkAsType.OleLink
  name: OleLink
  nameWithType: ExcelExternalLinkAsType.OleLink
  fullName: OfficeOpenXml.ExternalReferences.ExcelExternalLinkAsType.OleLink
