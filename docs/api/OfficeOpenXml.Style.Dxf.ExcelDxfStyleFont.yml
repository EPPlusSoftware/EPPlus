### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.Style.Dxf.ExcelDxfStyleFont
  commentId: T:OfficeOpenXml.Style.Dxf.ExcelDxfStyleFont
  id: ExcelDxfStyleFont
  parent: OfficeOpenXml.Style.Dxf
  children:
  - OfficeOpenXml.Style.Dxf.ExcelDxfStyleFont.Clear
  - OfficeOpenXml.Style.Dxf.ExcelDxfStyleFont.Font
  - OfficeOpenXml.Style.Dxf.ExcelDxfStyleFont.HasValue
  langs:
  - csharp
  - vb
  name: ExcelDxfStyleFont
  nameWithType: ExcelDxfStyleFont
  fullName: OfficeOpenXml.Style.Dxf.ExcelDxfStyleFont
  type: Class
  source:
    remote:
      path: src/EPPlus/Style/Dxf/ExcelDxfStyleFont.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ExcelDxfStyleFont
    path: ../src/EPPlus/Style/Dxf/ExcelDxfStyleFont.cs
    startLine: 20
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style.Dxf
  summary: "\nDifferential formatting record used in conditional formatting\n"
  example: []
  syntax:
    content: 'public class ExcelDxfStyleFont : ExcelDxfStyleBase'
    content.vb: >-
      Public Class ExcelDxfStyleFont
          Inherits ExcelDxfStyleBase
  inheritance:
  - System.Object
  - OfficeOpenXml.Style.Dxf.DxfStyleBase
  - OfficeOpenXml.Style.Dxf.ExcelDxfStyleBase
  derivedClasses:
  - OfficeOpenXml.Style.Dxf.ExcelDxfSlicerStyle
  inheritedMembers:
  - OfficeOpenXml.Style.Dxf.ExcelDxfStyleBase.Fill
  - OfficeOpenXml.Style.Dxf.ExcelDxfStyleBase.Border
  - OfficeOpenXml.Style.Dxf.DxfStyleBase.SetValueColor(OfficeOpenXml.XmlHelper,System.String,OfficeOpenXml.Style.Dxf.ExcelDxfColor)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OfficeOpenXml.Style.Dxf.ExcelDxfStyleFont.Font
  commentId: P:OfficeOpenXml.Style.Dxf.ExcelDxfStyleFont.Font
  id: Font
  parent: OfficeOpenXml.Style.Dxf.ExcelDxfStyleFont
  langs:
  - csharp
  - vb
  name: Font
  nameWithType: ExcelDxfStyleFont.Font
  fullName: OfficeOpenXml.Style.Dxf.ExcelDxfStyleFont.Font
  type: Property
  source:
    remote:
      path: src/EPPlus/Style/Dxf/ExcelDxfStyleFont.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Font
    path: ../src/EPPlus/Style/Dxf/ExcelDxfStyleFont.cs
    startLine: 34
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style.Dxf
  summary: "\nFont formatting settings\n"
  example: []
  syntax:
    content: public ExcelDxfFont Font { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Style.Dxf.ExcelDxfFont
    content.vb: Public ReadOnly Property Font As ExcelDxfFont
  overload: OfficeOpenXml.Style.Dxf.ExcelDxfStyleFont.Font*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Style.Dxf.ExcelDxfStyleFont.HasValue
  commentId: P:OfficeOpenXml.Style.Dxf.ExcelDxfStyleFont.HasValue
  id: HasValue
  parent: OfficeOpenXml.Style.Dxf.ExcelDxfStyleFont
  langs:
  - csharp
  - vb
  name: HasValue
  nameWithType: ExcelDxfStyleFont.HasValue
  fullName: OfficeOpenXml.Style.Dxf.ExcelDxfStyleFont.HasValue
  type: Property
  source:
    remote:
      path: src/EPPlus/Style/Dxf/ExcelDxfStyleFont.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: HasValue
    path: ../src/EPPlus/Style/Dxf/ExcelDxfStyleFont.cs
    startLine: 45
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style.Dxf
  summary: "\nIf the object has any properties set\n"
  example: []
  syntax:
    content: public override bool HasValue { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property HasValue As Boolean
  overridden: OfficeOpenXml.Style.Dxf.ExcelDxfStyleBase.HasValue
  overload: OfficeOpenXml.Style.Dxf.ExcelDxfStyleFont.HasValue*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: OfficeOpenXml.Style.Dxf.ExcelDxfStyleFont.Clear
  commentId: M:OfficeOpenXml.Style.Dxf.ExcelDxfStyleFont.Clear
  id: Clear
  parent: OfficeOpenXml.Style.Dxf.ExcelDxfStyleFont
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: ExcelDxfStyleFont.Clear()
  fullName: OfficeOpenXml.Style.Dxf.ExcelDxfStyleFont.Clear()
  type: Method
  source:
    remote:
      path: src/EPPlus/Style/Dxf/ExcelDxfStyleFont.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Clear
    path: ../src/EPPlus/Style/Dxf/ExcelDxfStyleFont.cs
    startLine: 80
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style.Dxf
  summary: "\nClears all properties\n"
  example: []
  syntax:
    content: public override void Clear()
    content.vb: Public Overrides Sub Clear
  overridden: OfficeOpenXml.Style.Dxf.ExcelDxfStyleBase.Clear
  overload: OfficeOpenXml.Style.Dxf.ExcelDxfStyleFont.Clear*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: OfficeOpenXml.Style.Dxf
  commentId: N:OfficeOpenXml.Style.Dxf
  name: OfficeOpenXml.Style.Dxf
  nameWithType: OfficeOpenXml.Style.Dxf
  fullName: OfficeOpenXml.Style.Dxf
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OfficeOpenXml.Style.Dxf.DxfStyleBase
  commentId: T:OfficeOpenXml.Style.Dxf.DxfStyleBase
  parent: OfficeOpenXml.Style.Dxf
  name: DxfStyleBase
  nameWithType: DxfStyleBase
  fullName: OfficeOpenXml.Style.Dxf.DxfStyleBase
- uid: OfficeOpenXml.Style.Dxf.ExcelDxfStyleBase
  commentId: T:OfficeOpenXml.Style.Dxf.ExcelDxfStyleBase
  parent: OfficeOpenXml.Style.Dxf
  name: ExcelDxfStyleBase
  nameWithType: ExcelDxfStyleBase
  fullName: OfficeOpenXml.Style.Dxf.ExcelDxfStyleBase
- uid: OfficeOpenXml.Style.Dxf.ExcelDxfStyleBase.Fill
  commentId: P:OfficeOpenXml.Style.Dxf.ExcelDxfStyleBase.Fill
  parent: OfficeOpenXml.Style.Dxf.ExcelDxfStyleBase
  name: Fill
  nameWithType: ExcelDxfStyleBase.Fill
  fullName: OfficeOpenXml.Style.Dxf.ExcelDxfStyleBase.Fill
- uid: OfficeOpenXml.Style.Dxf.ExcelDxfStyleBase.Border
  commentId: P:OfficeOpenXml.Style.Dxf.ExcelDxfStyleBase.Border
  parent: OfficeOpenXml.Style.Dxf.ExcelDxfStyleBase
  name: Border
  nameWithType: ExcelDxfStyleBase.Border
  fullName: OfficeOpenXml.Style.Dxf.ExcelDxfStyleBase.Border
- uid: OfficeOpenXml.Style.Dxf.DxfStyleBase.SetValueColor(OfficeOpenXml.XmlHelper,System.String,OfficeOpenXml.Style.Dxf.ExcelDxfColor)
  commentId: M:OfficeOpenXml.Style.Dxf.DxfStyleBase.SetValueColor(OfficeOpenXml.XmlHelper,System.String,OfficeOpenXml.Style.Dxf.ExcelDxfColor)
  parent: OfficeOpenXml.Style.Dxf.DxfStyleBase
  isExternal: true
  name: SetValueColor(XmlHelper, String, ExcelDxfColor)
  nameWithType: DxfStyleBase.SetValueColor(XmlHelper, String, ExcelDxfColor)
  fullName: OfficeOpenXml.Style.Dxf.DxfStyleBase.SetValueColor(OfficeOpenXml.XmlHelper, System.String, OfficeOpenXml.Style.Dxf.ExcelDxfColor)
  spec.csharp:
  - uid: OfficeOpenXml.Style.Dxf.DxfStyleBase.SetValueColor(OfficeOpenXml.XmlHelper,System.String,OfficeOpenXml.Style.Dxf.ExcelDxfColor)
    name: SetValueColor
    nameWithType: DxfStyleBase.SetValueColor
    fullName: OfficeOpenXml.Style.Dxf.DxfStyleBase.SetValueColor
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.XmlHelper
    name: XmlHelper
    nameWithType: XmlHelper
    fullName: OfficeOpenXml.XmlHelper
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.Style.Dxf.ExcelDxfColor
    name: ExcelDxfColor
    nameWithType: ExcelDxfColor
    fullName: OfficeOpenXml.Style.Dxf.ExcelDxfColor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Style.Dxf.DxfStyleBase.SetValueColor(OfficeOpenXml.XmlHelper,System.String,OfficeOpenXml.Style.Dxf.ExcelDxfColor)
    name: SetValueColor
    nameWithType: DxfStyleBase.SetValueColor
    fullName: OfficeOpenXml.Style.Dxf.DxfStyleBase.SetValueColor
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.XmlHelper
    name: XmlHelper
    nameWithType: XmlHelper
    fullName: OfficeOpenXml.XmlHelper
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.Style.Dxf.ExcelDxfColor
    name: ExcelDxfColor
    nameWithType: ExcelDxfColor
    fullName: OfficeOpenXml.Style.Dxf.ExcelDxfColor
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml.Style.Dxf.ExcelDxfStyleFont.Font*
  commentId: Overload:OfficeOpenXml.Style.Dxf.ExcelDxfStyleFont.Font
  name: Font
  nameWithType: ExcelDxfStyleFont.Font
  fullName: OfficeOpenXml.Style.Dxf.ExcelDxfStyleFont.Font
- uid: OfficeOpenXml.Style.Dxf.ExcelDxfFont
  commentId: T:OfficeOpenXml.Style.Dxf.ExcelDxfFont
  parent: OfficeOpenXml.Style.Dxf
  name: ExcelDxfFont
  nameWithType: ExcelDxfFont
  fullName: OfficeOpenXml.Style.Dxf.ExcelDxfFont
- uid: OfficeOpenXml.Style.Dxf.ExcelDxfStyleBase.HasValue
  commentId: P:OfficeOpenXml.Style.Dxf.ExcelDxfStyleBase.HasValue
  parent: OfficeOpenXml.Style.Dxf.ExcelDxfStyleBase
  name: HasValue
  nameWithType: ExcelDxfStyleBase.HasValue
  fullName: OfficeOpenXml.Style.Dxf.ExcelDxfStyleBase.HasValue
- uid: OfficeOpenXml.Style.Dxf.ExcelDxfStyleFont.HasValue*
  commentId: Overload:OfficeOpenXml.Style.Dxf.ExcelDxfStyleFont.HasValue
  name: HasValue
  nameWithType: ExcelDxfStyleFont.HasValue
  fullName: OfficeOpenXml.Style.Dxf.ExcelDxfStyleFont.HasValue
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: OfficeOpenXml.Style.Dxf.ExcelDxfStyleBase.Clear
  commentId: M:OfficeOpenXml.Style.Dxf.ExcelDxfStyleBase.Clear
  parent: OfficeOpenXml.Style.Dxf.ExcelDxfStyleBase
  name: Clear()
  nameWithType: ExcelDxfStyleBase.Clear()
  fullName: OfficeOpenXml.Style.Dxf.ExcelDxfStyleBase.Clear()
  spec.csharp:
  - uid: OfficeOpenXml.Style.Dxf.ExcelDxfStyleBase.Clear
    name: Clear
    nameWithType: ExcelDxfStyleBase.Clear
    fullName: OfficeOpenXml.Style.Dxf.ExcelDxfStyleBase.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Style.Dxf.ExcelDxfStyleBase.Clear
    name: Clear
    nameWithType: ExcelDxfStyleBase.Clear
    fullName: OfficeOpenXml.Style.Dxf.ExcelDxfStyleBase.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Style.Dxf.ExcelDxfStyleFont.Clear*
  commentId: Overload:OfficeOpenXml.Style.Dxf.ExcelDxfStyleFont.Clear
  name: Clear
  nameWithType: ExcelDxfStyleFont.Clear
  fullName: OfficeOpenXml.Style.Dxf.ExcelDxfStyleFont.Clear
