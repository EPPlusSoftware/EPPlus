### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.Filter.ExcelFilterColumn
  commentId: T:OfficeOpenXml.Filter.ExcelFilterColumn
  id: ExcelFilterColumn
  parent: OfficeOpenXml.Filter
  children:
  - OfficeOpenXml.Filter.ExcelFilterColumn.GetFilterValue(System.String)
  - OfficeOpenXml.Filter.ExcelFilterColumn.HiddenButton
  - OfficeOpenXml.Filter.ExcelFilterColumn.Position
  - OfficeOpenXml.Filter.ExcelFilterColumn.ShowButton
  langs:
  - csharp
  - vb
  name: ExcelFilterColumn
  nameWithType: ExcelFilterColumn
  fullName: OfficeOpenXml.Filter.ExcelFilterColumn
  type: Class
  source:
    remote:
      path: src/EPPlus/Filter/ExcelFilterColumn.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ExcelFilterColumn
    path: ../src/EPPlus/Filter/ExcelFilterColumn.cs
    startLine: 20
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Filter
  summary: "\nBase class for filter columns\n"
  example: []
  syntax:
    content: 'public abstract class ExcelFilterColumn : XmlHelper'
    content.vb: >-
      Public MustInherit Class ExcelFilterColumn
          Inherits XmlHelper
  inheritance:
  - System.Object
  - OfficeOpenXml.XmlHelper
  derivedClasses:
  - OfficeOpenXml.Filter.ExcelColorFilterColumn
  - OfficeOpenXml.Filter.ExcelCustomFilterColumn
  - OfficeOpenXml.Filter.ExcelDynamicFilterColumn
  - OfficeOpenXml.Filter.ExcelIconFilterColumn
  - OfficeOpenXml.Filter.ExcelTop10FilterColumn
  - OfficeOpenXml.Filter.ExcelValueFilterColumn
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: OfficeOpenXml.Filter.ExcelFilterColumn.GetFilterValue(System.String)
  commentId: M:OfficeOpenXml.Filter.ExcelFilterColumn.GetFilterValue(System.String)
  id: GetFilterValue(System.String)
  parent: OfficeOpenXml.Filter.ExcelFilterColumn
  langs:
  - csharp
  - vb
  name: GetFilterValue(String)
  nameWithType: ExcelFilterColumn.GetFilterValue(String)
  fullName: OfficeOpenXml.Filter.ExcelFilterColumn.GetFilterValue(System.String)
  type: Method
  source:
    remote:
      path: src/EPPlus/Filter/ExcelFilterColumn.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: GetFilterValue
    path: ../src/EPPlus/Filter/ExcelFilterColumn.cs
    startLine: 31
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Filter
  summary: "\nGets the filter value\n"
  example: []
  syntax:
    content: protected object GetFilterValue(string value)
    parameters:
    - id: value
      type: System.String
      description: The value
    return:
      type: System.Object
      description: ''
    content.vb: Protected Function GetFilterValue(value As String) As Object
  overload: OfficeOpenXml.Filter.ExcelFilterColumn.GetFilterValue*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: OfficeOpenXml.Filter.ExcelFilterColumn.Position
  commentId: P:OfficeOpenXml.Filter.ExcelFilterColumn.Position
  id: Position
  parent: OfficeOpenXml.Filter.ExcelFilterColumn
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: ExcelFilterColumn.Position
  fullName: OfficeOpenXml.Filter.ExcelFilterColumn.Position
  type: Property
  source:
    remote:
      path: src/EPPlus/Filter/ExcelFilterColumn.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Position
    path: ../src/EPPlus/Filter/ExcelFilterColumn.cs
    startLine: 54
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Filter
  summary: "\nZero-based index indicating the AutoFilter column to which this filter information applies\n"
  example: []
  syntax:
    content: public int Position { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Position As Integer
  overload: OfficeOpenXml.Filter.ExcelFilterColumn.Position*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Filter.ExcelFilterColumn.HiddenButton
  commentId: P:OfficeOpenXml.Filter.ExcelFilterColumn.HiddenButton
  id: HiddenButton
  parent: OfficeOpenXml.Filter.ExcelFilterColumn
  langs:
  - csharp
  - vb
  name: HiddenButton
  nameWithType: ExcelFilterColumn.HiddenButton
  fullName: OfficeOpenXml.Filter.ExcelFilterColumn.HiddenButton
  type: Property
  source:
    remote:
      path: src/EPPlus/Filter/ExcelFilterColumn.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: HiddenButton
    path: ../src/EPPlus/Filter/ExcelFilterColumn.cs
    startLine: 59
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Filter
  summary: "\nIf true the AutoFilter button for this column is hidden.\n"
  example: []
  syntax:
    content: public bool HiddenButton { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property HiddenButton As Boolean
  overload: OfficeOpenXml.Filter.ExcelFilterColumn.HiddenButton*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Filter.ExcelFilterColumn.ShowButton
  commentId: P:OfficeOpenXml.Filter.ExcelFilterColumn.ShowButton
  id: ShowButton
  parent: OfficeOpenXml.Filter.ExcelFilterColumn
  langs:
  - csharp
  - vb
  name: ShowButton
  nameWithType: ExcelFilterColumn.ShowButton
  fullName: OfficeOpenXml.Filter.ExcelFilterColumn.ShowButton
  type: Property
  source:
    remote:
      path: src/EPPlus/Filter/ExcelFilterColumn.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ShowButton
    path: ../src/EPPlus/Filter/ExcelFilterColumn.cs
    startLine: 74
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Filter
  summary: "\nShould filtering interface elements on this cell be shown.\n"
  example: []
  syntax:
    content: public bool ShowButton { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ShowButton As Boolean
  overload: OfficeOpenXml.Filter.ExcelFilterColumn.ShowButton*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: OfficeOpenXml.Filter
  commentId: N:OfficeOpenXml.Filter
  name: OfficeOpenXml.Filter
  nameWithType: OfficeOpenXml.Filter
  fullName: OfficeOpenXml.Filter
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OfficeOpenXml.XmlHelper
  commentId: T:OfficeOpenXml.XmlHelper
  parent: OfficeOpenXml
  name: XmlHelper
  nameWithType: XmlHelper
  fullName: OfficeOpenXml.XmlHelper
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml
  commentId: N:OfficeOpenXml
  name: OfficeOpenXml
  nameWithType: OfficeOpenXml
  fullName: OfficeOpenXml
- uid: OfficeOpenXml.Filter.ExcelFilterColumn.GetFilterValue*
  commentId: Overload:OfficeOpenXml.Filter.ExcelFilterColumn.GetFilterValue
  name: GetFilterValue
  nameWithType: ExcelFilterColumn.GetFilterValue
  fullName: OfficeOpenXml.Filter.ExcelFilterColumn.GetFilterValue
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OfficeOpenXml.Filter.ExcelFilterColumn.Position*
  commentId: Overload:OfficeOpenXml.Filter.ExcelFilterColumn.Position
  name: Position
  nameWithType: ExcelFilterColumn.Position
  fullName: OfficeOpenXml.Filter.ExcelFilterColumn.Position
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: OfficeOpenXml.Filter.ExcelFilterColumn.HiddenButton*
  commentId: Overload:OfficeOpenXml.Filter.ExcelFilterColumn.HiddenButton
  name: HiddenButton
  nameWithType: ExcelFilterColumn.HiddenButton
  fullName: OfficeOpenXml.Filter.ExcelFilterColumn.HiddenButton
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: OfficeOpenXml.Filter.ExcelFilterColumn.ShowButton*
  commentId: Overload:OfficeOpenXml.Filter.ExcelFilterColumn.ShowButton
  name: ShowButton
  nameWithType: ExcelFilterColumn.ShowButton
  fullName: OfficeOpenXml.Filter.ExcelFilterColumn.ShowButton
