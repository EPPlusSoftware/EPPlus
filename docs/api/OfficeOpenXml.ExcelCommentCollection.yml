### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.ExcelCommentCollection
  commentId: T:OfficeOpenXml.ExcelCommentCollection
  id: ExcelCommentCollection
  parent: OfficeOpenXml
  children:
  - OfficeOpenXml.ExcelCommentCollection.Add(OfficeOpenXml.ExcelRangeBase,System.String,System.String)
  - OfficeOpenXml.ExcelCommentCollection.CommentXml
  - OfficeOpenXml.ExcelCommentCollection.Count
  - OfficeOpenXml.ExcelCommentCollection.Item(OfficeOpenXml.ExcelCellAddress)
  - OfficeOpenXml.ExcelCommentCollection.Item(System.Int32)
  - OfficeOpenXml.ExcelCommentCollection.Item(System.String)
  - OfficeOpenXml.ExcelCommentCollection.Remove(OfficeOpenXml.ExcelComment)
  - OfficeOpenXml.ExcelCommentCollection.RemoveAt(System.Int32)
  - OfficeOpenXml.ExcelCommentCollection.System#Collections#IEnumerable#GetEnumerator
  - OfficeOpenXml.ExcelCommentCollection.System#IDisposable#Dispose
  - OfficeOpenXml.ExcelCommentCollection.Worksheet
  langs:
  - csharp
  - vb
  name: ExcelCommentCollection
  nameWithType: ExcelCommentCollection
  fullName: OfficeOpenXml.ExcelCommentCollection
  type: Class
  source:
    remote:
      path: src/EPPlus/ExcelCommentCollection.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ExcelCommentCollection
    path: ../src/EPPlus/ExcelCommentCollection.cs
    startLine: 26
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  summary: "\nCollection of Excel Comment objects\n"
  example: []
  syntax:
    content: 'public class ExcelCommentCollection : IEnumerable, IDisposable'
    content.vb: >-
      Public Class ExcelCommentCollection
          Implements IEnumerable, IDisposable
  inheritance:
  - System.Object
  implements:
  - System.Collections.IEnumerable
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OfficeOpenXml.ExcelCommentCollection.CommentXml
  commentId: P:OfficeOpenXml.ExcelCommentCollection.CommentXml
  id: CommentXml
  parent: OfficeOpenXml.ExcelCommentCollection
  langs:
  - csharp
  - vb
  name: CommentXml
  nameWithType: ExcelCommentCollection.CommentXml
  fullName: OfficeOpenXml.ExcelCommentCollection.CommentXml
  type: Property
  source:
    remote:
      path: src/EPPlus/ExcelCommentCollection.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: CommentXml
    path: ../src/EPPlus/ExcelCommentCollection.cs
    startLine: 76
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  summary: "\nAccess to the comment xml document\n"
  example: []
  syntax:
    content: public XmlDocument CommentXml { get; set; }
    parameters: []
    return:
      type: System.Xml.XmlDocument
    content.vb: Public Property CommentXml As XmlDocument
  overload: OfficeOpenXml.ExcelCommentCollection.CommentXml*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.ExcelCommentCollection.Worksheet
  commentId: P:OfficeOpenXml.ExcelCommentCollection.Worksheet
  id: Worksheet
  parent: OfficeOpenXml.ExcelCommentCollection
  langs:
  - csharp
  - vb
  name: Worksheet
  nameWithType: ExcelCommentCollection.Worksheet
  fullName: OfficeOpenXml.ExcelCommentCollection.Worksheet
  type: Property
  source:
    remote:
      path: src/EPPlus/ExcelCommentCollection.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Worksheet
    path: ../src/EPPlus/ExcelCommentCollection.cs
    startLine: 88
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  summary: "\nA reference to the worksheet object\n"
  example: []
  syntax:
    content: public ExcelWorksheet Worksheet { get; set; }
    parameters: []
    return:
      type: OfficeOpenXml.ExcelWorksheet
    content.vb: Public Property Worksheet As ExcelWorksheet
  overload: OfficeOpenXml.ExcelCommentCollection.Worksheet*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.ExcelCommentCollection.Count
  commentId: P:OfficeOpenXml.ExcelCommentCollection.Count
  id: Count
  parent: OfficeOpenXml.ExcelCommentCollection
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: ExcelCommentCollection.Count
  fullName: OfficeOpenXml.ExcelCommentCollection.Count
  type: Property
  source:
    remote:
      path: src/EPPlus/ExcelCommentCollection.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Count
    path: ../src/EPPlus/ExcelCommentCollection.cs
    startLine: 96
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  summary: "\nNumber of comments in the collection\n"
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: OfficeOpenXml.ExcelCommentCollection.Count*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.ExcelCommentCollection.Item(System.Int32)
  commentId: P:OfficeOpenXml.ExcelCommentCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: OfficeOpenXml.ExcelCommentCollection
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: ExcelCommentCollection.Item[Int32]
  fullName: OfficeOpenXml.ExcelCommentCollection.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/EPPlus/ExcelCommentCollection.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: this[]
    path: ../src/EPPlus/ExcelCommentCollection.cs
    startLine: 108
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  summary: "\nIndexer for the comments collection\n"
  example: []
  syntax:
    content: public ExcelComment this[int Index] { get; }
    parameters:
    - id: Index
      type: System.Int32
      description: The index
    return:
      type: OfficeOpenXml.ExcelComment
      description: The comment
    content.vb: Public ReadOnly Property Item(Index As Integer) As ExcelComment
  overload: OfficeOpenXml.ExcelCommentCollection.Item*
  nameWithType.vb: ExcelCommentCollection.Item(Int32)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: OfficeOpenXml.ExcelCommentCollection.Item(System.Int32)
  name.vb: Item(Int32)
- uid: OfficeOpenXml.ExcelCommentCollection.Item(OfficeOpenXml.ExcelCellAddress)
  commentId: P:OfficeOpenXml.ExcelCommentCollection.Item(OfficeOpenXml.ExcelCellAddress)
  id: Item(OfficeOpenXml.ExcelCellAddress)
  parent: OfficeOpenXml.ExcelCommentCollection
  langs:
  - csharp
  - vb
  name: Item[ExcelCellAddress]
  nameWithType: ExcelCommentCollection.Item[ExcelCellAddress]
  fullName: OfficeOpenXml.ExcelCommentCollection.Item[OfficeOpenXml.ExcelCellAddress]
  type: Property
  source:
    remote:
      path: src/EPPlus/ExcelCommentCollection.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: this[]
    path: ../src/EPPlus/ExcelCommentCollection.cs
    startLine: 124
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  summary: "\nIndexer for the comments collection\n"
  example: []
  syntax:
    content: public ExcelComment this[ExcelCellAddress cell] { get; }
    parameters:
    - id: cell
      type: OfficeOpenXml.ExcelCellAddress
      description: The cell
    return:
      type: OfficeOpenXml.ExcelComment
      description: The comment
    content.vb: Public ReadOnly Property Item(cell As ExcelCellAddress) As ExcelComment
  overload: OfficeOpenXml.ExcelCommentCollection.Item*
  nameWithType.vb: ExcelCommentCollection.Item(ExcelCellAddress)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: OfficeOpenXml.ExcelCommentCollection.Item(OfficeOpenXml.ExcelCellAddress)
  name.vb: Item(ExcelCellAddress)
- uid: OfficeOpenXml.ExcelCommentCollection.Item(System.String)
  commentId: P:OfficeOpenXml.ExcelCommentCollection.Item(System.String)
  id: Item(System.String)
  parent: OfficeOpenXml.ExcelCommentCollection
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: ExcelCommentCollection.Item[String]
  fullName: OfficeOpenXml.ExcelCommentCollection.Item[System.String]
  type: Property
  source:
    remote:
      path: src/EPPlus/ExcelCommentCollection.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: this[]
    path: ../src/EPPlus/ExcelCommentCollection.cs
    startLine: 145
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  summary: "\nIndexer for the comments collection\n"
  example: []
  syntax:
    content: public ExcelComment this[string cellAddress] { get; }
    parameters:
    - id: cellAddress
      type: System.String
      description: The cell address
    return:
      type: OfficeOpenXml.ExcelComment
      description: The comment
    content.vb: Public ReadOnly Property Item(cellAddress As String) As ExcelComment
  overload: OfficeOpenXml.ExcelCommentCollection.Item*
  nameWithType.vb: ExcelCommentCollection.Item(String)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: OfficeOpenXml.ExcelCommentCollection.Item(System.String)
  name.vb: Item(String)
- uid: OfficeOpenXml.ExcelCommentCollection.Add(OfficeOpenXml.ExcelRangeBase,System.String,System.String)
  commentId: M:OfficeOpenXml.ExcelCommentCollection.Add(OfficeOpenXml.ExcelRangeBase,System.String,System.String)
  id: Add(OfficeOpenXml.ExcelRangeBase,System.String,System.String)
  parent: OfficeOpenXml.ExcelCommentCollection
  langs:
  - csharp
  - vb
  name: Add(ExcelRangeBase, String, String)
  nameWithType: ExcelCommentCollection.Add(ExcelRangeBase, String, String)
  fullName: OfficeOpenXml.ExcelCommentCollection.Add(OfficeOpenXml.ExcelRangeBase, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/EPPlus/ExcelCommentCollection.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Add
    path: ../src/EPPlus/ExcelCommentCollection.cs
    startLine: 159
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  summary: "\nAdds a comment to the top left cell of the range\n"
  example: []
  syntax:
    content: public ExcelComment Add(ExcelRangeBase cell, string Text, string author = null)
    parameters:
    - id: cell
      type: OfficeOpenXml.ExcelRangeBase
      description: The cell
    - id: Text
      type: System.String
      description: The comment text
    - id: author
      type: System.String
      description: The author for the comment. If this property is null or blank EPPlus will set it to the identity of the ClaimsPrincipal if available otherwise to &quot;Anonymous&quot;
    return:
      type: OfficeOpenXml.ExcelComment
      description: The comment
    content.vb: Public Function Add(cell As ExcelRangeBase, Text As String, author As String = Nothing) As ExcelComment
  overload: OfficeOpenXml.ExcelCommentCollection.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.ExcelCommentCollection.Remove(OfficeOpenXml.ExcelComment)
  commentId: M:OfficeOpenXml.ExcelCommentCollection.Remove(OfficeOpenXml.ExcelComment)
  id: Remove(OfficeOpenXml.ExcelComment)
  parent: OfficeOpenXml.ExcelCommentCollection
  langs:
  - csharp
  - vb
  name: Remove(ExcelComment)
  nameWithType: ExcelCommentCollection.Remove(ExcelComment)
  fullName: OfficeOpenXml.ExcelCommentCollection.Remove(OfficeOpenXml.ExcelComment)
  type: Method
  source:
    remote:
      path: src/EPPlus/ExcelCommentCollection.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Remove
    path: ../src/EPPlus/ExcelCommentCollection.cs
    startLine: 209
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  summary: "\nRemoves the comment\n"
  example: []
  syntax:
    content: public void Remove(ExcelComment comment)
    parameters:
    - id: comment
      type: OfficeOpenXml.ExcelComment
      description: The comment to remove
    content.vb: Public Sub Remove(comment As ExcelComment)
  overload: OfficeOpenXml.ExcelCommentCollection.Remove*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.ExcelCommentCollection.System#IDisposable#Dispose
  commentId: M:OfficeOpenXml.ExcelCommentCollection.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: OfficeOpenXml.ExcelCommentCollection
  langs:
  - csharp
  - vb
  name: IDisposable.Dispose()
  nameWithType: ExcelCommentCollection.IDisposable.Dispose()
  fullName: OfficeOpenXml.ExcelCommentCollection.System.IDisposable.Dispose()
  type: Method
  source:
    remote:
      path: src/EPPlus/ExcelCommentCollection.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: System.IDisposable.Dispose
    path: ../src/EPPlus/ExcelCommentCollection.cs
    startLine: 313
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  syntax:
    content: void IDisposable.Dispose()
    content.vb: Sub System.IDisposable.Dispose Implements IDisposable.Dispose
  overload: OfficeOpenXml.ExcelCommentCollection.System#IDisposable#Dispose*
  implements:
  - System.IDisposable.Dispose
  nameWithType.vb: ExcelCommentCollection.System.IDisposable.Dispose()
  name.vb: System.IDisposable.Dispose()
- uid: OfficeOpenXml.ExcelCommentCollection.RemoveAt(System.Int32)
  commentId: M:OfficeOpenXml.ExcelCommentCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: OfficeOpenXml.ExcelCommentCollection
  langs:
  - csharp
  - vb
  name: RemoveAt(Int32)
  nameWithType: ExcelCommentCollection.RemoveAt(Int32)
  fullName: OfficeOpenXml.ExcelCommentCollection.RemoveAt(System.Int32)
  type: Method
  source:
    remote:
      path: src/EPPlus/ExcelCommentCollection.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: RemoveAt
    path: ../src/EPPlus/ExcelCommentCollection.cs
    startLine: 320
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  summary: "\nRemoves the comment at the specified position\n"
  example: []
  syntax:
    content: public void RemoveAt(int Index)
    parameters:
    - id: Index
      type: System.Int32
      description: The index
    content.vb: Public Sub RemoveAt(Index As Integer)
  overload: OfficeOpenXml.ExcelCommentCollection.RemoveAt*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.ExcelCommentCollection.System#Collections#IEnumerable#GetEnumerator
  commentId: M:OfficeOpenXml.ExcelCommentCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: OfficeOpenXml.ExcelCommentCollection
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: ExcelCommentCollection.IEnumerable.GetEnumerator()
  fullName: OfficeOpenXml.ExcelCommentCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/EPPlus/ExcelCommentCollection.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: System.Collections.IEnumerable.GetEnumerator
    path: ../src/EPPlus/ExcelCommentCollection.cs
    startLine: 327
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    return:
      type: System.Collections.IEnumerator
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
  overload: OfficeOpenXml.ExcelCommentCollection.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: ExcelCommentCollection.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
references:
- uid: OfficeOpenXml
  commentId: N:OfficeOpenXml
  name: OfficeOpenXml
  nameWithType: OfficeOpenXml
  fullName: OfficeOpenXml
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: OfficeOpenXml.ExcelCommentCollection.CommentXml*
  commentId: Overload:OfficeOpenXml.ExcelCommentCollection.CommentXml
  name: CommentXml
  nameWithType: ExcelCommentCollection.CommentXml
  fullName: OfficeOpenXml.ExcelCommentCollection.CommentXml
- uid: System.Xml.XmlDocument
  commentId: T:System.Xml.XmlDocument
  parent: System.Xml
  isExternal: true
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: true
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: OfficeOpenXml.ExcelCommentCollection.Worksheet*
  commentId: Overload:OfficeOpenXml.ExcelCommentCollection.Worksheet
  name: Worksheet
  nameWithType: ExcelCommentCollection.Worksheet
  fullName: OfficeOpenXml.ExcelCommentCollection.Worksheet
- uid: OfficeOpenXml.ExcelWorksheet
  commentId: T:OfficeOpenXml.ExcelWorksheet
  parent: OfficeOpenXml
  name: ExcelWorksheet
  nameWithType: ExcelWorksheet
  fullName: OfficeOpenXml.ExcelWorksheet
- uid: OfficeOpenXml.ExcelCommentCollection.Count*
  commentId: Overload:OfficeOpenXml.ExcelCommentCollection.Count
  name: Count
  nameWithType: ExcelCommentCollection.Count
  fullName: OfficeOpenXml.ExcelCommentCollection.Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: OfficeOpenXml.ExcelCommentCollection.Item*
  commentId: Overload:OfficeOpenXml.ExcelCommentCollection.Item
  name: Item
  nameWithType: ExcelCommentCollection.Item
  fullName: OfficeOpenXml.ExcelCommentCollection.Item
- uid: OfficeOpenXml.ExcelComment
  commentId: T:OfficeOpenXml.ExcelComment
  parent: OfficeOpenXml
  name: ExcelComment
  nameWithType: ExcelComment
  fullName: OfficeOpenXml.ExcelComment
- uid: OfficeOpenXml.ExcelCellAddress
  commentId: T:OfficeOpenXml.ExcelCellAddress
  parent: OfficeOpenXml
  name: ExcelCellAddress
  nameWithType: ExcelCellAddress
  fullName: OfficeOpenXml.ExcelCellAddress
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OfficeOpenXml.ExcelCommentCollection.Add*
  commentId: Overload:OfficeOpenXml.ExcelCommentCollection.Add
  name: Add
  nameWithType: ExcelCommentCollection.Add
  fullName: OfficeOpenXml.ExcelCommentCollection.Add
- uid: OfficeOpenXml.ExcelRangeBase
  commentId: T:OfficeOpenXml.ExcelRangeBase
  parent: OfficeOpenXml
  name: ExcelRangeBase
  nameWithType: ExcelRangeBase
  fullName: OfficeOpenXml.ExcelRangeBase
- uid: OfficeOpenXml.ExcelCommentCollection.Remove*
  commentId: Overload:OfficeOpenXml.ExcelCommentCollection.Remove
  name: Remove
  nameWithType: ExcelCommentCollection.Remove
  fullName: OfficeOpenXml.ExcelCommentCollection.Remove
- uid: OfficeOpenXml.ExcelCommentCollection.System#IDisposable#Dispose*
  commentId: Overload:OfficeOpenXml.ExcelCommentCollection.System#IDisposable#Dispose
  name: IDisposable.Dispose
  nameWithType: ExcelCommentCollection.IDisposable.Dispose
  fullName: OfficeOpenXml.ExcelCommentCollection.System.IDisposable.Dispose
  nameWithType.vb: ExcelCommentCollection.System.IDisposable.Dispose
  name.vb: System.IDisposable.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelCommentCollection.RemoveAt*
  commentId: Overload:OfficeOpenXml.ExcelCommentCollection.RemoveAt
  name: RemoveAt
  nameWithType: ExcelCommentCollection.RemoveAt
  fullName: OfficeOpenXml.ExcelCommentCollection.RemoveAt
- uid: OfficeOpenXml.ExcelCommentCollection.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:OfficeOpenXml.ExcelCommentCollection.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator
  nameWithType: ExcelCommentCollection.IEnumerable.GetEnumerator
  fullName: OfficeOpenXml.ExcelCommentCollection.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: ExcelCommentCollection.System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
