### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.ExcelWorksheetView.ExcelWorksheetViewPaneSettings
  commentId: T:OfficeOpenXml.ExcelWorksheetView.ExcelWorksheetViewPaneSettings
  id: ExcelWorksheetView.ExcelWorksheetViewPaneSettings
  parent: OfficeOpenXml
  children:
  - OfficeOpenXml.ExcelWorksheetView.ExcelWorksheetViewPaneSettings.ActivePanePosition
  - OfficeOpenXml.ExcelWorksheetView.ExcelWorksheetViewPaneSettings.State
  - OfficeOpenXml.ExcelWorksheetView.ExcelWorksheetViewPaneSettings.TopLeftCell
  - OfficeOpenXml.ExcelWorksheetView.ExcelWorksheetViewPaneSettings.XSplit
  - OfficeOpenXml.ExcelWorksheetView.ExcelWorksheetViewPaneSettings.YSplit
  langs:
  - csharp
  - vb
  name: ExcelWorksheetView.ExcelWorksheetViewPaneSettings
  nameWithType: ExcelWorksheetView.ExcelWorksheetViewPaneSettings
  fullName: OfficeOpenXml.ExcelWorksheetView.ExcelWorksheetViewPaneSettings
  type: Class
  source:
    remote:
      path: src/EPPlus/ExcelWorksheetView.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ExcelWorksheetViewPaneSettings
    path: ../src/EPPlus/ExcelWorksheetView.cs
    startLine: 78
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  summary: "\nDefines general properties for the panes, if the worksheet is frozen or split.\n"
  example: []
  syntax:
    content: 'public class ExcelWorksheetViewPaneSettings : XmlHelper'
    content.vb: >-
      Public Class ExcelWorksheetViewPaneSettings
          Inherits XmlHelper
  inheritance:
  - System.Object
  - OfficeOpenXml.XmlHelper
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OfficeOpenXml.ExcelWorksheetView.ExcelWorksheetViewPaneSettings.State
  commentId: P:OfficeOpenXml.ExcelWorksheetView.ExcelWorksheetViewPaneSettings.State
  id: State
  parent: OfficeOpenXml.ExcelWorksheetView.ExcelWorksheetViewPaneSettings
  langs:
  - csharp
  - vb
  name: State
  nameWithType: ExcelWorksheetView.ExcelWorksheetViewPaneSettings.State
  fullName: OfficeOpenXml.ExcelWorksheetView.ExcelWorksheetViewPaneSettings.State
  type: Property
  source:
    remote:
      path: src/EPPlus/ExcelWorksheetView.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: State
    path: ../src/EPPlus/ExcelWorksheetView.cs
    startLine: 87
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  summary: "\nThe state of the pane.\n"
  example: []
  syntax:
    content: public ePaneState State { get; }
    parameters: []
    return:
      type: OfficeOpenXml.ePaneState
    content.vb: Public ReadOnly Property State As ePaneState
  overload: OfficeOpenXml.ExcelWorksheetView.ExcelWorksheetViewPaneSettings.State*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.ExcelWorksheetView.ExcelWorksheetViewPaneSettings.ActivePanePosition
  commentId: P:OfficeOpenXml.ExcelWorksheetView.ExcelWorksheetViewPaneSettings.ActivePanePosition
  id: ActivePanePosition
  parent: OfficeOpenXml.ExcelWorksheetView.ExcelWorksheetViewPaneSettings
  langs:
  - csharp
  - vb
  name: ActivePanePosition
  nameWithType: ExcelWorksheetView.ExcelWorksheetViewPaneSettings.ActivePanePosition
  fullName: OfficeOpenXml.ExcelWorksheetView.ExcelWorksheetViewPaneSettings.ActivePanePosition
  type: Property
  source:
    remote:
      path: src/EPPlus/ExcelWorksheetView.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ActivePanePosition
    path: ../src/EPPlus/ExcelWorksheetView.cs
    startLine: 101
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  summary: "\nThe active pane\n"
  example: []
  syntax:
    content: public ePanePosition ActivePanePosition { get; set; }
    parameters: []
    return:
      type: OfficeOpenXml.ePanePosition
    content.vb: Public Property ActivePanePosition As ePanePosition
  overload: OfficeOpenXml.ExcelWorksheetView.ExcelWorksheetViewPaneSettings.ActivePanePosition*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.ExcelWorksheetView.ExcelWorksheetViewPaneSettings.XSplit
  commentId: P:OfficeOpenXml.ExcelWorksheetView.ExcelWorksheetViewPaneSettings.XSplit
  id: XSplit
  parent: OfficeOpenXml.ExcelWorksheetView.ExcelWorksheetViewPaneSettings
  langs:
  - csharp
  - vb
  name: XSplit
  nameWithType: ExcelWorksheetView.ExcelWorksheetViewPaneSettings.XSplit
  fullName: OfficeOpenXml.ExcelWorksheetView.ExcelWorksheetViewPaneSettings.XSplit
  type: Property
  source:
    remote:
      path: src/EPPlus/ExcelWorksheetView.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: XSplit
    path: ../src/EPPlus/ExcelWorksheetView.cs
    startLine: 116
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  summary: "\nThe horizontal position of the split. 1/20 of a point if the pane is split. Number of columns in the top pane if this pane is frozen.\n"
  example: []
  syntax:
    content: public double XSplit { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property XSplit As Double
  overload: OfficeOpenXml.ExcelWorksheetView.ExcelWorksheetViewPaneSettings.XSplit*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.ExcelWorksheetView.ExcelWorksheetViewPaneSettings.YSplit
  commentId: P:OfficeOpenXml.ExcelWorksheetView.ExcelWorksheetViewPaneSettings.YSplit
  id: YSplit
  parent: OfficeOpenXml.ExcelWorksheetView.ExcelWorksheetViewPaneSettings
  langs:
  - csharp
  - vb
  name: YSplit
  nameWithType: ExcelWorksheetView.ExcelWorksheetViewPaneSettings.YSplit
  fullName: OfficeOpenXml.ExcelWorksheetView.ExcelWorksheetViewPaneSettings.YSplit
  type: Property
  source:
    remote:
      path: src/EPPlus/ExcelWorksheetView.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: YSplit
    path: ../src/EPPlus/ExcelWorksheetView.cs
    startLine: 130
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  summary: "\nThe vertical position of the split. 1/20 of a point if the pane is split. Number of rows in the left pane if this pane is frozen.\n"
  example: []
  syntax:
    content: public double YSplit { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property YSplit As Double
  overload: OfficeOpenXml.ExcelWorksheetView.ExcelWorksheetViewPaneSettings.YSplit*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.ExcelWorksheetView.ExcelWorksheetViewPaneSettings.TopLeftCell
  commentId: P:OfficeOpenXml.ExcelWorksheetView.ExcelWorksheetViewPaneSettings.TopLeftCell
  id: TopLeftCell
  parent: OfficeOpenXml.ExcelWorksheetView.ExcelWorksheetViewPaneSettings
  langs:
  - csharp
  - vb
  name: TopLeftCell
  nameWithType: ExcelWorksheetView.ExcelWorksheetViewPaneSettings.TopLeftCell
  fullName: OfficeOpenXml.ExcelWorksheetView.ExcelWorksheetViewPaneSettings.TopLeftCell
  type: Property
  source:
    remote:
      path: src/EPPlus/ExcelWorksheetView.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: TopLeftCell
    path: ../src/EPPlus/ExcelWorksheetView.cs
    startLine: 144
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  summary: "\n\n"
  example: []
  syntax:
    content: public string TopLeftCell { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property TopLeftCell As String
  overload: OfficeOpenXml.ExcelWorksheetView.ExcelWorksheetViewPaneSettings.TopLeftCell*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: OfficeOpenXml
  commentId: N:OfficeOpenXml
  name: OfficeOpenXml
  nameWithType: OfficeOpenXml
  fullName: OfficeOpenXml
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OfficeOpenXml.XmlHelper
  commentId: T:OfficeOpenXml.XmlHelper
  parent: OfficeOpenXml
  name: XmlHelper
  nameWithType: XmlHelper
  fullName: OfficeOpenXml.XmlHelper
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml.ExcelWorksheetView.ExcelWorksheetViewPaneSettings.State*
  commentId: Overload:OfficeOpenXml.ExcelWorksheetView.ExcelWorksheetViewPaneSettings.State
  name: State
  nameWithType: ExcelWorksheetView.ExcelWorksheetViewPaneSettings.State
  fullName: OfficeOpenXml.ExcelWorksheetView.ExcelWorksheetViewPaneSettings.State
- uid: OfficeOpenXml.ePaneState
  commentId: T:OfficeOpenXml.ePaneState
  parent: OfficeOpenXml
  name: ePaneState
  nameWithType: ePaneState
  fullName: OfficeOpenXml.ePaneState
- uid: OfficeOpenXml.ExcelWorksheetView.ExcelWorksheetViewPaneSettings.ActivePanePosition*
  commentId: Overload:OfficeOpenXml.ExcelWorksheetView.ExcelWorksheetViewPaneSettings.ActivePanePosition
  name: ActivePanePosition
  nameWithType: ExcelWorksheetView.ExcelWorksheetViewPaneSettings.ActivePanePosition
  fullName: OfficeOpenXml.ExcelWorksheetView.ExcelWorksheetViewPaneSettings.ActivePanePosition
- uid: OfficeOpenXml.ePanePosition
  commentId: T:OfficeOpenXml.ePanePosition
  parent: OfficeOpenXml
  name: ePanePosition
  nameWithType: ePanePosition
  fullName: OfficeOpenXml.ePanePosition
- uid: OfficeOpenXml.ExcelWorksheetView.ExcelWorksheetViewPaneSettings.XSplit*
  commentId: Overload:OfficeOpenXml.ExcelWorksheetView.ExcelWorksheetViewPaneSettings.XSplit
  name: XSplit
  nameWithType: ExcelWorksheetView.ExcelWorksheetViewPaneSettings.XSplit
  fullName: OfficeOpenXml.ExcelWorksheetView.ExcelWorksheetViewPaneSettings.XSplit
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: OfficeOpenXml.ExcelWorksheetView.ExcelWorksheetViewPaneSettings.YSplit*
  commentId: Overload:OfficeOpenXml.ExcelWorksheetView.ExcelWorksheetViewPaneSettings.YSplit
  name: YSplit
  nameWithType: ExcelWorksheetView.ExcelWorksheetViewPaneSettings.YSplit
  fullName: OfficeOpenXml.ExcelWorksheetView.ExcelWorksheetViewPaneSettings.YSplit
- uid: OfficeOpenXml.ExcelWorksheetView.ExcelWorksheetViewPaneSettings.TopLeftCell*
  commentId: Overload:OfficeOpenXml.ExcelWorksheetView.ExcelWorksheetViewPaneSettings.TopLeftCell
  name: TopLeftCell
  nameWithType: ExcelWorksheetView.ExcelWorksheetViewPaneSettings.TopLeftCell
  fullName: OfficeOpenXml.ExcelWorksheetView.ExcelWorksheetViewPaneSettings.TopLeftCell
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
