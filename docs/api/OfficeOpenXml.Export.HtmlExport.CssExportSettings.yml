### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.Export.HtmlExport.CssExportSettings
  commentId: T:OfficeOpenXml.Export.HtmlExport.CssExportSettings
  id: CssExportSettings
  parent: OfficeOpenXml.Export.HtmlExport
  children:
  - OfficeOpenXml.Export.HtmlExport.CssExportSettings.AdditionalCssElements
  - OfficeOpenXml.Export.HtmlExport.CssExportSettings.IncludeNormalFont
  - OfficeOpenXml.Export.HtmlExport.CssExportSettings.IncludeSharedClasses
  - OfficeOpenXml.Export.HtmlExport.CssExportSettings.IndentUnit
  - OfficeOpenXml.Export.HtmlExport.CssExportSettings.IndentValue
  langs:
  - csharp
  - vb
  name: CssExportSettings
  nameWithType: CssExportSettings
  fullName: OfficeOpenXml.Export.HtmlExport.CssExportSettings
  type: Class
  source:
    remote:
      path: src/EPPlus/Export/HtmlExport/Settings/CssExportSettings.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: CssExportSettings
    path: ../src/EPPlus/Export/HtmlExport/Settings/CssExportSettings.cs
    startLine: 19
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Export.HtmlExport
  summary: "\nBase class for css export settings.\n"
  example: []
  syntax:
    content: public abstract class CssExportSettings
    content.vb: Public MustInherit Class CssExportSettings
  inheritance:
  - System.Object
  derivedClasses:
  - OfficeOpenXml.Export.HtmlExport.CssRangeExportSettings
  - OfficeOpenXml.Export.HtmlExport.CssTableExportSettings
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: OfficeOpenXml.Export.HtmlExport.CssExportSettings.IncludeSharedClasses
  commentId: P:OfficeOpenXml.Export.HtmlExport.CssExportSettings.IncludeSharedClasses
  id: IncludeSharedClasses
  parent: OfficeOpenXml.Export.HtmlExport.CssExportSettings
  langs:
  - csharp
  - vb
  name: IncludeSharedClasses
  nameWithType: CssExportSettings.IncludeSharedClasses
  fullName: OfficeOpenXml.Export.HtmlExport.CssExportSettings.IncludeSharedClasses
  type: Property
  source:
    remote:
      path: src/EPPlus/Export/HtmlExport/Settings/CssExportSettings.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: IncludeSharedClasses
    path: ../src/EPPlus/Export/HtmlExport/Settings/CssExportSettings.cs
    startLine: 26
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Export.HtmlExport
  summary: "\nIf set to true shared css classes used on table elements are included in the css. \nIf set to false, these classes has to be included manually. <xref href=\"OfficeOpenXml.Export.HtmlExport.CssExportSettings.IncludeNormalFont\" data-throw-if-not-resolved=\"false\"></xref> will be ignored if set to false and no font css will be added.        \nDefault is true\n"
  example: []
  syntax:
    content: public bool IncludeSharedClasses { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IncludeSharedClasses As Boolean
  overload: OfficeOpenXml.Export.HtmlExport.CssExportSettings.IncludeSharedClasses*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Export.HtmlExport.CssExportSettings.IncludeNormalFont
  commentId: P:OfficeOpenXml.Export.HtmlExport.CssExportSettings.IncludeNormalFont
  id: IncludeNormalFont
  parent: OfficeOpenXml.Export.HtmlExport.CssExportSettings
  langs:
  - csharp
  - vb
  name: IncludeNormalFont
  nameWithType: CssExportSettings.IncludeNormalFont
  fullName: OfficeOpenXml.Export.HtmlExport.CssExportSettings.IncludeNormalFont
  type: Property
  source:
    remote:
      path: src/EPPlus/Export/HtmlExport/Settings/CssExportSettings.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: IncludeNormalFont
    path: ../src/EPPlus/Export/HtmlExport/Settings/CssExportSettings.cs
    startLine: 30
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Export.HtmlExport
  summary: "\nIf true the normal font will be included in the css. Default is true\n"
  example: []
  syntax:
    content: public bool IncludeNormalFont { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IncludeNormalFont As Boolean
  overload: OfficeOpenXml.Export.HtmlExport.CssExportSettings.IncludeNormalFont*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Export.HtmlExport.CssExportSettings.AdditionalCssElements
  commentId: P:OfficeOpenXml.Export.HtmlExport.CssExportSettings.AdditionalCssElements
  id: AdditionalCssElements
  parent: OfficeOpenXml.Export.HtmlExport.CssExportSettings
  langs:
  - csharp
  - vb
  name: AdditionalCssElements
  nameWithType: CssExportSettings.AdditionalCssElements
  fullName: OfficeOpenXml.Export.HtmlExport.CssExportSettings.AdditionalCssElements
  type: Property
  source:
    remote:
      path: src/EPPlus/Export/HtmlExport/Settings/CssExportSettings.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: AdditionalCssElements
    path: ../src/EPPlus/Export/HtmlExport/Settings/CssExportSettings.cs
    startLine: 35
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Export.HtmlExport
  summary: "\nCss elements added to the table.\n"
  example: []
  syntax:
    content: public Dictionary<string, string> AdditionalCssElements { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    content.vb: Public ReadOnly Property AdditionalCssElements As Dictionary(Of String, String)
  overload: OfficeOpenXml.Export.HtmlExport.CssExportSettings.AdditionalCssElements*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Export.HtmlExport.CssExportSettings.IndentValue
  commentId: P:OfficeOpenXml.Export.HtmlExport.CssExportSettings.IndentValue
  id: IndentValue
  parent: OfficeOpenXml.Export.HtmlExport.CssExportSettings
  langs:
  - csharp
  - vb
  name: IndentValue
  nameWithType: CssExportSettings.IndentValue
  fullName: OfficeOpenXml.Export.HtmlExport.CssExportSettings.IndentValue
  type: Property
  source:
    remote:
      path: src/EPPlus/Export/HtmlExport/Settings/CssExportSettings.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: IndentValue
    path: ../src/EPPlus/Export/HtmlExport/Settings/CssExportSettings.cs
    startLine: 43
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Export.HtmlExport
  summary: "\nThe value used in the stylesheet for an indentation in a cell\n"
  example: []
  syntax:
    content: public float IndentValue { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property IndentValue As Single
  overload: OfficeOpenXml.Export.HtmlExport.CssExportSettings.IndentValue*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Export.HtmlExport.CssExportSettings.IndentUnit
  commentId: P:OfficeOpenXml.Export.HtmlExport.CssExportSettings.IndentUnit
  id: IndentUnit
  parent: OfficeOpenXml.Export.HtmlExport.CssExportSettings
  langs:
  - csharp
  - vb
  name: IndentUnit
  nameWithType: CssExportSettings.IndentUnit
  fullName: OfficeOpenXml.Export.HtmlExport.CssExportSettings.IndentUnit
  type: Property
  source:
    remote:
      path: src/EPPlus/Export/HtmlExport/Settings/CssExportSettings.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: IndentUnit
    path: ../src/EPPlus/Export/HtmlExport/Settings/CssExportSettings.cs
    startLine: 47
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Export.HtmlExport
  summary: "\nThe unit used in the stylesheet for an indentation in a cell\n"
  example: []
  syntax:
    content: public string IndentUnit { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property IndentUnit As String
  overload: OfficeOpenXml.Export.HtmlExport.CssExportSettings.IndentUnit*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: OfficeOpenXml.Export.HtmlExport
  commentId: N:OfficeOpenXml.Export.HtmlExport
  name: OfficeOpenXml.Export.HtmlExport
  nameWithType: OfficeOpenXml.Export.HtmlExport
  fullName: OfficeOpenXml.Export.HtmlExport
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml.Export.HtmlExport.CssExportSettings.IncludeNormalFont
  commentId: P:OfficeOpenXml.Export.HtmlExport.CssExportSettings.IncludeNormalFont
  parent: OfficeOpenXml.Export.HtmlExport.CssExportSettings
  name: IncludeNormalFont
  nameWithType: CssExportSettings.IncludeNormalFont
  fullName: OfficeOpenXml.Export.HtmlExport.CssExportSettings.IncludeNormalFont
- uid: OfficeOpenXml.Export.HtmlExport.CssExportSettings.IncludeSharedClasses*
  commentId: Overload:OfficeOpenXml.Export.HtmlExport.CssExportSettings.IncludeSharedClasses
  name: IncludeSharedClasses
  nameWithType: CssExportSettings.IncludeSharedClasses
  fullName: OfficeOpenXml.Export.HtmlExport.CssExportSettings.IncludeSharedClasses
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: OfficeOpenXml.Export.HtmlExport.CssExportSettings
  commentId: T:OfficeOpenXml.Export.HtmlExport.CssExportSettings
  parent: OfficeOpenXml.Export.HtmlExport
  name: CssExportSettings
  nameWithType: CssExportSettings
  fullName: OfficeOpenXml.Export.HtmlExport.CssExportSettings
- uid: OfficeOpenXml.Export.HtmlExport.CssExportSettings.IncludeNormalFont*
  commentId: Overload:OfficeOpenXml.Export.HtmlExport.CssExportSettings.IncludeNormalFont
  name: IncludeNormalFont
  nameWithType: CssExportSettings.IncludeNormalFont
  fullName: OfficeOpenXml.Export.HtmlExport.CssExportSettings.IncludeNormalFont
- uid: OfficeOpenXml.Export.HtmlExport.CssExportSettings.AdditionalCssElements*
  commentId: Overload:OfficeOpenXml.Export.HtmlExport.CssExportSettings.AdditionalCssElements
  name: AdditionalCssElements
  nameWithType: CssExportSettings.AdditionalCssElements
  fullName: OfficeOpenXml.Export.HtmlExport.CssExportSettings.AdditionalCssElements
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: OfficeOpenXml.Export.HtmlExport.CssExportSettings.IndentValue*
  commentId: Overload:OfficeOpenXml.Export.HtmlExport.CssExportSettings.IndentValue
  name: IndentValue
  nameWithType: CssExportSettings.IndentValue
  fullName: OfficeOpenXml.Export.HtmlExport.CssExportSettings.IndentValue
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: OfficeOpenXml.Export.HtmlExport.CssExportSettings.IndentUnit*
  commentId: Overload:OfficeOpenXml.Export.HtmlExport.CssExportSettings.IndentUnit
  name: IndentUnit
  nameWithType: CssExportSettings.IndentUnit
  fullName: OfficeOpenXml.Export.HtmlExport.CssExportSettings.IndentUnit
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
