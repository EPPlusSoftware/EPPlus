### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.FormulaParsing.ParsingConfiguration
  commentId: T:OfficeOpenXml.FormulaParsing.ParsingConfiguration
  id: ParsingConfiguration
  parent: OfficeOpenXml.FormulaParsing
  children:
  - OfficeOpenXml.FormulaParsing.ParsingConfiguration.AllowCircularReferences
  - OfficeOpenXml.FormulaParsing.ParsingConfiguration.AttachLogger(OfficeOpenXml.FormulaParsing.Logging.IFormulaParserLogger)
  - OfficeOpenXml.FormulaParsing.ParsingConfiguration.DetachLogger
  - OfficeOpenXml.FormulaParsing.ParsingConfiguration.FunctionRepository
  - OfficeOpenXml.FormulaParsing.ParsingConfiguration.Lexer
  - OfficeOpenXml.FormulaParsing.ParsingConfiguration.Logger
  - OfficeOpenXml.FormulaParsing.ParsingConfiguration.PrecisionAndRoundingStrategy
  - OfficeOpenXml.FormulaParsing.ParsingConfiguration.SetLexer(OfficeOpenXml.FormulaParsing.LexicalAnalysis.ILexer)
  langs:
  - csharp
  - vb
  name: ParsingConfiguration
  nameWithType: ParsingConfiguration
  fullName: OfficeOpenXml.FormulaParsing.ParsingConfiguration
  type: Class
  source:
    remote:
      path: src/EPPlus/FormulaParsing/ParsingConfiguration.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ParsingConfiguration
    path: ../src/EPPlus/FormulaParsing/ParsingConfiguration.cs
    startLine: 28
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing
  summary: "\nConfiguration of a <xref href=\"OfficeOpenXml.FormulaParsing.FormulaParser\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public class ParsingConfiguration
    content.vb: Public Class ParsingConfiguration
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OfficeOpenXml.FormulaParsing.ParsingConfiguration.AllowCircularReferences
  commentId: P:OfficeOpenXml.FormulaParsing.ParsingConfiguration.AllowCircularReferences
  id: AllowCircularReferences
  parent: OfficeOpenXml.FormulaParsing.ParsingConfiguration
  langs:
  - csharp
  - vb
  name: AllowCircularReferences
  nameWithType: ParsingConfiguration.AllowCircularReferences
  fullName: OfficeOpenXml.FormulaParsing.ParsingConfiguration.AllowCircularReferences
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/ParsingConfiguration.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: AllowCircularReferences
    path: ../src/EPPlus/FormulaParsing/ParsingConfiguration.cs
    startLine: 33
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing
  summary: "\nConfigures the formula calc engine to allow circular references.\n"
  example: []
  syntax:
    content: public bool AllowCircularReferences { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property AllowCircularReferences As Boolean
  overload: OfficeOpenXml.FormulaParsing.ParsingConfiguration.AllowCircularReferences*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.FormulaParsing.ParsingConfiguration.PrecisionAndRoundingStrategy
  commentId: P:OfficeOpenXml.FormulaParsing.ParsingConfiguration.PrecisionAndRoundingStrategy
  id: PrecisionAndRoundingStrategy
  parent: OfficeOpenXml.FormulaParsing.ParsingConfiguration
  langs:
  - csharp
  - vb
  name: PrecisionAndRoundingStrategy
  nameWithType: ParsingConfiguration.PrecisionAndRoundingStrategy
  fullName: OfficeOpenXml.FormulaParsing.ParsingConfiguration.PrecisionAndRoundingStrategy
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/ParsingConfiguration.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: PrecisionAndRoundingStrategy
    path: ../src/EPPlus/FormulaParsing/ParsingConfiguration.cs
    startLine: 37
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing
  summary: "\nIn some functions EPPlus will round double values to 15 significant figures before the value is handled. This is an option for Excel compatibility.\n"
  example: []
  syntax:
    content: public PrecisionAndRoundingStrategy PrecisionAndRoundingStrategy { get; }
    parameters: []
    return:
      type: OfficeOpenXml.FormulaParsing.PrecisionAndRoundingStrategy
    content.vb: Public ReadOnly Property PrecisionAndRoundingStrategy As PrecisionAndRoundingStrategy
  overload: OfficeOpenXml.FormulaParsing.ParsingConfiguration.PrecisionAndRoundingStrategy*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.FormulaParsing.ParsingConfiguration.Lexer
  commentId: P:OfficeOpenXml.FormulaParsing.ParsingConfiguration.Lexer
  id: Lexer
  parent: OfficeOpenXml.FormulaParsing.ParsingConfiguration
  langs:
  - csharp
  - vb
  name: Lexer
  nameWithType: ParsingConfiguration.Lexer
  fullName: OfficeOpenXml.FormulaParsing.ParsingConfiguration.Lexer
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/ParsingConfiguration.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Lexer
    path: ../src/EPPlus/FormulaParsing/ParsingConfiguration.cs
    startLine: 41
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing
  summary: "\nThe <xref href=\"OfficeOpenXml.FormulaParsing.LexicalAnalysis.ILexer\" data-throw-if-not-resolved=\"false\"></xref> of the parser\n"
  example: []
  syntax:
    content: public virtual ILexer Lexer { get; }
    parameters: []
    return:
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.ILexer
    content.vb: Public Overridable ReadOnly Property Lexer As ILexer
  overload: OfficeOpenXml.FormulaParsing.ParsingConfiguration.Lexer*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: OfficeOpenXml.FormulaParsing.ParsingConfiguration.Logger
  commentId: P:OfficeOpenXml.FormulaParsing.ParsingConfiguration.Logger
  id: Logger
  parent: OfficeOpenXml.FormulaParsing.ParsingConfiguration
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: ParsingConfiguration.Logger
  fullName: OfficeOpenXml.FormulaParsing.ParsingConfiguration.Logger
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/ParsingConfiguration.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Logger
    path: ../src/EPPlus/FormulaParsing/ParsingConfiguration.cs
    startLine: 46
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing
  summary: "\nThe <xref href=\"OfficeOpenXml.FormulaParsing.Logging.IFormulaParserLogger\" data-throw-if-not-resolved=\"false\"></xref> of the parser\n"
  example: []
  syntax:
    content: public IFormulaParserLogger Logger { get; }
    parameters: []
    return:
      type: OfficeOpenXml.FormulaParsing.Logging.IFormulaParserLogger
    content.vb: Public ReadOnly Property Logger As IFormulaParserLogger
  overload: OfficeOpenXml.FormulaParsing.ParsingConfiguration.Logger*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.FormulaParsing.ParsingConfiguration.FunctionRepository
  commentId: P:OfficeOpenXml.FormulaParsing.ParsingConfiguration.FunctionRepository
  id: FunctionRepository
  parent: OfficeOpenXml.FormulaParsing.ParsingConfiguration
  langs:
  - csharp
  - vb
  name: FunctionRepository
  nameWithType: ParsingConfiguration.FunctionRepository
  fullName: OfficeOpenXml.FormulaParsing.ParsingConfiguration.FunctionRepository
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/ParsingConfiguration.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: FunctionRepository
    path: ../src/EPPlus/FormulaParsing/ParsingConfiguration.cs
    startLine: 61
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing
  summary: "\nThe <xref href=\"OfficeOpenXml.FormulaParsing.ParsingConfiguration.FunctionRepository\" data-throw-if-not-resolved=\"false\"></xref> of the parser\n"
  example: []
  syntax:
    content: public FunctionRepository FunctionRepository { get; }
    parameters: []
    return:
      type: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionRepository
    content.vb: Public ReadOnly Property FunctionRepository As FunctionRepository
  overload: OfficeOpenXml.FormulaParsing.ParsingConfiguration.FunctionRepository*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.FormulaParsing.ParsingConfiguration.SetLexer(OfficeOpenXml.FormulaParsing.LexicalAnalysis.ILexer)
  commentId: M:OfficeOpenXml.FormulaParsing.ParsingConfiguration.SetLexer(OfficeOpenXml.FormulaParsing.LexicalAnalysis.ILexer)
  id: SetLexer(OfficeOpenXml.FormulaParsing.LexicalAnalysis.ILexer)
  parent: OfficeOpenXml.FormulaParsing.ParsingConfiguration
  langs:
  - csharp
  - vb
  name: SetLexer(ILexer)
  nameWithType: ParsingConfiguration.SetLexer(ILexer)
  fullName: OfficeOpenXml.FormulaParsing.ParsingConfiguration.SetLexer(OfficeOpenXml.FormulaParsing.LexicalAnalysis.ILexer)
  type: Method
  source:
    remote:
      path: src/EPPlus/FormulaParsing/ParsingConfiguration.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: SetLexer
    path: ../src/EPPlus/FormulaParsing/ParsingConfiguration.cs
    startLine: 85
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing
  summary: "\nReplaces the lexer with any instance implementing the <xref href=\"OfficeOpenXml.FormulaParsing.LexicalAnalysis.ILexer\" data-throw-if-not-resolved=\"false\"></xref> interface.\n"
  example: []
  syntax:
    content: public ParsingConfiguration SetLexer(ILexer lexer)
    parameters:
    - id: lexer
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.ILexer
      description: ''
    return:
      type: OfficeOpenXml.FormulaParsing.ParsingConfiguration
      description: ''
    content.vb: Public Function SetLexer(lexer As ILexer) As ParsingConfiguration
  overload: OfficeOpenXml.FormulaParsing.ParsingConfiguration.SetLexer*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.FormulaParsing.ParsingConfiguration.AttachLogger(OfficeOpenXml.FormulaParsing.Logging.IFormulaParserLogger)
  commentId: M:OfficeOpenXml.FormulaParsing.ParsingConfiguration.AttachLogger(OfficeOpenXml.FormulaParsing.Logging.IFormulaParserLogger)
  id: AttachLogger(OfficeOpenXml.FormulaParsing.Logging.IFormulaParserLogger)
  parent: OfficeOpenXml.FormulaParsing.ParsingConfiguration
  langs:
  - csharp
  - vb
  name: AttachLogger(IFormulaParserLogger)
  nameWithType: ParsingConfiguration.AttachLogger(IFormulaParserLogger)
  fullName: OfficeOpenXml.FormulaParsing.ParsingConfiguration.AttachLogger(OfficeOpenXml.FormulaParsing.Logging.IFormulaParserLogger)
  type: Method
  source:
    remote:
      path: src/EPPlus/FormulaParsing/ParsingConfiguration.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: AttachLogger
    path: ../src/EPPlus/FormulaParsing/ParsingConfiguration.cs
    startLine: 118
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing
  summary: "\nAttaches a logger, errors and log entries will be written to the logger during the parsing process.\n"
  example: []
  syntax:
    content: public ParsingConfiguration AttachLogger(IFormulaParserLogger logger)
    parameters:
    - id: logger
      type: OfficeOpenXml.FormulaParsing.Logging.IFormulaParserLogger
      description: ''
    return:
      type: OfficeOpenXml.FormulaParsing.ParsingConfiguration
      description: ''
    content.vb: Public Function AttachLogger(logger As IFormulaParserLogger) As ParsingConfiguration
  overload: OfficeOpenXml.FormulaParsing.ParsingConfiguration.AttachLogger*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.FormulaParsing.ParsingConfiguration.DetachLogger
  commentId: M:OfficeOpenXml.FormulaParsing.ParsingConfiguration.DetachLogger
  id: DetachLogger
  parent: OfficeOpenXml.FormulaParsing.ParsingConfiguration
  langs:
  - csharp
  - vb
  name: DetachLogger()
  nameWithType: ParsingConfiguration.DetachLogger()
  fullName: OfficeOpenXml.FormulaParsing.ParsingConfiguration.DetachLogger()
  type: Method
  source:
    remote:
      path: src/EPPlus/FormulaParsing/ParsingConfiguration.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: DetachLogger
    path: ../src/EPPlus/FormulaParsing/ParsingConfiguration.cs
    startLine: 129
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing
  summary: "\nif a logger is attached it will be removed.\n"
  example: []
  syntax:
    content: public ParsingConfiguration DetachLogger()
    return:
      type: OfficeOpenXml.FormulaParsing.ParsingConfiguration
      description: ''
    content.vb: Public Function DetachLogger As ParsingConfiguration
  overload: OfficeOpenXml.FormulaParsing.ParsingConfiguration.DetachLogger*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: OfficeOpenXml.FormulaParsing.FormulaParser
  commentId: T:OfficeOpenXml.FormulaParsing.FormulaParser
  parent: OfficeOpenXml.FormulaParsing
  name: FormulaParser
  nameWithType: FormulaParser
  fullName: OfficeOpenXml.FormulaParsing.FormulaParser
- uid: OfficeOpenXml.FormulaParsing
  commentId: N:OfficeOpenXml.FormulaParsing
  name: OfficeOpenXml.FormulaParsing
  nameWithType: OfficeOpenXml.FormulaParsing
  fullName: OfficeOpenXml.FormulaParsing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml.FormulaParsing.ParsingConfiguration.AllowCircularReferences*
  commentId: Overload:OfficeOpenXml.FormulaParsing.ParsingConfiguration.AllowCircularReferences
  name: AllowCircularReferences
  nameWithType: ParsingConfiguration.AllowCircularReferences
  fullName: OfficeOpenXml.FormulaParsing.ParsingConfiguration.AllowCircularReferences
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: OfficeOpenXml.FormulaParsing.ParsingConfiguration.PrecisionAndRoundingStrategy*
  commentId: Overload:OfficeOpenXml.FormulaParsing.ParsingConfiguration.PrecisionAndRoundingStrategy
  name: PrecisionAndRoundingStrategy
  nameWithType: ParsingConfiguration.PrecisionAndRoundingStrategy
  fullName: OfficeOpenXml.FormulaParsing.ParsingConfiguration.PrecisionAndRoundingStrategy
- uid: OfficeOpenXml.FormulaParsing.PrecisionAndRoundingStrategy
  commentId: T:OfficeOpenXml.FormulaParsing.PrecisionAndRoundingStrategy
  parent: OfficeOpenXml.FormulaParsing
  name: PrecisionAndRoundingStrategy
  nameWithType: PrecisionAndRoundingStrategy
  fullName: OfficeOpenXml.FormulaParsing.PrecisionAndRoundingStrategy
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.ILexer
  commentId: T:OfficeOpenXml.FormulaParsing.LexicalAnalysis.ILexer
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  name: ILexer
  nameWithType: ILexer
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.ILexer
- uid: OfficeOpenXml.FormulaParsing.ParsingConfiguration.Lexer*
  commentId: Overload:OfficeOpenXml.FormulaParsing.ParsingConfiguration.Lexer
  name: Lexer
  nameWithType: ParsingConfiguration.Lexer
  fullName: OfficeOpenXml.FormulaParsing.ParsingConfiguration.Lexer
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  commentId: N:OfficeOpenXml.FormulaParsing.LexicalAnalysis
  name: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  nameWithType: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis
- uid: OfficeOpenXml.FormulaParsing.Logging.IFormulaParserLogger
  commentId: T:OfficeOpenXml.FormulaParsing.Logging.IFormulaParserLogger
  parent: OfficeOpenXml.FormulaParsing.Logging
  name: IFormulaParserLogger
  nameWithType: IFormulaParserLogger
  fullName: OfficeOpenXml.FormulaParsing.Logging.IFormulaParserLogger
- uid: OfficeOpenXml.FormulaParsing.ParsingConfiguration.Logger*
  commentId: Overload:OfficeOpenXml.FormulaParsing.ParsingConfiguration.Logger
  name: Logger
  nameWithType: ParsingConfiguration.Logger
  fullName: OfficeOpenXml.FormulaParsing.ParsingConfiguration.Logger
- uid: OfficeOpenXml.FormulaParsing.Logging
  commentId: N:OfficeOpenXml.FormulaParsing.Logging
  name: OfficeOpenXml.FormulaParsing.Logging
  nameWithType: OfficeOpenXml.FormulaParsing.Logging
  fullName: OfficeOpenXml.FormulaParsing.Logging
- uid: OfficeOpenXml.FormulaParsing.ParsingConfiguration.FunctionRepository
  commentId: P:OfficeOpenXml.FormulaParsing.ParsingConfiguration.FunctionRepository
  isExternal: true
- uid: OfficeOpenXml.FormulaParsing.ParsingConfiguration.FunctionRepository*
  commentId: Overload:OfficeOpenXml.FormulaParsing.ParsingConfiguration.FunctionRepository
  name: FunctionRepository
  nameWithType: ParsingConfiguration.FunctionRepository
  fullName: OfficeOpenXml.FormulaParsing.ParsingConfiguration.FunctionRepository
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionRepository
  commentId: T:OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionRepository
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions
  name: FunctionRepository
  nameWithType: FunctionRepository
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionRepository
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions
  commentId: N:OfficeOpenXml.FormulaParsing.Excel.Functions
  name: OfficeOpenXml.FormulaParsing.Excel.Functions
  nameWithType: OfficeOpenXml.FormulaParsing.Excel.Functions
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions
- uid: OfficeOpenXml.FormulaParsing.ParsingConfiguration.SetLexer*
  commentId: Overload:OfficeOpenXml.FormulaParsing.ParsingConfiguration.SetLexer
  name: SetLexer
  nameWithType: ParsingConfiguration.SetLexer
  fullName: OfficeOpenXml.FormulaParsing.ParsingConfiguration.SetLexer
- uid: OfficeOpenXml.FormulaParsing.ParsingConfiguration
  commentId: T:OfficeOpenXml.FormulaParsing.ParsingConfiguration
  parent: OfficeOpenXml.FormulaParsing
  name: ParsingConfiguration
  nameWithType: ParsingConfiguration
  fullName: OfficeOpenXml.FormulaParsing.ParsingConfiguration
- uid: OfficeOpenXml.FormulaParsing.ParsingConfiguration.AttachLogger*
  commentId: Overload:OfficeOpenXml.FormulaParsing.ParsingConfiguration.AttachLogger
  name: AttachLogger
  nameWithType: ParsingConfiguration.AttachLogger
  fullName: OfficeOpenXml.FormulaParsing.ParsingConfiguration.AttachLogger
- uid: OfficeOpenXml.FormulaParsing.ParsingConfiguration.DetachLogger*
  commentId: Overload:OfficeOpenXml.FormulaParsing.ParsingConfiguration.DetachLogger
  name: DetachLogger
  nameWithType: ParsingConfiguration.DetachLogger
  fullName: OfficeOpenXml.FormulaParsing.ParsingConfiguration.DetachLogger
