### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollection
  commentId: T:OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollection
  id: ExcelPivotTableFieldCollection
  parent: OfficeOpenXml.Table.PivotTable
  children:
  - OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollection.AddCalculatedField(System.String,System.String)
  - OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollection.GetDateGroupField(OfficeOpenXml.Table.PivotTable.eDateGroupBy)
  - OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollection.GetNumericGroupField
  - OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollection.Item(System.String)
  langs:
  - csharp
  - vb
  name: ExcelPivotTableFieldCollection
  nameWithType: ExcelPivotTableFieldCollection
  fullName: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollection
  type: Class
  source:
    remote:
      path: src/EPPlus/Table/PivotTable/ExcelPivotTableFieldCollection.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ExcelPivotTableFieldCollection
    path: ../src/EPPlus/Table/PivotTable/ExcelPivotTableFieldCollection.cs
    startLine: 22
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Table.PivotTable
  summary: "\nA collection of pivot table fields\n"
  example: []
  syntax:
    content: 'public class ExcelPivotTableFieldCollection : ExcelPivotTableFieldCollectionBase<ExcelPivotTableField>, IEnumerable<ExcelPivotTableField>, IEnumerable'
    content.vb: >-
      Public Class ExcelPivotTableFieldCollection
          Inherits ExcelPivotTableFieldCollectionBase(Of ExcelPivotTableField)
          Implements IEnumerable(Of ExcelPivotTableField), IEnumerable
  inheritance:
  - System.Object
  - OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase{OfficeOpenXml.Table.PivotTable.ExcelPivotTableField}
  implements:
  - System.Collections.Generic.IEnumerable{OfficeOpenXml.Table.PivotTable.ExcelPivotTableField}
  - System.Collections.IEnumerable
  inheritedMembers:
  - OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase{OfficeOpenXml.Table.PivotTable.ExcelPivotTableField}.GetEnumerator
  - OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase{OfficeOpenXml.Table.PivotTable.ExcelPivotTableField}.System#Collections#IEnumerable#GetEnumerator
  - OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase{OfficeOpenXml.Table.PivotTable.ExcelPivotTableField}.Count
  - OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase{OfficeOpenXml.Table.PivotTable.ExcelPivotTableField}.Item(System.Int32)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollection.Item(System.String)
  commentId: P:OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollection.Item(System.String)
  id: Item(System.String)
  parent: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollection
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: ExcelPivotTableFieldCollection.Item[String]
  fullName: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollection.Item[System.String]
  type: Property
  source:
    remote:
      path: src/EPPlus/Table/PivotTable/ExcelPivotTableFieldCollection.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: this[]
    path: ../src/EPPlus/Table/PivotTable/ExcelPivotTableFieldCollection.cs
    startLine: 35
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Table.PivotTable
  summary: "\nIndexer by name\n"
  example: []
  syntax:
    content: public ExcelPivotTableField this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: The name
    return:
      type: OfficeOpenXml.Table.PivotTable.ExcelPivotTableField
      description: The pivot table field
    content.vb: Public ReadOnly Property Item(name As String) As ExcelPivotTableField
  overload: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollection.Item*
  nameWithType.vb: ExcelPivotTableFieldCollection.Item(String)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollection.Item(System.String)
  name.vb: Item(String)
- uid: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollection.GetDateGroupField(OfficeOpenXml.Table.PivotTable.eDateGroupBy)
  commentId: M:OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollection.GetDateGroupField(OfficeOpenXml.Table.PivotTable.eDateGroupBy)
  id: GetDateGroupField(OfficeOpenXml.Table.PivotTable.eDateGroupBy)
  parent: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollection
  langs:
  - csharp
  - vb
  name: GetDateGroupField(eDateGroupBy)
  nameWithType: ExcelPivotTableFieldCollection.GetDateGroupField(eDateGroupBy)
  fullName: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollection.GetDateGroupField(OfficeOpenXml.Table.PivotTable.eDateGroupBy)
  type: Method
  source:
    remote:
      path: src/EPPlus/Table/PivotTable/ExcelPivotTableFieldCollection.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: GetDateGroupField
    path: ../src/EPPlus/Table/PivotTable/ExcelPivotTableFieldCollection.cs
    startLine: 61
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Table.PivotTable
  summary: "\nReturns the date group field.\n"
  example: []
  syntax:
    content: public ExcelPivotTableField GetDateGroupField(eDateGroupBy GroupBy)
    parameters:
    - id: GroupBy
      type: OfficeOpenXml.Table.PivotTable.eDateGroupBy
      description: The type of grouping
    return:
      type: OfficeOpenXml.Table.PivotTable.ExcelPivotTableField
      description: The matching field. If none is found null is returned
    content.vb: Public Function GetDateGroupField(GroupBy As eDateGroupBy) As ExcelPivotTableField
  overload: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollection.GetDateGroupField*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollection.GetNumericGroupField
  commentId: M:OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollection.GetNumericGroupField
  id: GetNumericGroupField
  parent: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollection
  langs:
  - csharp
  - vb
  name: GetNumericGroupField()
  nameWithType: ExcelPivotTableFieldCollection.GetNumericGroupField()
  fullName: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollection.GetNumericGroupField()
  type: Method
  source:
    remote:
      path: src/EPPlus/Table/PivotTable/ExcelPivotTableFieldCollection.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: GetNumericGroupField
    path: ../src/EPPlus/Table/PivotTable/ExcelPivotTableFieldCollection.cs
    startLine: 76
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Table.PivotTable
  summary: "\nReturns the numeric group field.\n"
  example: []
  syntax:
    content: public ExcelPivotTableField GetNumericGroupField()
    return:
      type: OfficeOpenXml.Table.PivotTable.ExcelPivotTableField
      description: The matching field. If none is found null is returned
    content.vb: Public Function GetNumericGroupField As ExcelPivotTableField
  overload: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollection.GetNumericGroupField*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollection.AddCalculatedField(System.String,System.String)
  commentId: M:OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollection.AddCalculatedField(System.String,System.String)
  id: AddCalculatedField(System.String,System.String)
  parent: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollection
  langs:
  - csharp
  - vb
  name: AddCalculatedField(String, String)
  nameWithType: ExcelPivotTableFieldCollection.AddCalculatedField(String, String)
  fullName: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollection.AddCalculatedField(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/EPPlus/Table/PivotTable/ExcelPivotTableFieldCollection.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: AddCalculatedField
    path: ../src/EPPlus/Table/PivotTable/ExcelPivotTableFieldCollection.cs
    startLine: 131
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Table.PivotTable
  summary: "\nAdds a calculated field to the underlaying pivot table cache. \n"
  example: []
  syntax:
    content: public ExcelPivotTableField AddCalculatedField(string name, string formula)
    parameters:
    - id: name
      type: System.String
      description: The unique name of the field
    - id: formula
      type: System.String
      description: "The formula for the calculated field. \nNote: In formulas you create for calculated fields or calculated items, you can use operators and expressions as you do in other worksheet formulas. You can use constants and refer to data from the  pivot table, but you cannot use cell references or defined names.You cannot use worksheet functions that require cell references or defined names as arguments, and you cannot use array functions.\n<xref href=\"OfficeOpenXml.Table.PivotTable.ExcelPivotTableCacheField.Formula\" data-throw-if-not-resolved=\"false\"></xref>"
    return:
      type: OfficeOpenXml.Table.PivotTable.ExcelPivotTableField
      description: The new calculated field
    content.vb: Public Function AddCalculatedField(name As String, formula As String) As ExcelPivotTableField
  overload: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollection.AddCalculatedField*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: OfficeOpenXml.Table.PivotTable
  commentId: N:OfficeOpenXml.Table.PivotTable
  name: OfficeOpenXml.Table.PivotTable
  nameWithType: OfficeOpenXml.Table.PivotTable
  fullName: OfficeOpenXml.Table.PivotTable
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase{OfficeOpenXml.Table.PivotTable.ExcelPivotTableField}
  commentId: T:OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase{OfficeOpenXml.Table.PivotTable.ExcelPivotTableField}
  parent: OfficeOpenXml.Table.PivotTable
  definition: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase`1
  name: ExcelPivotTableFieldCollectionBase<ExcelPivotTableField>
  nameWithType: ExcelPivotTableFieldCollectionBase<ExcelPivotTableField>
  fullName: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase<OfficeOpenXml.Table.PivotTable.ExcelPivotTableField>
  nameWithType.vb: ExcelPivotTableFieldCollectionBase(Of ExcelPivotTableField)
  fullName.vb: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase(Of OfficeOpenXml.Table.PivotTable.ExcelPivotTableField)
  name.vb: ExcelPivotTableFieldCollectionBase(Of ExcelPivotTableField)
  spec.csharp:
  - uid: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase`1
    name: ExcelPivotTableFieldCollectionBase
    nameWithType: ExcelPivotTableFieldCollectionBase
    fullName: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.Table.PivotTable.ExcelPivotTableField
    name: ExcelPivotTableField
    nameWithType: ExcelPivotTableField
    fullName: OfficeOpenXml.Table.PivotTable.ExcelPivotTableField
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase`1
    name: ExcelPivotTableFieldCollectionBase
    nameWithType: ExcelPivotTableFieldCollectionBase
    fullName: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.Table.PivotTable.ExcelPivotTableField
    name: ExcelPivotTableField
    nameWithType: ExcelPivotTableField
    fullName: OfficeOpenXml.Table.PivotTable.ExcelPivotTableField
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{OfficeOpenXml.Table.PivotTable.ExcelPivotTableField}
  commentId: T:System.Collections.Generic.IEnumerable{OfficeOpenXml.Table.PivotTable.ExcelPivotTableField}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ExcelPivotTableField>
  nameWithType: IEnumerable<ExcelPivotTableField>
  fullName: System.Collections.Generic.IEnumerable<OfficeOpenXml.Table.PivotTable.ExcelPivotTableField>
  nameWithType.vb: IEnumerable(Of ExcelPivotTableField)
  fullName.vb: System.Collections.Generic.IEnumerable(Of OfficeOpenXml.Table.PivotTable.ExcelPivotTableField)
  name.vb: IEnumerable(Of ExcelPivotTableField)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.Table.PivotTable.ExcelPivotTableField
    name: ExcelPivotTableField
    nameWithType: ExcelPivotTableField
    fullName: OfficeOpenXml.Table.PivotTable.ExcelPivotTableField
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.Table.PivotTable.ExcelPivotTableField
    name: ExcelPivotTableField
    nameWithType: ExcelPivotTableField
    fullName: OfficeOpenXml.Table.PivotTable.ExcelPivotTableField
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase{OfficeOpenXml.Table.PivotTable.ExcelPivotTableField}.GetEnumerator
  commentId: M:OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase{OfficeOpenXml.Table.PivotTable.ExcelPivotTableField}.GetEnumerator
  parent: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase{OfficeOpenXml.Table.PivotTable.ExcelPivotTableField}
  definition: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: ExcelPivotTableFieldCollectionBase<ExcelPivotTableField>.GetEnumerator()
  fullName: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase<OfficeOpenXml.Table.PivotTable.ExcelPivotTableField>.GetEnumerator()
  nameWithType.vb: ExcelPivotTableFieldCollectionBase(Of ExcelPivotTableField).GetEnumerator()
  fullName.vb: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase(Of OfficeOpenXml.Table.PivotTable.ExcelPivotTableField).GetEnumerator()
  spec.csharp:
  - uid: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase`1.GetEnumerator
    name: GetEnumerator
    nameWithType: ExcelPivotTableFieldCollectionBase<ExcelPivotTableField>.GetEnumerator
    fullName: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase<OfficeOpenXml.Table.PivotTable.ExcelPivotTableField>.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase`1.GetEnumerator
    name: GetEnumerator
    nameWithType: ExcelPivotTableFieldCollectionBase(Of ExcelPivotTableField).GetEnumerator
    fullName: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase(Of OfficeOpenXml.Table.PivotTable.ExcelPivotTableField).GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase{OfficeOpenXml.Table.PivotTable.ExcelPivotTableField}.System#Collections#IEnumerable#GetEnumerator
  commentId: M:OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase{OfficeOpenXml.Table.PivotTable.ExcelPivotTableField}.System#Collections#IEnumerable#GetEnumerator
  parent: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase{OfficeOpenXml.Table.PivotTable.ExcelPivotTableField}
  definition: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase`1.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  nameWithType: ExcelPivotTableFieldCollectionBase<ExcelPivotTableField>.IEnumerable.GetEnumerator()
  fullName: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase<OfficeOpenXml.Table.PivotTable.ExcelPivotTableField>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: ExcelPivotTableFieldCollectionBase(Of ExcelPivotTableField).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase(Of OfficeOpenXml.Table.PivotTable.ExcelPivotTableField).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: ExcelPivotTableFieldCollectionBase<ExcelPivotTableField>.IEnumerable.GetEnumerator
    fullName: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase<OfficeOpenXml.Table.PivotTable.ExcelPivotTableField>.System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: ExcelPivotTableFieldCollectionBase(Of ExcelPivotTableField).System.Collections.IEnumerable.GetEnumerator
    fullName: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase(Of OfficeOpenXml.Table.PivotTable.ExcelPivotTableField).System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase{OfficeOpenXml.Table.PivotTable.ExcelPivotTableField}.Count
  commentId: P:OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase{OfficeOpenXml.Table.PivotTable.ExcelPivotTableField}.Count
  parent: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase{OfficeOpenXml.Table.PivotTable.ExcelPivotTableField}
  definition: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase`1.Count
  name: Count
  nameWithType: ExcelPivotTableFieldCollectionBase<ExcelPivotTableField>.Count
  fullName: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase<OfficeOpenXml.Table.PivotTable.ExcelPivotTableField>.Count
  nameWithType.vb: ExcelPivotTableFieldCollectionBase(Of ExcelPivotTableField).Count
  fullName.vb: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase(Of OfficeOpenXml.Table.PivotTable.ExcelPivotTableField).Count
- uid: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase{OfficeOpenXml.Table.PivotTable.ExcelPivotTableField}.Item(System.Int32)
  commentId: P:OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase{OfficeOpenXml.Table.PivotTable.ExcelPivotTableField}.Item(System.Int32)
  parent: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase{OfficeOpenXml.Table.PivotTable.ExcelPivotTableField}
  definition: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase`1.Item(System.Int32)
  name: Item[Int32]
  nameWithType: ExcelPivotTableFieldCollectionBase<ExcelPivotTableField>.Item[Int32]
  fullName: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase<OfficeOpenXml.Table.PivotTable.ExcelPivotTableField>.Item[System.Int32]
  nameWithType.vb: ExcelPivotTableFieldCollectionBase(Of ExcelPivotTableField).Item(Int32)
  fullName.vb: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase(Of OfficeOpenXml.Table.PivotTable.ExcelPivotTableField).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase`1.Item(System.Int32)
    name: Item
    nameWithType: ExcelPivotTableFieldCollectionBase<ExcelPivotTableField>.Item
    fullName: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase<OfficeOpenXml.Table.PivotTable.ExcelPivotTableField>.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase`1.Item(System.Int32)
    name: Item
    nameWithType: ExcelPivotTableFieldCollectionBase(Of ExcelPivotTableField).Item
    fullName: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase(Of OfficeOpenXml.Table.PivotTable.ExcelPivotTableField).Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase`1
  commentId: T:OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase`1
  name: ExcelPivotTableFieldCollectionBase<T>
  nameWithType: ExcelPivotTableFieldCollectionBase<T>
  fullName: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase<T>
  nameWithType.vb: ExcelPivotTableFieldCollectionBase(Of T)
  fullName.vb: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase(Of T)
  name.vb: ExcelPivotTableFieldCollectionBase(Of T)
  spec.csharp:
  - uid: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase`1
    name: ExcelPivotTableFieldCollectionBase
    nameWithType: ExcelPivotTableFieldCollectionBase
    fullName: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase`1
    name: ExcelPivotTableFieldCollectionBase
    nameWithType: ExcelPivotTableFieldCollectionBase
    fullName: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase`1.GetEnumerator
  commentId: M:OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: ExcelPivotTableFieldCollectionBase<T>.GetEnumerator()
  fullName: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase<T>.GetEnumerator()
  nameWithType.vb: ExcelPivotTableFieldCollectionBase(Of T).GetEnumerator()
  fullName.vb: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase(Of T).GetEnumerator()
  spec.csharp:
  - uid: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase`1.GetEnumerator
    name: GetEnumerator
    nameWithType: ExcelPivotTableFieldCollectionBase<T>.GetEnumerator
    fullName: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase<T>.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase`1.GetEnumerator
    name: GetEnumerator
    nameWithType: ExcelPivotTableFieldCollectionBase(Of T).GetEnumerator
    fullName: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase(Of T).GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase`1.System#Collections#IEnumerable#GetEnumerator
  commentId: M:OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase`1.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  nameWithType: ExcelPivotTableFieldCollectionBase<T>.IEnumerable.GetEnumerator()
  fullName: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase<T>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: ExcelPivotTableFieldCollectionBase(Of T).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase(Of T).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: ExcelPivotTableFieldCollectionBase<T>.IEnumerable.GetEnumerator
    fullName: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase<T>.System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: ExcelPivotTableFieldCollectionBase(Of T).System.Collections.IEnumerable.GetEnumerator
    fullName: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase(Of T).System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase`1.Count
  commentId: P:OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase`1.Count
  name: Count
  nameWithType: ExcelPivotTableFieldCollectionBase<T>.Count
  fullName: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase<T>.Count
  nameWithType.vb: ExcelPivotTableFieldCollectionBase(Of T).Count
  fullName.vb: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase(Of T).Count
- uid: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase`1.Item(System.Int32)
  commentId: P:OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase`1.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: ExcelPivotTableFieldCollectionBase<T>.Item[Int32]
  fullName: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase<T>.Item[System.Int32]
  nameWithType.vb: ExcelPivotTableFieldCollectionBase(Of T).Item(Int32)
  fullName.vb: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase`1.Item(System.Int32)
    name: Item
    nameWithType: ExcelPivotTableFieldCollectionBase<T>.Item
    fullName: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase<T>.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase`1.Item(System.Int32)
    name: Item
    nameWithType: ExcelPivotTableFieldCollectionBase(Of T).Item
    fullName: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollectionBase(Of T).Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollection.Item*
  commentId: Overload:OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollection.Item
  name: Item
  nameWithType: ExcelPivotTableFieldCollection.Item
  fullName: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollection.Item
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OfficeOpenXml.Table.PivotTable.ExcelPivotTableField
  commentId: T:OfficeOpenXml.Table.PivotTable.ExcelPivotTableField
  parent: OfficeOpenXml.Table.PivotTable
  name: ExcelPivotTableField
  nameWithType: ExcelPivotTableField
  fullName: OfficeOpenXml.Table.PivotTable.ExcelPivotTableField
- uid: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollection.GetDateGroupField*
  commentId: Overload:OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollection.GetDateGroupField
  name: GetDateGroupField
  nameWithType: ExcelPivotTableFieldCollection.GetDateGroupField
  fullName: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollection.GetDateGroupField
- uid: OfficeOpenXml.Table.PivotTable.eDateGroupBy
  commentId: T:OfficeOpenXml.Table.PivotTable.eDateGroupBy
  parent: OfficeOpenXml.Table.PivotTable
  name: eDateGroupBy
  nameWithType: eDateGroupBy
  fullName: OfficeOpenXml.Table.PivotTable.eDateGroupBy
- uid: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollection.GetNumericGroupField*
  commentId: Overload:OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollection.GetNumericGroupField
  name: GetNumericGroupField
  nameWithType: ExcelPivotTableFieldCollection.GetNumericGroupField
  fullName: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollection.GetNumericGroupField
- uid: OfficeOpenXml.Table.PivotTable.ExcelPivotTableCacheField.Formula
  commentId: P:OfficeOpenXml.Table.PivotTable.ExcelPivotTableCacheField.Formula
  isExternal: true
- uid: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollection.AddCalculatedField*
  commentId: Overload:OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollection.AddCalculatedField
  name: AddCalculatedField
  nameWithType: ExcelPivotTableFieldCollection.AddCalculatedField
  fullName: OfficeOpenXml.Table.PivotTable.ExcelPivotTableFieldCollection.AddCalculatedField
