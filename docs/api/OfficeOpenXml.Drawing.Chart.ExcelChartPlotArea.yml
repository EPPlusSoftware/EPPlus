### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea
  commentId: T:OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea
  id: ExcelChartPlotArea
  parent: OfficeOpenXml.Drawing.Chart
  children:
  - OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.Border
  - OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.ChartTypes
  - OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.CreateDataTable
  - OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.DataTable
  - OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.Effect
  - OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.Fill
  - OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.RemoveDataTable
  - OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.ThreeD
  langs:
  - csharp
  - vb
  name: ExcelChartPlotArea
  nameWithType: ExcelChartPlotArea
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea
  type: Class
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartPlotArea.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ExcelChartPlotArea
    path: ../src/EPPlus/Drawing/Chart/ExcelChartPlotArea.cs
    startLine: 23
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nA charts plot area\n"
  example: []
  syntax:
    content: 'public class ExcelChartPlotArea : XmlHelper'
    content.vb: >-
      Public Class ExcelChartPlotArea
          Inherits XmlHelper
  inheritance:
  - System.Object
  - OfficeOpenXml.XmlHelper
  derivedClasses:
  - OfficeOpenXml.Drawing.Chart.ChartEx.ExcelChartExPlotarea
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.ChartTypes
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.ChartTypes
  id: ChartTypes
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea
  langs:
  - csharp
  - vb
  name: ChartTypes
  nameWithType: ExcelChartPlotArea.ChartTypes
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.ChartTypes
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartPlotArea.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ChartTypes
    path: ../src/EPPlus/Drawing/Chart/ExcelChartPlotArea.cs
    startLine: 55
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nIf a chart contains multiple chart types (e.g lineChart,BarChart), they end up here.\n"
  example: []
  syntax:
    content: public ExcelChartCollection ChartTypes { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.Chart.ExcelChartCollection
    content.vb: Public ReadOnly Property ChartTypes As ExcelChartCollection
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.ChartTypes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.CreateDataTable
  commentId: M:OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.CreateDataTable
  id: CreateDataTable
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea
  langs:
  - csharp
  - vb
  name: CreateDataTable()
  nameWithType: ExcelChartPlotArea.CreateDataTable()
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.CreateDataTable()
  type: Method
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartPlotArea.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: CreateDataTable
    path: ../src/EPPlus/Drawing/Chart/ExcelChartPlotArea.cs
    startLine: 77
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nCreates a data table in the plotarea\nThe datatable can also be accessed via the DataTable propery\n<xref href=\"OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.DataTable\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public virtual ExcelChartDataTable CreateDataTable()
    return:
      type: OfficeOpenXml.Drawing.Chart.ExcelChartDataTable
    content.vb: Public Overridable Function CreateDataTable As ExcelChartDataTable
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.CreateDataTable*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.RemoveDataTable
  commentId: M:OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.RemoveDataTable
  id: RemoveDataTable
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea
  langs:
  - csharp
  - vb
  name: RemoveDataTable()
  nameWithType: ExcelChartPlotArea.RemoveDataTable()
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.RemoveDataTable()
  type: Method
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartPlotArea.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: RemoveDataTable
    path: ../src/EPPlus/Drawing/Chart/ExcelChartPlotArea.cs
    startLine: 91
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nRemove the data table if it&apos;s created in the plotarea\n"
  example: []
  syntax:
    content: public virtual void RemoveDataTable()
    content.vb: Public Overridable Sub RemoveDataTable
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.RemoveDataTable*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.DataTable
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.DataTable
  id: DataTable
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea
  langs:
  - csharp
  - vb
  name: DataTable
  nameWithType: ExcelChartPlotArea.DataTable
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.DataTable
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartPlotArea.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: DataTable
    path: ../src/EPPlus/Drawing/Chart/ExcelChartPlotArea.cs
    startLine: 102
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nThe data table object.\nUse the CreateDataTable method to create a datatable if it does not exist.\n<xref href=\"OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.CreateDataTable\" data-throw-if-not-resolved=\"false\"></xref>\n<xref href=\"OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.RemoveDataTable\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public ExcelChartDataTable DataTable { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.Chart.ExcelChartDataTable
    content.vb: Public ReadOnly Property DataTable As ExcelChartDataTable
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.DataTable*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.Fill
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.Fill
  id: Fill
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea
  langs:
  - csharp
  - vb
  name: Fill
  nameWithType: ExcelChartPlotArea.Fill
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.Fill
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartPlotArea.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Fill
    path: ../src/EPPlus/Drawing/Chart/ExcelChartPlotArea.cs
    startLine: 108
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nAccess to fill properties\n"
  example: []
  syntax:
    content: public ExcelDrawingFill Fill { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.ExcelDrawingFill
    content.vb: Public ReadOnly Property Fill As ExcelDrawingFill
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.Fill*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.Border
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.Border
  id: Border
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea
  langs:
  - csharp
  - vb
  name: Border
  nameWithType: ExcelChartPlotArea.Border
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.Border
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartPlotArea.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Border
    path: ../src/EPPlus/Drawing/Chart/ExcelChartPlotArea.cs
    startLine: 123
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nAccess to border properties\n"
  example: []
  syntax:
    content: public ExcelDrawingBorder Border { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.ExcelDrawingBorder
    content.vb: Public ReadOnly Property Border As ExcelDrawingBorder
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.Border*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.Effect
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.Effect
  id: Effect
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea
  langs:
  - csharp
  - vb
  name: Effect
  nameWithType: ExcelChartPlotArea.Effect
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.Effect
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartPlotArea.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Effect
    path: ../src/EPPlus/Drawing/Chart/ExcelChartPlotArea.cs
    startLine: 138
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nEffects\n"
  example: []
  syntax:
    content: public ExcelDrawingEffectStyle Effect { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingEffectStyle
    content.vb: Public ReadOnly Property Effect As ExcelDrawingEffectStyle
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.Effect*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.ThreeD
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.ThreeD
  id: ThreeD
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea
  langs:
  - csharp
  - vb
  name: ThreeD
  nameWithType: ExcelChartPlotArea.ThreeD
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.ThreeD
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartPlotArea.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ThreeD
    path: ../src/EPPlus/Drawing/Chart/ExcelChartPlotArea.cs
    startLine: 153
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\n3D properties\n"
  example: []
  syntax:
    content: public ExcelDrawing3D ThreeD { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.Style.ThreeD.ExcelDrawing3D
    content.vb: Public ReadOnly Property ThreeD As ExcelDrawing3D
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.ThreeD*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: OfficeOpenXml.Drawing.Chart
  commentId: N:OfficeOpenXml.Drawing.Chart
  name: OfficeOpenXml.Drawing.Chart
  nameWithType: OfficeOpenXml.Drawing.Chart
  fullName: OfficeOpenXml.Drawing.Chart
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OfficeOpenXml.XmlHelper
  commentId: T:OfficeOpenXml.XmlHelper
  parent: OfficeOpenXml
  name: XmlHelper
  nameWithType: XmlHelper
  fullName: OfficeOpenXml.XmlHelper
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml
  commentId: N:OfficeOpenXml
  name: OfficeOpenXml
  nameWithType: OfficeOpenXml
  fullName: OfficeOpenXml
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.ChartTypes*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.ChartTypes
  name: ChartTypes
  nameWithType: ExcelChartPlotArea.ChartTypes
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.ChartTypes
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartCollection
  commentId: T:OfficeOpenXml.Drawing.Chart.ExcelChartCollection
  parent: OfficeOpenXml.Drawing.Chart
  name: ExcelChartCollection
  nameWithType: ExcelChartCollection
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartCollection
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.DataTable
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.DataTable
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea
  name: DataTable
  nameWithType: ExcelChartPlotArea.DataTable
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.DataTable
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.CreateDataTable*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.CreateDataTable
  name: CreateDataTable
  nameWithType: ExcelChartPlotArea.CreateDataTable
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.CreateDataTable
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartDataTable
  commentId: T:OfficeOpenXml.Drawing.Chart.ExcelChartDataTable
  parent: OfficeOpenXml.Drawing.Chart
  name: ExcelChartDataTable
  nameWithType: ExcelChartDataTable
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartDataTable
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea
  commentId: T:OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea
  parent: OfficeOpenXml.Drawing.Chart
  name: ExcelChartPlotArea
  nameWithType: ExcelChartPlotArea
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.RemoveDataTable*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.RemoveDataTable
  name: RemoveDataTable
  nameWithType: ExcelChartPlotArea.RemoveDataTable
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.RemoveDataTable
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.CreateDataTable
  commentId: M:OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.CreateDataTable
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea
  name: CreateDataTable()
  nameWithType: ExcelChartPlotArea.CreateDataTable()
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.CreateDataTable()
  spec.csharp:
  - uid: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.CreateDataTable
    name: CreateDataTable
    nameWithType: ExcelChartPlotArea.CreateDataTable
    fullName: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.CreateDataTable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.CreateDataTable
    name: CreateDataTable
    nameWithType: ExcelChartPlotArea.CreateDataTable
    fullName: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.CreateDataTable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.RemoveDataTable
  commentId: M:OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.RemoveDataTable
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea
  name: RemoveDataTable()
  nameWithType: ExcelChartPlotArea.RemoveDataTable()
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.RemoveDataTable()
  spec.csharp:
  - uid: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.RemoveDataTable
    name: RemoveDataTable
    nameWithType: ExcelChartPlotArea.RemoveDataTable
    fullName: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.RemoveDataTable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.RemoveDataTable
    name: RemoveDataTable
    nameWithType: ExcelChartPlotArea.RemoveDataTable
    fullName: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.RemoveDataTable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.DataTable*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.DataTable
  name: DataTable
  nameWithType: ExcelChartPlotArea.DataTable
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.DataTable
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.Fill*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.Fill
  name: Fill
  nameWithType: ExcelChartPlotArea.Fill
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.Fill
- uid: OfficeOpenXml.Drawing.ExcelDrawingFill
  commentId: T:OfficeOpenXml.Drawing.ExcelDrawingFill
  parent: OfficeOpenXml.Drawing
  name: ExcelDrawingFill
  nameWithType: ExcelDrawingFill
  fullName: OfficeOpenXml.Drawing.ExcelDrawingFill
- uid: OfficeOpenXml.Drawing
  commentId: N:OfficeOpenXml.Drawing
  name: OfficeOpenXml.Drawing
  nameWithType: OfficeOpenXml.Drawing
  fullName: OfficeOpenXml.Drawing
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.Border*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.Border
  name: Border
  nameWithType: ExcelChartPlotArea.Border
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.Border
- uid: OfficeOpenXml.Drawing.ExcelDrawingBorder
  commentId: T:OfficeOpenXml.Drawing.ExcelDrawingBorder
  parent: OfficeOpenXml.Drawing
  name: ExcelDrawingBorder
  nameWithType: ExcelDrawingBorder
  fullName: OfficeOpenXml.Drawing.ExcelDrawingBorder
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.Effect*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.Effect
  name: Effect
  nameWithType: ExcelChartPlotArea.Effect
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.Effect
- uid: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingEffectStyle
  commentId: T:OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingEffectStyle
  parent: OfficeOpenXml.Drawing.Style.Effect
  name: ExcelDrawingEffectStyle
  nameWithType: ExcelDrawingEffectStyle
  fullName: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingEffectStyle
- uid: OfficeOpenXml.Drawing.Style.Effect
  commentId: N:OfficeOpenXml.Drawing.Style.Effect
  name: OfficeOpenXml.Drawing.Style.Effect
  nameWithType: OfficeOpenXml.Drawing.Style.Effect
  fullName: OfficeOpenXml.Drawing.Style.Effect
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.ThreeD*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.ThreeD
  name: ThreeD
  nameWithType: ExcelChartPlotArea.ThreeD
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartPlotArea.ThreeD
- uid: OfficeOpenXml.Drawing.Style.ThreeD.ExcelDrawing3D
  commentId: T:OfficeOpenXml.Drawing.Style.ThreeD.ExcelDrawing3D
  parent: OfficeOpenXml.Drawing.Style.ThreeD
  name: ExcelDrawing3D
  nameWithType: ExcelDrawing3D
  fullName: OfficeOpenXml.Drawing.Style.ThreeD.ExcelDrawing3D
- uid: OfficeOpenXml.Drawing.Style.ThreeD
  commentId: N:OfficeOpenXml.Drawing.Style.ThreeD
  name: OfficeOpenXml.Drawing.Style.ThreeD
  nameWithType: OfficeOpenXml.Drawing.Style.ThreeD
  fullName: OfficeOpenXml.Drawing.Style.ThreeD
