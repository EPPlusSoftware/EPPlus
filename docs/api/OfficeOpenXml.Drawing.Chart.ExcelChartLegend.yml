### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartLegend
  commentId: T:OfficeOpenXml.Drawing.Chart.ExcelChartLegend
  id: ExcelChartLegend
  parent: OfficeOpenXml.Drawing.Chart
  children:
  - OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Add
  - OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Border
  - OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Effect
  - OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Entries
  - OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Fill
  - OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Font
  - OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Overlay
  - OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Position
  - OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Remove
  - OfficeOpenXml.Drawing.Chart.ExcelChartLegend.TextBody
  - OfficeOpenXml.Drawing.Chart.ExcelChartLegend.TextSettings
  - OfficeOpenXml.Drawing.Chart.ExcelChartLegend.ThreeD
  langs:
  - csharp
  - vb
  name: ExcelChartLegend
  nameWithType: ExcelChartLegend
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartLegend
  type: Class
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartLegend.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ExcelChartLegend
    path: ../src/EPPlus/Drawing/Chart/ExcelChartLegend.cs
    startLine: 28
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nA chart legend\n"
  example: []
  syntax:
    content: 'public class ExcelChartLegend : XmlHelper'
    content.vb: >-
      Public Class ExcelChartLegend
          Inherits XmlHelper
  inheritance:
  - System.Object
  - OfficeOpenXml.XmlHelper
  derivedClasses:
  - OfficeOpenXml.Drawing.Chart.ChartEx.ExcelChartExLegend
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Entries
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Entries
  id: Entries
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartLegend
  langs:
  - csharp
  - vb
  name: Entries
  nameWithType: ExcelChartLegend.Entries
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Entries
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartLegend.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Entries
    path: ../src/EPPlus/Drawing/Chart/ExcelChartLegend.cs
    startLine: 101
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nA list of individual settings for legend entries.\n"
  example: []
  syntax:
    content: public EPPlusReadOnlyList<ExcelChartLegendEntry> Entries { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Core.EPPlusReadOnlyList{OfficeOpenXml.Drawing.Chart.ExcelChartLegendEntry}
    content.vb: Public ReadOnly Property Entries As EPPlusReadOnlyList(Of ExcelChartLegendEntry)
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Entries*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Position
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Position
  id: Position
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartLegend
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: ExcelChartLegend.Position
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Position
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartLegend.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Position
    path: ../src/EPPlus/Drawing/Chart/ExcelChartLegend.cs
    startLine: 134
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nThe position of the Legend\n"
  example: []
  syntax:
    content: public virtual eLegendPosition Position { get; set; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.Chart.eLegendPosition
    content.vb: Public Overridable Property Position As eLegendPosition
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Position*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Overlay
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Overlay
  id: Overlay
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartLegend
  langs:
  - csharp
  - vb
  name: Overlay
  nameWithType: ExcelChartLegend.Overlay
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Overlay
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartLegend.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Overlay
    path: ../src/EPPlus/Drawing/Chart/ExcelChartLegend.cs
    startLine: 178
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nIf the legend overlays other objects\n"
  example: []
  syntax:
    content: public virtual bool Overlay { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable Property Overlay As Boolean
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Overlay*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Fill
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Fill
  id: Fill
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartLegend
  langs:
  - csharp
  - vb
  name: Fill
  nameWithType: ExcelChartLegend.Fill
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Fill
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartLegend.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Fill
    path: ../src/EPPlus/Drawing/Chart/ExcelChartLegend.cs
    startLine: 194
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nThe Fill style\n"
  example: []
  syntax:
    content: public ExcelDrawingFill Fill { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.ExcelDrawingFill
    content.vb: Public ReadOnly Property Fill As ExcelDrawingFill
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Fill*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Border
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Border
  id: Border
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartLegend
  langs:
  - csharp
  - vb
  name: Border
  nameWithType: ExcelChartLegend.Border
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Border
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartLegend.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Border
    path: ../src/EPPlus/Drawing/Chart/ExcelChartLegend.cs
    startLine: 209
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nThe Border style\n"
  example: []
  syntax:
    content: public ExcelDrawingBorder Border { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.ExcelDrawingBorder
    content.vb: Public ReadOnly Property Border As ExcelDrawingBorder
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Border*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Font
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Font
  id: Font
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartLegend
  langs:
  - csharp
  - vb
  name: Font
  nameWithType: ExcelChartLegend.Font
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Font
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartLegend.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Font
    path: ../src/EPPlus/Drawing/Chart/ExcelChartLegend.cs
    startLine: 224
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nThe Font properties\n"
  example: []
  syntax:
    content: public ExcelTextFont Font { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Style.ExcelTextFont
    content.vb: Public ReadOnly Property Font As ExcelTextFont
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Font*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.TextBody
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartLegend.TextBody
  id: TextBody
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartLegend
  langs:
  - csharp
  - vb
  name: TextBody
  nameWithType: ExcelChartLegend.TextBody
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.TextBody
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartLegend.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: TextBody
    path: ../src/EPPlus/Drawing/Chart/ExcelChartLegend.cs
    startLine: 239
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nAccess to text body properties\n"
  example: []
  syntax:
    content: public ExcelTextBody TextBody { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.ExcelTextBody
    content.vb: Public ReadOnly Property TextBody As ExcelTextBody
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.TextBody*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Effect
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Effect
  id: Effect
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartLegend
  langs:
  - csharp
  - vb
  name: Effect
  nameWithType: ExcelChartLegend.Effect
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Effect
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartLegend.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Effect
    path: ../src/EPPlus/Drawing/Chart/ExcelChartLegend.cs
    startLine: 256
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nEffects on the legend shape. \nNote that the Text effects are set using the <xref href=\"OfficeOpenXml.Drawing.Chart.ExcelChartLegend.TextSettings\" data-throw-if-not-resolved=\"false\"></xref> property.\n"
  example: []
  syntax:
    content: public ExcelDrawingEffectStyle Effect { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingEffectStyle
    content.vb: Public ReadOnly Property Effect As ExcelDrawingEffectStyle
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Effect*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.TextSettings
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartLegend.TextSettings
  id: TextSettings
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartLegend
  langs:
  - csharp
  - vb
  name: TextSettings
  nameWithType: ExcelChartLegend.TextSettings
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.TextSettings
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartLegend.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: TextSettings
    path: ../src/EPPlus/Drawing/Chart/ExcelChartLegend.cs
    startLine: 271
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nText settings like fills, text outlines and effects \n"
  example: []
  syntax:
    content: public ExcelDrawingTextSettings TextSettings { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.Chart.ExcelDrawingTextSettings
    content.vb: Public ReadOnly Property TextSettings As ExcelDrawingTextSettings
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.TextSettings*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.ThreeD
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartLegend.ThreeD
  id: ThreeD
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartLegend
  langs:
  - csharp
  - vb
  name: ThreeD
  nameWithType: ExcelChartLegend.ThreeD
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.ThreeD
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartLegend.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ThreeD
    path: ../src/EPPlus/Drawing/Chart/ExcelChartLegend.cs
    startLine: 287
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\n3D properties\n"
  example: []
  syntax:
    content: public ExcelDrawing3D ThreeD { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.Style.ThreeD.ExcelDrawing3D
    content.vb: Public ReadOnly Property ThreeD As ExcelDrawing3D
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.ThreeD*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Remove
  commentId: M:OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Remove
  id: Remove
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartLegend
  langs:
  - csharp
  - vb
  name: Remove()
  nameWithType: ExcelChartLegend.Remove()
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Remove()
  type: Method
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartLegend.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Remove
    path: ../src/EPPlus/Drawing/Chart/ExcelChartLegend.cs
    startLine: 306
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nRemove the legend\n"
  example: []
  syntax:
    content: public void Remove()
    content.vb: Public Sub Remove
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Remove*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Add
  commentId: M:OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Add
  id: Add
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartLegend
  langs:
  - csharp
  - vb
  name: Add()
  nameWithType: ExcelChartLegend.Add()
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Add()
  type: Method
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartLegend.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Add
    path: ../src/EPPlus/Drawing/Chart/ExcelChartLegend.cs
    startLine: 315
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nAdds a legend to the chart\n"
  example: []
  syntax:
    content: public virtual void Add()
    content.vb: Public Overridable Sub Add
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Add*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: OfficeOpenXml.Drawing.Chart
  commentId: N:OfficeOpenXml.Drawing.Chart
  name: OfficeOpenXml.Drawing.Chart
  nameWithType: OfficeOpenXml.Drawing.Chart
  fullName: OfficeOpenXml.Drawing.Chart
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OfficeOpenXml.XmlHelper
  commentId: T:OfficeOpenXml.XmlHelper
  parent: OfficeOpenXml
  name: XmlHelper
  nameWithType: XmlHelper
  fullName: OfficeOpenXml.XmlHelper
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml
  commentId: N:OfficeOpenXml
  name: OfficeOpenXml
  nameWithType: OfficeOpenXml
  fullName: OfficeOpenXml
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Entries*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Entries
  name: Entries
  nameWithType: ExcelChartLegend.Entries
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Entries
- uid: OfficeOpenXml.Core.EPPlusReadOnlyList{OfficeOpenXml.Drawing.Chart.ExcelChartLegendEntry}
  commentId: T:OfficeOpenXml.Core.EPPlusReadOnlyList{OfficeOpenXml.Drawing.Chart.ExcelChartLegendEntry}
  parent: OfficeOpenXml.Core
  definition: OfficeOpenXml.Core.EPPlusReadOnlyList`1
  name: EPPlusReadOnlyList<ExcelChartLegendEntry>
  nameWithType: EPPlusReadOnlyList<ExcelChartLegendEntry>
  fullName: OfficeOpenXml.Core.EPPlusReadOnlyList<OfficeOpenXml.Drawing.Chart.ExcelChartLegendEntry>
  nameWithType.vb: EPPlusReadOnlyList(Of ExcelChartLegendEntry)
  fullName.vb: OfficeOpenXml.Core.EPPlusReadOnlyList(Of OfficeOpenXml.Drawing.Chart.ExcelChartLegendEntry)
  name.vb: EPPlusReadOnlyList(Of ExcelChartLegendEntry)
  spec.csharp:
  - uid: OfficeOpenXml.Core.EPPlusReadOnlyList`1
    name: EPPlusReadOnlyList
    nameWithType: EPPlusReadOnlyList
    fullName: OfficeOpenXml.Core.EPPlusReadOnlyList
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.Drawing.Chart.ExcelChartLegendEntry
    name: ExcelChartLegendEntry
    nameWithType: ExcelChartLegendEntry
    fullName: OfficeOpenXml.Drawing.Chart.ExcelChartLegendEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OfficeOpenXml.Core.EPPlusReadOnlyList`1
    name: EPPlusReadOnlyList
    nameWithType: EPPlusReadOnlyList
    fullName: OfficeOpenXml.Core.EPPlusReadOnlyList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.Drawing.Chart.ExcelChartLegendEntry
    name: ExcelChartLegendEntry
    nameWithType: ExcelChartLegendEntry
    fullName: OfficeOpenXml.Drawing.Chart.ExcelChartLegendEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Core.EPPlusReadOnlyList`1
  commentId: T:OfficeOpenXml.Core.EPPlusReadOnlyList`1
  name: EPPlusReadOnlyList<T>
  nameWithType: EPPlusReadOnlyList<T>
  fullName: OfficeOpenXml.Core.EPPlusReadOnlyList<T>
  nameWithType.vb: EPPlusReadOnlyList(Of T)
  fullName.vb: OfficeOpenXml.Core.EPPlusReadOnlyList(Of T)
  name.vb: EPPlusReadOnlyList(Of T)
  spec.csharp:
  - uid: OfficeOpenXml.Core.EPPlusReadOnlyList`1
    name: EPPlusReadOnlyList
    nameWithType: EPPlusReadOnlyList
    fullName: OfficeOpenXml.Core.EPPlusReadOnlyList
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OfficeOpenXml.Core.EPPlusReadOnlyList`1
    name: EPPlusReadOnlyList
    nameWithType: EPPlusReadOnlyList
    fullName: OfficeOpenXml.Core.EPPlusReadOnlyList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Core
  commentId: N:OfficeOpenXml.Core
  name: OfficeOpenXml.Core
  nameWithType: OfficeOpenXml.Core
  fullName: OfficeOpenXml.Core
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Position*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Position
  name: Position
  nameWithType: ExcelChartLegend.Position
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Position
- uid: OfficeOpenXml.Drawing.Chart.eLegendPosition
  commentId: T:OfficeOpenXml.Drawing.Chart.eLegendPosition
  parent: OfficeOpenXml.Drawing.Chart
  name: eLegendPosition
  nameWithType: eLegendPosition
  fullName: OfficeOpenXml.Drawing.Chart.eLegendPosition
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Overlay*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Overlay
  name: Overlay
  nameWithType: ExcelChartLegend.Overlay
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Overlay
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Fill*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Fill
  name: Fill
  nameWithType: ExcelChartLegend.Fill
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Fill
- uid: OfficeOpenXml.Drawing.ExcelDrawingFill
  commentId: T:OfficeOpenXml.Drawing.ExcelDrawingFill
  parent: OfficeOpenXml.Drawing
  name: ExcelDrawingFill
  nameWithType: ExcelDrawingFill
  fullName: OfficeOpenXml.Drawing.ExcelDrawingFill
- uid: OfficeOpenXml.Drawing
  commentId: N:OfficeOpenXml.Drawing
  name: OfficeOpenXml.Drawing
  nameWithType: OfficeOpenXml.Drawing
  fullName: OfficeOpenXml.Drawing
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Border*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Border
  name: Border
  nameWithType: ExcelChartLegend.Border
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Border
- uid: OfficeOpenXml.Drawing.ExcelDrawingBorder
  commentId: T:OfficeOpenXml.Drawing.ExcelDrawingBorder
  parent: OfficeOpenXml.Drawing
  name: ExcelDrawingBorder
  nameWithType: ExcelDrawingBorder
  fullName: OfficeOpenXml.Drawing.ExcelDrawingBorder
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Font*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Font
  name: Font
  nameWithType: ExcelChartLegend.Font
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Font
- uid: OfficeOpenXml.Style.ExcelTextFont
  commentId: T:OfficeOpenXml.Style.ExcelTextFont
  parent: OfficeOpenXml.Style
  name: ExcelTextFont
  nameWithType: ExcelTextFont
  fullName: OfficeOpenXml.Style.ExcelTextFont
- uid: OfficeOpenXml.Style
  commentId: N:OfficeOpenXml.Style
  name: OfficeOpenXml.Style
  nameWithType: OfficeOpenXml.Style
  fullName: OfficeOpenXml.Style
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.TextBody*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartLegend.TextBody
  name: TextBody
  nameWithType: ExcelChartLegend.TextBody
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.TextBody
- uid: OfficeOpenXml.Drawing.ExcelTextBody
  commentId: T:OfficeOpenXml.Drawing.ExcelTextBody
  parent: OfficeOpenXml.Drawing
  name: ExcelTextBody
  nameWithType: ExcelTextBody
  fullName: OfficeOpenXml.Drawing.ExcelTextBody
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.TextSettings
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartLegend.TextSettings
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartLegend
  name: TextSettings
  nameWithType: ExcelChartLegend.TextSettings
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.TextSettings
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Effect*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Effect
  name: Effect
  nameWithType: ExcelChartLegend.Effect
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Effect
- uid: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingEffectStyle
  commentId: T:OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingEffectStyle
  parent: OfficeOpenXml.Drawing.Style.Effect
  name: ExcelDrawingEffectStyle
  nameWithType: ExcelDrawingEffectStyle
  fullName: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingEffectStyle
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartLegend
  commentId: T:OfficeOpenXml.Drawing.Chart.ExcelChartLegend
  parent: OfficeOpenXml.Drawing.Chart
  name: ExcelChartLegend
  nameWithType: ExcelChartLegend
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartLegend
- uid: OfficeOpenXml.Drawing.Style.Effect
  commentId: N:OfficeOpenXml.Drawing.Style.Effect
  name: OfficeOpenXml.Drawing.Style.Effect
  nameWithType: OfficeOpenXml.Drawing.Style.Effect
  fullName: OfficeOpenXml.Drawing.Style.Effect
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.TextSettings*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartLegend.TextSettings
  name: TextSettings
  nameWithType: ExcelChartLegend.TextSettings
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.TextSettings
- uid: OfficeOpenXml.Drawing.Chart.ExcelDrawingTextSettings
  commentId: T:OfficeOpenXml.Drawing.Chart.ExcelDrawingTextSettings
  parent: OfficeOpenXml.Drawing.Chart
  name: ExcelDrawingTextSettings
  nameWithType: ExcelDrawingTextSettings
  fullName: OfficeOpenXml.Drawing.Chart.ExcelDrawingTextSettings
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.ThreeD*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartLegend.ThreeD
  name: ThreeD
  nameWithType: ExcelChartLegend.ThreeD
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.ThreeD
- uid: OfficeOpenXml.Drawing.Style.ThreeD.ExcelDrawing3D
  commentId: T:OfficeOpenXml.Drawing.Style.ThreeD.ExcelDrawing3D
  parent: OfficeOpenXml.Drawing.Style.ThreeD
  name: ExcelDrawing3D
  nameWithType: ExcelDrawing3D
  fullName: OfficeOpenXml.Drawing.Style.ThreeD.ExcelDrawing3D
- uid: OfficeOpenXml.Drawing.Style.ThreeD
  commentId: N:OfficeOpenXml.Drawing.Style.ThreeD
  name: OfficeOpenXml.Drawing.Style.ThreeD
  nameWithType: OfficeOpenXml.Drawing.Style.ThreeD
  fullName: OfficeOpenXml.Drawing.Style.ThreeD
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Remove*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Remove
  name: Remove
  nameWithType: ExcelChartLegend.Remove
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Remove
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Add*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Add
  name: Add
  nameWithType: ExcelChartLegend.Add
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartLegend.Add
