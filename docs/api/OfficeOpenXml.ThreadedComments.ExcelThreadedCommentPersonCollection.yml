### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection
  commentId: T:OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection
  id: ExcelThreadedCommentPersonCollection
  parent: OfficeOpenXml.ThreadedComments
  children:
  - OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.#ctor(OfficeOpenXml.ExcelWorkbook)
  - OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Add(System.String)
  - OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Add(System.String,System.String,OfficeOpenXml.ThreadedComments.IdentityProvider)
  - OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Add(System.String,System.String,OfficeOpenXml.ThreadedComments.IdentityProvider,System.String)
  - OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Clear
  - OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Count
  - OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Find(System.Predicate{OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson})
  - OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.FindAll(System.Predicate{OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson})
  - OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.GetEnumerator
  - OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Item(System.Int32)
  - OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Item(System.String)
  - OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.PersonsXml
  - OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Remove(OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson)
  - OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.System#Collections#IEnumerable#GetEnumerator
  - OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.ToString
  langs:
  - csharp
  - vb
  name: ExcelThreadedCommentPersonCollection
  nameWithType: ExcelThreadedCommentPersonCollection
  fullName: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection
  type: Class
  source:
    remote:
      path: src/EPPlus/ThreadedComments/ExcelThreadedCommentPersonCollection.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ExcelThreadedCommentPersonCollection
    path: ../src/EPPlus/ThreadedComments/ExcelThreadedCommentPersonCollection.cs
    startLine: 25
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.ThreadedComments
  summary: "\nRepresents a collection of <xref href=\"OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson\" data-throw-if-not-resolved=\"false\"></xref>s in a workbook.\n"
  example: []
  syntax:
    content: 'public class ExcelThreadedCommentPersonCollection : IEnumerable<ExcelThreadedCommentPerson>, IEnumerable'
    content.vb: >-
      Public Class ExcelThreadedCommentPersonCollection
          Implements IEnumerable(Of ExcelThreadedCommentPerson), IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable{OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.#ctor(OfficeOpenXml.ExcelWorkbook)
  commentId: M:OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.#ctor(OfficeOpenXml.ExcelWorkbook)
  id: '#ctor(OfficeOpenXml.ExcelWorkbook)'
  parent: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection
  langs:
  - csharp
  - vb
  name: ExcelThreadedCommentPersonCollection(ExcelWorkbook)
  nameWithType: ExcelThreadedCommentPersonCollection.ExcelThreadedCommentPersonCollection(ExcelWorkbook)
  fullName: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.ExcelThreadedCommentPersonCollection(OfficeOpenXml.ExcelWorkbook)
  type: Constructor
  source:
    remote:
      path: src/EPPlus/ThreadedComments/ExcelThreadedCommentPersonCollection.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: .ctor
    path: ../src/EPPlus/ThreadedComments/ExcelThreadedCommentPersonCollection.cs
    startLine: 31
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.ThreadedComments
  summary: "\nConstructor\n"
  example: []
  syntax:
    content: public ExcelThreadedCommentPersonCollection(ExcelWorkbook workbook)
    parameters:
    - id: workbook
      type: OfficeOpenXml.ExcelWorkbook
      description: The <code data-dev-comment-type="paramref" class="paramref">workbook</code> where the <xref href="OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson" data-throw-if-not-resolved="false"></xref> occurs
    content.vb: Public Sub New(workbook As ExcelWorkbook)
  overload: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.PersonsXml
  commentId: P:OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.PersonsXml
  id: PersonsXml
  parent: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection
  langs:
  - csharp
  - vb
  name: PersonsXml
  nameWithType: ExcelThreadedCommentPersonCollection.PersonsXml
  fullName: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.PersonsXml
  type: Property
  source:
    remote:
      path: src/EPPlus/ThreadedComments/ExcelThreadedCommentPersonCollection.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: PersonsXml
    path: ../src/EPPlus/ThreadedComments/ExcelThreadedCommentPersonCollection.cs
    startLine: 58
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.ThreadedComments
  summary: "\nThe xml document defining the threaded comments persons collection.\n"
  example: []
  syntax:
    content: public XmlDocument PersonsXml { get; }
    parameters: []
    return:
      type: System.Xml.XmlDocument
    content.vb: Public ReadOnly Property PersonsXml As XmlDocument
  overload: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.PersonsXml*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Count
  commentId: P:OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Count
  id: Count
  parent: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: ExcelThreadedCommentPersonCollection.Count
  fullName: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Count
  type: Property
  source:
    remote:
      path: src/EPPlus/ThreadedComments/ExcelThreadedCommentPersonCollection.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Count
    path: ../src/EPPlus/ThreadedComments/ExcelThreadedCommentPersonCollection.cs
    startLine: 63
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.ThreadedComments
  summary: "\nNumber of <xref href=\"OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson\" data-throw-if-not-resolved=\"false\"></xref>s in the collection\n"
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Count*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Item(System.Int32)
  commentId: P:OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: ExcelThreadedCommentPersonCollection.Item[Int32]
  fullName: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/EPPlus/ThreadedComments/ExcelThreadedCommentPersonCollection.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: this[]
    path: ../src/EPPlus/ThreadedComments/ExcelThreadedCommentPersonCollection.cs
    startLine: 76
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.ThreadedComments
  summary: "\nReturns the <xref href=\"OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson\" data-throw-if-not-resolved=\"false\"></xref> by its index\n"
  example: []
  syntax:
    content: public ExcelThreadedCommentPerson this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: The requested index
    return:
      type: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson
      description: The <xref href="OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson" data-throw-if-not-resolved="false"></xref> at the requested index
    content.vb: Public ReadOnly Property Item(index As Integer) As ExcelThreadedCommentPerson
  overload: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Item*
  nameWithType.vb: ExcelThreadedCommentPersonCollection.Item(Int32)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Item(System.Int32)
  name.vb: Item(Int32)
- uid: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Item(System.String)
  commentId: P:OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Item(System.String)
  id: Item(System.String)
  parent: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: ExcelThreadedCommentPersonCollection.Item[String]
  fullName: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Item[System.String]
  type: Property
  source:
    remote:
      path: src/EPPlus/ThreadedComments/ExcelThreadedCommentPersonCollection.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: this[]
    path: ../src/EPPlus/ThreadedComments/ExcelThreadedCommentPersonCollection.cs
    startLine: 89
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.ThreadedComments
  summary: "\nReturns a <xref href=\"OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson\" data-throw-if-not-resolved=\"false\"></xref> by its id\n"
  example: []
  syntax:
    content: public ExcelThreadedCommentPerson this[string id] { get; }
    parameters:
    - id: id
      type: System.String
      description: The Id of the Person
    return:
      type: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson
      description: A <xref href="OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson" data-throw-if-not-resolved="false"></xref> with the requested <code data-dev-comment-type="paramref" class="paramref">id</code> or null
    content.vb: Public ReadOnly Property Item(id As String) As ExcelThreadedCommentPerson
  overload: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Item*
  nameWithType.vb: ExcelThreadedCommentPersonCollection.Item(String)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Item(System.String)
  name.vb: Item(String)
- uid: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Find(System.Predicate{OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson})
  commentId: M:OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Find(System.Predicate{OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson})
  id: Find(System.Predicate{OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson})
  parent: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection
  langs:
  - csharp
  - vb
  name: Find(Predicate<ExcelThreadedCommentPerson>)
  nameWithType: ExcelThreadedCommentPersonCollection.Find(Predicate<ExcelThreadedCommentPerson>)
  fullName: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Find(System.Predicate<OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson>)
  type: Method
  source:
    remote:
      path: src/EPPlus/ThreadedComments/ExcelThreadedCommentPersonCollection.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Find
    path: ../src/EPPlus/ThreadedComments/ExcelThreadedCommentPersonCollection.cs
    startLine: 102
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.ThreadedComments
  summary: "\nFinds a <xref href=\"OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson\" data-throw-if-not-resolved=\"false\"></xref> that <code data-dev-comment-type=\"paramref\" class=\"paramref\">match</code> a certain criteria\n"
  example: []
  syntax:
    content: public ExcelThreadedCommentPerson Find(Predicate<ExcelThreadedCommentPerson> match)
    parameters:
    - id: match
      type: System.Predicate{OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson}
      description: The criterias
    return:
      type: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson
      description: A matching <xref href="OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function Find(match As Predicate(Of ExcelThreadedCommentPerson)) As ExcelThreadedCommentPerson
  overload: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Find*
  nameWithType.vb: ExcelThreadedCommentPersonCollection.Find(Predicate(Of ExcelThreadedCommentPerson))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Find(System.Predicate(Of OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson))
  name.vb: Find(Predicate(Of ExcelThreadedCommentPerson))
- uid: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.FindAll(System.Predicate{OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson})
  commentId: M:OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.FindAll(System.Predicate{OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson})
  id: FindAll(System.Predicate{OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson})
  parent: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection
  langs:
  - csharp
  - vb
  name: FindAll(Predicate<ExcelThreadedCommentPerson>)
  nameWithType: ExcelThreadedCommentPersonCollection.FindAll(Predicate<ExcelThreadedCommentPerson>)
  fullName: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.FindAll(System.Predicate<OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson>)
  type: Method
  source:
    remote:
      path: src/EPPlus/ThreadedComments/ExcelThreadedCommentPersonCollection.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: FindAll
    path: ../src/EPPlus/ThreadedComments/ExcelThreadedCommentPersonCollection.cs
    startLine: 112
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.ThreadedComments
  summary: "\nFinds a number of <xref href=\"OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson\" data-throw-if-not-resolved=\"false\"></xref>&apos;s that matches a certain criteria.\n"
  example: []
  syntax:
    content: public IEnumerable<ExcelThreadedCommentPerson> FindAll(Predicate<ExcelThreadedCommentPerson> match)
    parameters:
    - id: match
      type: System.Predicate{OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson}
      description: The criterias
    return:
      type: System.Collections.Generic.IEnumerable{OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson}
      description: An enumerable of matching <xref href="OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson" data-throw-if-not-resolved="false"></xref>&apos;s
    content.vb: Public Function FindAll(match As Predicate(Of ExcelThreadedCommentPerson)) As IEnumerable(Of ExcelThreadedCommentPerson)
  overload: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.FindAll*
  nameWithType.vb: ExcelThreadedCommentPersonCollection.FindAll(Predicate(Of ExcelThreadedCommentPerson))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.FindAll(System.Predicate(Of OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson))
  name.vb: FindAll(Predicate(Of ExcelThreadedCommentPerson))
- uid: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Add(System.String)
  commentId: M:OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Add(System.String)
  id: Add(System.String)
  parent: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection
  langs:
  - csharp
  - vb
  name: Add(String)
  nameWithType: ExcelThreadedCommentPersonCollection.Add(String)
  fullName: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Add(System.String)
  type: Method
  source:
    remote:
      path: src/EPPlus/ThreadedComments/ExcelThreadedCommentPersonCollection.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Add
    path: ../src/EPPlus/ThreadedComments/ExcelThreadedCommentPersonCollection.cs
    startLine: 122
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.ThreadedComments
  summary: "\nCreates and adds a new <xref href=\"OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson\" data-throw-if-not-resolved=\"false\"></xref> to the workbooks list of persons. A unique Id for the person will be generated and set.\nThe userId will be the same as the <code data-dev-comment-type=\"paramref\" class=\"paramref\">displayName</code> and identityProvider will be set to <xref href=\"OfficeOpenXml.ThreadedComments.IdentityProvider.NoProvider\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public ExcelThreadedCommentPerson Add(string displayName)
    parameters:
    - id: displayName
      type: System.String
      description: The display name of the added <xref href="OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson" data-throw-if-not-resolved="false"></xref>
    return:
      type: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson
    content.vb: Public Function Add(displayName As String) As ExcelThreadedCommentPerson
  overload: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Add(System.String,System.String,OfficeOpenXml.ThreadedComments.IdentityProvider)
  commentId: M:OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Add(System.String,System.String,OfficeOpenXml.ThreadedComments.IdentityProvider)
  id: Add(System.String,System.String,OfficeOpenXml.ThreadedComments.IdentityProvider)
  parent: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection
  langs:
  - csharp
  - vb
  name: Add(String, String, IdentityProvider)
  nameWithType: ExcelThreadedCommentPersonCollection.Add(String, String, IdentityProvider)
  fullName: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Add(System.String, System.String, OfficeOpenXml.ThreadedComments.IdentityProvider)
  type: Method
  source:
    remote:
      path: src/EPPlus/ThreadedComments/ExcelThreadedCommentPersonCollection.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Add
    path: ../src/EPPlus/ThreadedComments/ExcelThreadedCommentPersonCollection.cs
    startLine: 134
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.ThreadedComments
  summary: "\nCreates and adds a new <xref href=\"OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson\" data-throw-if-not-resolved=\"false\"></xref> to the workbooks list of persons. A unique Id for the person will be generated and set.\n"
  example: []
  syntax:
    content: public ExcelThreadedCommentPerson Add(string displayName, string userId, IdentityProvider identityProvider)
    parameters:
    - id: displayName
      type: System.String
      description: The display name of the added <xref href="OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson" data-throw-if-not-resolved="false"></xref>
    - id: userId
      type: System.String
      description: A string representing the userId of the <code data-dev-comment-type="paramref" class="paramref">identityProvider</code>
    - id: identityProvider
      type: OfficeOpenXml.ThreadedComments.IdentityProvider
      description: The <xref href="OfficeOpenXml.ThreadedComments.IdentityProvider" data-throw-if-not-resolved="false"></xref> from which the <xref href="OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson" data-throw-if-not-resolved="false"></xref> originates
    return:
      type: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson
      description: The added <xref href="OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function Add(displayName As String, userId As String, identityProvider As IdentityProvider) As ExcelThreadedCommentPerson
  overload: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Add(System.String,System.String,OfficeOpenXml.ThreadedComments.IdentityProvider,System.String)
  commentId: M:OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Add(System.String,System.String,OfficeOpenXml.ThreadedComments.IdentityProvider,System.String)
  id: Add(System.String,System.String,OfficeOpenXml.ThreadedComments.IdentityProvider,System.String)
  parent: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection
  langs:
  - csharp
  - vb
  name: Add(String, String, IdentityProvider, String)
  nameWithType: ExcelThreadedCommentPersonCollection.Add(String, String, IdentityProvider, String)
  fullName: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Add(System.String, System.String, OfficeOpenXml.ThreadedComments.IdentityProvider, System.String)
  type: Method
  source:
    remote:
      path: src/EPPlus/ThreadedComments/ExcelThreadedCommentPersonCollection.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Add
    path: ../src/EPPlus/ThreadedComments/ExcelThreadedCommentPersonCollection.cs
    startLine: 147
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.ThreadedComments
  summary: "\nCreates and adds a new <xref href=\"OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson\" data-throw-if-not-resolved=\"false\"></xref> to the workbooks list of persons\n"
  example: []
  syntax:
    content: public ExcelThreadedCommentPerson Add(string displayName, string userId, IdentityProvider identityProvider, string id)
    parameters:
    - id: displayName
      type: System.String
      description: The display name of the added <xref href="OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson" data-throw-if-not-resolved="false"></xref>
    - id: userId
      type: System.String
      description: A string representing the userId of the <code data-dev-comment-type="paramref" class="paramref">identityProvider</code>
    - id: identityProvider
      type: OfficeOpenXml.ThreadedComments.IdentityProvider
      description: The <xref href="OfficeOpenXml.ThreadedComments.IdentityProvider" data-throw-if-not-resolved="false"></xref> from which the <xref href="OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson" data-throw-if-not-resolved="false"></xref> originates
    - id: id
      type: System.String
      description: Id of the <xref href="OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson" data-throw-if-not-resolved="false"></xref>
    return:
      type: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson
      description: The added <xref href="OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function Add(displayName As String, userId As String, identityProvider As IdentityProvider, id As String) As ExcelThreadedCommentPerson
  overload: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.GetEnumerator
  commentId: M:OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.GetEnumerator
  id: GetEnumerator
  parent: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: ExcelThreadedCommentPersonCollection.GetEnumerator()
  fullName: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/EPPlus/ThreadedComments/ExcelThreadedCommentPersonCollection.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: GetEnumerator
    path: ../src/EPPlus/ThreadedComments/ExcelThreadedCommentPersonCollection.cs
    startLine: 164
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.ThreadedComments
  summary: "\nReturns an enumerator that iterates through the collection.\n"
  example: []
  syntax:
    content: public IEnumerator<ExcelThreadedCommentPerson> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson}
      description: An enumerator that can be used to iterate through the collection.
    content.vb: Public Function GetEnumerator As IEnumerator(Of ExcelThreadedCommentPerson)
  overload: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson}.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.System#Collections#IEnumerable#GetEnumerator
  commentId: M:OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: ExcelThreadedCommentPersonCollection.IEnumerable.GetEnumerator()
  fullName: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/EPPlus/ThreadedComments/ExcelThreadedCommentPersonCollection.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: System.Collections.IEnumerable.GetEnumerator
    path: ../src/EPPlus/ThreadedComments/ExcelThreadedCommentPersonCollection.cs
    startLine: 173
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.ThreadedComments
  summary: "\nReturns an enumerator that iterates through the collection.\n"
  example: []
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    return:
      type: System.Collections.IEnumerator
      description: An enumerator that can be used to iterate through the collection.
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
  overload: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: ExcelThreadedCommentPersonCollection.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
- uid: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Remove(OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson)
  commentId: M:OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Remove(OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson)
  id: Remove(OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson)
  parent: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection
  langs:
  - csharp
  - vb
  name: Remove(ExcelThreadedCommentPerson)
  nameWithType: ExcelThreadedCommentPersonCollection.Remove(ExcelThreadedCommentPerson)
  fullName: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Remove(OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson)
  type: Method
  source:
    remote:
      path: src/EPPlus/ThreadedComments/ExcelThreadedCommentPersonCollection.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Remove
    path: ../src/EPPlus/ThreadedComments/ExcelThreadedCommentPersonCollection.cs
    startLine: 187
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.ThreadedComments
  summary: "\nRemoves a <xref href=\"OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson\" data-throw-if-not-resolved=\"false\"></xref> from the collection\n"
  example: []
  syntax:
    content: public void Remove(ExcelThreadedCommentPerson person)
    parameters:
    - id: person
      type: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson
      description: ''
    content.vb: Public Sub Remove(person As ExcelThreadedCommentPerson)
  overload: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Remove*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Clear
  commentId: M:OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Clear
  id: Clear
  parent: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: ExcelThreadedCommentPersonCollection.Clear()
  fullName: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Clear()
  type: Method
  source:
    remote:
      path: src/EPPlus/ThreadedComments/ExcelThreadedCommentPersonCollection.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Clear
    path: ../src/EPPlus/ThreadedComments/ExcelThreadedCommentPersonCollection.cs
    startLine: 200
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.ThreadedComments
  summary: "\nRemoves all persons from the collection\n"
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  overload: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Clear*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.ToString
  commentId: M:OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.ToString
  id: ToString
  parent: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ExcelThreadedCommentPersonCollection.ToString()
  fullName: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.ToString()
  type: Method
  source:
    remote:
      path: src/EPPlus/ThreadedComments/ExcelThreadedCommentPersonCollection.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ToString
    path: ../src/EPPlus/ThreadedComments/ExcelThreadedCommentPersonCollection.cs
    startLine: 210
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.ThreadedComments
  summary: "\nReturns a string that represents the current object.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string that represents the current object.
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson
  commentId: T:OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson
  parent: OfficeOpenXml.ThreadedComments
  name: ExcelThreadedCommentPerson
  nameWithType: ExcelThreadedCommentPerson
  fullName: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson
- uid: OfficeOpenXml.ThreadedComments
  commentId: N:OfficeOpenXml.ThreadedComments
  name: OfficeOpenXml.ThreadedComments
  nameWithType: OfficeOpenXml.ThreadedComments
  fullName: OfficeOpenXml.ThreadedComments
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IEnumerable{OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson}
  commentId: T:System.Collections.Generic.IEnumerable{OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ExcelThreadedCommentPerson>
  nameWithType: IEnumerable<ExcelThreadedCommentPerson>
  fullName: System.Collections.Generic.IEnumerable<OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson>
  nameWithType.vb: IEnumerable(Of ExcelThreadedCommentPerson)
  fullName.vb: System.Collections.Generic.IEnumerable(Of OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson)
  name.vb: IEnumerable(Of ExcelThreadedCommentPerson)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson
    name: ExcelThreadedCommentPerson
    nameWithType: ExcelThreadedCommentPerson
    fullName: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson
    name: ExcelThreadedCommentPerson
    nameWithType: ExcelThreadedCommentPerson
    fullName: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.#ctor*
  commentId: Overload:OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.#ctor
  name: ExcelThreadedCommentPersonCollection
  nameWithType: ExcelThreadedCommentPersonCollection.ExcelThreadedCommentPersonCollection
  fullName: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.ExcelThreadedCommentPersonCollection
- uid: OfficeOpenXml.ExcelWorkbook
  commentId: T:OfficeOpenXml.ExcelWorkbook
  parent: OfficeOpenXml
  name: ExcelWorkbook
  nameWithType: ExcelWorkbook
  fullName: OfficeOpenXml.ExcelWorkbook
- uid: OfficeOpenXml
  commentId: N:OfficeOpenXml
  name: OfficeOpenXml
  nameWithType: OfficeOpenXml
  fullName: OfficeOpenXml
- uid: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.PersonsXml*
  commentId: Overload:OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.PersonsXml
  name: PersonsXml
  nameWithType: ExcelThreadedCommentPersonCollection.PersonsXml
  fullName: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.PersonsXml
- uid: System.Xml.XmlDocument
  commentId: T:System.Xml.XmlDocument
  parent: System.Xml
  isExternal: true
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: true
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Count*
  commentId: Overload:OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Count
  name: Count
  nameWithType: ExcelThreadedCommentPersonCollection.Count
  fullName: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Item*
  commentId: Overload:OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Item
  name: Item
  nameWithType: ExcelThreadedCommentPersonCollection.Item
  fullName: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Item
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Find*
  commentId: Overload:OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Find
  name: Find
  nameWithType: ExcelThreadedCommentPersonCollection.Find
  fullName: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Find
- uid: System.Predicate{OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson}
  commentId: T:System.Predicate{OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson}
  parent: System
  definition: System.Predicate`1
  name: Predicate<ExcelThreadedCommentPerson>
  nameWithType: Predicate<ExcelThreadedCommentPerson>
  fullName: System.Predicate<OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson>
  nameWithType.vb: Predicate(Of ExcelThreadedCommentPerson)
  fullName.vb: System.Predicate(Of OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson)
  name.vb: Predicate(Of ExcelThreadedCommentPerson)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson
    name: ExcelThreadedCommentPerson
    nameWithType: ExcelThreadedCommentPerson
    fullName: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson
    name: ExcelThreadedCommentPerson
    nameWithType: ExcelThreadedCommentPerson
    fullName: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Predicate`1
  commentId: T:System.Predicate`1
  isExternal: true
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
  nameWithType.vb: Predicate(Of T)
  fullName.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.FindAll*
  commentId: Overload:OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.FindAll
  name: FindAll
  nameWithType: ExcelThreadedCommentPersonCollection.FindAll
  fullName: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.FindAll
- uid: OfficeOpenXml.ThreadedComments.IdentityProvider.NoProvider
  commentId: F:OfficeOpenXml.ThreadedComments.IdentityProvider.NoProvider
  isExternal: true
- uid: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Add*
  commentId: Overload:OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Add
  name: Add
  nameWithType: ExcelThreadedCommentPersonCollection.Add
  fullName: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Add
- uid: OfficeOpenXml.ThreadedComments.IdentityProvider
  commentId: T:OfficeOpenXml.ThreadedComments.IdentityProvider
  parent: OfficeOpenXml.ThreadedComments
  name: IdentityProvider
  nameWithType: IdentityProvider
  fullName: OfficeOpenXml.ThreadedComments.IdentityProvider
- uid: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.GetEnumerator*
  commentId: Overload:OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.GetEnumerator
  name: GetEnumerator
  nameWithType: ExcelThreadedCommentPersonCollection.GetEnumerator
  fullName: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<ExcelThreadedCommentPerson>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of ExcelThreadedCommentPerson).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<ExcelThreadedCommentPerson>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of ExcelThreadedCommentPerson).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson}
  commentId: T:System.Collections.Generic.IEnumerator{OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<ExcelThreadedCommentPerson>
  nameWithType: IEnumerator<ExcelThreadedCommentPerson>
  fullName: System.Collections.Generic.IEnumerator<OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson>
  nameWithType.vb: IEnumerator(Of ExcelThreadedCommentPerson)
  fullName.vb: System.Collections.Generic.IEnumerator(Of OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson)
  name.vb: IEnumerator(Of ExcelThreadedCommentPerson)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson
    name: ExcelThreadedCommentPerson
    nameWithType: ExcelThreadedCommentPerson
    fullName: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson
    name: ExcelThreadedCommentPerson
    nameWithType: ExcelThreadedCommentPerson
    fullName: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPerson
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator
  nameWithType: ExcelThreadedCommentPersonCollection.IEnumerable.GetEnumerator
  fullName: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: ExcelThreadedCommentPersonCollection.System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Remove*
  commentId: Overload:OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Remove
  name: Remove
  nameWithType: ExcelThreadedCommentPersonCollection.Remove
  fullName: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Remove
- uid: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Clear*
  commentId: Overload:OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Clear
  name: Clear
  nameWithType: ExcelThreadedCommentPersonCollection.Clear
  fullName: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.Clear
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.ToString*
  commentId: Overload:OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.ToString
  name: ToString
  nameWithType: ExcelThreadedCommentPersonCollection.ToString
  fullName: OfficeOpenXml.ThreadedComments.ExcelThreadedCommentPersonCollection.ToString
