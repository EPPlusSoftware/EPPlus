### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunctionParametersInfo
  commentId: T:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunctionParametersInfo
  id: ExcelFunctionParametersInfo
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions
  children:
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunctionParametersInfo.#ctor(System.Func{System.Int32,OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionParameterInformation})
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunctionParametersInfo.Default
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunctionParametersInfo.GetParameterInfo(System.Int32)
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunctionParametersInfo.HasNormalArguments
  langs:
  - csharp
  - vb
  name: ExcelFunctionParametersInfo
  nameWithType: ExcelFunctionParametersInfo
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunctionParametersInfo
  type: Class
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Excel/Functions/ExcelFunctionParametersInfo.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ExcelFunctionParametersInfo
    path: ../src/EPPlus/FormulaParsing/Excel/Functions/ExcelFunctionParametersInfo.cs
    startLine: 19
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Excel.Functions
  summary: "\nFunction parameters info\n"
  example: []
  syntax:
    content: public class ExcelFunctionParametersInfo
    content.vb: Public Class ExcelFunctionParametersInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunctionParametersInfo.Default
  commentId: P:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunctionParametersInfo.Default
  id: Default
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunctionParametersInfo
  langs:
  - csharp
  - vb
  name: Default
  nameWithType: ExcelFunctionParametersInfo.Default
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunctionParametersInfo.Default
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Excel/Functions/ExcelFunctionParametersInfo.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Default
    path: ../src/EPPlus/FormulaParsing/Excel/Functions/ExcelFunctionParametersInfo.cs
    startLine: 24
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Excel.Functions
  summary: "\nDefault\n"
  example: []
  syntax:
    content: public static ExcelFunctionParametersInfo Default { get; }
    parameters: []
    return:
      type: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunctionParametersInfo
    content.vb: Public Shared ReadOnly Property Default As ExcelFunctionParametersInfo
  overload: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunctionParametersInfo.Default*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunctionParametersInfo.#ctor(System.Func{System.Int32,OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionParameterInformation})
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunctionParametersInfo.#ctor(System.Func{System.Int32,OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionParameterInformation})
  id: '#ctor(System.Func{System.Int32,OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionParameterInformation})'
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunctionParametersInfo
  langs:
  - csharp
  - vb
  name: ExcelFunctionParametersInfo(Func<Int32, FunctionParameterInformation>)
  nameWithType: ExcelFunctionParametersInfo.ExcelFunctionParametersInfo(Func<Int32, FunctionParameterInformation>)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunctionParametersInfo.ExcelFunctionParametersInfo(System.Func<System.Int32, OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionParameterInformation>)
  type: Constructor
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Excel/Functions/ExcelFunctionParametersInfo.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: .ctor
    path: ../src/EPPlus/FormulaParsing/Excel/Functions/ExcelFunctionParametersInfo.cs
    startLine: 40
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Excel.Functions
  summary: "\nConstructor getParameter\n"
  example: []
  syntax:
    content: public ExcelFunctionParametersInfo(Func<int, FunctionParameterInformation> getParameter)
    parameters:
    - id: getParameter
      type: System.Func{System.Int32,OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionParameterInformation}
      description: ''
    content.vb: Public Sub New(getParameter As Func(Of Integer, FunctionParameterInformation))
  overload: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunctionParametersInfo.#ctor*
  nameWithType.vb: ExcelFunctionParametersInfo.ExcelFunctionParametersInfo(Func(Of Int32, FunctionParameterInformation))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunctionParametersInfo.ExcelFunctionParametersInfo(System.Func(Of System.Int32, OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionParameterInformation))
  name.vb: ExcelFunctionParametersInfo(Func(Of Int32, FunctionParameterInformation))
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunctionParametersInfo.HasNormalArguments
  commentId: P:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunctionParametersInfo.HasNormalArguments
  id: HasNormalArguments
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunctionParametersInfo
  langs:
  - csharp
  - vb
  name: HasNormalArguments
  nameWithType: ExcelFunctionParametersInfo.HasNormalArguments
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunctionParametersInfo.HasNormalArguments
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Excel/Functions/ExcelFunctionParametersInfo.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: HasNormalArguments
    path: ../src/EPPlus/FormulaParsing/Excel/Functions/ExcelFunctionParametersInfo.cs
    startLine: 47
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Excel.Functions
  summary: "\nHas normal arguments\n"
  example: []
  syntax:
    content: public bool HasNormalArguments { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasNormalArguments As Boolean
  overload: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunctionParametersInfo.HasNormalArguments*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunctionParametersInfo.GetParameterInfo(System.Int32)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunctionParametersInfo.GetParameterInfo(System.Int32)
  id: GetParameterInfo(System.Int32)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunctionParametersInfo
  langs:
  - csharp
  - vb
  name: GetParameterInfo(Int32)
  nameWithType: ExcelFunctionParametersInfo.GetParameterInfo(Int32)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunctionParametersInfo.GetParameterInfo(System.Int32)
  type: Method
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Excel/Functions/ExcelFunctionParametersInfo.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: GetParameterInfo
    path: ../src/EPPlus/FormulaParsing/Excel/Functions/ExcelFunctionParametersInfo.cs
    startLine: 59
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Excel.Functions
  summary: "\nGet information about the parameter at the position at <code data-dev-comment-type=\"paramref\" class=\"paramref\">argumentIndex</code>\n"
  example: []
  syntax:
    content: public virtual FunctionParameterInformation GetParameterInfo(int argumentIndex)
    parameters:
    - id: argumentIndex
      type: System.Int32
      description: The position of the parameter
    return:
      type: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionParameterInformation
      description: The parameter informations
    content.vb: Public Overridable Function GetParameterInfo(argumentIndex As Integer) As FunctionParameterInformation
  overload: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunctionParametersInfo.GetParameterInfo*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions
  commentId: N:OfficeOpenXml.FormulaParsing.Excel.Functions
  name: OfficeOpenXml.FormulaParsing.Excel.Functions
  nameWithType: OfficeOpenXml.FormulaParsing.Excel.Functions
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunctionParametersInfo.Default*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunctionParametersInfo.Default
  name: Default
  nameWithType: ExcelFunctionParametersInfo.Default
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunctionParametersInfo.Default
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunctionParametersInfo
  commentId: T:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunctionParametersInfo
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions
  name: ExcelFunctionParametersInfo
  nameWithType: ExcelFunctionParametersInfo
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunctionParametersInfo
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunctionParametersInfo.#ctor*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunctionParametersInfo.#ctor
  name: ExcelFunctionParametersInfo
  nameWithType: ExcelFunctionParametersInfo.ExcelFunctionParametersInfo
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunctionParametersInfo.ExcelFunctionParametersInfo
- uid: System.Func{System.Int32,OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionParameterInformation}
  commentId: T:System.Func{System.Int32,OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionParameterInformation}
  parent: System
  definition: System.Func`2
  name: Func<Int32, FunctionParameterInformation>
  nameWithType: Func<Int32, FunctionParameterInformation>
  fullName: System.Func<System.Int32, OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionParameterInformation>
  nameWithType.vb: Func(Of Int32, FunctionParameterInformation)
  fullName.vb: System.Func(Of System.Int32, OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionParameterInformation)
  name.vb: Func(Of Int32, FunctionParameterInformation)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionParameterInformation
    name: FunctionParameterInformation
    nameWithType: FunctionParameterInformation
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionParameterInformation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionParameterInformation
    name: FunctionParameterInformation
    nameWithType: FunctionParameterInformation
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionParameterInformation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunctionParametersInfo.HasNormalArguments*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunctionParametersInfo.HasNormalArguments
  name: HasNormalArguments
  nameWithType: ExcelFunctionParametersInfo.HasNormalArguments
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunctionParametersInfo.HasNormalArguments
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunctionParametersInfo.GetParameterInfo*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunctionParametersInfo.GetParameterInfo
  name: GetParameterInfo
  nameWithType: ExcelFunctionParametersInfo.GetParameterInfo
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunctionParametersInfo.GetParameterInfo
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionParameterInformation
  commentId: T:OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionParameterInformation
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions
  name: FunctionParameterInformation
  nameWithType: FunctionParameterInformation
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionParameterInformation
