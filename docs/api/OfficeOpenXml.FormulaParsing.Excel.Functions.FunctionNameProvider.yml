### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionNameProvider
  commentId: T:OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionNameProvider
  id: FunctionNameProvider
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions
  children:
  - OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionNameProvider.Empty
  - OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionNameProvider.IsFunctionName(System.String)
  langs:
  - csharp
  - vb
  name: FunctionNameProvider
  nameWithType: FunctionNameProvider
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionNameProvider
  type: Class
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Excel/Functions/FunctionNameProvider.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: FunctionNameProvider
    path: ../src/EPPlus/FormulaParsing/Excel/Functions/FunctionNameProvider.cs
    startLine: 23
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Excel.Functions
  summary: "\nFunction name provider\n"
  example: []
  syntax:
    content: 'public class FunctionNameProvider : IFunctionNameProvider'
    content.vb: >-
      Public Class FunctionNameProvider
          Implements IFunctionNameProvider
  inheritance:
  - System.Object
  implements:
  - OfficeOpenXml.FormulaParsing.Excel.Functions.IFunctionNameProvider
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionNameProvider.Empty
  commentId: P:OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionNameProvider.Empty
  id: Empty
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionNameProvider
  langs:
  - csharp
  - vb
  name: Empty
  nameWithType: FunctionNameProvider.Empty
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionNameProvider.Empty
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Excel/Functions/FunctionNameProvider.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Empty
    path: ../src/EPPlus/FormulaParsing/Excel/Functions/FunctionNameProvider.cs
    startLine: 32
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Excel.Functions
  summary: "\nEmpty\n"
  example: []
  syntax:
    content: public static FunctionNameProvider Empty { get; }
    parameters: []
    return:
      type: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionNameProvider
    content.vb: Public Shared ReadOnly Property Empty As FunctionNameProvider
  overload: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionNameProvider.Empty*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionNameProvider.IsFunctionName(System.String)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionNameProvider.IsFunctionName(System.String)
  id: IsFunctionName(System.String)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionNameProvider
  langs:
  - csharp
  - vb
  name: IsFunctionName(String)
  nameWithType: FunctionNameProvider.IsFunctionName(String)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionNameProvider.IsFunctionName(System.String)
  type: Method
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Excel/Functions/FunctionNameProvider.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: IsFunctionName
    path: ../src/EPPlus/FormulaParsing/Excel/Functions/FunctionNameProvider.cs
    startLine: 41
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Excel.Functions
  summary: "\nIs function name\n"
  example: []
  syntax:
    content: public virtual bool IsFunctionName(string name)
    parameters:
    - id: name
      type: System.String
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overridable Function IsFunctionName(name As String) As Boolean
  overload: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionNameProvider.IsFunctionName*
  implements:
  - OfficeOpenXml.FormulaParsing.Excel.Functions.IFunctionNameProvider.IsFunctionName(System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions
  commentId: N:OfficeOpenXml.FormulaParsing.Excel.Functions
  name: OfficeOpenXml.FormulaParsing.Excel.Functions
  nameWithType: OfficeOpenXml.FormulaParsing.Excel.Functions
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.IFunctionNameProvider
  commentId: T:OfficeOpenXml.FormulaParsing.Excel.Functions.IFunctionNameProvider
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions
  name: IFunctionNameProvider
  nameWithType: IFunctionNameProvider
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.IFunctionNameProvider
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionNameProvider.Empty*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionNameProvider.Empty
  name: Empty
  nameWithType: FunctionNameProvider.Empty
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionNameProvider.Empty
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionNameProvider
  commentId: T:OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionNameProvider
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions
  name: FunctionNameProvider
  nameWithType: FunctionNameProvider
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionNameProvider
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionNameProvider.IsFunctionName*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionNameProvider.IsFunctionName
  name: IsFunctionName
  nameWithType: FunctionNameProvider.IsFunctionName
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionNameProvider.IsFunctionName
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.IFunctionNameProvider.IsFunctionName(System.String)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.IFunctionNameProvider.IsFunctionName(System.String)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.IFunctionNameProvider
  isExternal: true
  name: IsFunctionName(String)
  nameWithType: IFunctionNameProvider.IsFunctionName(String)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.IFunctionNameProvider.IsFunctionName(System.String)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.IFunctionNameProvider.IsFunctionName(System.String)
    name: IsFunctionName
    nameWithType: IFunctionNameProvider.IsFunctionName
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.IFunctionNameProvider.IsFunctionName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.IFunctionNameProvider.IsFunctionName(System.String)
    name: IsFunctionName
    nameWithType: IFunctionNameProvider.IsFunctionName
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.IFunctionNameProvider.IsFunctionName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
