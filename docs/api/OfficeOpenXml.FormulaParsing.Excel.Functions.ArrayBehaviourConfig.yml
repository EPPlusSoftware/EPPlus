### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig
  commentId: T:OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig
  id: ArrayBehaviourConfig
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions
  children:
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig.ArrayArgInterval
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig.CanBeArrayArg(System.Int32)
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig.IgnoreNumberOfArgsFromStart
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig.SetArrayParameterIndexes(System.Int32[])
  langs:
  - csharp
  - vb
  name: ArrayBehaviourConfig
  nameWithType: ArrayBehaviourConfig
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig
  type: Class
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Excel/Functions/ArrayBehaviourConfig.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ArrayBehaviourConfig
    path: ../src/EPPlus/FormulaParsing/Excel/Functions/ArrayBehaviourConfig.cs
    startLine: 23
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Excel.Functions
  summary: "\nThis class should be used to configure how arrays/ranges are treated as parameters to functions\nthat can return a dynamic array.\n"
  example: []
  syntax:
    content: public class ArrayBehaviourConfig
    content.vb: Public Class ArrayBehaviourConfig
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig.SetArrayParameterIndexes(System.Int32[])
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig.SetArrayParameterIndexes(System.Int32[])
  id: SetArrayParameterIndexes(System.Int32[])
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig
  langs:
  - csharp
  - vb
  name: SetArrayParameterIndexes(Int32[])
  nameWithType: ArrayBehaviourConfig.SetArrayParameterIndexes(Int32[])
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig.SetArrayParameterIndexes(System.Int32[])
  type: Method
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Excel/Functions/ArrayBehaviourConfig.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: SetArrayParameterIndexes
    path: ../src/EPPlus/FormulaParsing/Excel/Functions/ArrayBehaviourConfig.cs
    startLine: 37
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Excel.Functions
  summary: "\nThis method sets indexes of arguments that can be an array.\n"
  example: []
  syntax:
    content: public void SetArrayParameterIndexes(params int[] indexes)
    parameters:
    - id: indexes
      type: System.Int32[]
      description: A list of integers that specifies the 0-based index of arguments that can be an array.
    content.vb: Public Sub SetArrayParameterIndexes(ParamArray indexes As Integer())
  overload: OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig.SetArrayParameterIndexes*
  nameWithType.vb: ArrayBehaviourConfig.SetArrayParameterIndexes(Int32())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig.SetArrayParameterIndexes(System.Int32())
  name.vb: SetArrayParameterIndexes(Int32())
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig.IgnoreNumberOfArgsFromStart
  commentId: P:OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig.IgnoreNumberOfArgsFromStart
  id: IgnoreNumberOfArgsFromStart
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig
  langs:
  - csharp
  - vb
  name: IgnoreNumberOfArgsFromStart
  nameWithType: ArrayBehaviourConfig.IgnoreNumberOfArgsFromStart
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig.IgnoreNumberOfArgsFromStart
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Excel/Functions/ArrayBehaviourConfig.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: IgnoreNumberOfArgsFromStart
    path: ../src/EPPlus/FormulaParsing/Excel/Functions/ArrayBehaviourConfig.cs
    startLine: 47
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Excel.Functions
  summary: "\nUse this property in combination with <xref href=\"OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig.ArrayArgInterval\" data-throw-if-not-resolved=\"false\"></xref>. A typical scenario would be that\nthe first 3 arguments should be ignore and then every 3rd argument might be in array. In this scenario this\nproperty should be set to 3.\n"
  example: []
  syntax:
    content: public int IgnoreNumberOfArgsFromStart { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property IgnoreNumberOfArgsFromStart As Integer
  overload: OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig.IgnoreNumberOfArgsFromStart*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig.ArrayArgInterval
  commentId: P:OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig.ArrayArgInterval
  id: ArrayArgInterval
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig
  langs:
  - csharp
  - vb
  name: ArrayArgInterval
  nameWithType: ArrayBehaviourConfig.ArrayArgInterval
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig.ArrayArgInterval
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Excel/Functions/ArrayBehaviourConfig.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ArrayArgInterval
    path: ../src/EPPlus/FormulaParsing/Excel/Functions/ArrayBehaviourConfig.cs
    startLine: 52
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Excel.Functions
  summary: "\nIndicates that every x-th argument can be an array.\n"
  example: []
  syntax:
    content: public int ArrayArgInterval { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ArrayArgInterval As Integer
  overload: OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig.ArrayArgInterval*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig.CanBeArrayArg(System.Int32)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig.CanBeArrayArg(System.Int32)
  id: CanBeArrayArg(System.Int32)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig
  langs:
  - csharp
  - vb
  name: CanBeArrayArg(Int32)
  nameWithType: ArrayBehaviourConfig.CanBeArrayArg(Int32)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig.CanBeArrayArg(System.Int32)
  type: Method
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Excel/Functions/ArrayBehaviourConfig.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: CanBeArrayArg
    path: ../src/EPPlus/FormulaParsing/Excel/Functions/ArrayBehaviourConfig.cs
    startLine: 62
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Excel.Functions
  summary: "\nReturns true if the 0-based <code data-dev-comment-type=\"paramref\" class=\"paramref\">argIx</code>\noccurs in the <xref href=\"OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig.SetArrayParameterIndexes(System.Int32%5b%5d)\" data-throw-if-not-resolved=\"false\"></xref> list or if\nthe index matches the configuration of <xref href=\"OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig.IgnoreNumberOfArgsFromStart\" data-throw-if-not-resolved=\"false\"></xref>\nand <xref href=\"OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig.ArrayArgInterval\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public bool CanBeArrayArg(int argIx)
    parameters:
    - id: argIx
      type: System.Int32
      description: argument index (0-based)
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function CanBeArrayArg(argIx As Integer) As Boolean
  overload: OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig.CanBeArrayArg*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions
  commentId: N:OfficeOpenXml.FormulaParsing.Excel.Functions
  name: OfficeOpenXml.FormulaParsing.Excel.Functions
  nameWithType: OfficeOpenXml.FormulaParsing.Excel.Functions
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig.SetArrayParameterIndexes*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig.SetArrayParameterIndexes
  name: SetArrayParameterIndexes
  nameWithType: ArrayBehaviourConfig.SetArrayParameterIndexes
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig.SetArrayParameterIndexes
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig.ArrayArgInterval
  commentId: P:OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig.ArrayArgInterval
  isExternal: true
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig.IgnoreNumberOfArgsFromStart*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig.IgnoreNumberOfArgsFromStart
  name: IgnoreNumberOfArgsFromStart
  nameWithType: ArrayBehaviourConfig.IgnoreNumberOfArgsFromStart
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig.IgnoreNumberOfArgsFromStart
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig.ArrayArgInterval*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig.ArrayArgInterval
  name: ArrayArgInterval
  nameWithType: ArrayBehaviourConfig.ArrayArgInterval
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig.ArrayArgInterval
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig.SetArrayParameterIndexes(System.Int32[])
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig.SetArrayParameterIndexes(System.Int32[])
  isExternal: true
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig.IgnoreNumberOfArgsFromStart
  commentId: P:OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig.IgnoreNumberOfArgsFromStart
  isExternal: true
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig.CanBeArrayArg*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig.CanBeArrayArg
  name: CanBeArrayArg
  nameWithType: ArrayBehaviourConfig.CanBeArrayArg
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig.CanBeArrayArg
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
