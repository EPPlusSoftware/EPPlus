### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.FormulaParsing.ExcelAddressCache
  commentId: T:OfficeOpenXml.FormulaParsing.ExcelAddressCache
  id: ExcelAddressCache
  parent: OfficeOpenXml.FormulaParsing
  children:
  - OfficeOpenXml.FormulaParsing.ExcelAddressCache.Add(System.Int32,System.String)
  - OfficeOpenXml.FormulaParsing.ExcelAddressCache.Clear
  - OfficeOpenXml.FormulaParsing.ExcelAddressCache.Count
  - OfficeOpenXml.FormulaParsing.ExcelAddressCache.Get(System.Int32)
  - OfficeOpenXml.FormulaParsing.ExcelAddressCache.GetNewId
  langs:
  - csharp
  - vb
  name: ExcelAddressCache
  nameWithType: ExcelAddressCache
  fullName: OfficeOpenXml.FormulaParsing.ExcelAddressCache
  type: Class
  source:
    remote:
      path: src/EPPlus/FormulaParsing/ExcelAddressCache.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ExcelAddressCache
    path: ../src/EPPlus/FormulaParsing/ExcelAddressCache.cs
    startLine: 21
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing
  summary: "\nCaches string by generated id&apos;s.\n"
  example: []
  syntax:
    content: public class ExcelAddressCache
    content.vb: Public Class ExcelAddressCache
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OfficeOpenXml.FormulaParsing.ExcelAddressCache.GetNewId
  commentId: M:OfficeOpenXml.FormulaParsing.ExcelAddressCache.GetNewId
  id: GetNewId
  parent: OfficeOpenXml.FormulaParsing.ExcelAddressCache
  langs:
  - csharp
  - vb
  name: GetNewId()
  nameWithType: ExcelAddressCache.GetNewId()
  fullName: OfficeOpenXml.FormulaParsing.ExcelAddressCache.GetNewId()
  type: Method
  source:
    remote:
      path: src/EPPlus/FormulaParsing/ExcelAddressCache.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: GetNewId
    path: ../src/EPPlus/FormulaParsing/ExcelAddressCache.cs
    startLine: 33
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing
  summary: "\nReturns an id to use for caching (when the <xref href=\"OfficeOpenXml.FormulaParsing.ExcelAddressCache.Add(System.Int32%2cSystem.String)\" data-throw-if-not-resolved=\"false\"></xref> method is called)\n"
  example: []
  syntax:
    content: public int GetNewId()
    return:
      type: System.Int32
      description: ''
    content.vb: Public Function GetNewId As Integer
  overload: OfficeOpenXml.FormulaParsing.ExcelAddressCache.GetNewId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.FormulaParsing.ExcelAddressCache.Add(System.Int32,System.String)
  commentId: M:OfficeOpenXml.FormulaParsing.ExcelAddressCache.Add(System.Int32,System.String)
  id: Add(System.Int32,System.String)
  parent: OfficeOpenXml.FormulaParsing.ExcelAddressCache
  langs:
  - csharp
  - vb
  name: Add(Int32, String)
  nameWithType: ExcelAddressCache.Add(Int32, String)
  fullName: OfficeOpenXml.FormulaParsing.ExcelAddressCache.Add(System.Int32, System.String)
  type: Method
  source:
    remote:
      path: src/EPPlus/FormulaParsing/ExcelAddressCache.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Add
    path: ../src/EPPlus/FormulaParsing/ExcelAddressCache.cs
    startLine: 47
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing
  summary: "\nAdds an address to the cache\n"
  example: []
  syntax:
    content: public bool Add(int id, string address)
    parameters:
    - id: id
      type: System.Int32
      description: ''
    - id: address
      type: System.String
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function Add(id As Integer, address As String) As Boolean
  overload: OfficeOpenXml.FormulaParsing.ExcelAddressCache.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.FormulaParsing.ExcelAddressCache.Count
  commentId: P:OfficeOpenXml.FormulaParsing.ExcelAddressCache.Count
  id: Count
  parent: OfficeOpenXml.FormulaParsing.ExcelAddressCache
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: ExcelAddressCache.Count
  fullName: OfficeOpenXml.FormulaParsing.ExcelAddressCache.Count
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/ExcelAddressCache.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Count
    path: ../src/EPPlus/FormulaParsing/ExcelAddressCache.cs
    startLine: 63
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing
  summary: "\nNumber of items in the cache\n"
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: OfficeOpenXml.FormulaParsing.ExcelAddressCache.Count*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.FormulaParsing.ExcelAddressCache.Get(System.Int32)
  commentId: M:OfficeOpenXml.FormulaParsing.ExcelAddressCache.Get(System.Int32)
  id: Get(System.Int32)
  parent: OfficeOpenXml.FormulaParsing.ExcelAddressCache
  langs:
  - csharp
  - vb
  name: Get(Int32)
  nameWithType: ExcelAddressCache.Get(Int32)
  fullName: OfficeOpenXml.FormulaParsing.ExcelAddressCache.Get(System.Int32)
  type: Method
  source:
    remote:
      path: src/EPPlus/FormulaParsing/ExcelAddressCache.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Get
    path: ../src/EPPlus/FormulaParsing/ExcelAddressCache.cs
    startLine: 73
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing
  summary: "\nReturns an address by its cache id\n"
  example: []
  syntax:
    content: public string Get(int id)
    parameters:
    - id: id
      type: System.Int32
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Public Function Get(id As Integer) As String
  overload: OfficeOpenXml.FormulaParsing.ExcelAddressCache.Get*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.FormulaParsing.ExcelAddressCache.Clear
  commentId: M:OfficeOpenXml.FormulaParsing.ExcelAddressCache.Clear
  id: Clear
  parent: OfficeOpenXml.FormulaParsing.ExcelAddressCache
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: ExcelAddressCache.Clear()
  fullName: OfficeOpenXml.FormulaParsing.ExcelAddressCache.Clear()
  type: Method
  source:
    remote:
      path: src/EPPlus/FormulaParsing/ExcelAddressCache.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Clear
    path: ../src/EPPlus/FormulaParsing/ExcelAddressCache.cs
    startLine: 82
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing
  summary: "\nClears the cache\n"
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  overload: OfficeOpenXml.FormulaParsing.ExcelAddressCache.Clear*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: OfficeOpenXml.FormulaParsing
  commentId: N:OfficeOpenXml.FormulaParsing
  name: OfficeOpenXml.FormulaParsing
  nameWithType: OfficeOpenXml.FormulaParsing
  fullName: OfficeOpenXml.FormulaParsing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml.FormulaParsing.ExcelAddressCache.Add(System.Int32,System.String)
  commentId: M:OfficeOpenXml.FormulaParsing.ExcelAddressCache.Add(System.Int32,System.String)
  isExternal: true
- uid: OfficeOpenXml.FormulaParsing.ExcelAddressCache.GetNewId*
  commentId: Overload:OfficeOpenXml.FormulaParsing.ExcelAddressCache.GetNewId
  name: GetNewId
  nameWithType: ExcelAddressCache.GetNewId
  fullName: OfficeOpenXml.FormulaParsing.ExcelAddressCache.GetNewId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: OfficeOpenXml.FormulaParsing.ExcelAddressCache.Add*
  commentId: Overload:OfficeOpenXml.FormulaParsing.ExcelAddressCache.Add
  name: Add
  nameWithType: ExcelAddressCache.Add
  fullName: OfficeOpenXml.FormulaParsing.ExcelAddressCache.Add
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: OfficeOpenXml.FormulaParsing.ExcelAddressCache.Count*
  commentId: Overload:OfficeOpenXml.FormulaParsing.ExcelAddressCache.Count
  name: Count
  nameWithType: ExcelAddressCache.Count
  fullName: OfficeOpenXml.FormulaParsing.ExcelAddressCache.Count
- uid: OfficeOpenXml.FormulaParsing.ExcelAddressCache.Get*
  commentId: Overload:OfficeOpenXml.FormulaParsing.ExcelAddressCache.Get
  name: Get
  nameWithType: ExcelAddressCache.Get
  fullName: OfficeOpenXml.FormulaParsing.ExcelAddressCache.Get
- uid: OfficeOpenXml.FormulaParsing.ExcelAddressCache.Clear*
  commentId: Overload:OfficeOpenXml.FormulaParsing.ExcelAddressCache.Clear
  name: Clear
  nameWithType: ExcelAddressCache.Clear
  fullName: OfficeOpenXml.FormulaParsing.ExcelAddressCache.Clear
