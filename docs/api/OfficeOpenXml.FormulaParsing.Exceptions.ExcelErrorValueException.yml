### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.FormulaParsing.Exceptions.ExcelErrorValueException
  commentId: T:OfficeOpenXml.FormulaParsing.Exceptions.ExcelErrorValueException
  id: ExcelErrorValueException
  parent: OfficeOpenXml.FormulaParsing.Exceptions
  children:
  - OfficeOpenXml.FormulaParsing.Exceptions.ExcelErrorValueException.#ctor(OfficeOpenXml.eErrorType)
  - OfficeOpenXml.FormulaParsing.Exceptions.ExcelErrorValueException.#ctor(OfficeOpenXml.ExcelErrorValue)
  - OfficeOpenXml.FormulaParsing.Exceptions.ExcelErrorValueException.#ctor(System.String,OfficeOpenXml.ExcelErrorValue)
  - OfficeOpenXml.FormulaParsing.Exceptions.ExcelErrorValueException.ErrorValue
  langs:
  - csharp
  - vb
  name: ExcelErrorValueException
  nameWithType: ExcelErrorValueException
  fullName: OfficeOpenXml.FormulaParsing.Exceptions.ExcelErrorValueException
  type: Class
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Exceptions/ExcelErrorValueException.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ExcelErrorValueException
    path: ../src/EPPlus/FormulaParsing/Exceptions/ExcelErrorValueException.cs
    startLine: 25
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Exceptions
  summary: "\nThis Exception represents an Excel error. When this exception is thrown\nfrom an Excel function, the ErrorValue code will be set as the value of the\nparsed cell.\n"
  example: []
  syntax:
    content: 'public class ExcelErrorValueException : Exception, ISerializable'
    content.vb: >-
      Public Class ExcelErrorValueException
          Inherits Exception
          Implements ISerializable
  seealso:
  - linkId: OfficeOpenXml.ExcelErrorValue
    commentId: T:OfficeOpenXml.ExcelErrorValue
  inheritance:
  - System.Object
  - System.Exception
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.Exception.GetBaseException
  - System.Exception.GetType
  - System.Exception.ToString
  - System.Exception.Data
  - System.Exception.HelpLink
  - System.Exception.HResult
  - System.Exception.InnerException
  - System.Exception.Message
  - System.Exception.Source
  - System.Exception.StackTrace
  - System.Exception.TargetSite
  - System.Exception.SerializeObjectState
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OfficeOpenXml.FormulaParsing.Exceptions.ExcelErrorValueException.#ctor(OfficeOpenXml.ExcelErrorValue)
  commentId: M:OfficeOpenXml.FormulaParsing.Exceptions.ExcelErrorValueException.#ctor(OfficeOpenXml.ExcelErrorValue)
  id: '#ctor(OfficeOpenXml.ExcelErrorValue)'
  parent: OfficeOpenXml.FormulaParsing.Exceptions.ExcelErrorValueException
  langs:
  - csharp
  - vb
  name: ExcelErrorValueException(ExcelErrorValue)
  nameWithType: ExcelErrorValueException.ExcelErrorValueException(ExcelErrorValue)
  fullName: OfficeOpenXml.FormulaParsing.Exceptions.ExcelErrorValueException.ExcelErrorValueException(OfficeOpenXml.ExcelErrorValue)
  type: Constructor
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Exceptions/ExcelErrorValueException.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: .ctor
    path: ../src/EPPlus/FormulaParsing/Exceptions/ExcelErrorValueException.cs
    startLine: 31
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Exceptions
  summary: "\nConstructor\n"
  example: []
  syntax:
    content: public ExcelErrorValueException(ExcelErrorValue error)
    parameters:
    - id: error
      type: OfficeOpenXml.ExcelErrorValue
      description: The error value causing the exception
    content.vb: Public Sub New(error As ExcelErrorValue)
  overload: OfficeOpenXml.FormulaParsing.Exceptions.ExcelErrorValueException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.FormulaParsing.Exceptions.ExcelErrorValueException.#ctor(System.String,OfficeOpenXml.ExcelErrorValue)
  commentId: M:OfficeOpenXml.FormulaParsing.Exceptions.ExcelErrorValueException.#ctor(System.String,OfficeOpenXml.ExcelErrorValue)
  id: '#ctor(System.String,OfficeOpenXml.ExcelErrorValue)'
  parent: OfficeOpenXml.FormulaParsing.Exceptions.ExcelErrorValueException
  langs:
  - csharp
  - vb
  name: ExcelErrorValueException(String, ExcelErrorValue)
  nameWithType: ExcelErrorValueException.ExcelErrorValueException(String, ExcelErrorValue)
  fullName: OfficeOpenXml.FormulaParsing.Exceptions.ExcelErrorValueException.ExcelErrorValueException(System.String, OfficeOpenXml.ExcelErrorValue)
  type: Constructor
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Exceptions/ExcelErrorValueException.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: .ctor
    path: ../src/EPPlus/FormulaParsing/Exceptions/ExcelErrorValueException.cs
    startLine: 41
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Exceptions
  summary: "\nConstructor\n"
  example: []
  syntax:
    content: public ExcelErrorValueException(string message, ExcelErrorValue error)
    parameters:
    - id: message
      type: System.String
      description: An error message for the exception
    - id: error
      type: OfficeOpenXml.ExcelErrorValue
      description: The error value causing the exception
    content.vb: Public Sub New(message As String, error As ExcelErrorValue)
  overload: OfficeOpenXml.FormulaParsing.Exceptions.ExcelErrorValueException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.FormulaParsing.Exceptions.ExcelErrorValueException.#ctor(OfficeOpenXml.eErrorType)
  commentId: M:OfficeOpenXml.FormulaParsing.Exceptions.ExcelErrorValueException.#ctor(OfficeOpenXml.eErrorType)
  id: '#ctor(OfficeOpenXml.eErrorType)'
  parent: OfficeOpenXml.FormulaParsing.Exceptions.ExcelErrorValueException
  langs:
  - csharp
  - vb
  name: ExcelErrorValueException(eErrorType)
  nameWithType: ExcelErrorValueException.ExcelErrorValueException(eErrorType)
  fullName: OfficeOpenXml.FormulaParsing.Exceptions.ExcelErrorValueException.ExcelErrorValueException(OfficeOpenXml.eErrorType)
  type: Constructor
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Exceptions/ExcelErrorValueException.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: .ctor
    path: ../src/EPPlus/FormulaParsing/Exceptions/ExcelErrorValueException.cs
    startLine: 50
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Exceptions
  summary: "\nConstructor\n"
  example: []
  syntax:
    content: public ExcelErrorValueException(eErrorType errorType)
    parameters:
    - id: errorType
      type: OfficeOpenXml.eErrorType
      description: The error type causing the exception
    content.vb: Public Sub New(errorType As eErrorType)
  overload: OfficeOpenXml.FormulaParsing.Exceptions.ExcelErrorValueException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.FormulaParsing.Exceptions.ExcelErrorValueException.ErrorValue
  commentId: P:OfficeOpenXml.FormulaParsing.Exceptions.ExcelErrorValueException.ErrorValue
  id: ErrorValue
  parent: OfficeOpenXml.FormulaParsing.Exceptions.ExcelErrorValueException
  langs:
  - csharp
  - vb
  name: ErrorValue
  nameWithType: ExcelErrorValueException.ErrorValue
  fullName: OfficeOpenXml.FormulaParsing.Exceptions.ExcelErrorValueException.ErrorValue
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Exceptions/ExcelErrorValueException.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ErrorValue
    path: ../src/EPPlus/FormulaParsing/Exceptions/ExcelErrorValueException.cs
    startLine: 59
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Exceptions
  summary: "\nThe error value\n"
  example: []
  syntax:
    content: public ExcelErrorValue ErrorValue { get; }
    parameters: []
    return:
      type: OfficeOpenXml.ExcelErrorValue
    content.vb: Public ReadOnly Property ErrorValue As ExcelErrorValue
  overload: OfficeOpenXml.FormulaParsing.Exceptions.ExcelErrorValueException.ErrorValue*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: OfficeOpenXml.ExcelErrorValue
  commentId: T:OfficeOpenXml.ExcelErrorValue
  parent: OfficeOpenXml
  name: ExcelErrorValue
  nameWithType: ExcelErrorValue
  fullName: OfficeOpenXml.ExcelErrorValue
- uid: OfficeOpenXml.FormulaParsing.Exceptions
  commentId: N:OfficeOpenXml.FormulaParsing.Exceptions
  name: OfficeOpenXml.FormulaParsing.Exceptions
  nameWithType: OfficeOpenXml.FormulaParsing.Exceptions
  fullName: OfficeOpenXml.FormulaParsing.Exceptions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: System.Exception.GetBaseException
  commentId: M:System.Exception.GetBaseException
  parent: System.Exception
  isExternal: true
  name: GetBaseException()
  nameWithType: Exception.GetBaseException()
  fullName: System.Exception.GetBaseException()
  spec.csharp:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    nameWithType: Exception.GetBaseException
    fullName: System.Exception.GetBaseException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    nameWithType: Exception.GetBaseException
    fullName: System.Exception.GetBaseException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.GetType
  commentId: M:System.Exception.GetType
  parent: System.Exception
  isExternal: true
  name: GetType()
  nameWithType: Exception.GetType()
  fullName: System.Exception.GetType()
  spec.csharp:
  - uid: System.Exception.GetType
    name: GetType
    nameWithType: Exception.GetType
    fullName: System.Exception.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetType
    name: GetType
    nameWithType: Exception.GetType
    fullName: System.Exception.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.ToString
  commentId: M:System.Exception.ToString
  parent: System.Exception
  isExternal: true
  name: ToString()
  nameWithType: Exception.ToString()
  fullName: System.Exception.ToString()
  spec.csharp:
  - uid: System.Exception.ToString
    name: ToString
    nameWithType: Exception.ToString
    fullName: System.Exception.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.ToString
    name: ToString
    nameWithType: Exception.ToString
    fullName: System.Exception.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.Data
  commentId: P:System.Exception.Data
  parent: System.Exception
  isExternal: true
  name: Data
  nameWithType: Exception.Data
  fullName: System.Exception.Data
- uid: System.Exception.HelpLink
  commentId: P:System.Exception.HelpLink
  parent: System.Exception
  isExternal: true
  name: HelpLink
  nameWithType: Exception.HelpLink
  fullName: System.Exception.HelpLink
- uid: System.Exception.HResult
  commentId: P:System.Exception.HResult
  parent: System.Exception
  isExternal: true
  name: HResult
  nameWithType: Exception.HResult
  fullName: System.Exception.HResult
- uid: System.Exception.InnerException
  commentId: P:System.Exception.InnerException
  parent: System.Exception
  isExternal: true
  name: InnerException
  nameWithType: Exception.InnerException
  fullName: System.Exception.InnerException
- uid: System.Exception.Message
  commentId: P:System.Exception.Message
  parent: System.Exception
  isExternal: true
  name: Message
  nameWithType: Exception.Message
  fullName: System.Exception.Message
- uid: System.Exception.Source
  commentId: P:System.Exception.Source
  parent: System.Exception
  isExternal: true
  name: Source
  nameWithType: Exception.Source
  fullName: System.Exception.Source
- uid: System.Exception.StackTrace
  commentId: P:System.Exception.StackTrace
  parent: System.Exception
  isExternal: true
  name: StackTrace
  nameWithType: Exception.StackTrace
  fullName: System.Exception.StackTrace
- uid: System.Exception.TargetSite
  commentId: P:System.Exception.TargetSite
  parent: System.Exception
  isExternal: true
  name: TargetSite
  nameWithType: Exception.TargetSite
  fullName: System.Exception.TargetSite
- uid: System.Exception.SerializeObjectState
  commentId: E:System.Exception.SerializeObjectState
  parent: System.Exception
  isExternal: true
  name: SerializeObjectState
  nameWithType: Exception.SerializeObjectState
  fullName: System.Exception.SerializeObjectState
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml
  commentId: N:OfficeOpenXml
  name: OfficeOpenXml
  nameWithType: OfficeOpenXml
  fullName: OfficeOpenXml
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: OfficeOpenXml.FormulaParsing.Exceptions.ExcelErrorValueException.#ctor*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Exceptions.ExcelErrorValueException.#ctor
  name: ExcelErrorValueException
  nameWithType: ExcelErrorValueException.ExcelErrorValueException
  fullName: OfficeOpenXml.FormulaParsing.Exceptions.ExcelErrorValueException.ExcelErrorValueException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OfficeOpenXml.eErrorType
  commentId: T:OfficeOpenXml.eErrorType
  parent: OfficeOpenXml
  name: eErrorType
  nameWithType: eErrorType
  fullName: OfficeOpenXml.eErrorType
- uid: OfficeOpenXml.FormulaParsing.Exceptions.ExcelErrorValueException.ErrorValue*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Exceptions.ExcelErrorValueException.ErrorValue
  name: ErrorValue
  nameWithType: ExcelErrorValueException.ErrorValue
  fullName: OfficeOpenXml.FormulaParsing.Exceptions.ExcelErrorValueException.ErrorValue
