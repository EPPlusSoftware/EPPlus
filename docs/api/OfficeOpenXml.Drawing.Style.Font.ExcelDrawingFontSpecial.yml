### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.Drawing.Style.Font.ExcelDrawingFontSpecial
  commentId: T:OfficeOpenXml.Drawing.Style.Font.ExcelDrawingFontSpecial
  id: ExcelDrawingFontSpecial
  parent: OfficeOpenXml.Drawing.Style.Font
  children:
  - OfficeOpenXml.Drawing.Style.Font.ExcelDrawingFontSpecial.Panose
  - OfficeOpenXml.Drawing.Style.Font.ExcelDrawingFontSpecial.PitchFamily
  - OfficeOpenXml.Drawing.Style.Font.ExcelDrawingFontSpecial.Type
  langs:
  - csharp
  - vb
  name: ExcelDrawingFontSpecial
  nameWithType: ExcelDrawingFontSpecial
  fullName: OfficeOpenXml.Drawing.Style.Font.ExcelDrawingFontSpecial
  type: Class
  source:
    remote:
      path: src/EPPlus/Drawing/Style/Font/ExcelDrawingFontSpecial.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ExcelDrawingFontSpecial
    path: ../src/EPPlus/Drawing/Style/Font/ExcelDrawingFontSpecial.cs
    startLine: 20
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Style.Font
  summary: "\nRepresents a special font, Complex, Latin or East asian \n"
  example: []
  syntax:
    content: 'public class ExcelDrawingFontSpecial : ExcelDrawingFontBase'
    content.vb: >-
      Public Class ExcelDrawingFontSpecial
          Inherits ExcelDrawingFontBase
  inheritance:
  - System.Object
  - OfficeOpenXml.XmlHelper
  - OfficeOpenXml.Drawing.Style.Font.ExcelDrawingFontBase
  inheritedMembers:
  - OfficeOpenXml.Drawing.Style.Font.ExcelDrawingFontBase.Typeface
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OfficeOpenXml.Drawing.Style.Font.ExcelDrawingFontSpecial.Type
  commentId: P:OfficeOpenXml.Drawing.Style.Font.ExcelDrawingFontSpecial.Type
  id: Type
  parent: OfficeOpenXml.Drawing.Style.Font.ExcelDrawingFontSpecial
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: ExcelDrawingFontSpecial.Type
  fullName: OfficeOpenXml.Drawing.Style.Font.ExcelDrawingFontSpecial.Type
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Style/Font/ExcelDrawingFontSpecial.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Type
    path: ../src/EPPlus/Drawing/Style/Font/ExcelDrawingFontSpecial.cs
    startLine: 29
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Style.Font
  summary: "\nThe type of font\n"
  example: []
  syntax:
    content: public eFontType Type { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.eFontType
    content.vb: Public ReadOnly Property Type As eFontType
  overload: OfficeOpenXml.Drawing.Style.Font.ExcelDrawingFontSpecial.Type*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Drawing.Style.Font.ExcelDrawingFontSpecial.Panose
  commentId: P:OfficeOpenXml.Drawing.Style.Font.ExcelDrawingFontSpecial.Panose
  id: Panose
  parent: OfficeOpenXml.Drawing.Style.Font.ExcelDrawingFontSpecial
  langs:
  - csharp
  - vb
  name: Panose
  nameWithType: ExcelDrawingFontSpecial.Panose
  fullName: OfficeOpenXml.Drawing.Style.Font.ExcelDrawingFontSpecial.Panose
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Style/Font/ExcelDrawingFontSpecial.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Panose
    path: ../src/EPPlus/Drawing/Style/Font/ExcelDrawingFontSpecial.cs
    startLine: 51
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Style.Font
  summary: "\nSpecifies the Panose-1 classification number for the current font using the mechanism\ndefined in ยง5.2.7.17 of ISO/IEC 14496-22.\nThis value is used as one piece of information to guide selection of a similar alternate font if the desired font is unavailable.\n"
  example: []
  syntax:
    content: public string Panose { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Panose As String
  overload: OfficeOpenXml.Drawing.Style.Font.ExcelDrawingFontSpecial.Panose*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.Style.Font.ExcelDrawingFontSpecial.PitchFamily
  commentId: P:OfficeOpenXml.Drawing.Style.Font.ExcelDrawingFontSpecial.PitchFamily
  id: PitchFamily
  parent: OfficeOpenXml.Drawing.Style.Font.ExcelDrawingFontSpecial
  langs:
  - csharp
  - vb
  name: PitchFamily
  nameWithType: ExcelDrawingFontSpecial.PitchFamily
  fullName: OfficeOpenXml.Drawing.Style.Font.ExcelDrawingFontSpecial.PitchFamily
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Style/Font/ExcelDrawingFontSpecial.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: PitchFamily
    path: ../src/EPPlus/Drawing/Style/Font/ExcelDrawingFontSpecial.cs
    startLine: 65
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Style.Font
  summary: "\nThe font pitch as well as the font family for the font\n"
  example: []
  syntax:
    content: public ePitchFamily PitchFamily { get; set; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.ePitchFamily
    content.vb: Public Property PitchFamily As ePitchFamily
  overload: OfficeOpenXml.Drawing.Style.Font.ExcelDrawingFontSpecial.PitchFamily*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: OfficeOpenXml.Drawing.Style.Font
  commentId: N:OfficeOpenXml.Drawing.Style.Font
  name: OfficeOpenXml.Drawing.Style.Font
  nameWithType: OfficeOpenXml.Drawing.Style.Font
  fullName: OfficeOpenXml.Drawing.Style.Font
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OfficeOpenXml.XmlHelper
  commentId: T:OfficeOpenXml.XmlHelper
  parent: OfficeOpenXml
  name: XmlHelper
  nameWithType: XmlHelper
  fullName: OfficeOpenXml.XmlHelper
- uid: OfficeOpenXml.Drawing.Style.Font.ExcelDrawingFontBase
  commentId: T:OfficeOpenXml.Drawing.Style.Font.ExcelDrawingFontBase
  parent: OfficeOpenXml.Drawing.Style.Font
  name: ExcelDrawingFontBase
  nameWithType: ExcelDrawingFontBase
  fullName: OfficeOpenXml.Drawing.Style.Font.ExcelDrawingFontBase
- uid: OfficeOpenXml.Drawing.Style.Font.ExcelDrawingFontBase.Typeface
  commentId: P:OfficeOpenXml.Drawing.Style.Font.ExcelDrawingFontBase.Typeface
  parent: OfficeOpenXml.Drawing.Style.Font.ExcelDrawingFontBase
  name: Typeface
  nameWithType: ExcelDrawingFontBase.Typeface
  fullName: OfficeOpenXml.Drawing.Style.Font.ExcelDrawingFontBase.Typeface
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml
  commentId: N:OfficeOpenXml
  name: OfficeOpenXml
  nameWithType: OfficeOpenXml
  fullName: OfficeOpenXml
- uid: OfficeOpenXml.Drawing.Style.Font.ExcelDrawingFontSpecial.Type*
  commentId: Overload:OfficeOpenXml.Drawing.Style.Font.ExcelDrawingFontSpecial.Type
  name: Type
  nameWithType: ExcelDrawingFontSpecial.Type
  fullName: OfficeOpenXml.Drawing.Style.Font.ExcelDrawingFontSpecial.Type
- uid: OfficeOpenXml.Drawing.eFontType
  commentId: T:OfficeOpenXml.Drawing.eFontType
  parent: OfficeOpenXml.Drawing
  name: eFontType
  nameWithType: eFontType
  fullName: OfficeOpenXml.Drawing.eFontType
- uid: OfficeOpenXml.Drawing
  commentId: N:OfficeOpenXml.Drawing
  name: OfficeOpenXml.Drawing
  nameWithType: OfficeOpenXml.Drawing
  fullName: OfficeOpenXml.Drawing
- uid: OfficeOpenXml.Drawing.Style.Font.ExcelDrawingFontSpecial.Panose*
  commentId: Overload:OfficeOpenXml.Drawing.Style.Font.ExcelDrawingFontSpecial.Panose
  name: Panose
  nameWithType: ExcelDrawingFontSpecial.Panose
  fullName: OfficeOpenXml.Drawing.Style.Font.ExcelDrawingFontSpecial.Panose
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OfficeOpenXml.Drawing.Style.Font.ExcelDrawingFontSpecial.PitchFamily*
  commentId: Overload:OfficeOpenXml.Drawing.Style.Font.ExcelDrawingFontSpecial.PitchFamily
  name: PitchFamily
  nameWithType: ExcelDrawingFontSpecial.PitchFamily
  fullName: OfficeOpenXml.Drawing.Style.Font.ExcelDrawingFontSpecial.PitchFamily
- uid: OfficeOpenXml.Drawing.ePitchFamily
  commentId: T:OfficeOpenXml.Drawing.ePitchFamily
  parent: OfficeOpenXml.Drawing
  name: ePitchFamily
  nameWithType: ePitchFamily
  fullName: OfficeOpenXml.Drawing.ePitchFamily
