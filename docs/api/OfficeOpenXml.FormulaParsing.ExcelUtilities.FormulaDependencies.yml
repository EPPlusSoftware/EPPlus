### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencies
  commentId: T:OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencies
  id: FormulaDependencies
  parent: OfficeOpenXml.FormulaParsing.ExcelUtilities
  children:
  - OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencies.#ctor
  - OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencies.#ctor(OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencyFactory)
  - OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencies.AddFormulaScope(OfficeOpenXml.FormulaParsing.ParsingScope)
  - OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencies.Clear
  - OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencies.Dependencies
  langs:
  - csharp
  - vb
  name: FormulaDependencies
  nameWithType: FormulaDependencies
  fullName: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencies
  type: Class
  source:
    remote:
      path: src/EPPlus/FormulaParsing/ExcelUtilities/FormulaDependencies.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: FormulaDependencies
    path: ../src/EPPlus/FormulaParsing/ExcelUtilities/FormulaDependencies.cs
    startLine: 20
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.ExcelUtilities
  syntax:
    content: public class FormulaDependencies
    content.vb: Public Class FormulaDependencies
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencies.#ctor
  commentId: M:OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencies.#ctor
  id: '#ctor'
  parent: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencies
  langs:
  - csharp
  - vb
  name: FormulaDependencies()
  nameWithType: FormulaDependencies.FormulaDependencies()
  fullName: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencies.FormulaDependencies()
  type: Constructor
  source:
    remote:
      path: src/EPPlus/FormulaParsing/ExcelUtilities/FormulaDependencies.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: .ctor
    path: ../src/EPPlus/FormulaParsing/ExcelUtilities/FormulaDependencies.cs
    startLine: 22
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.ExcelUtilities
  syntax:
    content: public FormulaDependencies()
    content.vb: Public Sub New
  overload: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencies.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencies.#ctor(OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencyFactory)
  commentId: M:OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencies.#ctor(OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencyFactory)
  id: '#ctor(OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencyFactory)'
  parent: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencies
  langs:
  - csharp
  - vb
  name: FormulaDependencies(FormulaDependencyFactory)
  nameWithType: FormulaDependencies.FormulaDependencies(FormulaDependencyFactory)
  fullName: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencies.FormulaDependencies(OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencyFactory)
  type: Constructor
  source:
    remote:
      path: src/EPPlus/FormulaParsing/ExcelUtilities/FormulaDependencies.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: .ctor
    path: ../src/EPPlus/FormulaParsing/ExcelUtilities/FormulaDependencies.cs
    startLine: 28
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.ExcelUtilities
  syntax:
    content: public FormulaDependencies(FormulaDependencyFactory formulaDependencyFactory)
    parameters:
    - id: formulaDependencyFactory
      type: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencyFactory
    content.vb: Public Sub New(formulaDependencyFactory As FormulaDependencyFactory)
  overload: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencies.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencies.Dependencies
  commentId: P:OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencies.Dependencies
  id: Dependencies
  parent: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencies
  langs:
  - csharp
  - vb
  name: Dependencies
  nameWithType: FormulaDependencies.Dependencies
  fullName: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencies.Dependencies
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/ExcelUtilities/FormulaDependencies.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Dependencies
    path: ../src/EPPlus/FormulaParsing/ExcelUtilities/FormulaDependencies.cs
    startLine: 36
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.ExcelUtilities
  syntax:
    content: public IEnumerable<KeyValuePair<string, FormulaDependency>> Dependencies { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependency}}
    content.vb: Public ReadOnly Property Dependencies As IEnumerable(Of KeyValuePair(Of String, FormulaDependency))
  overload: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencies.Dependencies*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencies.AddFormulaScope(OfficeOpenXml.FormulaParsing.ParsingScope)
  commentId: M:OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencies.AddFormulaScope(OfficeOpenXml.FormulaParsing.ParsingScope)
  id: AddFormulaScope(OfficeOpenXml.FormulaParsing.ParsingScope)
  parent: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencies
  langs:
  - csharp
  - vb
  name: AddFormulaScope(ParsingScope)
  nameWithType: FormulaDependencies.AddFormulaScope(ParsingScope)
  fullName: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencies.AddFormulaScope(OfficeOpenXml.FormulaParsing.ParsingScope)
  type: Method
  source:
    remote:
      path: src/EPPlus/FormulaParsing/ExcelUtilities/FormulaDependencies.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: AddFormulaScope
    path: ../src/EPPlus/FormulaParsing/ExcelUtilities/FormulaDependencies.cs
    startLine: 38
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.ExcelUtilities
  syntax:
    content: public void AddFormulaScope(ParsingScope parsingScope)
    parameters:
    - id: parsingScope
      type: OfficeOpenXml.FormulaParsing.ParsingScope
    content.vb: Public Sub AddFormulaScope(parsingScope As ParsingScope)
  overload: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencies.AddFormulaScope*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencies.Clear
  commentId: M:OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencies.Clear
  id: Clear
  parent: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencies
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: FormulaDependencies.Clear()
  fullName: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencies.Clear()
  type: Method
  source:
    remote:
      path: src/EPPlus/FormulaParsing/ExcelUtilities/FormulaDependencies.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Clear
    path: ../src/EPPlus/FormulaParsing/ExcelUtilities/FormulaDependencies.cs
    startLine: 58
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.ExcelUtilities
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  overload: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencies.Clear*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: OfficeOpenXml.FormulaParsing.ExcelUtilities
  commentId: N:OfficeOpenXml.FormulaParsing.ExcelUtilities
  name: OfficeOpenXml.FormulaParsing.ExcelUtilities
  nameWithType: OfficeOpenXml.FormulaParsing.ExcelUtilities
  fullName: OfficeOpenXml.FormulaParsing.ExcelUtilities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencies.#ctor*
  commentId: Overload:OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencies.#ctor
  name: FormulaDependencies
  nameWithType: FormulaDependencies.FormulaDependencies
  fullName: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencies.FormulaDependencies
- uid: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencyFactory
  commentId: T:OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencyFactory
  parent: OfficeOpenXml.FormulaParsing.ExcelUtilities
  name: FormulaDependencyFactory
  nameWithType: FormulaDependencyFactory
  fullName: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencyFactory
- uid: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencies.Dependencies*
  commentId: Overload:OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencies.Dependencies
  name: Dependencies
  nameWithType: FormulaDependencies.Dependencies
  fullName: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencies.Dependencies
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependency}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependency}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<String, FormulaDependency>>
  nameWithType: IEnumerable<KeyValuePair<String, FormulaDependency>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependency>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, FormulaDependency))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependency))
  name.vb: IEnumerable(Of KeyValuePair(Of String, FormulaDependency))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependency
    name: FormulaDependency
    nameWithType: FormulaDependency
    fullName: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependency
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependency
    name: FormulaDependency
    nameWithType: FormulaDependency
    fullName: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependency
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencies.AddFormulaScope*
  commentId: Overload:OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencies.AddFormulaScope
  name: AddFormulaScope
  nameWithType: FormulaDependencies.AddFormulaScope
  fullName: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencies.AddFormulaScope
- uid: OfficeOpenXml.FormulaParsing.ParsingScope
  commentId: T:OfficeOpenXml.FormulaParsing.ParsingScope
  parent: OfficeOpenXml.FormulaParsing
  name: ParsingScope
  nameWithType: ParsingScope
  fullName: OfficeOpenXml.FormulaParsing.ParsingScope
- uid: OfficeOpenXml.FormulaParsing
  commentId: N:OfficeOpenXml.FormulaParsing
  name: OfficeOpenXml.FormulaParsing
  nameWithType: OfficeOpenXml.FormulaParsing
  fullName: OfficeOpenXml.FormulaParsing
- uid: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencies.Clear*
  commentId: Overload:OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencies.Clear
  name: Clear
  nameWithType: FormulaDependencies.Clear
  fullName: OfficeOpenXml.FormulaParsing.ExcelUtilities.FormulaDependencies.Clear
