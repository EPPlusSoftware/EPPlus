### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.Drawing.ExcelTextRun
  commentId: T:OfficeOpenXml.Drawing.ExcelTextRun
  id: ExcelTextRun
  parent: OfficeOpenXml.Drawing
  children:
  - OfficeOpenXml.Drawing.ExcelTextRun.Baseline
  - OfficeOpenXml.Drawing.ExcelTextRun.Bold
  - OfficeOpenXml.Drawing.ExcelTextRun.Capitalization
  - OfficeOpenXml.Drawing.ExcelTextRun.FontSize
  - OfficeOpenXml.Drawing.ExcelTextRun.Italic
  - OfficeOpenXml.Drawing.ExcelTextRun.Kerning
  - OfficeOpenXml.Drawing.ExcelTextRun.Spacing
  - OfficeOpenXml.Drawing.ExcelTextRun.Strike
  - OfficeOpenXml.Drawing.ExcelTextRun.UnderLine
  langs:
  - csharp
  - vb
  name: ExcelTextRun
  nameWithType: ExcelTextRun
  fullName: OfficeOpenXml.Drawing.ExcelTextRun
  type: Class
  source:
    remote:
      path: src/EPPlus/Drawing/Style/Text/ExcelTextRun.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ExcelTextRun
    path: ../src/EPPlus/Drawing/Style/Text/ExcelTextRun.cs
    startLine: 20
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nA richtext part\n"
  example: []
  syntax:
    content: 'public class ExcelTextRun : XmlHelper'
    content.vb: >-
      Public Class ExcelTextRun
          Inherits XmlHelper
  inheritance:
  - System.Object
  - OfficeOpenXml.XmlHelper
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OfficeOpenXml.Drawing.ExcelTextRun.Capitalization
  commentId: P:OfficeOpenXml.Drawing.ExcelTextRun.Capitalization
  id: Capitalization
  parent: OfficeOpenXml.Drawing.ExcelTextRun
  langs:
  - csharp
  - vb
  name: Capitalization
  nameWithType: ExcelTextRun.Capitalization
  fullName: OfficeOpenXml.Drawing.ExcelTextRun.Capitalization
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Style/Text/ExcelTextRun.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Capitalization
    path: ../src/EPPlus/Drawing/Style/Text/ExcelTextRun.cs
    startLine: 32
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nThe capitalization that is to be applied\n"
  example: []
  syntax:
    content: public eTextCapsType Capitalization { get; set; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.eTextCapsType
    content.vb: Public Property Capitalization As eTextCapsType
  overload: OfficeOpenXml.Drawing.ExcelTextRun.Capitalization*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.ExcelTextRun.Kerning
  commentId: P:OfficeOpenXml.Drawing.ExcelTextRun.Kerning
  id: Kerning
  parent: OfficeOpenXml.Drawing.ExcelTextRun
  langs:
  - csharp
  - vb
  name: Kerning
  nameWithType: ExcelTextRun.Kerning
  fullName: OfficeOpenXml.Drawing.ExcelTextRun.Kerning
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Style/Text/ExcelTextRun.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Kerning
    path: ../src/EPPlus/Drawing/Style/Text/ExcelTextRun.cs
    startLine: 46
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nThe minimum font size at which character kerning occurs\n"
  example: []
  syntax:
    content: public double Kerning { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Kerning As Double
  overload: OfficeOpenXml.Drawing.ExcelTextRun.Kerning*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.ExcelTextRun.FontSize
  commentId: P:OfficeOpenXml.Drawing.ExcelTextRun.FontSize
  id: FontSize
  parent: OfficeOpenXml.Drawing.ExcelTextRun
  langs:
  - csharp
  - vb
  name: FontSize
  nameWithType: ExcelTextRun.FontSize
  fullName: OfficeOpenXml.Drawing.ExcelTextRun.FontSize
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Style/Text/ExcelTextRun.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: FontSize
    path: ../src/EPPlus/Drawing/Style/Text/ExcelTextRun.cs
    startLine: 61
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nFontsize\nSpans from 0-4000\n"
  example: []
  syntax:
    content: public double FontSize { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property FontSize As Double
  overload: OfficeOpenXml.Drawing.ExcelTextRun.FontSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.ExcelTextRun.Spacing
  commentId: P:OfficeOpenXml.Drawing.ExcelTextRun.Spacing
  id: Spacing
  parent: OfficeOpenXml.Drawing.ExcelTextRun
  langs:
  - csharp
  - vb
  name: Spacing
  nameWithType: ExcelTextRun.Spacing
  fullName: OfficeOpenXml.Drawing.ExcelTextRun.Spacing
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Style/Text/ExcelTextRun.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Spacing
    path: ../src/EPPlus/Drawing/Style/Text/ExcelTextRun.cs
    startLine: 75
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nThe spacing between between characters\n"
  example: []
  syntax:
    content: public double Spacing { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Spacing As Double
  overload: OfficeOpenXml.Drawing.ExcelTextRun.Spacing*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.ExcelTextRun.Baseline
  commentId: P:OfficeOpenXml.Drawing.ExcelTextRun.Baseline
  id: Baseline
  parent: OfficeOpenXml.Drawing.ExcelTextRun
  langs:
  - csharp
  - vb
  name: Baseline
  nameWithType: ExcelTextRun.Baseline
  fullName: OfficeOpenXml.Drawing.ExcelTextRun.Baseline
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Style/Text/ExcelTextRun.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Baseline
    path: ../src/EPPlus/Drawing/Style/Text/ExcelTextRun.cs
    startLine: 89
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nThe baseline for both the superscript and subscript fonts in percentage\n"
  example: []
  syntax:
    content: public double Baseline { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Baseline As Double
  overload: OfficeOpenXml.Drawing.ExcelTextRun.Baseline*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.ExcelTextRun.Bold
  commentId: P:OfficeOpenXml.Drawing.ExcelTextRun.Bold
  id: Bold
  parent: OfficeOpenXml.Drawing.ExcelTextRun
  langs:
  - csharp
  - vb
  name: Bold
  nameWithType: ExcelTextRun.Bold
  fullName: OfficeOpenXml.Drawing.ExcelTextRun.Bold
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Style/Text/ExcelTextRun.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Bold
    path: ../src/EPPlus/Drawing/Style/Text/ExcelTextRun.cs
    startLine: 103
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nBold text\n"
  example: []
  syntax:
    content: public bool Bold { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Bold As Boolean
  overload: OfficeOpenXml.Drawing.ExcelTextRun.Bold*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.ExcelTextRun.Italic
  commentId: P:OfficeOpenXml.Drawing.ExcelTextRun.Italic
  id: Italic
  parent: OfficeOpenXml.Drawing.ExcelTextRun
  langs:
  - csharp
  - vb
  name: Italic
  nameWithType: ExcelTextRun.Italic
  fullName: OfficeOpenXml.Drawing.ExcelTextRun.Italic
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Style/Text/ExcelTextRun.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Italic
    path: ../src/EPPlus/Drawing/Style/Text/ExcelTextRun.cs
    startLine: 117
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nItalic text\n"
  example: []
  syntax:
    content: public bool Italic { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Italic As Boolean
  overload: OfficeOpenXml.Drawing.ExcelTextRun.Italic*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.ExcelTextRun.Strike
  commentId: P:OfficeOpenXml.Drawing.ExcelTextRun.Strike
  id: Strike
  parent: OfficeOpenXml.Drawing.ExcelTextRun
  langs:
  - csharp
  - vb
  name: Strike
  nameWithType: ExcelTextRun.Strike
  fullName: OfficeOpenXml.Drawing.ExcelTextRun.Strike
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Style/Text/ExcelTextRun.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Strike
    path: ../src/EPPlus/Drawing/Style/Text/ExcelTextRun.cs
    startLine: 131
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nStrike-out text\n"
  example: []
  syntax:
    content: public eStrikeType Strike { get; set; }
    parameters: []
    return:
      type: OfficeOpenXml.Style.eStrikeType
    content.vb: Public Property Strike As eStrikeType
  overload: OfficeOpenXml.Drawing.ExcelTextRun.Strike*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.ExcelTextRun.UnderLine
  commentId: P:OfficeOpenXml.Drawing.ExcelTextRun.UnderLine
  id: UnderLine
  parent: OfficeOpenXml.Drawing.ExcelTextRun
  langs:
  - csharp
  - vb
  name: UnderLine
  nameWithType: ExcelTextRun.UnderLine
  fullName: OfficeOpenXml.Drawing.ExcelTextRun.UnderLine
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Style/Text/ExcelTextRun.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: UnderLine
    path: ../src/EPPlus/Drawing/Style/Text/ExcelTextRun.cs
    startLine: 145
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nUnderlined text\n"
  example: []
  syntax:
    content: public eUnderLineType UnderLine { get; set; }
    parameters: []
    return:
      type: OfficeOpenXml.Style.eUnderLineType
    content.vb: Public Property UnderLine As eUnderLineType
  overload: OfficeOpenXml.Drawing.ExcelTextRun.UnderLine*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: OfficeOpenXml.Drawing
  commentId: N:OfficeOpenXml.Drawing
  name: OfficeOpenXml.Drawing
  nameWithType: OfficeOpenXml.Drawing
  fullName: OfficeOpenXml.Drawing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OfficeOpenXml.XmlHelper
  commentId: T:OfficeOpenXml.XmlHelper
  parent: OfficeOpenXml
  name: XmlHelper
  nameWithType: XmlHelper
  fullName: OfficeOpenXml.XmlHelper
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml
  commentId: N:OfficeOpenXml
  name: OfficeOpenXml
  nameWithType: OfficeOpenXml
  fullName: OfficeOpenXml
- uid: OfficeOpenXml.Drawing.ExcelTextRun.Capitalization*
  commentId: Overload:OfficeOpenXml.Drawing.ExcelTextRun.Capitalization
  name: Capitalization
  nameWithType: ExcelTextRun.Capitalization
  fullName: OfficeOpenXml.Drawing.ExcelTextRun.Capitalization
- uid: OfficeOpenXml.Drawing.eTextCapsType
  commentId: T:OfficeOpenXml.Drawing.eTextCapsType
  parent: OfficeOpenXml.Drawing
  name: eTextCapsType
  nameWithType: eTextCapsType
  fullName: OfficeOpenXml.Drawing.eTextCapsType
- uid: OfficeOpenXml.Drawing.ExcelTextRun.Kerning*
  commentId: Overload:OfficeOpenXml.Drawing.ExcelTextRun.Kerning
  name: Kerning
  nameWithType: ExcelTextRun.Kerning
  fullName: OfficeOpenXml.Drawing.ExcelTextRun.Kerning
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: OfficeOpenXml.Drawing.ExcelTextRun.FontSize*
  commentId: Overload:OfficeOpenXml.Drawing.ExcelTextRun.FontSize
  name: FontSize
  nameWithType: ExcelTextRun.FontSize
  fullName: OfficeOpenXml.Drawing.ExcelTextRun.FontSize
- uid: OfficeOpenXml.Drawing.ExcelTextRun.Spacing*
  commentId: Overload:OfficeOpenXml.Drawing.ExcelTextRun.Spacing
  name: Spacing
  nameWithType: ExcelTextRun.Spacing
  fullName: OfficeOpenXml.Drawing.ExcelTextRun.Spacing
- uid: OfficeOpenXml.Drawing.ExcelTextRun.Baseline*
  commentId: Overload:OfficeOpenXml.Drawing.ExcelTextRun.Baseline
  name: Baseline
  nameWithType: ExcelTextRun.Baseline
  fullName: OfficeOpenXml.Drawing.ExcelTextRun.Baseline
- uid: OfficeOpenXml.Drawing.ExcelTextRun.Bold*
  commentId: Overload:OfficeOpenXml.Drawing.ExcelTextRun.Bold
  name: Bold
  nameWithType: ExcelTextRun.Bold
  fullName: OfficeOpenXml.Drawing.ExcelTextRun.Bold
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: OfficeOpenXml.Drawing.ExcelTextRun.Italic*
  commentId: Overload:OfficeOpenXml.Drawing.ExcelTextRun.Italic
  name: Italic
  nameWithType: ExcelTextRun.Italic
  fullName: OfficeOpenXml.Drawing.ExcelTextRun.Italic
- uid: OfficeOpenXml.Drawing.ExcelTextRun.Strike*
  commentId: Overload:OfficeOpenXml.Drawing.ExcelTextRun.Strike
  name: Strike
  nameWithType: ExcelTextRun.Strike
  fullName: OfficeOpenXml.Drawing.ExcelTextRun.Strike
- uid: OfficeOpenXml.Style.eStrikeType
  commentId: T:OfficeOpenXml.Style.eStrikeType
  parent: OfficeOpenXml.Style
  name: eStrikeType
  nameWithType: eStrikeType
  fullName: OfficeOpenXml.Style.eStrikeType
- uid: OfficeOpenXml.Style
  commentId: N:OfficeOpenXml.Style
  name: OfficeOpenXml.Style
  nameWithType: OfficeOpenXml.Style
  fullName: OfficeOpenXml.Style
- uid: OfficeOpenXml.Drawing.ExcelTextRun.UnderLine*
  commentId: Overload:OfficeOpenXml.Drawing.ExcelTextRun.UnderLine
  name: UnderLine
  nameWithType: ExcelTextRun.UnderLine
  fullName: OfficeOpenXml.Drawing.ExcelTextRun.UnderLine
- uid: OfficeOpenXml.Style.eUnderLineType
  commentId: T:OfficeOpenXml.Style.eUnderLineType
  parent: OfficeOpenXml.Style
  name: eUnderLineType
  nameWithType: eUnderLineType
  fullName: OfficeOpenXml.Style.eUnderLineType
