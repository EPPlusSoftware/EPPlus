### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines
  commentId: T:OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines
  id: ExcelStandardChartWithLines
  parent: OfficeOpenXml.Drawing.Chart
  children:
  - OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.AddDropLines
  - OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.AddHighLowLines
  - OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.AddUpDownBars(System.Boolean,System.Boolean)
  - OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.DataLabel
  - OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.DownBar
  - OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.DropLine
  - OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.HasDataLabel
  - OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.HighLowLine
  - OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.Marker
  - OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.Series
  - OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.Smooth
  - OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.UpBar
  - OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.UpDownBarGapWidth
  langs:
  - csharp
  - vb
  name: ExcelStandardChartWithLines
  nameWithType: ExcelStandardChartWithLines
  fullName: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines
  type: Class
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelLineChart.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ExcelStandardChartWithLines
    path: ../src/EPPlus/Drawing/Chart/ExcelLineChart.cs
    startLine: 25
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nBase class for standard charts with line properties.\n"
  example: []
  syntax:
    content: 'public abstract class ExcelStandardChartWithLines : ExcelChartStandard, IDisposable, IDrawingDataLabel'
    content.vb: >-
      Public MustInherit Class ExcelStandardChartWithLines
          Inherits ExcelChartStandard
          Implements IDisposable, IDrawingDataLabel
  inheritance:
  - System.Object
  - OfficeOpenXml.XmlHelper
  - OfficeOpenXml.Drawing.ExcelDrawing
  - OfficeOpenXml.Drawing.Chart.ExcelChart
  - OfficeOpenXml.Drawing.Chart.ExcelChartStandard
  derivedClasses:
  - OfficeOpenXml.Drawing.Chart.ExcelLineChart
  - OfficeOpenXml.Drawing.Chart.ExcelStockChart
  implements:
  - System.IDisposable
  - OfficeOpenXml.Drawing.Interfaces.IDrawingDataLabel
  inheritedMembers:
  - OfficeOpenXml.Drawing.Chart.ExcelChartStandard.GetChartNodeText
  - OfficeOpenXml.Drawing.Chart.ExcelChartStandard.Title
  - OfficeOpenXml.Drawing.Chart.ExcelChartStandard.HasTitle
  - OfficeOpenXml.Drawing.Chart.ExcelChartStandard.HasLegend
  - OfficeOpenXml.Drawing.Chart.ExcelChartStandard.DeleteTitle
  - OfficeOpenXml.Drawing.Chart.ExcelChartStandard.Style
  - OfficeOpenXml.Drawing.Chart.ExcelChartStandard.RoundedCorners
  - OfficeOpenXml.Drawing.Chart.ExcelChartStandard.ShowHiddenData
  - OfficeOpenXml.Drawing.Chart.ExcelChartStandard.DisplayBlanksAs
  - OfficeOpenXml.Drawing.Chart.ExcelChartStandard.ShowDataLabelsOverMaximum
  - OfficeOpenXml.Drawing.Chart.ExcelChartStandard.PlotArea
  - OfficeOpenXml.Drawing.Chart.ExcelChartStandard.Legend
  - OfficeOpenXml.Drawing.Chart.ExcelChartStandard.Border
  - OfficeOpenXml.Drawing.Chart.ExcelChartStandard.Fill
  - OfficeOpenXml.Drawing.Chart.ExcelChartStandard.Effect
  - OfficeOpenXml.Drawing.Chart.ExcelChartStandard.ThreeD
  - OfficeOpenXml.Drawing.Chart.ExcelChartStandard.Font
  - OfficeOpenXml.Drawing.Chart.ExcelChartStandard.TextBody
  - OfficeOpenXml.Drawing.Chart.ExcelChartStandard.View3D
  - OfficeOpenXml.Drawing.Chart.ExcelChartStandard.Grouping
  - OfficeOpenXml.Drawing.Chart.ExcelChartStandard.VaryColors
  - OfficeOpenXml.Drawing.Chart.ExcelChartStandard.Axis
  - OfficeOpenXml.Drawing.Chart.ExcelChartStandard.XAxis
  - OfficeOpenXml.Drawing.Chart.ExcelChartStandard.YAxis
  - OfficeOpenXml.Drawing.Chart.ExcelChart._chartXmlHelper
  - OfficeOpenXml.Drawing.Chart.ExcelChart.StyleManager
  - OfficeOpenXml.Drawing.Chart.ExcelChart.UseSecondaryAxis
  - OfficeOpenXml.Drawing.Chart.ExcelChart.WorkSheet
  - OfficeOpenXml.Drawing.Chart.ExcelChart.ChartXml
  - OfficeOpenXml.Drawing.Chart.ExcelChart.DrawingType
  - OfficeOpenXml.Drawing.Chart.ExcelChart.ChartType
  - OfficeOpenXml.Drawing.Chart.ExcelChart._chartNode
  - OfficeOpenXml.Drawing.Chart.ExcelChart.PivotTableSource
  - OfficeOpenXml.Drawing.Chart.ExcelChart.IsType3D
  - OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeLine
  - OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeRadar
  - OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeScatter
  - OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeBubble
  - OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeArea
  - OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeSurface
  - OfficeOpenXml.Drawing.Chart.ExcelChart.HasThirdAxis
  - OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeShape
  - OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypePercentStacked
  - OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeStacked
  - OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeClustered
  - OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypePieDoughnut
  - OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeDoughnut
  - OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypePie
  - OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeStock
  - OfficeOpenXml.Drawing.Chart.ExcelChart.Floor
  - OfficeOpenXml.Drawing.Chart.ExcelChart.SideWall
  - OfficeOpenXml.Drawing.Chart.ExcelChart.BackWall
  - OfficeOpenXml.Drawing.ExcelDrawing.EMU_PER_PIXEL
  - OfficeOpenXml.Drawing.ExcelDrawing.EMU_PER_POINT
  - OfficeOpenXml.Drawing.ExcelDrawing.EMU_PER_CM
  - OfficeOpenXml.Drawing.ExcelDrawing.EMU_PER_MM
  - OfficeOpenXml.Drawing.ExcelDrawing.EMU_PER_US_INCH
  - OfficeOpenXml.Drawing.ExcelDrawing.EMU_PER_PICA
  - OfficeOpenXml.Drawing.ExcelDrawing.Name
  - OfficeOpenXml.Drawing.ExcelDrawing.Description
  - OfficeOpenXml.Drawing.ExcelDrawing.EditAs
  - OfficeOpenXml.Drawing.ExcelDrawing.Locked
  - OfficeOpenXml.Drawing.ExcelDrawing.Print
  - OfficeOpenXml.Drawing.ExcelDrawing.From
  - OfficeOpenXml.Drawing.ExcelDrawing.Position
  - OfficeOpenXml.Drawing.ExcelDrawing.Size
  - OfficeOpenXml.Drawing.ExcelDrawing.To
  - OfficeOpenXml.Drawing.ExcelDrawing.Hyperlink
  - OfficeOpenXml.Drawing.ExcelDrawing.As
  - OfficeOpenXml.Drawing.ExcelDrawing.SetPosition(System.Int32,System.Int32)
  - OfficeOpenXml.Drawing.ExcelDrawing.CellAnchor
  - OfficeOpenXml.Drawing.ExcelDrawing.ChangeCellAnchor(OfficeOpenXml.Drawing.eEditAs,System.Int32,System.Int32,System.Int32,System.Int32)
  - OfficeOpenXml.Drawing.ExcelDrawing.ChangeCellAnchor(OfficeOpenXml.Drawing.eEditAs)
  - OfficeOpenXml.Drawing.ExcelDrawing.SetPosition(System.Int32,System.Int32,System.Int32,System.Int32)
  - OfficeOpenXml.Drawing.ExcelDrawing.SetSize(System.Int32)
  - OfficeOpenXml.Drawing.ExcelDrawing.SetSize(System.Int32,System.Int32)
  - OfficeOpenXml.Drawing.ExcelDrawing.SendToBack
  - OfficeOpenXml.Drawing.ExcelDrawing.BringToFront
  - OfficeOpenXml.Drawing.ExcelDrawing.Group(OfficeOpenXml.Drawing.ExcelDrawing[])
  - OfficeOpenXml.Drawing.ExcelDrawing.UnGroup(System.Boolean)
  - OfficeOpenXml.Drawing.ExcelDrawing.ParentGroup
  - OfficeOpenXml.Drawing.ExcelDrawing.Dispose
  - OfficeOpenXml.Drawing.ExcelDrawing.AdjustPositionAndSize
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.Marker
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.Marker
  id: Marker
  parent: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines
  langs:
  - csharp
  - vb
  name: Marker
  nameWithType: ExcelStandardChartWithLines.Marker
  fullName: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.Marker
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelLineChart.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Marker
    path: ../src/EPPlus/Drawing/Chart/ExcelLineChart.cs
    startLine: 45
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nIf the series has markers\n"
  example: []
  syntax:
    content: public bool Marker { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Marker As Boolean
  overload: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.Marker*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.Smooth
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.Smooth
  id: Smooth
  parent: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines
  langs:
  - csharp
  - vb
  name: Smooth
  nameWithType: ExcelStandardChartWithLines.Smooth
  fullName: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.Smooth
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelLineChart.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Smooth
    path: ../src/EPPlus/Drawing/Chart/ExcelLineChart.cs
    startLine: 61
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nIf the series has smooth lines\n"
  example: []
  syntax:
    content: public bool Smooth { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Smooth As Boolean
  overload: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.Smooth*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.DataLabel
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.DataLabel
  id: DataLabel
  parent: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines
  langs:
  - csharp
  - vb
  name: DataLabel
  nameWithType: ExcelStandardChartWithLines.DataLabel
  fullName: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.DataLabel
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelLineChart.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: DataLabel
    path: ../src/EPPlus/Drawing/Chart/ExcelLineChart.cs
    startLine: 81
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nAccess to datalabel properties\n"
  example: []
  syntax:
    content: public ExcelChartDataLabel DataLabel { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.Chart.ExcelChartDataLabel
    content.vb: Public ReadOnly Property DataLabel As ExcelChartDataLabel
  overload: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.DataLabel*
  implements:
  - OfficeOpenXml.Drawing.Interfaces.IDrawingDataLabel.DataLabel
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.HasDataLabel
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.HasDataLabel
  id: HasDataLabel
  parent: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines
  langs:
  - csharp
  - vb
  name: HasDataLabel
  nameWithType: ExcelStandardChartWithLines.HasDataLabel
  fullName: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.HasDataLabel
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelLineChart.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: HasDataLabel
    path: ../src/EPPlus/Drawing/Chart/ExcelLineChart.cs
    startLine: 95
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nIf the chart has datalabel\n"
  example: []
  syntax:
    content: public bool HasDataLabel { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasDataLabel As Boolean
  overload: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.HasDataLabel*
  implements:
  - OfficeOpenXml.Drawing.Interfaces.IDrawingDataLabel.HasDataLabel
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.UpDownBarGapWidth
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.UpDownBarGapWidth
  id: UpDownBarGapWidth
  parent: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines
  langs:
  - csharp
  - vb
  name: UpDownBarGapWidth
  nameWithType: ExcelStandardChartWithLines.UpDownBarGapWidth
  fullName: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.UpDownBarGapWidth
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelLineChart.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: UpDownBarGapWidth
    path: ../src/EPPlus/Drawing/Chart/ExcelLineChart.cs
    startLine: 106
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nThe gap width between the up and down bars\n"
  example: []
  syntax:
    content: public double? UpDownBarGapWidth { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: Public Property UpDownBarGapWidth As Double?
  overload: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.UpDownBarGapWidth*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.UpBar
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.UpBar
  id: UpBar
  parent: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines
  langs:
  - csharp
  - vb
  name: UpBar
  nameWithType: ExcelStandardChartWithLines.UpBar
  fullName: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.UpBar
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelLineChart.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: UpBar
    path: ../src/EPPlus/Drawing/Chart/ExcelLineChart.cs
    startLine: 130
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nFormat the up bars on the chart\n"
  example: []
  syntax:
    content: public ExcelChartStyleItem UpBar { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.Chart.ExcelChartStyleItem
    content.vb: Public ReadOnly Property UpBar As ExcelChartStyleItem
  overload: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.UpBar*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.DownBar
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.DownBar
  id: DownBar
  parent: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines
  langs:
  - csharp
  - vb
  name: DownBar
  nameWithType: ExcelStandardChartWithLines.DownBar
  fullName: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.DownBar
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelLineChart.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: DownBar
    path: ../src/EPPlus/Drawing/Chart/ExcelLineChart.cs
    startLine: 142
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nFormat the down bars on the chart\n"
  example: []
  syntax:
    content: public ExcelChartStyleItem DownBar { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.Chart.ExcelChartStyleItem
    content.vb: Public ReadOnly Property DownBar As ExcelChartStyleItem
  overload: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.DownBar*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.HighLowLine
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.HighLowLine
  id: HighLowLine
  parent: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines
  langs:
  - csharp
  - vb
  name: HighLowLine
  nameWithType: ExcelStandardChartWithLines.HighLowLine
  fullName: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.HighLowLine
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelLineChart.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: HighLowLine
    path: ../src/EPPlus/Drawing/Chart/ExcelLineChart.cs
    startLine: 154
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nFormat the high-low lines for the series.\n"
  example: []
  syntax:
    content: public ExcelChartStyleItem HighLowLine { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.Chart.ExcelChartStyleItem
    content.vb: Public ReadOnly Property HighLowLine As ExcelChartStyleItem
  overload: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.HighLowLine*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.DropLine
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.DropLine
  id: DropLine
  parent: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines
  langs:
  - csharp
  - vb
  name: DropLine
  nameWithType: ExcelStandardChartWithLines.DropLine
  fullName: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.DropLine
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelLineChart.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: DropLine
    path: ../src/EPPlus/Drawing/Chart/ExcelLineChart.cs
    startLine: 167
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nFormat the drop lines for the series.\n"
  example: []
  syntax:
    content: public ExcelChartStyleItem DropLine { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.Chart.ExcelChartStyleItem
    content.vb: Public ReadOnly Property DropLine As ExcelChartStyleItem
  overload: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.DropLine*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.AddUpDownBars(System.Boolean,System.Boolean)
  commentId: M:OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.AddUpDownBars(System.Boolean,System.Boolean)
  id: AddUpDownBars(System.Boolean,System.Boolean)
  parent: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines
  langs:
  - csharp
  - vb
  name: AddUpDownBars(Boolean, Boolean)
  nameWithType: ExcelStandardChartWithLines.AddUpDownBars(Boolean, Boolean)
  fullName: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.AddUpDownBars(System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelLineChart.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: AddUpDownBars
    path: ../src/EPPlus/Drawing/Chart/ExcelLineChart.cs
    startLine: 179
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nAdds up and/or down bars to the chart.        \n"
  example: []
  syntax:
    content: public void AddUpDownBars(bool upBars = true, bool downBars = true)
    parameters:
    - id: upBars
      type: System.Boolean
      description: Adds up bars if up bars does not exist.
    - id: downBars
      type: System.Boolean
      description: Adds down bars if down bars does not exist.
    content.vb: Public Sub AddUpDownBars(upBars As Boolean = True, downBars As Boolean = True)
  overload: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.AddUpDownBars*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.AddDropLines
  commentId: M:OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.AddDropLines
  id: AddDropLines
  parent: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines
  langs:
  - csharp
  - vb
  name: AddDropLines()
  nameWithType: ExcelStandardChartWithLines.AddDropLines()
  fullName: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.AddDropLines()
  type: Method
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelLineChart.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: AddDropLines
    path: ../src/EPPlus/Drawing/Chart/ExcelLineChart.cs
    startLine: 197
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nAdds droplines to the chart.        \n"
  example: []
  syntax:
    content: public ExcelChartStyleItem AddDropLines()
    return:
      type: OfficeOpenXml.Drawing.Chart.ExcelChartStyleItem
    content.vb: Public Function AddDropLines As ExcelChartStyleItem
  overload: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.AddDropLines*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.AddHighLowLines
  commentId: M:OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.AddHighLowLines
  id: AddHighLowLines
  parent: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines
  langs:
  - csharp
  - vb
  name: AddHighLowLines()
  nameWithType: ExcelStandardChartWithLines.AddHighLowLines()
  fullName: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.AddHighLowLines()
  type: Method
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelLineChart.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: AddHighLowLines
    path: ../src/EPPlus/Drawing/Chart/ExcelLineChart.cs
    startLine: 210
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nAdds High-Low lines to the chart.        \n"
  example: []
  syntax:
    content: public ExcelChartStyleItem AddHighLowLines()
    return:
      type: OfficeOpenXml.Drawing.Chart.ExcelChartStyleItem
    content.vb: Public Function AddHighLowLines As ExcelChartStyleItem
  overload: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.AddHighLowLines*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.Series
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.Series
  id: Series
  parent: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines
  langs:
  - csharp
  - vb
  name: Series
  nameWithType: ExcelStandardChartWithLines.Series
  fullName: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.Series
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelLineChart.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Series
    path: ../src/EPPlus/Drawing/Chart/ExcelLineChart.cs
    startLine: 319
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nThe series for the chart\n"
  example: []
  syntax:
    content: public ExcelChartSeries<ExcelLineChartSerie> Series { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.Chart.ExcelChartSeries{OfficeOpenXml.Drawing.Chart.ExcelLineChartSerie}
    content.vb: Public ReadOnly Property Series As ExcelChartSeries(Of ExcelLineChartSerie)
  overload: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.Series*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: OfficeOpenXml.Drawing.Chart
  commentId: N:OfficeOpenXml.Drawing.Chart
  name: OfficeOpenXml.Drawing.Chart
  nameWithType: OfficeOpenXml.Drawing.Chart
  fullName: OfficeOpenXml.Drawing.Chart
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OfficeOpenXml.XmlHelper
  commentId: T:OfficeOpenXml.XmlHelper
  parent: OfficeOpenXml
  name: XmlHelper
  nameWithType: XmlHelper
  fullName: OfficeOpenXml.XmlHelper
- uid: OfficeOpenXml.Drawing.ExcelDrawing
  commentId: T:OfficeOpenXml.Drawing.ExcelDrawing
  parent: OfficeOpenXml.Drawing
  name: ExcelDrawing
  nameWithType: ExcelDrawing
  fullName: OfficeOpenXml.Drawing.ExcelDrawing
- uid: OfficeOpenXml.Drawing.Chart.ExcelChart
  commentId: T:OfficeOpenXml.Drawing.Chart.ExcelChart
  parent: OfficeOpenXml.Drawing.Chart
  name: ExcelChart
  nameWithType: ExcelChart
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChart
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartStandard
  commentId: T:OfficeOpenXml.Drawing.Chart.ExcelChartStandard
  parent: OfficeOpenXml.Drawing.Chart
  name: ExcelChartStandard
  nameWithType: ExcelChartStandard
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartStandard
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: OfficeOpenXml.Drawing.Interfaces.IDrawingDataLabel
  commentId: T:OfficeOpenXml.Drawing.Interfaces.IDrawingDataLabel
  parent: OfficeOpenXml.Drawing.Interfaces
  name: IDrawingDataLabel
  nameWithType: IDrawingDataLabel
  fullName: OfficeOpenXml.Drawing.Interfaces.IDrawingDataLabel
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.GetChartNodeText
  commentId: M:OfficeOpenXml.Drawing.Chart.ExcelChartStandard.GetChartNodeText
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartStandard
  name: GetChartNodeText()
  nameWithType: ExcelChartStandard.GetChartNodeText()
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.GetChartNodeText()
  spec.csharp:
  - uid: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.GetChartNodeText
    name: GetChartNodeText
    nameWithType: ExcelChartStandard.GetChartNodeText
    fullName: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.GetChartNodeText
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.GetChartNodeText
    name: GetChartNodeText
    nameWithType: ExcelChartStandard.GetChartNodeText
    fullName: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.GetChartNodeText
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.Title
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartStandard.Title
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartStandard
  name: Title
  nameWithType: ExcelChartStandard.Title
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.Title
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.HasTitle
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartStandard.HasTitle
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartStandard
  name: HasTitle
  nameWithType: ExcelChartStandard.HasTitle
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.HasTitle
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.HasLegend
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartStandard.HasLegend
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartStandard
  name: HasLegend
  nameWithType: ExcelChartStandard.HasLegend
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.HasLegend
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.DeleteTitle
  commentId: M:OfficeOpenXml.Drawing.Chart.ExcelChartStandard.DeleteTitle
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartStandard
  name: DeleteTitle()
  nameWithType: ExcelChartStandard.DeleteTitle()
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.DeleteTitle()
  spec.csharp:
  - uid: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.DeleteTitle
    name: DeleteTitle
    nameWithType: ExcelChartStandard.DeleteTitle
    fullName: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.DeleteTitle
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.DeleteTitle
    name: DeleteTitle
    nameWithType: ExcelChartStandard.DeleteTitle
    fullName: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.DeleteTitle
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.Style
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartStandard.Style
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartStandard
  name: Style
  nameWithType: ExcelChartStandard.Style
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.Style
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.RoundedCorners
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartStandard.RoundedCorners
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartStandard
  name: RoundedCorners
  nameWithType: ExcelChartStandard.RoundedCorners
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.RoundedCorners
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.ShowHiddenData
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartStandard.ShowHiddenData
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartStandard
  name: ShowHiddenData
  nameWithType: ExcelChartStandard.ShowHiddenData
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.ShowHiddenData
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.DisplayBlanksAs
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartStandard.DisplayBlanksAs
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartStandard
  name: DisplayBlanksAs
  nameWithType: ExcelChartStandard.DisplayBlanksAs
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.DisplayBlanksAs
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.ShowDataLabelsOverMaximum
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartStandard.ShowDataLabelsOverMaximum
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartStandard
  name: ShowDataLabelsOverMaximum
  nameWithType: ExcelChartStandard.ShowDataLabelsOverMaximum
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.ShowDataLabelsOverMaximum
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.PlotArea
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartStandard.PlotArea
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartStandard
  name: PlotArea
  nameWithType: ExcelChartStandard.PlotArea
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.PlotArea
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.Legend
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartStandard.Legend
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartStandard
  name: Legend
  nameWithType: ExcelChartStandard.Legend
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.Legend
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.Border
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartStandard.Border
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartStandard
  name: Border
  nameWithType: ExcelChartStandard.Border
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.Border
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.Fill
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartStandard.Fill
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartStandard
  name: Fill
  nameWithType: ExcelChartStandard.Fill
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.Fill
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.Effect
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartStandard.Effect
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartStandard
  name: Effect
  nameWithType: ExcelChartStandard.Effect
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.Effect
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.ThreeD
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartStandard.ThreeD
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartStandard
  name: ThreeD
  nameWithType: ExcelChartStandard.ThreeD
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.ThreeD
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.Font
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartStandard.Font
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartStandard
  name: Font
  nameWithType: ExcelChartStandard.Font
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.Font
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.TextBody
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartStandard.TextBody
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartStandard
  name: TextBody
  nameWithType: ExcelChartStandard.TextBody
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.TextBody
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.View3D
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartStandard.View3D
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartStandard
  name: View3D
  nameWithType: ExcelChartStandard.View3D
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.View3D
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.Grouping
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartStandard.Grouping
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartStandard
  name: Grouping
  nameWithType: ExcelChartStandard.Grouping
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.Grouping
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.VaryColors
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartStandard.VaryColors
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartStandard
  name: VaryColors
  nameWithType: ExcelChartStandard.VaryColors
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.VaryColors
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.Axis
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartStandard.Axis
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartStandard
  name: Axis
  nameWithType: ExcelChartStandard.Axis
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.Axis
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.XAxis
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartStandard.XAxis
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartStandard
  name: XAxis
  nameWithType: ExcelChartStandard.XAxis
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.XAxis
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.YAxis
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartStandard.YAxis
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartStandard
  name: YAxis
  nameWithType: ExcelChartStandard.YAxis
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartStandard.YAxis
- uid: OfficeOpenXml.Drawing.Chart.ExcelChart._chartXmlHelper
  commentId: F:OfficeOpenXml.Drawing.Chart.ExcelChart._chartXmlHelper
  parent: OfficeOpenXml.Drawing.Chart.ExcelChart
  name: _chartXmlHelper
  nameWithType: ExcelChart._chartXmlHelper
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChart._chartXmlHelper
- uid: OfficeOpenXml.Drawing.Chart.ExcelChart.StyleManager
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChart.StyleManager
  parent: OfficeOpenXml.Drawing.Chart.ExcelChart
  name: StyleManager
  nameWithType: ExcelChart.StyleManager
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.StyleManager
- uid: OfficeOpenXml.Drawing.Chart.ExcelChart.UseSecondaryAxis
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChart.UseSecondaryAxis
  parent: OfficeOpenXml.Drawing.Chart.ExcelChart
  name: UseSecondaryAxis
  nameWithType: ExcelChart.UseSecondaryAxis
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.UseSecondaryAxis
- uid: OfficeOpenXml.Drawing.Chart.ExcelChart.WorkSheet
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChart.WorkSheet
  parent: OfficeOpenXml.Drawing.Chart.ExcelChart
  name: WorkSheet
  nameWithType: ExcelChart.WorkSheet
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.WorkSheet
- uid: OfficeOpenXml.Drawing.Chart.ExcelChart.ChartXml
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChart.ChartXml
  parent: OfficeOpenXml.Drawing.Chart.ExcelChart
  name: ChartXml
  nameWithType: ExcelChart.ChartXml
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.ChartXml
- uid: OfficeOpenXml.Drawing.Chart.ExcelChart.DrawingType
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChart.DrawingType
  parent: OfficeOpenXml.Drawing.Chart.ExcelChart
  name: DrawingType
  nameWithType: ExcelChart.DrawingType
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.DrawingType
- uid: OfficeOpenXml.Drawing.Chart.ExcelChart.ChartType
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChart.ChartType
  parent: OfficeOpenXml.Drawing.Chart.ExcelChart
  name: ChartType
  nameWithType: ExcelChart.ChartType
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.ChartType
- uid: OfficeOpenXml.Drawing.Chart.ExcelChart._chartNode
  commentId: F:OfficeOpenXml.Drawing.Chart.ExcelChart._chartNode
  parent: OfficeOpenXml.Drawing.Chart.ExcelChart
  name: _chartNode
  nameWithType: ExcelChart._chartNode
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChart._chartNode
- uid: OfficeOpenXml.Drawing.Chart.ExcelChart.PivotTableSource
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChart.PivotTableSource
  parent: OfficeOpenXml.Drawing.Chart.ExcelChart
  name: PivotTableSource
  nameWithType: ExcelChart.PivotTableSource
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.PivotTableSource
- uid: OfficeOpenXml.Drawing.Chart.ExcelChart.IsType3D
  commentId: M:OfficeOpenXml.Drawing.Chart.ExcelChart.IsType3D
  parent: OfficeOpenXml.Drawing.Chart.ExcelChart
  name: IsType3D()
  nameWithType: ExcelChart.IsType3D()
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.IsType3D()
  spec.csharp:
  - uid: OfficeOpenXml.Drawing.Chart.ExcelChart.IsType3D
    name: IsType3D
    nameWithType: ExcelChart.IsType3D
    fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.IsType3D
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Drawing.Chart.ExcelChart.IsType3D
    name: IsType3D
    nameWithType: ExcelChart.IsType3D
    fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.IsType3D
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeLine
  commentId: M:OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeLine
  parent: OfficeOpenXml.Drawing.Chart.ExcelChart
  name: IsTypeLine()
  nameWithType: ExcelChart.IsTypeLine()
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeLine()
  spec.csharp:
  - uid: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeLine
    name: IsTypeLine
    nameWithType: ExcelChart.IsTypeLine
    fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeLine
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeLine
    name: IsTypeLine
    nameWithType: ExcelChart.IsTypeLine
    fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeLine
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeRadar
  commentId: M:OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeRadar
  parent: OfficeOpenXml.Drawing.Chart.ExcelChart
  name: IsTypeRadar()
  nameWithType: ExcelChart.IsTypeRadar()
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeRadar()
  spec.csharp:
  - uid: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeRadar
    name: IsTypeRadar
    nameWithType: ExcelChart.IsTypeRadar
    fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeRadar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeRadar
    name: IsTypeRadar
    nameWithType: ExcelChart.IsTypeRadar
    fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeRadar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeScatter
  commentId: M:OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeScatter
  parent: OfficeOpenXml.Drawing.Chart.ExcelChart
  name: IsTypeScatter()
  nameWithType: ExcelChart.IsTypeScatter()
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeScatter()
  spec.csharp:
  - uid: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeScatter
    name: IsTypeScatter
    nameWithType: ExcelChart.IsTypeScatter
    fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeScatter
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeScatter
    name: IsTypeScatter
    nameWithType: ExcelChart.IsTypeScatter
    fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeScatter
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeBubble
  commentId: M:OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeBubble
  parent: OfficeOpenXml.Drawing.Chart.ExcelChart
  name: IsTypeBubble()
  nameWithType: ExcelChart.IsTypeBubble()
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeBubble()
  spec.csharp:
  - uid: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeBubble
    name: IsTypeBubble
    nameWithType: ExcelChart.IsTypeBubble
    fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeBubble
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeBubble
    name: IsTypeBubble
    nameWithType: ExcelChart.IsTypeBubble
    fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeBubble
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeArea
  commentId: M:OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeArea
  parent: OfficeOpenXml.Drawing.Chart.ExcelChart
  name: IsTypeArea()
  nameWithType: ExcelChart.IsTypeArea()
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeArea()
  spec.csharp:
  - uid: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeArea
    name: IsTypeArea
    nameWithType: ExcelChart.IsTypeArea
    fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeArea
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeArea
    name: IsTypeArea
    nameWithType: ExcelChart.IsTypeArea
    fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeArea
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeSurface
  commentId: M:OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeSurface
  parent: OfficeOpenXml.Drawing.Chart.ExcelChart
  name: IsTypeSurface()
  nameWithType: ExcelChart.IsTypeSurface()
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeSurface()
  spec.csharp:
  - uid: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeSurface
    name: IsTypeSurface
    nameWithType: ExcelChart.IsTypeSurface
    fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeSurface
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeSurface
    name: IsTypeSurface
    nameWithType: ExcelChart.IsTypeSurface
    fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeSurface
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Drawing.Chart.ExcelChart.HasThirdAxis
  commentId: M:OfficeOpenXml.Drawing.Chart.ExcelChart.HasThirdAxis
  parent: OfficeOpenXml.Drawing.Chart.ExcelChart
  name: HasThirdAxis()
  nameWithType: ExcelChart.HasThirdAxis()
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.HasThirdAxis()
  spec.csharp:
  - uid: OfficeOpenXml.Drawing.Chart.ExcelChart.HasThirdAxis
    name: HasThirdAxis
    nameWithType: ExcelChart.HasThirdAxis
    fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.HasThirdAxis
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Drawing.Chart.ExcelChart.HasThirdAxis
    name: HasThirdAxis
    nameWithType: ExcelChart.HasThirdAxis
    fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.HasThirdAxis
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeShape
  commentId: M:OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeShape
  parent: OfficeOpenXml.Drawing.Chart.ExcelChart
  name: IsTypeShape()
  nameWithType: ExcelChart.IsTypeShape()
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeShape()
  spec.csharp:
  - uid: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeShape
    name: IsTypeShape
    nameWithType: ExcelChart.IsTypeShape
    fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeShape
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeShape
    name: IsTypeShape
    nameWithType: ExcelChart.IsTypeShape
    fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeShape
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypePercentStacked
  commentId: M:OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypePercentStacked
  parent: OfficeOpenXml.Drawing.Chart.ExcelChart
  name: IsTypePercentStacked()
  nameWithType: ExcelChart.IsTypePercentStacked()
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypePercentStacked()
  spec.csharp:
  - uid: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypePercentStacked
    name: IsTypePercentStacked
    nameWithType: ExcelChart.IsTypePercentStacked
    fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypePercentStacked
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypePercentStacked
    name: IsTypePercentStacked
    nameWithType: ExcelChart.IsTypePercentStacked
    fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypePercentStacked
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeStacked
  commentId: M:OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeStacked
  parent: OfficeOpenXml.Drawing.Chart.ExcelChart
  name: IsTypeStacked()
  nameWithType: ExcelChart.IsTypeStacked()
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeStacked()
  spec.csharp:
  - uid: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeStacked
    name: IsTypeStacked
    nameWithType: ExcelChart.IsTypeStacked
    fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeStacked
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeStacked
    name: IsTypeStacked
    nameWithType: ExcelChart.IsTypeStacked
    fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeStacked
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeClustered
  commentId: M:OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeClustered
  parent: OfficeOpenXml.Drawing.Chart.ExcelChart
  name: IsTypeClustered()
  nameWithType: ExcelChart.IsTypeClustered()
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeClustered()
  spec.csharp:
  - uid: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeClustered
    name: IsTypeClustered
    nameWithType: ExcelChart.IsTypeClustered
    fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeClustered
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeClustered
    name: IsTypeClustered
    nameWithType: ExcelChart.IsTypeClustered
    fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeClustered
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypePieDoughnut
  commentId: M:OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypePieDoughnut
  parent: OfficeOpenXml.Drawing.Chart.ExcelChart
  name: IsTypePieDoughnut()
  nameWithType: ExcelChart.IsTypePieDoughnut()
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypePieDoughnut()
  spec.csharp:
  - uid: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypePieDoughnut
    name: IsTypePieDoughnut
    nameWithType: ExcelChart.IsTypePieDoughnut
    fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypePieDoughnut
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypePieDoughnut
    name: IsTypePieDoughnut
    nameWithType: ExcelChart.IsTypePieDoughnut
    fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypePieDoughnut
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeDoughnut
  commentId: M:OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeDoughnut
  parent: OfficeOpenXml.Drawing.Chart.ExcelChart
  name: IsTypeDoughnut()
  nameWithType: ExcelChart.IsTypeDoughnut()
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeDoughnut()
  spec.csharp:
  - uid: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeDoughnut
    name: IsTypeDoughnut
    nameWithType: ExcelChart.IsTypeDoughnut
    fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeDoughnut
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeDoughnut
    name: IsTypeDoughnut
    nameWithType: ExcelChart.IsTypeDoughnut
    fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeDoughnut
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypePie
  commentId: M:OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypePie
  parent: OfficeOpenXml.Drawing.Chart.ExcelChart
  name: IsTypePie()
  nameWithType: ExcelChart.IsTypePie()
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypePie()
  spec.csharp:
  - uid: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypePie
    name: IsTypePie
    nameWithType: ExcelChart.IsTypePie
    fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypePie
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypePie
    name: IsTypePie
    nameWithType: ExcelChart.IsTypePie
    fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypePie
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeStock
  commentId: M:OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeStock
  parent: OfficeOpenXml.Drawing.Chart.ExcelChart
  name: IsTypeStock()
  nameWithType: ExcelChart.IsTypeStock()
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeStock()
  spec.csharp:
  - uid: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeStock
    name: IsTypeStock
    nameWithType: ExcelChart.IsTypeStock
    fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeStock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeStock
    name: IsTypeStock
    nameWithType: ExcelChart.IsTypeStock
    fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.IsTypeStock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Drawing.Chart.ExcelChart.Floor
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChart.Floor
  parent: OfficeOpenXml.Drawing.Chart.ExcelChart
  name: Floor
  nameWithType: ExcelChart.Floor
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.Floor
- uid: OfficeOpenXml.Drawing.Chart.ExcelChart.SideWall
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChart.SideWall
  parent: OfficeOpenXml.Drawing.Chart.ExcelChart
  name: SideWall
  nameWithType: ExcelChart.SideWall
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.SideWall
- uid: OfficeOpenXml.Drawing.Chart.ExcelChart.BackWall
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChart.BackWall
  parent: OfficeOpenXml.Drawing.Chart.ExcelChart
  name: BackWall
  nameWithType: ExcelChart.BackWall
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChart.BackWall
- uid: OfficeOpenXml.Drawing.ExcelDrawing.EMU_PER_PIXEL
  commentId: F:OfficeOpenXml.Drawing.ExcelDrawing.EMU_PER_PIXEL
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  name: EMU_PER_PIXEL
  nameWithType: ExcelDrawing.EMU_PER_PIXEL
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.EMU_PER_PIXEL
- uid: OfficeOpenXml.Drawing.ExcelDrawing.EMU_PER_POINT
  commentId: F:OfficeOpenXml.Drawing.ExcelDrawing.EMU_PER_POINT
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  name: EMU_PER_POINT
  nameWithType: ExcelDrawing.EMU_PER_POINT
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.EMU_PER_POINT
- uid: OfficeOpenXml.Drawing.ExcelDrawing.EMU_PER_CM
  commentId: F:OfficeOpenXml.Drawing.ExcelDrawing.EMU_PER_CM
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  name: EMU_PER_CM
  nameWithType: ExcelDrawing.EMU_PER_CM
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.EMU_PER_CM
- uid: OfficeOpenXml.Drawing.ExcelDrawing.EMU_PER_MM
  commentId: F:OfficeOpenXml.Drawing.ExcelDrawing.EMU_PER_MM
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  name: EMU_PER_MM
  nameWithType: ExcelDrawing.EMU_PER_MM
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.EMU_PER_MM
- uid: OfficeOpenXml.Drawing.ExcelDrawing.EMU_PER_US_INCH
  commentId: F:OfficeOpenXml.Drawing.ExcelDrawing.EMU_PER_US_INCH
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  name: EMU_PER_US_INCH
  nameWithType: ExcelDrawing.EMU_PER_US_INCH
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.EMU_PER_US_INCH
- uid: OfficeOpenXml.Drawing.ExcelDrawing.EMU_PER_PICA
  commentId: F:OfficeOpenXml.Drawing.ExcelDrawing.EMU_PER_PICA
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  name: EMU_PER_PICA
  nameWithType: ExcelDrawing.EMU_PER_PICA
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.EMU_PER_PICA
- uid: OfficeOpenXml.Drawing.ExcelDrawing.Name
  commentId: P:OfficeOpenXml.Drawing.ExcelDrawing.Name
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  name: Name
  nameWithType: ExcelDrawing.Name
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.Name
- uid: OfficeOpenXml.Drawing.ExcelDrawing.Description
  commentId: P:OfficeOpenXml.Drawing.ExcelDrawing.Description
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  name: Description
  nameWithType: ExcelDrawing.Description
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.Description
- uid: OfficeOpenXml.Drawing.ExcelDrawing.EditAs
  commentId: P:OfficeOpenXml.Drawing.ExcelDrawing.EditAs
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  name: EditAs
  nameWithType: ExcelDrawing.EditAs
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.EditAs
- uid: OfficeOpenXml.Drawing.ExcelDrawing.Locked
  commentId: P:OfficeOpenXml.Drawing.ExcelDrawing.Locked
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  name: Locked
  nameWithType: ExcelDrawing.Locked
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.Locked
- uid: OfficeOpenXml.Drawing.ExcelDrawing.Print
  commentId: P:OfficeOpenXml.Drawing.ExcelDrawing.Print
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  name: Print
  nameWithType: ExcelDrawing.Print
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.Print
- uid: OfficeOpenXml.Drawing.ExcelDrawing.From
  commentId: P:OfficeOpenXml.Drawing.ExcelDrawing.From
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  name: From
  nameWithType: ExcelDrawing.From
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.From
- uid: OfficeOpenXml.Drawing.ExcelDrawing.Position
  commentId: P:OfficeOpenXml.Drawing.ExcelDrawing.Position
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  name: Position
  nameWithType: ExcelDrawing.Position
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.Position
- uid: OfficeOpenXml.Drawing.ExcelDrawing.Size
  commentId: P:OfficeOpenXml.Drawing.ExcelDrawing.Size
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  name: Size
  nameWithType: ExcelDrawing.Size
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.Size
- uid: OfficeOpenXml.Drawing.ExcelDrawing.To
  commentId: P:OfficeOpenXml.Drawing.ExcelDrawing.To
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  name: To
  nameWithType: ExcelDrawing.To
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.To
- uid: OfficeOpenXml.Drawing.ExcelDrawing.Hyperlink
  commentId: P:OfficeOpenXml.Drawing.ExcelDrawing.Hyperlink
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  name: Hyperlink
  nameWithType: ExcelDrawing.Hyperlink
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.Hyperlink
- uid: OfficeOpenXml.Drawing.ExcelDrawing.As
  commentId: P:OfficeOpenXml.Drawing.ExcelDrawing.As
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  name: As
  nameWithType: ExcelDrawing.As
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.As
- uid: OfficeOpenXml.Drawing.ExcelDrawing.SetPosition(System.Int32,System.Int32)
  commentId: M:OfficeOpenXml.Drawing.ExcelDrawing.SetPosition(System.Int32,System.Int32)
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  isExternal: true
  name: SetPosition(Int32, Int32)
  nameWithType: ExcelDrawing.SetPosition(Int32, Int32)
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.SetPosition(System.Int32, System.Int32)
  spec.csharp:
  - uid: OfficeOpenXml.Drawing.ExcelDrawing.SetPosition(System.Int32,System.Int32)
    name: SetPosition
    nameWithType: ExcelDrawing.SetPosition
    fullName: OfficeOpenXml.Drawing.ExcelDrawing.SetPosition
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Drawing.ExcelDrawing.SetPosition(System.Int32,System.Int32)
    name: SetPosition
    nameWithType: ExcelDrawing.SetPosition
    fullName: OfficeOpenXml.Drawing.ExcelDrawing.SetPosition
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Drawing.ExcelDrawing.CellAnchor
  commentId: P:OfficeOpenXml.Drawing.ExcelDrawing.CellAnchor
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  name: CellAnchor
  nameWithType: ExcelDrawing.CellAnchor
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.CellAnchor
- uid: OfficeOpenXml.Drawing.ExcelDrawing.ChangeCellAnchor(OfficeOpenXml.Drawing.eEditAs,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:OfficeOpenXml.Drawing.ExcelDrawing.ChangeCellAnchor(OfficeOpenXml.Drawing.eEditAs,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  isExternal: true
  name: ChangeCellAnchor(eEditAs, Int32, Int32, Int32, Int32)
  nameWithType: ExcelDrawing.ChangeCellAnchor(eEditAs, Int32, Int32, Int32, Int32)
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.ChangeCellAnchor(OfficeOpenXml.Drawing.eEditAs, System.Int32, System.Int32, System.Int32, System.Int32)
  spec.csharp:
  - uid: OfficeOpenXml.Drawing.ExcelDrawing.ChangeCellAnchor(OfficeOpenXml.Drawing.eEditAs,System.Int32,System.Int32,System.Int32,System.Int32)
    name: ChangeCellAnchor
    nameWithType: ExcelDrawing.ChangeCellAnchor
    fullName: OfficeOpenXml.Drawing.ExcelDrawing.ChangeCellAnchor
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.Drawing.eEditAs
    name: eEditAs
    nameWithType: eEditAs
    fullName: OfficeOpenXml.Drawing.eEditAs
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Drawing.ExcelDrawing.ChangeCellAnchor(OfficeOpenXml.Drawing.eEditAs,System.Int32,System.Int32,System.Int32,System.Int32)
    name: ChangeCellAnchor
    nameWithType: ExcelDrawing.ChangeCellAnchor
    fullName: OfficeOpenXml.Drawing.ExcelDrawing.ChangeCellAnchor
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.Drawing.eEditAs
    name: eEditAs
    nameWithType: eEditAs
    fullName: OfficeOpenXml.Drawing.eEditAs
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Drawing.ExcelDrawing.ChangeCellAnchor(OfficeOpenXml.Drawing.eEditAs)
  commentId: M:OfficeOpenXml.Drawing.ExcelDrawing.ChangeCellAnchor(OfficeOpenXml.Drawing.eEditAs)
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  name: ChangeCellAnchor(eEditAs)
  nameWithType: ExcelDrawing.ChangeCellAnchor(eEditAs)
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.ChangeCellAnchor(OfficeOpenXml.Drawing.eEditAs)
  spec.csharp:
  - uid: OfficeOpenXml.Drawing.ExcelDrawing.ChangeCellAnchor(OfficeOpenXml.Drawing.eEditAs)
    name: ChangeCellAnchor
    nameWithType: ExcelDrawing.ChangeCellAnchor
    fullName: OfficeOpenXml.Drawing.ExcelDrawing.ChangeCellAnchor
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.Drawing.eEditAs
    name: eEditAs
    nameWithType: eEditAs
    fullName: OfficeOpenXml.Drawing.eEditAs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Drawing.ExcelDrawing.ChangeCellAnchor(OfficeOpenXml.Drawing.eEditAs)
    name: ChangeCellAnchor
    nameWithType: ExcelDrawing.ChangeCellAnchor
    fullName: OfficeOpenXml.Drawing.ExcelDrawing.ChangeCellAnchor
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.Drawing.eEditAs
    name: eEditAs
    nameWithType: eEditAs
    fullName: OfficeOpenXml.Drawing.eEditAs
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Drawing.ExcelDrawing.SetPosition(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:OfficeOpenXml.Drawing.ExcelDrawing.SetPosition(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  isExternal: true
  name: SetPosition(Int32, Int32, Int32, Int32)
  nameWithType: ExcelDrawing.SetPosition(Int32, Int32, Int32, Int32)
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.SetPosition(System.Int32, System.Int32, System.Int32, System.Int32)
  spec.csharp:
  - uid: OfficeOpenXml.Drawing.ExcelDrawing.SetPosition(System.Int32,System.Int32,System.Int32,System.Int32)
    name: SetPosition
    nameWithType: ExcelDrawing.SetPosition
    fullName: OfficeOpenXml.Drawing.ExcelDrawing.SetPosition
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Drawing.ExcelDrawing.SetPosition(System.Int32,System.Int32,System.Int32,System.Int32)
    name: SetPosition
    nameWithType: ExcelDrawing.SetPosition
    fullName: OfficeOpenXml.Drawing.ExcelDrawing.SetPosition
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Drawing.ExcelDrawing.SetSize(System.Int32)
  commentId: M:OfficeOpenXml.Drawing.ExcelDrawing.SetSize(System.Int32)
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  isExternal: true
  name: SetSize(Int32)
  nameWithType: ExcelDrawing.SetSize(Int32)
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.SetSize(System.Int32)
  spec.csharp:
  - uid: OfficeOpenXml.Drawing.ExcelDrawing.SetSize(System.Int32)
    name: SetSize
    nameWithType: ExcelDrawing.SetSize
    fullName: OfficeOpenXml.Drawing.ExcelDrawing.SetSize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Drawing.ExcelDrawing.SetSize(System.Int32)
    name: SetSize
    nameWithType: ExcelDrawing.SetSize
    fullName: OfficeOpenXml.Drawing.ExcelDrawing.SetSize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Drawing.ExcelDrawing.SetSize(System.Int32,System.Int32)
  commentId: M:OfficeOpenXml.Drawing.ExcelDrawing.SetSize(System.Int32,System.Int32)
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  isExternal: true
  name: SetSize(Int32, Int32)
  nameWithType: ExcelDrawing.SetSize(Int32, Int32)
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.SetSize(System.Int32, System.Int32)
  spec.csharp:
  - uid: OfficeOpenXml.Drawing.ExcelDrawing.SetSize(System.Int32,System.Int32)
    name: SetSize
    nameWithType: ExcelDrawing.SetSize
    fullName: OfficeOpenXml.Drawing.ExcelDrawing.SetSize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Drawing.ExcelDrawing.SetSize(System.Int32,System.Int32)
    name: SetSize
    nameWithType: ExcelDrawing.SetSize
    fullName: OfficeOpenXml.Drawing.ExcelDrawing.SetSize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Drawing.ExcelDrawing.SendToBack
  commentId: M:OfficeOpenXml.Drawing.ExcelDrawing.SendToBack
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  name: SendToBack()
  nameWithType: ExcelDrawing.SendToBack()
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.SendToBack()
  spec.csharp:
  - uid: OfficeOpenXml.Drawing.ExcelDrawing.SendToBack
    name: SendToBack
    nameWithType: ExcelDrawing.SendToBack
    fullName: OfficeOpenXml.Drawing.ExcelDrawing.SendToBack
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Drawing.ExcelDrawing.SendToBack
    name: SendToBack
    nameWithType: ExcelDrawing.SendToBack
    fullName: OfficeOpenXml.Drawing.ExcelDrawing.SendToBack
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Drawing.ExcelDrawing.BringToFront
  commentId: M:OfficeOpenXml.Drawing.ExcelDrawing.BringToFront
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  name: BringToFront()
  nameWithType: ExcelDrawing.BringToFront()
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.BringToFront()
  spec.csharp:
  - uid: OfficeOpenXml.Drawing.ExcelDrawing.BringToFront
    name: BringToFront
    nameWithType: ExcelDrawing.BringToFront
    fullName: OfficeOpenXml.Drawing.ExcelDrawing.BringToFront
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Drawing.ExcelDrawing.BringToFront
    name: BringToFront
    nameWithType: ExcelDrawing.BringToFront
    fullName: OfficeOpenXml.Drawing.ExcelDrawing.BringToFront
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Drawing.ExcelDrawing.Group(OfficeOpenXml.Drawing.ExcelDrawing[])
  commentId: M:OfficeOpenXml.Drawing.ExcelDrawing.Group(OfficeOpenXml.Drawing.ExcelDrawing[])
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  name: Group(ExcelDrawing[])
  nameWithType: ExcelDrawing.Group(ExcelDrawing[])
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.Group(OfficeOpenXml.Drawing.ExcelDrawing[])
  nameWithType.vb: ExcelDrawing.Group(ExcelDrawing())
  fullName.vb: OfficeOpenXml.Drawing.ExcelDrawing.Group(OfficeOpenXml.Drawing.ExcelDrawing())
  name.vb: Group(ExcelDrawing())
  spec.csharp:
  - uid: OfficeOpenXml.Drawing.ExcelDrawing.Group(OfficeOpenXml.Drawing.ExcelDrawing[])
    name: Group
    nameWithType: ExcelDrawing.Group
    fullName: OfficeOpenXml.Drawing.ExcelDrawing.Group
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.Drawing.ExcelDrawing
    name: ExcelDrawing
    nameWithType: ExcelDrawing
    fullName: OfficeOpenXml.Drawing.ExcelDrawing
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Drawing.ExcelDrawing.Group(OfficeOpenXml.Drawing.ExcelDrawing[])
    name: Group
    nameWithType: ExcelDrawing.Group
    fullName: OfficeOpenXml.Drawing.ExcelDrawing.Group
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.Drawing.ExcelDrawing
    name: ExcelDrawing
    nameWithType: ExcelDrawing
    fullName: OfficeOpenXml.Drawing.ExcelDrawing
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Drawing.ExcelDrawing.UnGroup(System.Boolean)
  commentId: M:OfficeOpenXml.Drawing.ExcelDrawing.UnGroup(System.Boolean)
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  isExternal: true
  name: UnGroup(Boolean)
  nameWithType: ExcelDrawing.UnGroup(Boolean)
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.UnGroup(System.Boolean)
  spec.csharp:
  - uid: OfficeOpenXml.Drawing.ExcelDrawing.UnGroup(System.Boolean)
    name: UnGroup
    nameWithType: ExcelDrawing.UnGroup
    fullName: OfficeOpenXml.Drawing.ExcelDrawing.UnGroup
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Drawing.ExcelDrawing.UnGroup(System.Boolean)
    name: UnGroup
    nameWithType: ExcelDrawing.UnGroup
    fullName: OfficeOpenXml.Drawing.ExcelDrawing.UnGroup
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Drawing.ExcelDrawing.ParentGroup
  commentId: P:OfficeOpenXml.Drawing.ExcelDrawing.ParentGroup
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  name: ParentGroup
  nameWithType: ExcelDrawing.ParentGroup
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.ParentGroup
- uid: OfficeOpenXml.Drawing.ExcelDrawing.Dispose
  commentId: M:OfficeOpenXml.Drawing.ExcelDrawing.Dispose
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  name: Dispose()
  nameWithType: ExcelDrawing.Dispose()
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.Dispose()
  spec.csharp:
  - uid: OfficeOpenXml.Drawing.ExcelDrawing.Dispose
    name: Dispose
    nameWithType: ExcelDrawing.Dispose
    fullName: OfficeOpenXml.Drawing.ExcelDrawing.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Drawing.ExcelDrawing.Dispose
    name: Dispose
    nameWithType: ExcelDrawing.Dispose
    fullName: OfficeOpenXml.Drawing.ExcelDrawing.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Drawing.ExcelDrawing.AdjustPositionAndSize
  commentId: M:OfficeOpenXml.Drawing.ExcelDrawing.AdjustPositionAndSize
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  name: AdjustPositionAndSize()
  nameWithType: ExcelDrawing.AdjustPositionAndSize()
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.AdjustPositionAndSize()
  spec.csharp:
  - uid: OfficeOpenXml.Drawing.ExcelDrawing.AdjustPositionAndSize
    name: AdjustPositionAndSize
    nameWithType: ExcelDrawing.AdjustPositionAndSize
    fullName: OfficeOpenXml.Drawing.ExcelDrawing.AdjustPositionAndSize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Drawing.ExcelDrawing.AdjustPositionAndSize
    name: AdjustPositionAndSize
    nameWithType: ExcelDrawing.AdjustPositionAndSize
    fullName: OfficeOpenXml.Drawing.ExcelDrawing.AdjustPositionAndSize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml
  commentId: N:OfficeOpenXml
  name: OfficeOpenXml
  nameWithType: OfficeOpenXml
  fullName: OfficeOpenXml
- uid: OfficeOpenXml.Drawing
  commentId: N:OfficeOpenXml.Drawing
  name: OfficeOpenXml.Drawing
  nameWithType: OfficeOpenXml.Drawing
  fullName: OfficeOpenXml.Drawing
- uid: OfficeOpenXml.Drawing.Interfaces
  commentId: N:OfficeOpenXml.Drawing.Interfaces
  name: OfficeOpenXml.Drawing.Interfaces
  nameWithType: OfficeOpenXml.Drawing.Interfaces
  fullName: OfficeOpenXml.Drawing.Interfaces
- uid: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.Marker*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.Marker
  name: Marker
  nameWithType: ExcelStandardChartWithLines.Marker
  fullName: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.Marker
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.Smooth*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.Smooth
  name: Smooth
  nameWithType: ExcelStandardChartWithLines.Smooth
  fullName: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.Smooth
- uid: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.DataLabel*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.DataLabel
  name: DataLabel
  nameWithType: ExcelStandardChartWithLines.DataLabel
  fullName: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.DataLabel
- uid: OfficeOpenXml.Drawing.Interfaces.IDrawingDataLabel.DataLabel
  commentId: P:OfficeOpenXml.Drawing.Interfaces.IDrawingDataLabel.DataLabel
  parent: OfficeOpenXml.Drawing.Interfaces.IDrawingDataLabel
  name: DataLabel
  nameWithType: IDrawingDataLabel.DataLabel
  fullName: OfficeOpenXml.Drawing.Interfaces.IDrawingDataLabel.DataLabel
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartDataLabel
  commentId: T:OfficeOpenXml.Drawing.Chart.ExcelChartDataLabel
  parent: OfficeOpenXml.Drawing.Chart
  name: ExcelChartDataLabel
  nameWithType: ExcelChartDataLabel
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartDataLabel
- uid: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.HasDataLabel*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.HasDataLabel
  name: HasDataLabel
  nameWithType: ExcelStandardChartWithLines.HasDataLabel
  fullName: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.HasDataLabel
- uid: OfficeOpenXml.Drawing.Interfaces.IDrawingDataLabel.HasDataLabel
  commentId: P:OfficeOpenXml.Drawing.Interfaces.IDrawingDataLabel.HasDataLabel
  parent: OfficeOpenXml.Drawing.Interfaces.IDrawingDataLabel
  name: HasDataLabel
  nameWithType: IDrawingDataLabel.HasDataLabel
  fullName: OfficeOpenXml.Drawing.Interfaces.IDrawingDataLabel.HasDataLabel
- uid: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.UpDownBarGapWidth*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.UpDownBarGapWidth
  name: UpDownBarGapWidth
  nameWithType: ExcelStandardChartWithLines.UpDownBarGapWidth
  fullName: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.UpDownBarGapWidth
- uid: System.Nullable{System.Double}
  commentId: T:System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  nameWithType.vb: Nullable(Of Double)
  fullName.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.UpBar*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.UpBar
  name: UpBar
  nameWithType: ExcelStandardChartWithLines.UpBar
  fullName: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.UpBar
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartStyleItem
  commentId: T:OfficeOpenXml.Drawing.Chart.ExcelChartStyleItem
  parent: OfficeOpenXml.Drawing.Chart
  name: ExcelChartStyleItem
  nameWithType: ExcelChartStyleItem
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartStyleItem
- uid: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.DownBar*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.DownBar
  name: DownBar
  nameWithType: ExcelStandardChartWithLines.DownBar
  fullName: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.DownBar
- uid: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.HighLowLine*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.HighLowLine
  name: HighLowLine
  nameWithType: ExcelStandardChartWithLines.HighLowLine
  fullName: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.HighLowLine
- uid: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.DropLine*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.DropLine
  name: DropLine
  nameWithType: ExcelStandardChartWithLines.DropLine
  fullName: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.DropLine
- uid: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.AddUpDownBars*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.AddUpDownBars
  name: AddUpDownBars
  nameWithType: ExcelStandardChartWithLines.AddUpDownBars
  fullName: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.AddUpDownBars
- uid: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.AddDropLines*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.AddDropLines
  name: AddDropLines
  nameWithType: ExcelStandardChartWithLines.AddDropLines
  fullName: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.AddDropLines
- uid: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.AddHighLowLines*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.AddHighLowLines
  name: AddHighLowLines
  nameWithType: ExcelStandardChartWithLines.AddHighLowLines
  fullName: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.AddHighLowLines
- uid: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.Series*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.Series
  name: Series
  nameWithType: ExcelStandardChartWithLines.Series
  fullName: OfficeOpenXml.Drawing.Chart.ExcelStandardChartWithLines.Series
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartSeries{OfficeOpenXml.Drawing.Chart.ExcelLineChartSerie}
  commentId: T:OfficeOpenXml.Drawing.Chart.ExcelChartSeries{OfficeOpenXml.Drawing.Chart.ExcelLineChartSerie}
  parent: OfficeOpenXml.Drawing.Chart
  definition: OfficeOpenXml.Drawing.Chart.ExcelChartSeries`1
  name: ExcelChartSeries<ExcelLineChartSerie>
  nameWithType: ExcelChartSeries<ExcelLineChartSerie>
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartSeries<OfficeOpenXml.Drawing.Chart.ExcelLineChartSerie>
  nameWithType.vb: ExcelChartSeries(Of ExcelLineChartSerie)
  fullName.vb: OfficeOpenXml.Drawing.Chart.ExcelChartSeries(Of OfficeOpenXml.Drawing.Chart.ExcelLineChartSerie)
  name.vb: ExcelChartSeries(Of ExcelLineChartSerie)
  spec.csharp:
  - uid: OfficeOpenXml.Drawing.Chart.ExcelChartSeries`1
    name: ExcelChartSeries
    nameWithType: ExcelChartSeries
    fullName: OfficeOpenXml.Drawing.Chart.ExcelChartSeries
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.Drawing.Chart.ExcelLineChartSerie
    name: ExcelLineChartSerie
    nameWithType: ExcelLineChartSerie
    fullName: OfficeOpenXml.Drawing.Chart.ExcelLineChartSerie
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OfficeOpenXml.Drawing.Chart.ExcelChartSeries`1
    name: ExcelChartSeries
    nameWithType: ExcelChartSeries
    fullName: OfficeOpenXml.Drawing.Chart.ExcelChartSeries
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.Drawing.Chart.ExcelLineChartSerie
    name: ExcelLineChartSerie
    nameWithType: ExcelLineChartSerie
    fullName: OfficeOpenXml.Drawing.Chart.ExcelLineChartSerie
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartSeries`1
  commentId: T:OfficeOpenXml.Drawing.Chart.ExcelChartSeries`1
  name: ExcelChartSeries<T>
  nameWithType: ExcelChartSeries<T>
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartSeries<T>
  nameWithType.vb: ExcelChartSeries(Of T)
  fullName.vb: OfficeOpenXml.Drawing.Chart.ExcelChartSeries(Of T)
  name.vb: ExcelChartSeries(Of T)
  spec.csharp:
  - uid: OfficeOpenXml.Drawing.Chart.ExcelChartSeries`1
    name: ExcelChartSeries
    nameWithType: ExcelChartSeries
    fullName: OfficeOpenXml.Drawing.Chart.ExcelChartSeries
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OfficeOpenXml.Drawing.Chart.ExcelChartSeries`1
    name: ExcelChartSeries
    nameWithType: ExcelChartSeries
    fullName: OfficeOpenXml.Drawing.Chart.ExcelChartSeries
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
