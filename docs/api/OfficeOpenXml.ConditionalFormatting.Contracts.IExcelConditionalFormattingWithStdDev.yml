### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingWithStdDev
  commentId: T:OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingWithStdDev
  id: IExcelConditionalFormattingWithStdDev
  parent: OfficeOpenXml.ConditionalFormatting.Contracts
  children:
  - OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingWithStdDev.StdDev
  langs:
  - csharp
  - vb
  name: IExcelConditionalFormattingWithStdDev
  nameWithType: IExcelConditionalFormattingWithStdDev
  fullName: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingWithStdDev
  type: Interface
  source:
    remote:
      path: src/EPPlus/ConditionalFormatting/Contracts/IExcelConditionalFormattingWithStdDev.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: IExcelConditionalFormattingWithStdDev
    path: ../src/EPPlus/ConditionalFormatting/Contracts/IExcelConditionalFormattingWithStdDev.cs
    startLine: 24
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.ConditionalFormatting.Contracts
  summary: "\nIExcelConditionalFormattingWithStdDev\n"
  example: []
  syntax:
    content: public interface IExcelConditionalFormattingWithStdDev
    content.vb: Public Interface IExcelConditionalFormattingWithStdDev
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingWithStdDev.StdDev
  commentId: P:OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingWithStdDev.StdDev
  id: StdDev
  parent: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingWithStdDev
  langs:
  - csharp
  - vb
  name: StdDev
  nameWithType: IExcelConditionalFormattingWithStdDev.StdDev
  fullName: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingWithStdDev.StdDev
  type: Property
  source:
    remote:
      path: src/EPPlus/ConditionalFormatting/Contracts/IExcelConditionalFormattingWithStdDev.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: StdDev
    path: ../src/EPPlus/ConditionalFormatting/Contracts/IExcelConditionalFormattingWithStdDev.cs
    startLine: 30
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.ConditionalFormatting.Contracts
  summary: "\nStdDev Attribute\n"
  example: []
  syntax:
    content: ushort StdDev { get; set; }
    parameters: []
    return:
      type: System.UInt16
    content.vb: Property StdDev As UShort
  overload: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingWithStdDev.StdDev*
  modifiers.csharp:
  - get
  - set
references:
- uid: OfficeOpenXml.ConditionalFormatting.Contracts
  commentId: N:OfficeOpenXml.ConditionalFormatting.Contracts
  name: OfficeOpenXml.ConditionalFormatting.Contracts
  nameWithType: OfficeOpenXml.ConditionalFormatting.Contracts
  fullName: OfficeOpenXml.ConditionalFormatting.Contracts
- uid: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingWithStdDev.StdDev*
  commentId: Overload:OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingWithStdDev.StdDev
  name: StdDev
  nameWithType: IExcelConditionalFormattingWithStdDev.StdDev
  fullName: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingWithStdDev.StdDev
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
