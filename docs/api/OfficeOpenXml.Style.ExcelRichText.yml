### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.Style.ExcelRichText
  commentId: T:OfficeOpenXml.Style.ExcelRichText
  id: ExcelRichText
  parent: OfficeOpenXml.Style
  children:
  - OfficeOpenXml.Style.ExcelRichText.Bold
  - OfficeOpenXml.Style.ExcelRichText.Charset
  - OfficeOpenXml.Style.ExcelRichText.Color
  - OfficeOpenXml.Style.ExcelRichText.ColorSettings
  - OfficeOpenXml.Style.ExcelRichText.Family
  - OfficeOpenXml.Style.ExcelRichText.FontName
  - OfficeOpenXml.Style.ExcelRichText.GetUnderlineType(System.String)
  - OfficeOpenXml.Style.ExcelRichText.GetUVerticalAlignmentFont(System.String)
  - OfficeOpenXml.Style.ExcelRichText.HasDefaultValue
  - OfficeOpenXml.Style.ExcelRichText.HtmlText
  - OfficeOpenXml.Style.ExcelRichText.Italic
  - OfficeOpenXml.Style.ExcelRichText.PreserveSpace
  - OfficeOpenXml.Style.ExcelRichText.Size
  - OfficeOpenXml.Style.ExcelRichText.Strike
  - OfficeOpenXml.Style.ExcelRichText.Text
  - OfficeOpenXml.Style.ExcelRichText.UnderLine
  - OfficeOpenXml.Style.ExcelRichText.UnderLineType
  - OfficeOpenXml.Style.ExcelRichText.VerticalAlign
  langs:
  - csharp
  - vb
  name: ExcelRichText
  nameWithType: ExcelRichText
  fullName: OfficeOpenXml.Style.ExcelRichText
  type: Class
  source:
    remote:
      path: src/EPPlus/Style/RichText/ExcelRichText.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ExcelRichText
    path: ../src/EPPlus/Style/RichText/ExcelRichText.cs
    startLine: 34
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style
  summary: "\nA richtext part\n"
  example: []
  syntax:
    content: public class ExcelRichText
    content.vb: Public Class ExcelRichText
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OfficeOpenXml.Style.ExcelRichText.PreserveSpace
  commentId: P:OfficeOpenXml.Style.ExcelRichText.PreserveSpace
  id: PreserveSpace
  parent: OfficeOpenXml.Style.ExcelRichText
  langs:
  - csharp
  - vb
  name: PreserveSpace
  nameWithType: ExcelRichText.PreserveSpace
  fullName: OfficeOpenXml.Style.ExcelRichText.PreserveSpace
  type: Property
  source:
    remote:
      path: src/EPPlus/Style/RichText/ExcelRichText.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: PreserveSpace
    path: ../src/EPPlus/Style/RichText/ExcelRichText.cs
    startLine: 45
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style
  summary: "\nPreserves whitespace. Default true\n"
  example: []
  syntax:
    content: public bool PreserveSpace { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property PreserveSpace As Boolean
  overload: OfficeOpenXml.Style.ExcelRichText.PreserveSpace*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Style.ExcelRichText.Bold
  commentId: P:OfficeOpenXml.Style.ExcelRichText.Bold
  id: Bold
  parent: OfficeOpenXml.Style.ExcelRichText
  langs:
  - csharp
  - vb
  name: Bold
  nameWithType: ExcelRichText.Bold
  fullName: OfficeOpenXml.Style.ExcelRichText.Bold
  type: Property
  source:
    remote:
      path: src/EPPlus/Style/RichText/ExcelRichText.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Bold
    path: ../src/EPPlus/Style/RichText/ExcelRichText.cs
    startLine: 50
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style
  summary: "\nBold text\n"
  example: []
  syntax:
    content: public bool Bold { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Bold As Boolean
  overload: OfficeOpenXml.Style.ExcelRichText.Bold*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Style.ExcelRichText.Italic
  commentId: P:OfficeOpenXml.Style.ExcelRichText.Italic
  id: Italic
  parent: OfficeOpenXml.Style.ExcelRichText
  langs:
  - csharp
  - vb
  name: Italic
  nameWithType: ExcelRichText.Italic
  fullName: OfficeOpenXml.Style.ExcelRichText.Italic
  type: Property
  source:
    remote:
      path: src/EPPlus/Style/RichText/ExcelRichText.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Italic
    path: ../src/EPPlus/Style/RichText/ExcelRichText.cs
    startLine: 55
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style
  summary: "\nItalic text\n"
  example: []
  syntax:
    content: public bool Italic { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Italic As Boolean
  overload: OfficeOpenXml.Style.ExcelRichText.Italic*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Style.ExcelRichText.Strike
  commentId: P:OfficeOpenXml.Style.ExcelRichText.Strike
  id: Strike
  parent: OfficeOpenXml.Style.ExcelRichText
  langs:
  - csharp
  - vb
  name: Strike
  nameWithType: ExcelRichText.Strike
  fullName: OfficeOpenXml.Style.ExcelRichText.Strike
  type: Property
  source:
    remote:
      path: src/EPPlus/Style/RichText/ExcelRichText.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Strike
    path: ../src/EPPlus/Style/RichText/ExcelRichText.cs
    startLine: 60
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style
  summary: "\nStrike-out text\n"
  example: []
  syntax:
    content: public bool Strike { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Strike As Boolean
  overload: OfficeOpenXml.Style.ExcelRichText.Strike*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Style.ExcelRichText.UnderLine
  commentId: P:OfficeOpenXml.Style.ExcelRichText.UnderLine
  id: UnderLine
  parent: OfficeOpenXml.Style.ExcelRichText
  langs:
  - csharp
  - vb
  name: UnderLine
  nameWithType: ExcelRichText.UnderLine
  fullName: OfficeOpenXml.Style.ExcelRichText.UnderLine
  type: Property
  source:
    remote:
      path: src/EPPlus/Style/RichText/ExcelRichText.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: UnderLine
    path: ../src/EPPlus/Style/RichText/ExcelRichText.cs
    startLine: 65
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style
  summary: "\nUnderlined text\n"
  example: []
  syntax:
    content: public bool UnderLine { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property UnderLine As Boolean
  overload: OfficeOpenXml.Style.ExcelRichText.UnderLine*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Style.ExcelRichText.VerticalAlign
  commentId: P:OfficeOpenXml.Style.ExcelRichText.VerticalAlign
  id: VerticalAlign
  parent: OfficeOpenXml.Style.ExcelRichText
  langs:
  - csharp
  - vb
  name: VerticalAlign
  nameWithType: ExcelRichText.VerticalAlign
  fullName: OfficeOpenXml.Style.ExcelRichText.VerticalAlign
  type: Property
  source:
    remote:
      path: src/EPPlus/Style/RichText/ExcelRichText.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: VerticalAlign
    path: ../src/EPPlus/Style/RichText/ExcelRichText.cs
    startLine: 80
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style
  summary: "\nVertical Alignment\n"
  example: []
  syntax:
    content: public ExcelVerticalAlignmentFont? VerticalAlign { get; set; }
    parameters: []
    return:
      type: System.Nullable{OfficeOpenXml.Style.ExcelVerticalAlignmentFont}
    content.vb: Public Property VerticalAlign As ExcelVerticalAlignmentFont?
  overload: OfficeOpenXml.Style.ExcelRichText.VerticalAlign*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Style.ExcelRichText.Size
  commentId: P:OfficeOpenXml.Style.ExcelRichText.Size
  id: Size
  parent: OfficeOpenXml.Style.ExcelRichText
  langs:
  - csharp
  - vb
  name: Size
  nameWithType: ExcelRichText.Size
  fullName: OfficeOpenXml.Style.ExcelRichText.Size
  type: Property
  source:
    remote:
      path: src/EPPlus/Style/RichText/ExcelRichText.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Size
    path: ../src/EPPlus/Style/RichText/ExcelRichText.cs
    startLine: 85
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style
  summary: "\nFont size\n"
  example: []
  syntax:
    content: public float Size { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Size As Single
  overload: OfficeOpenXml.Style.ExcelRichText.Size*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Style.ExcelRichText.FontName
  commentId: P:OfficeOpenXml.Style.ExcelRichText.FontName
  id: FontName
  parent: OfficeOpenXml.Style.ExcelRichText
  langs:
  - csharp
  - vb
  name: FontName
  nameWithType: ExcelRichText.FontName
  fullName: OfficeOpenXml.Style.ExcelRichText.FontName
  type: Property
  source:
    remote:
      path: src/EPPlus/Style/RichText/ExcelRichText.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: FontName
    path: ../src/EPPlus/Style/RichText/ExcelRichText.cs
    startLine: 90
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style
  summary: "\nName of the font\n"
  example: []
  syntax:
    content: public string FontName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FontName As String
  overload: OfficeOpenXml.Style.ExcelRichText.FontName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Style.ExcelRichText.Color
  commentId: P:OfficeOpenXml.Style.ExcelRichText.Color
  id: Color
  parent: OfficeOpenXml.Style.ExcelRichText
  langs:
  - csharp
  - vb
  name: Color
  nameWithType: ExcelRichText.Color
  fullName: OfficeOpenXml.Style.ExcelRichText.Color
  type: Property
  source:
    remote:
      path: src/EPPlus/Style/RichText/ExcelRichText.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Color
    path: ../src/EPPlus/Style/RichText/ExcelRichText.cs
    startLine: 97
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style
  summary: "\nText color.\nAlso see <xref href=\"OfficeOpenXml.Style.ExcelRichText.ColorSettings\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public Color Color { get; set; }
    parameters: []
    return:
      type: System.Drawing.Color
    content.vb: Public Property Color As Color
  overload: OfficeOpenXml.Style.ExcelRichText.Color*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Style.ExcelRichText.ColorSettings
  commentId: P:OfficeOpenXml.Style.ExcelRichText.ColorSettings
  id: ColorSettings
  parent: OfficeOpenXml.Style.ExcelRichText
  langs:
  - csharp
  - vb
  name: ColorSettings
  nameWithType: ExcelRichText.ColorSettings
  fullName: OfficeOpenXml.Style.ExcelRichText.ColorSettings
  type: Property
  source:
    remote:
      path: src/EPPlus/Style/RichText/ExcelRichText.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ColorSettings
    path: ../src/EPPlus/Style/RichText/ExcelRichText.cs
    startLine: 134
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style
  summary: "\nColor settings.\n<xref href=\"OfficeOpenXml.Style.ExcelRichText.Color\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public ExcelRichTextColor ColorSettings { get; set; }
    parameters: []
    return:
      type: OfficeOpenXml.Style.ExcelRichTextColor
    content.vb: Public Property ColorSettings As ExcelRichTextColor
  overload: OfficeOpenXml.Style.ExcelRichText.ColorSettings*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Style.ExcelRichText.Charset
  commentId: P:OfficeOpenXml.Style.ExcelRichText.Charset
  id: Charset
  parent: OfficeOpenXml.Style.ExcelRichText
  langs:
  - csharp
  - vb
  name: Charset
  nameWithType: ExcelRichText.Charset
  fullName: OfficeOpenXml.Style.ExcelRichText.Charset
  type: Property
  source:
    remote:
      path: src/EPPlus/Style/RichText/ExcelRichText.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Charset
    path: ../src/EPPlus/Style/RichText/ExcelRichText.cs
    startLine: 139
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style
  summary: "\nCharacterset to use\n"
  example: []
  syntax:
    content: public int Charset { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Charset As Integer
  overload: OfficeOpenXml.Style.ExcelRichText.Charset*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Style.ExcelRichText.Family
  commentId: P:OfficeOpenXml.Style.ExcelRichText.Family
  id: Family
  parent: OfficeOpenXml.Style.ExcelRichText
  langs:
  - csharp
  - vb
  name: Family
  nameWithType: ExcelRichText.Family
  fullName: OfficeOpenXml.Style.ExcelRichText.Family
  type: Property
  source:
    remote:
      path: src/EPPlus/Style/RichText/ExcelRichText.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Family
    path: ../src/EPPlus/Style/RichText/ExcelRichText.cs
    startLine: 144
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style
  summary: "\nFont family\n"
  example: []
  syntax:
    content: public int Family { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Family As Integer
  overload: OfficeOpenXml.Style.ExcelRichText.Family*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Style.ExcelRichText.UnderLineType
  commentId: P:OfficeOpenXml.Style.ExcelRichText.UnderLineType
  id: UnderLineType
  parent: OfficeOpenXml.Style.ExcelRichText
  langs:
  - csharp
  - vb
  name: UnderLineType
  nameWithType: ExcelRichText.UnderLineType
  fullName: OfficeOpenXml.Style.ExcelRichText.UnderLineType
  type: Property
  source:
    remote:
      path: src/EPPlus/Style/RichText/ExcelRichText.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: UnderLineType
    path: ../src/EPPlus/Style/RichText/ExcelRichText.cs
    startLine: 149
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style
  summary: "\nUnderline type of text\n"
  example: []
  syntax:
    content: public ExcelUnderLineType UnderLineType { get; set; }
    parameters: []
    return:
      type: OfficeOpenXml.Style.ExcelUnderLineType
    content.vb: Public Property UnderLineType As ExcelUnderLineType
  overload: OfficeOpenXml.Style.ExcelRichText.UnderLineType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Style.ExcelRichText.Text
  commentId: P:OfficeOpenXml.Style.ExcelRichText.Text
  id: Text
  parent: OfficeOpenXml.Style.ExcelRichText
  langs:
  - csharp
  - vb
  name: Text
  nameWithType: ExcelRichText.Text
  fullName: OfficeOpenXml.Style.ExcelRichText.Text
  type: Property
  source:
    remote:
      path: src/EPPlus/Style/RichText/ExcelRichText.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Text
    path: ../src/EPPlus/Style/RichText/ExcelRichText.cs
    startLine: 183
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style
  summary: "\nThe text\n"
  example: []
  syntax:
    content: public string Text { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Text As String
  overload: OfficeOpenXml.Style.ExcelRichText.Text*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Style.ExcelRichText.GetUnderlineType(System.String)
  commentId: M:OfficeOpenXml.Style.ExcelRichText.GetUnderlineType(System.String)
  id: GetUnderlineType(System.String)
  parent: OfficeOpenXml.Style.ExcelRichText
  langs:
  - csharp
  - vb
  name: GetUnderlineType(String)
  nameWithType: ExcelRichText.GetUnderlineType(String)
  fullName: OfficeOpenXml.Style.ExcelRichText.GetUnderlineType(System.String)
  type: Method
  source:
    remote:
      path: src/EPPlus/Style/RichText/ExcelRichText.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: GetUnderlineType
    path: ../src/EPPlus/Style/RichText/ExcelRichText.cs
    startLine: 247
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style
  summary: "\nGet the underline typ for rich text\n"
  example: []
  syntax:
    content: public static ExcelUnderLineType GetUnderlineType(string v)
    parameters:
    - id: v
      type: System.String
      description: ''
    return:
      type: OfficeOpenXml.Style.ExcelUnderLineType
      description: returns excelunderline type
    content.vb: Public Shared Function GetUnderlineType(v As String) As ExcelUnderLineType
  overload: OfficeOpenXml.Style.ExcelRichText.GetUnderlineType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: OfficeOpenXml.Style.ExcelRichText.GetUVerticalAlignmentFont(System.String)
  commentId: M:OfficeOpenXml.Style.ExcelRichText.GetUVerticalAlignmentFont(System.String)
  id: GetUVerticalAlignmentFont(System.String)
  parent: OfficeOpenXml.Style.ExcelRichText
  langs:
  - csharp
  - vb
  name: GetUVerticalAlignmentFont(String)
  nameWithType: ExcelRichText.GetUVerticalAlignmentFont(String)
  fullName: OfficeOpenXml.Style.ExcelRichText.GetUVerticalAlignmentFont(System.String)
  type: Method
  source:
    remote:
      path: src/EPPlus/Style/RichText/ExcelRichText.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: GetUVerticalAlignmentFont
    path: ../src/EPPlus/Style/RichText/ExcelRichText.cs
    startLine: 269
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style
  summary: "\nGet the underline typ for rich text\n"
  example: []
  syntax:
    content: public static ExcelVerticalAlignmentFont GetUVerticalAlignmentFont(string v)
    parameters:
    - id: v
      type: System.String
      description: ''
    return:
      type: OfficeOpenXml.Style.ExcelVerticalAlignmentFont
      description: returns excelunderline type
    content.vb: Public Shared Function GetUVerticalAlignmentFont(v As String) As ExcelVerticalAlignmentFont
  overload: OfficeOpenXml.Style.ExcelRichText.GetUVerticalAlignmentFont*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: OfficeOpenXml.Style.ExcelRichText.HtmlText
  commentId: P:OfficeOpenXml.Style.ExcelRichText.HtmlText
  id: HtmlText
  parent: OfficeOpenXml.Style.ExcelRichText
  langs:
  - csharp
  - vb
  name: HtmlText
  nameWithType: ExcelRichText.HtmlText
  fullName: OfficeOpenXml.Style.ExcelRichText.HtmlText
  type: Property
  source:
    remote:
      path: src/EPPlus/Style/RichText/ExcelRichText.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: HtmlText
    path: ../src/EPPlus/Style/RichText/ExcelRichText.cs
    startLine: 299
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style
  summary: "\nReturns the rich text item as a html string.\n"
  example: []
  syntax:
    content: public string HtmlText { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property HtmlText As String
  overload: OfficeOpenXml.Style.ExcelRichText.HtmlText*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Style.ExcelRichText.HasDefaultValue
  commentId: P:OfficeOpenXml.Style.ExcelRichText.HasDefaultValue
  id: HasDefaultValue
  parent: OfficeOpenXml.Style.ExcelRichText
  langs:
  - csharp
  - vb
  name: HasDefaultValue
  nameWithType: ExcelRichText.HasDefaultValue
  fullName: OfficeOpenXml.Style.ExcelRichText.HasDefaultValue
  type: Property
  source:
    remote:
      path: src/EPPlus/Style/RichText/ExcelRichText.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: HasDefaultValue
    path: ../src/EPPlus/Style/RichText/ExcelRichText.cs
    startLine: 522
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style
  syntax:
    content: public bool HasDefaultValue { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasDefaultValue As Boolean
  overload: OfficeOpenXml.Style.ExcelRichText.HasDefaultValue*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: OfficeOpenXml.Style
  commentId: N:OfficeOpenXml.Style
  name: OfficeOpenXml.Style
  nameWithType: OfficeOpenXml.Style
  fullName: OfficeOpenXml.Style
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml.Style.ExcelRichText.PreserveSpace*
  commentId: Overload:OfficeOpenXml.Style.ExcelRichText.PreserveSpace
  name: PreserveSpace
  nameWithType: ExcelRichText.PreserveSpace
  fullName: OfficeOpenXml.Style.ExcelRichText.PreserveSpace
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: OfficeOpenXml.Style.ExcelRichText.Bold*
  commentId: Overload:OfficeOpenXml.Style.ExcelRichText.Bold
  name: Bold
  nameWithType: ExcelRichText.Bold
  fullName: OfficeOpenXml.Style.ExcelRichText.Bold
- uid: OfficeOpenXml.Style.ExcelRichText.Italic*
  commentId: Overload:OfficeOpenXml.Style.ExcelRichText.Italic
  name: Italic
  nameWithType: ExcelRichText.Italic
  fullName: OfficeOpenXml.Style.ExcelRichText.Italic
- uid: OfficeOpenXml.Style.ExcelRichText.Strike*
  commentId: Overload:OfficeOpenXml.Style.ExcelRichText.Strike
  name: Strike
  nameWithType: ExcelRichText.Strike
  fullName: OfficeOpenXml.Style.ExcelRichText.Strike
- uid: OfficeOpenXml.Style.ExcelRichText.UnderLine*
  commentId: Overload:OfficeOpenXml.Style.ExcelRichText.UnderLine
  name: UnderLine
  nameWithType: ExcelRichText.UnderLine
  fullName: OfficeOpenXml.Style.ExcelRichText.UnderLine
- uid: OfficeOpenXml.Style.ExcelRichText.VerticalAlign*
  commentId: Overload:OfficeOpenXml.Style.ExcelRichText.VerticalAlign
  name: VerticalAlign
  nameWithType: ExcelRichText.VerticalAlign
  fullName: OfficeOpenXml.Style.ExcelRichText.VerticalAlign
- uid: System.Nullable{OfficeOpenXml.Style.ExcelVerticalAlignmentFont}
  commentId: T:System.Nullable{OfficeOpenXml.Style.ExcelVerticalAlignmentFont}
  parent: System
  definition: System.Nullable`1
  name: Nullable<ExcelVerticalAlignmentFont>
  nameWithType: Nullable<ExcelVerticalAlignmentFont>
  fullName: System.Nullable<OfficeOpenXml.Style.ExcelVerticalAlignmentFont>
  nameWithType.vb: Nullable(Of ExcelVerticalAlignmentFont)
  fullName.vb: System.Nullable(Of OfficeOpenXml.Style.ExcelVerticalAlignmentFont)
  name.vb: Nullable(Of ExcelVerticalAlignmentFont)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.Style.ExcelVerticalAlignmentFont
    name: ExcelVerticalAlignmentFont
    nameWithType: ExcelVerticalAlignmentFont
    fullName: OfficeOpenXml.Style.ExcelVerticalAlignmentFont
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.Style.ExcelVerticalAlignmentFont
    name: ExcelVerticalAlignmentFont
    nameWithType: ExcelVerticalAlignmentFont
    fullName: OfficeOpenXml.Style.ExcelVerticalAlignmentFont
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Style.ExcelRichText.Size*
  commentId: Overload:OfficeOpenXml.Style.ExcelRichText.Size
  name: Size
  nameWithType: ExcelRichText.Size
  fullName: OfficeOpenXml.Style.ExcelRichText.Size
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: OfficeOpenXml.Style.ExcelRichText.FontName*
  commentId: Overload:OfficeOpenXml.Style.ExcelRichText.FontName
  name: FontName
  nameWithType: ExcelRichText.FontName
  fullName: OfficeOpenXml.Style.ExcelRichText.FontName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OfficeOpenXml.Style.ExcelRichText.ColorSettings
  commentId: P:OfficeOpenXml.Style.ExcelRichText.ColorSettings
  isExternal: true
- uid: OfficeOpenXml.Style.ExcelRichText.Color*
  commentId: Overload:OfficeOpenXml.Style.ExcelRichText.Color
  name: Color
  nameWithType: ExcelRichText.Color
  fullName: OfficeOpenXml.Style.ExcelRichText.Color
- uid: System.Drawing.Color
  commentId: T:System.Drawing.Color
  parent: System.Drawing
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Drawing
  commentId: N:System.Drawing
  isExternal: true
  name: System.Drawing
  nameWithType: System.Drawing
  fullName: System.Drawing
- uid: OfficeOpenXml.Style.ExcelRichText.Color
  commentId: P:OfficeOpenXml.Style.ExcelRichText.Color
  isExternal: true
- uid: OfficeOpenXml.Style.ExcelRichText.ColorSettings*
  commentId: Overload:OfficeOpenXml.Style.ExcelRichText.ColorSettings
  name: ColorSettings
  nameWithType: ExcelRichText.ColorSettings
  fullName: OfficeOpenXml.Style.ExcelRichText.ColorSettings
- uid: OfficeOpenXml.Style.ExcelRichTextColor
  commentId: T:OfficeOpenXml.Style.ExcelRichTextColor
  parent: OfficeOpenXml.Style
  name: ExcelRichTextColor
  nameWithType: ExcelRichTextColor
  fullName: OfficeOpenXml.Style.ExcelRichTextColor
- uid: OfficeOpenXml.Style.ExcelRichText.Charset*
  commentId: Overload:OfficeOpenXml.Style.ExcelRichText.Charset
  name: Charset
  nameWithType: ExcelRichText.Charset
  fullName: OfficeOpenXml.Style.ExcelRichText.Charset
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: OfficeOpenXml.Style.ExcelRichText.Family*
  commentId: Overload:OfficeOpenXml.Style.ExcelRichText.Family
  name: Family
  nameWithType: ExcelRichText.Family
  fullName: OfficeOpenXml.Style.ExcelRichText.Family
- uid: OfficeOpenXml.Style.ExcelRichText.UnderLineType*
  commentId: Overload:OfficeOpenXml.Style.ExcelRichText.UnderLineType
  name: UnderLineType
  nameWithType: ExcelRichText.UnderLineType
  fullName: OfficeOpenXml.Style.ExcelRichText.UnderLineType
- uid: OfficeOpenXml.Style.ExcelUnderLineType
  commentId: T:OfficeOpenXml.Style.ExcelUnderLineType
  parent: OfficeOpenXml.Style
  name: ExcelUnderLineType
  nameWithType: ExcelUnderLineType
  fullName: OfficeOpenXml.Style.ExcelUnderLineType
- uid: OfficeOpenXml.Style.ExcelRichText.Text*
  commentId: Overload:OfficeOpenXml.Style.ExcelRichText.Text
  name: Text
  nameWithType: ExcelRichText.Text
  fullName: OfficeOpenXml.Style.ExcelRichText.Text
- uid: OfficeOpenXml.Style.ExcelRichText.GetUnderlineType*
  commentId: Overload:OfficeOpenXml.Style.ExcelRichText.GetUnderlineType
  name: GetUnderlineType
  nameWithType: ExcelRichText.GetUnderlineType
  fullName: OfficeOpenXml.Style.ExcelRichText.GetUnderlineType
- uid: OfficeOpenXml.Style.ExcelRichText.GetUVerticalAlignmentFont*
  commentId: Overload:OfficeOpenXml.Style.ExcelRichText.GetUVerticalAlignmentFont
  name: GetUVerticalAlignmentFont
  nameWithType: ExcelRichText.GetUVerticalAlignmentFont
  fullName: OfficeOpenXml.Style.ExcelRichText.GetUVerticalAlignmentFont
- uid: OfficeOpenXml.Style.ExcelVerticalAlignmentFont
  commentId: T:OfficeOpenXml.Style.ExcelVerticalAlignmentFont
  parent: OfficeOpenXml.Style
  name: ExcelVerticalAlignmentFont
  nameWithType: ExcelVerticalAlignmentFont
  fullName: OfficeOpenXml.Style.ExcelVerticalAlignmentFont
- uid: OfficeOpenXml.Style.ExcelRichText.HtmlText*
  commentId: Overload:OfficeOpenXml.Style.ExcelRichText.HtmlText
  name: HtmlText
  nameWithType: ExcelRichText.HtmlText
  fullName: OfficeOpenXml.Style.ExcelRichText.HtmlText
- uid: OfficeOpenXml.Style.ExcelRichText.HasDefaultValue*
  commentId: Overload:OfficeOpenXml.Style.ExcelRichText.HasDefaultValue
  name: HasDefaultValue
  nameWithType: ExcelRichText.HasDefaultValue
  fullName: OfficeOpenXml.Style.ExcelRichText.HasDefaultValue
