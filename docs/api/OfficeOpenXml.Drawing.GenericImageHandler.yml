### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.Drawing.GenericImageHandler
  commentId: T:OfficeOpenXml.Drawing.GenericImageHandler
  id: GenericImageHandler
  parent: OfficeOpenXml.Drawing
  children:
  - OfficeOpenXml.Drawing.GenericImageHandler.GetImageBounds(System.IO.MemoryStream,OfficeOpenXml.Drawing.ePictureType,System.Double@,System.Double@,System.Double@,System.Double@)
  - OfficeOpenXml.Drawing.GenericImageHandler.LastException
  - OfficeOpenXml.Drawing.GenericImageHandler.SupportedTypes
  - OfficeOpenXml.Drawing.GenericImageHandler.ValidForEnvironment
  langs:
  - csharp
  - vb
  name: GenericImageHandler
  nameWithType: GenericImageHandler
  fullName: OfficeOpenXml.Drawing.GenericImageHandler
  type: Class
  source:
    remote:
      path: src/EPPlus/Drawing/ImageHandling/GenericImageHandler.cs
      branch: develop
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: GenericImageHandler
    path: ../src/EPPlus/Drawing/ImageHandling/GenericImageHandler.cs
    startLine: 12
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nThe internal generic handler for image formats used in EPPlus.\n"
  example: []
  syntax:
    content: 'public class GenericImageHandler : IImageHandler'
    content.vb: >-
      Public Class GenericImageHandler
          Implements IImageHandler
  inheritance:
  - System.Object
  implements:
  - OfficeOpenXml.Interfaces.Drawing.Image.IImageHandler
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OfficeOpenXml.Drawing.GenericImageHandler.SupportedTypes
  commentId: P:OfficeOpenXml.Drawing.GenericImageHandler.SupportedTypes
  id: SupportedTypes
  parent: OfficeOpenXml.Drawing.GenericImageHandler
  langs:
  - csharp
  - vb
  name: SupportedTypes
  nameWithType: GenericImageHandler.SupportedTypes
  fullName: OfficeOpenXml.Drawing.GenericImageHandler.SupportedTypes
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/ImageHandling/GenericImageHandler.cs
      branch: develop
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: SupportedTypes
    path: ../src/EPPlus/Drawing/ImageHandling/GenericImageHandler.cs
    startLine: 17
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nSupported types by the image handler\n"
  example: []
  syntax:
    content: public HashSet<ePictureType> SupportedTypes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.HashSet{OfficeOpenXml.Drawing.ePictureType}
    content.vb: Public ReadOnly Property SupportedTypes As HashSet(Of ePictureType)
  overload: OfficeOpenXml.Drawing.GenericImageHandler.SupportedTypes*
  implements:
  - OfficeOpenXml.Interfaces.Drawing.Image.IImageHandler.SupportedTypes
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Drawing.GenericImageHandler.LastException
  commentId: P:OfficeOpenXml.Drawing.GenericImageHandler.LastException
  id: LastException
  parent: OfficeOpenXml.Drawing.GenericImageHandler
  langs:
  - csharp
  - vb
  name: LastException
  nameWithType: GenericImageHandler.LastException
  fullName: OfficeOpenXml.Drawing.GenericImageHandler.LastException
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/ImageHandling/GenericImageHandler.cs
      branch: develop
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: LastException
    path: ../src/EPPlus/Drawing/ImageHandling/GenericImageHandler.cs
    startLine: 25
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nThe last exception that occured when calling <xref href=\"OfficeOpenXml.Drawing.GenericImageHandler.GetImageBounds(System.IO.MemoryStream%2cOfficeOpenXml.Drawing.ePictureType%2cSystem.Double%40%2cSystem.Double%40%2cSystem.Double%40%2cSystem.Double%40)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public Exception LastException { get; }
    parameters: []
    return:
      type: System.Exception
    content.vb: Public ReadOnly Property LastException As Exception
  overload: OfficeOpenXml.Drawing.GenericImageHandler.LastException*
  implements:
  - OfficeOpenXml.Interfaces.Drawing.Image.IImageHandler.LastException
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Drawing.GenericImageHandler.GetImageBounds(System.IO.MemoryStream,OfficeOpenXml.Drawing.ePictureType,System.Double@,System.Double@,System.Double@,System.Double@)
  commentId: M:OfficeOpenXml.Drawing.GenericImageHandler.GetImageBounds(System.IO.MemoryStream,OfficeOpenXml.Drawing.ePictureType,System.Double@,System.Double@,System.Double@,System.Double@)
  id: GetImageBounds(System.IO.MemoryStream,OfficeOpenXml.Drawing.ePictureType,System.Double@,System.Double@,System.Double@,System.Double@)
  parent: OfficeOpenXml.Drawing.GenericImageHandler
  langs:
  - csharp
  - vb
  name: GetImageBounds(MemoryStream, ePictureType, out Double, out Double, out Double, out Double)
  nameWithType: GenericImageHandler.GetImageBounds(MemoryStream, ePictureType, out Double, out Double, out Double, out Double)
  fullName: OfficeOpenXml.Drawing.GenericImageHandler.GetImageBounds(System.IO.MemoryStream, OfficeOpenXml.Drawing.ePictureType, out System.Double, out System.Double, out System.Double, out System.Double)
  type: Method
  source:
    remote:
      path: src/EPPlus/Drawing/ImageHandling/GenericImageHandler.cs
      branch: develop
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: GetImageBounds
    path: ../src/EPPlus/Drawing/ImageHandling/GenericImageHandler.cs
    startLine: 37
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nRetreives the image bounds and resolution for an image\n"
  example: []
  syntax:
    content: public bool GetImageBounds(MemoryStream image, ePictureType type, out double width, out double height, out double horizontalResolution, out double verticalResolution)
    parameters:
    - id: image
      type: System.IO.MemoryStream
      description: The image data
    - id: type
      type: OfficeOpenXml.Drawing.ePictureType
      description: Type type of image
    - id: width
      type: System.Double
      description: The width of the image
    - id: height
      type: System.Double
      description: The height of the image
    - id: horizontalResolution
      type: System.Double
      description: The horizontal resolution in DPI
    - id: verticalResolution
      type: System.Double
      description: The vertical resolution in DPI
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function GetImageBounds(image As MemoryStream, type As ePictureType, ByRef width As Double, ByRef height As Double, ByRef horizontalResolution As Double, ByRef verticalResolution As Double) As Boolean
  overload: OfficeOpenXml.Drawing.GenericImageHandler.GetImageBounds*
  implements:
  - OfficeOpenXml.Interfaces.Drawing.Image.IImageHandler.GetImageBounds(System.IO.MemoryStream,OfficeOpenXml.Drawing.ePictureType,System.Double@,System.Double@,System.Double@,System.Double@)
  nameWithType.vb: GenericImageHandler.GetImageBounds(MemoryStream, ePictureType, ByRef Double, ByRef Double, ByRef Double, ByRef Double)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: OfficeOpenXml.Drawing.GenericImageHandler.GetImageBounds(System.IO.MemoryStream, OfficeOpenXml.Drawing.ePictureType, ByRef System.Double, ByRef System.Double, ByRef System.Double, ByRef System.Double)
  name.vb: GetImageBounds(MemoryStream, ePictureType, ByRef Double, ByRef Double, ByRef Double, ByRef Double)
- uid: OfficeOpenXml.Drawing.GenericImageHandler.ValidForEnvironment
  commentId: M:OfficeOpenXml.Drawing.GenericImageHandler.ValidForEnvironment
  id: ValidForEnvironment
  parent: OfficeOpenXml.Drawing.GenericImageHandler
  langs:
  - csharp
  - vb
  name: ValidForEnvironment()
  nameWithType: GenericImageHandler.ValidForEnvironment()
  fullName: OfficeOpenXml.Drawing.GenericImageHandler.ValidForEnvironment()
  type: Method
  source:
    remote:
      path: src/EPPlus/Drawing/ImageHandling/GenericImageHandler.cs
      branch: develop
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ValidForEnvironment
    path: ../src/EPPlus/Drawing/ImageHandling/GenericImageHandler.cs
    startLine: 61
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nReturns if the handler is valid for the enviornment. \nThe generic image handler is valid in all environments, so it will always return true.\n"
  example: []
  syntax:
    content: public bool ValidForEnvironment()
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function ValidForEnvironment As Boolean
  overload: OfficeOpenXml.Drawing.GenericImageHandler.ValidForEnvironment*
  implements:
  - OfficeOpenXml.Interfaces.Drawing.Image.IImageHandler.ValidForEnvironment
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: OfficeOpenXml.Drawing
  commentId: N:OfficeOpenXml.Drawing
  name: OfficeOpenXml.Drawing
  nameWithType: OfficeOpenXml.Drawing
  fullName: OfficeOpenXml.Drawing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OfficeOpenXml.Interfaces.Drawing.Image.IImageHandler
  commentId: T:OfficeOpenXml.Interfaces.Drawing.Image.IImageHandler
  parent: OfficeOpenXml.Interfaces.Drawing.Image
  name: IImageHandler
  nameWithType: IImageHandler
  fullName: OfficeOpenXml.Interfaces.Drawing.Image.IImageHandler
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml.Interfaces.Drawing.Image
  commentId: N:OfficeOpenXml.Interfaces.Drawing.Image
  name: OfficeOpenXml.Interfaces.Drawing.Image
  nameWithType: OfficeOpenXml.Interfaces.Drawing.Image
  fullName: OfficeOpenXml.Interfaces.Drawing.Image
- uid: OfficeOpenXml.Drawing.GenericImageHandler.SupportedTypes*
  commentId: Overload:OfficeOpenXml.Drawing.GenericImageHandler.SupportedTypes
  name: SupportedTypes
  nameWithType: GenericImageHandler.SupportedTypes
  fullName: OfficeOpenXml.Drawing.GenericImageHandler.SupportedTypes
- uid: OfficeOpenXml.Interfaces.Drawing.Image.IImageHandler.SupportedTypes
  commentId: P:OfficeOpenXml.Interfaces.Drawing.Image.IImageHandler.SupportedTypes
  parent: OfficeOpenXml.Interfaces.Drawing.Image.IImageHandler
  name: SupportedTypes
  nameWithType: IImageHandler.SupportedTypes
  fullName: OfficeOpenXml.Interfaces.Drawing.Image.IImageHandler.SupportedTypes
- uid: System.Collections.Generic.HashSet{OfficeOpenXml.Drawing.ePictureType}
  commentId: T:System.Collections.Generic.HashSet{OfficeOpenXml.Drawing.ePictureType}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  name: HashSet<ePictureType>
  nameWithType: HashSet<ePictureType>
  fullName: System.Collections.Generic.HashSet<OfficeOpenXml.Drawing.ePictureType>
  nameWithType.vb: HashSet(Of ePictureType)
  fullName.vb: System.Collections.Generic.HashSet(Of OfficeOpenXml.Drawing.ePictureType)
  name.vb: HashSet(Of ePictureType)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.Drawing.ePictureType
    name: ePictureType
    nameWithType: ePictureType
    fullName: OfficeOpenXml.Drawing.ePictureType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.Drawing.ePictureType
    name: ePictureType
    nameWithType: ePictureType
    fullName: OfficeOpenXml.Drawing.ePictureType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet`1
  commentId: T:System.Collections.Generic.HashSet`1
  isExternal: true
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  nameWithType.vb: HashSet(Of T)
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: OfficeOpenXml.Drawing.GenericImageHandler.GetImageBounds(System.IO.MemoryStream,OfficeOpenXml.Drawing.ePictureType,System.Double@,System.Double@,System.Double@,System.Double@)
  commentId: M:OfficeOpenXml.Drawing.GenericImageHandler.GetImageBounds(System.IO.MemoryStream,OfficeOpenXml.Drawing.ePictureType,System.Double@,System.Double@,System.Double@,System.Double@)
  isExternal: true
- uid: OfficeOpenXml.Drawing.GenericImageHandler.LastException*
  commentId: Overload:OfficeOpenXml.Drawing.GenericImageHandler.LastException
  name: LastException
  nameWithType: GenericImageHandler.LastException
  fullName: OfficeOpenXml.Drawing.GenericImageHandler.LastException
- uid: OfficeOpenXml.Interfaces.Drawing.Image.IImageHandler.LastException
  commentId: P:OfficeOpenXml.Interfaces.Drawing.Image.IImageHandler.LastException
  parent: OfficeOpenXml.Interfaces.Drawing.Image.IImageHandler
  name: LastException
  nameWithType: IImageHandler.LastException
  fullName: OfficeOpenXml.Interfaces.Drawing.Image.IImageHandler.LastException
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: OfficeOpenXml.Drawing.GenericImageHandler.GetImageBounds*
  commentId: Overload:OfficeOpenXml.Drawing.GenericImageHandler.GetImageBounds
  name: GetImageBounds
  nameWithType: GenericImageHandler.GetImageBounds
  fullName: OfficeOpenXml.Drawing.GenericImageHandler.GetImageBounds
- uid: OfficeOpenXml.Interfaces.Drawing.Image.IImageHandler.GetImageBounds(System.IO.MemoryStream,OfficeOpenXml.Drawing.ePictureType,System.Double@,System.Double@,System.Double@,System.Double@)
  commentId: M:OfficeOpenXml.Interfaces.Drawing.Image.IImageHandler.GetImageBounds(System.IO.MemoryStream,OfficeOpenXml.Drawing.ePictureType,System.Double@,System.Double@,System.Double@,System.Double@)
  parent: OfficeOpenXml.Interfaces.Drawing.Image.IImageHandler
  isExternal: true
  name: GetImageBounds(MemoryStream, ePictureType, Double, Double, Double, Double)
  nameWithType: IImageHandler.GetImageBounds(MemoryStream, ePictureType, Double, Double, Double, Double)
  fullName: OfficeOpenXml.Interfaces.Drawing.Image.IImageHandler.GetImageBounds(System.IO.MemoryStream, OfficeOpenXml.Drawing.ePictureType, System.Double, System.Double, System.Double, System.Double)
  spec.csharp:
  - uid: OfficeOpenXml.Interfaces.Drawing.Image.IImageHandler.GetImageBounds(System.IO.MemoryStream,OfficeOpenXml.Drawing.ePictureType,System.Double@,System.Double@,System.Double@,System.Double@)
    name: GetImageBounds
    nameWithType: IImageHandler.GetImageBounds
    fullName: OfficeOpenXml.Interfaces.Drawing.Image.IImageHandler.GetImageBounds
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.MemoryStream
    name: MemoryStream
    nameWithType: MemoryStream
    fullName: System.IO.MemoryStream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.Drawing.ePictureType
    name: ePictureType
    nameWithType: ePictureType
    fullName: OfficeOpenXml.Drawing.ePictureType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Interfaces.Drawing.Image.IImageHandler.GetImageBounds(System.IO.MemoryStream,OfficeOpenXml.Drawing.ePictureType,System.Double@,System.Double@,System.Double@,System.Double@)
    name: GetImageBounds
    nameWithType: IImageHandler.GetImageBounds
    fullName: OfficeOpenXml.Interfaces.Drawing.Image.IImageHandler.GetImageBounds
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.MemoryStream
    name: MemoryStream
    nameWithType: MemoryStream
    fullName: System.IO.MemoryStream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.Drawing.ePictureType
    name: ePictureType
    nameWithType: ePictureType
    fullName: OfficeOpenXml.Drawing.ePictureType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.MemoryStream
  commentId: T:System.IO.MemoryStream
  parent: System.IO
  isExternal: true
  name: MemoryStream
  nameWithType: MemoryStream
  fullName: System.IO.MemoryStream
- uid: OfficeOpenXml.Drawing.ePictureType
  commentId: T:OfficeOpenXml.Drawing.ePictureType
  parent: OfficeOpenXml.Drawing
  name: ePictureType
  nameWithType: ePictureType
  fullName: OfficeOpenXml.Drawing.ePictureType
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: OfficeOpenXml.Drawing.GenericImageHandler.ValidForEnvironment*
  commentId: Overload:OfficeOpenXml.Drawing.GenericImageHandler.ValidForEnvironment
  name: ValidForEnvironment
  nameWithType: GenericImageHandler.ValidForEnvironment
  fullName: OfficeOpenXml.Drawing.GenericImageHandler.ValidForEnvironment
- uid: OfficeOpenXml.Interfaces.Drawing.Image.IImageHandler.ValidForEnvironment
  commentId: M:OfficeOpenXml.Interfaces.Drawing.Image.IImageHandler.ValidForEnvironment
  parent: OfficeOpenXml.Interfaces.Drawing.Image.IImageHandler
  name: ValidForEnvironment()
  nameWithType: IImageHandler.ValidForEnvironment()
  fullName: OfficeOpenXml.Interfaces.Drawing.Image.IImageHandler.ValidForEnvironment()
  spec.csharp:
  - uid: OfficeOpenXml.Interfaces.Drawing.Image.IImageHandler.ValidForEnvironment
    name: ValidForEnvironment
    nameWithType: IImageHandler.ValidForEnvironment
    fullName: OfficeOpenXml.Interfaces.Drawing.Image.IImageHandler.ValidForEnvironment
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Interfaces.Drawing.Image.IImageHandler.ValidForEnvironment
    name: ValidForEnvironment
    nameWithType: IImageHandler.ValidForEnvironment
    fullName: OfficeOpenXml.Interfaces.Drawing.Image.IImageHandler.ValidForEnvironment
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
