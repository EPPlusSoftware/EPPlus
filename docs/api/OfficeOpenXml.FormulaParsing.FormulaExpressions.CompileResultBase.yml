### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.FormulaParsing.FormulaExpressions.CompileResultBase
  commentId: T:OfficeOpenXml.FormulaParsing.FormulaExpressions.CompileResultBase
  id: CompileResultBase
  parent: OfficeOpenXml.FormulaParsing.FormulaExpressions
  children:
  - OfficeOpenXml.FormulaParsing.FormulaExpressions.CompileResultBase.ResultType
  langs:
  - csharp
  - vb
  name: CompileResultBase
  nameWithType: CompileResultBase
  fullName: OfficeOpenXml.FormulaParsing.FormulaExpressions.CompileResultBase
  type: Class
  source:
    remote:
      path: src/EPPlus/FormulaParsing/FormulaExpressions/CompileResult.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: CompileResultBase
    path: ../src/EPPlus/FormulaParsing/FormulaExpressions/CompileResult.cs
    startLine: 44
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.FormulaExpressions
  syntax:
    content: public abstract class CompileResultBase
    content.vb: Public MustInherit Class CompileResultBase
  inheritance:
  - System.Object
  derivedClasses:
  - OfficeOpenXml.FormulaParsing.FormulaExpressions.CompileResult
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: OfficeOpenXml.FormulaParsing.FormulaExpressions.CompileResultBase.ResultType
  commentId: P:OfficeOpenXml.FormulaParsing.FormulaExpressions.CompileResultBase.ResultType
  id: ResultType
  parent: OfficeOpenXml.FormulaParsing.FormulaExpressions.CompileResultBase
  langs:
  - csharp
  - vb
  name: ResultType
  nameWithType: CompileResultBase.ResultType
  fullName: OfficeOpenXml.FormulaParsing.FormulaExpressions.CompileResultBase.ResultType
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/FormulaExpressions/CompileResult.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ResultType
    path: ../src/EPPlus/FormulaParsing/FormulaExpressions/CompileResult.cs
    startLine: 46
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.FormulaExpressions
  syntax:
    content: public abstract CompileResultType ResultType { get; }
    parameters: []
    return:
      type: OfficeOpenXml.FormulaParsing.FormulaExpressions.CompileResultType
    content.vb: Public MustOverride ReadOnly Property ResultType As CompileResultType
  overload: OfficeOpenXml.FormulaParsing.FormulaExpressions.CompileResultBase.ResultType*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
references:
- uid: OfficeOpenXml.FormulaParsing.FormulaExpressions
  commentId: N:OfficeOpenXml.FormulaParsing.FormulaExpressions
  name: OfficeOpenXml.FormulaParsing.FormulaExpressions
  nameWithType: OfficeOpenXml.FormulaParsing.FormulaExpressions
  fullName: OfficeOpenXml.FormulaParsing.FormulaExpressions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml.FormulaParsing.FormulaExpressions.CompileResultBase.ResultType*
  commentId: Overload:OfficeOpenXml.FormulaParsing.FormulaExpressions.CompileResultBase.ResultType
  name: ResultType
  nameWithType: CompileResultBase.ResultType
  fullName: OfficeOpenXml.FormulaParsing.FormulaExpressions.CompileResultBase.ResultType
- uid: OfficeOpenXml.FormulaParsing.FormulaExpressions.CompileResultType
  commentId: T:OfficeOpenXml.FormulaParsing.FormulaExpressions.CompileResultType
  parent: OfficeOpenXml.FormulaParsing.FormulaExpressions
  name: CompileResultType
  nameWithType: CompileResultType
  fullName: OfficeOpenXml.FormulaParsing.FormulaExpressions.CompileResultType
