### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.FormulaParsing.Ranges.NameInfo
  commentId: T:OfficeOpenXml.FormulaParsing.Ranges.NameInfo
  id: NameInfo
  parent: OfficeOpenXml.FormulaParsing.Ranges
  children:
  - OfficeOpenXml.FormulaParsing.Ranges.NameInfo.Formula
  - OfficeOpenXml.FormulaParsing.Ranges.NameInfo.Id
  - OfficeOpenXml.FormulaParsing.Ranges.NameInfo.Name
  - OfficeOpenXml.FormulaParsing.Ranges.NameInfo.Tokens
  - OfficeOpenXml.FormulaParsing.Ranges.NameInfo.Value
  - OfficeOpenXml.FormulaParsing.Ranges.NameInfo.wsIx
  langs:
  - csharp
  - vb
  name: NameInfo
  nameWithType: NameInfo
  fullName: OfficeOpenXml.FormulaParsing.Ranges.NameInfo
  type: Class
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Ranges/NameInfo.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: NameInfo
    path: ../src/EPPlus/FormulaParsing/Ranges/NameInfo.cs
    startLine: 23
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Ranges
  summary: "\nEPPlus implementation of the <xref href=\"OfficeOpenXml.FormulaParsing.INameInfo\" data-throw-if-not-resolved=\"false\"></xref> interface\n"
  example: []
  syntax:
    content: 'public class NameInfo : INameInfo'
    content.vb: >-
      Public Class NameInfo
          Implements INameInfo
  inheritance:
  - System.Object
  implements:
  - OfficeOpenXml.FormulaParsing.INameInfo
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OfficeOpenXml.FormulaParsing.Ranges.NameInfo.Id
  commentId: P:OfficeOpenXml.FormulaParsing.Ranges.NameInfo.Id
  id: Id
  parent: OfficeOpenXml.FormulaParsing.Ranges.NameInfo
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: NameInfo.Id
  fullName: OfficeOpenXml.FormulaParsing.Ranges.NameInfo.Id
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Ranges/NameInfo.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Id
    path: ../src/EPPlus/FormulaParsing/Ranges/NameInfo.cs
    startLine: 28
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Ranges
  summary: "\nId\n"
  example: []
  syntax:
    content: public ulong Id { get; set; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: Public Property Id As ULong
  overload: OfficeOpenXml.FormulaParsing.Ranges.NameInfo.Id*
  implements:
  - OfficeOpenXml.FormulaParsing.INameInfo.Id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.FormulaParsing.Ranges.NameInfo.wsIx
  commentId: P:OfficeOpenXml.FormulaParsing.Ranges.NameInfo.wsIx
  id: wsIx
  parent: OfficeOpenXml.FormulaParsing.Ranges.NameInfo
  langs:
  - csharp
  - vb
  name: wsIx
  nameWithType: NameInfo.wsIx
  fullName: OfficeOpenXml.FormulaParsing.Ranges.NameInfo.wsIx
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Ranges/NameInfo.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: wsIx
    path: ../src/EPPlus/FormulaParsing/Ranges/NameInfo.cs
    startLine: 32
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Ranges
  summary: "\nWorksheet name\n"
  example: []
  syntax:
    content: public int wsIx { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property wsIx As Integer
  overload: OfficeOpenXml.FormulaParsing.Ranges.NameInfo.wsIx*
  implements:
  - OfficeOpenXml.FormulaParsing.INameInfo.wsIx
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.FormulaParsing.Ranges.NameInfo.Name
  commentId: P:OfficeOpenXml.FormulaParsing.Ranges.NameInfo.Name
  id: Name
  parent: OfficeOpenXml.FormulaParsing.Ranges.NameInfo
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: NameInfo.Name
  fullName: OfficeOpenXml.FormulaParsing.Ranges.NameInfo.Name
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Ranges/NameInfo.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Name
    path: ../src/EPPlus/FormulaParsing/Ranges/NameInfo.cs
    startLine: 36
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Ranges
  summary: "\nThe name\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: OfficeOpenXml.FormulaParsing.Ranges.NameInfo.Name*
  implements:
  - OfficeOpenXml.FormulaParsing.INameInfo.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.FormulaParsing.Ranges.NameInfo.Formula
  commentId: P:OfficeOpenXml.FormulaParsing.Ranges.NameInfo.Formula
  id: Formula
  parent: OfficeOpenXml.FormulaParsing.Ranges.NameInfo
  langs:
  - csharp
  - vb
  name: Formula
  nameWithType: NameInfo.Formula
  fullName: OfficeOpenXml.FormulaParsing.Ranges.NameInfo.Formula
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Ranges/NameInfo.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Formula
    path: ../src/EPPlus/FormulaParsing/Ranges/NameInfo.cs
    startLine: 40
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Ranges
  summary: "\nFormula of the name\n"
  example: []
  syntax:
    content: public string Formula { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Formula As String
  overload: OfficeOpenXml.FormulaParsing.Ranges.NameInfo.Formula*
  implements:
  - OfficeOpenXml.FormulaParsing.INameInfo.Formula
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.FormulaParsing.Ranges.NameInfo.Tokens
  commentId: P:OfficeOpenXml.FormulaParsing.Ranges.NameInfo.Tokens
  id: Tokens
  parent: OfficeOpenXml.FormulaParsing.Ranges.NameInfo
  langs:
  - csharp
  - vb
  name: Tokens
  nameWithType: NameInfo.Tokens
  fullName: OfficeOpenXml.FormulaParsing.Ranges.NameInfo.Tokens
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Ranges/NameInfo.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Tokens
    path: ../src/EPPlus/FormulaParsing/Ranges/NameInfo.cs
    startLine: 44
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Ranges
  summary: "\nTokens\n"
  example: []
  syntax:
    content: public IList<Token> Tokens { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.LexicalAnalysis.Token}
    content.vb: Public ReadOnly Property Tokens As IList(Of Token)
  overload: OfficeOpenXml.FormulaParsing.Ranges.NameInfo.Tokens*
  implements:
  - OfficeOpenXml.FormulaParsing.INameInfo.Tokens
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.FormulaParsing.Ranges.NameInfo.Value
  commentId: P:OfficeOpenXml.FormulaParsing.Ranges.NameInfo.Value
  id: Value
  parent: OfficeOpenXml.FormulaParsing.Ranges.NameInfo
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: NameInfo.Value
  fullName: OfficeOpenXml.FormulaParsing.Ranges.NameInfo.Value
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Ranges/NameInfo.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Value
    path: ../src/EPPlus/FormulaParsing/Ranges/NameInfo.cs
    startLine: 48
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Ranges
  summary: "\nValue\n"
  example: []
  syntax:
    content: public object Value { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public Property Value As Object
  overload: OfficeOpenXml.FormulaParsing.Ranges.NameInfo.Value*
  implements:
  - OfficeOpenXml.FormulaParsing.INameInfo.Value
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: OfficeOpenXml.FormulaParsing.INameInfo
  commentId: T:OfficeOpenXml.FormulaParsing.INameInfo
  parent: OfficeOpenXml.FormulaParsing
  name: INameInfo
  nameWithType: INameInfo
  fullName: OfficeOpenXml.FormulaParsing.INameInfo
- uid: OfficeOpenXml.FormulaParsing.Ranges
  commentId: N:OfficeOpenXml.FormulaParsing.Ranges
  name: OfficeOpenXml.FormulaParsing.Ranges
  nameWithType: OfficeOpenXml.FormulaParsing.Ranges
  fullName: OfficeOpenXml.FormulaParsing.Ranges
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing
  commentId: N:OfficeOpenXml.FormulaParsing
  name: OfficeOpenXml.FormulaParsing
  nameWithType: OfficeOpenXml.FormulaParsing
  fullName: OfficeOpenXml.FormulaParsing
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml.FormulaParsing.Ranges.NameInfo.Id*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Ranges.NameInfo.Id
  name: Id
  nameWithType: NameInfo.Id
  fullName: OfficeOpenXml.FormulaParsing.Ranges.NameInfo.Id
- uid: OfficeOpenXml.FormulaParsing.INameInfo.Id
  commentId: P:OfficeOpenXml.FormulaParsing.INameInfo.Id
  parent: OfficeOpenXml.FormulaParsing.INameInfo
  name: Id
  nameWithType: INameInfo.Id
  fullName: OfficeOpenXml.FormulaParsing.INameInfo.Id
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: OfficeOpenXml.FormulaParsing.Ranges.NameInfo.wsIx*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Ranges.NameInfo.wsIx
  name: wsIx
  nameWithType: NameInfo.wsIx
  fullName: OfficeOpenXml.FormulaParsing.Ranges.NameInfo.wsIx
- uid: OfficeOpenXml.FormulaParsing.INameInfo.wsIx
  commentId: P:OfficeOpenXml.FormulaParsing.INameInfo.wsIx
  parent: OfficeOpenXml.FormulaParsing.INameInfo
  name: wsIx
  nameWithType: INameInfo.wsIx
  fullName: OfficeOpenXml.FormulaParsing.INameInfo.wsIx
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: OfficeOpenXml.FormulaParsing.Ranges.NameInfo.Name*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Ranges.NameInfo.Name
  name: Name
  nameWithType: NameInfo.Name
  fullName: OfficeOpenXml.FormulaParsing.Ranges.NameInfo.Name
- uid: OfficeOpenXml.FormulaParsing.INameInfo.Name
  commentId: P:OfficeOpenXml.FormulaParsing.INameInfo.Name
  parent: OfficeOpenXml.FormulaParsing.INameInfo
  name: Name
  nameWithType: INameInfo.Name
  fullName: OfficeOpenXml.FormulaParsing.INameInfo.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OfficeOpenXml.FormulaParsing.Ranges.NameInfo.Formula*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Ranges.NameInfo.Formula
  name: Formula
  nameWithType: NameInfo.Formula
  fullName: OfficeOpenXml.FormulaParsing.Ranges.NameInfo.Formula
- uid: OfficeOpenXml.FormulaParsing.INameInfo.Formula
  commentId: P:OfficeOpenXml.FormulaParsing.INameInfo.Formula
  parent: OfficeOpenXml.FormulaParsing.INameInfo
  name: Formula
  nameWithType: INameInfo.Formula
  fullName: OfficeOpenXml.FormulaParsing.INameInfo.Formula
- uid: OfficeOpenXml.FormulaParsing.Ranges.NameInfo.Tokens*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Ranges.NameInfo.Tokens
  name: Tokens
  nameWithType: NameInfo.Tokens
  fullName: OfficeOpenXml.FormulaParsing.Ranges.NameInfo.Tokens
- uid: OfficeOpenXml.FormulaParsing.INameInfo.Tokens
  commentId: P:OfficeOpenXml.FormulaParsing.INameInfo.Tokens
  parent: OfficeOpenXml.FormulaParsing.INameInfo
  name: Tokens
  nameWithType: INameInfo.Tokens
  fullName: OfficeOpenXml.FormulaParsing.INameInfo.Tokens
- uid: System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.LexicalAnalysis.Token}
  commentId: T:System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.LexicalAnalysis.Token}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Token>
  nameWithType: IList<Token>
  fullName: System.Collections.Generic.IList<OfficeOpenXml.FormulaParsing.LexicalAnalysis.Token>
  nameWithType.vb: IList(Of Token)
  fullName.vb: System.Collections.Generic.IList(Of OfficeOpenXml.FormulaParsing.LexicalAnalysis.Token)
  name.vb: IList(Of Token)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.Token
    name: Token
    nameWithType: Token
    fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.Token
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.Token
    name: Token
    nameWithType: Token
    fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.Token
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: OfficeOpenXml.FormulaParsing.Ranges.NameInfo.Value*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Ranges.NameInfo.Value
  name: Value
  nameWithType: NameInfo.Value
  fullName: OfficeOpenXml.FormulaParsing.Ranges.NameInfo.Value
- uid: OfficeOpenXml.FormulaParsing.INameInfo.Value
  commentId: P:OfficeOpenXml.FormulaParsing.INameInfo.Value
  parent: OfficeOpenXml.FormulaParsing.INameInfo
  name: Value
  nameWithType: INameInfo.Value
  fullName: OfficeOpenXml.FormulaParsing.INameInfo.Value
