### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.FormulaParsing.Ranges.CellInfo
  commentId: T:OfficeOpenXml.FormulaParsing.Ranges.CellInfo
  id: CellInfo
  parent: OfficeOpenXml.FormulaParsing.Ranges
  children:
  - OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Address
  - OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Column
  - OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Formula
  - OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Id
  - OfficeOpenXml.FormulaParsing.Ranges.CellInfo.IsExcelError
  - OfficeOpenXml.FormulaParsing.Ranges.CellInfo.IsHiddenRow
  - OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Row
  - OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Tokens
  - OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Value
  - OfficeOpenXml.FormulaParsing.Ranges.CellInfo.ValueDouble
  - OfficeOpenXml.FormulaParsing.Ranges.CellInfo.ValueDoubleLogical
  - OfficeOpenXml.FormulaParsing.Ranges.CellInfo.WorksheetName
  langs:
  - csharp
  - vb
  name: CellInfo
  nameWithType: CellInfo
  fullName: OfficeOpenXml.FormulaParsing.Ranges.CellInfo
  type: Class
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Ranges/CellInfo.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: CellInfo
    path: ../src/EPPlus/FormulaParsing/Ranges/CellInfo.cs
    startLine: 25
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Ranges
  summary: "\nEPPlus implementation of the <xref href=\"OfficeOpenXml.FormulaParsing.ICellInfo\" data-throw-if-not-resolved=\"false\"></xref> interface.\n"
  example: []
  syntax:
    content: 'public class CellInfo : ICellInfo'
    content.vb: >-
      Public Class CellInfo
          Implements ICellInfo
  inheritance:
  - System.Object
  implements:
  - OfficeOpenXml.FormulaParsing.ICellInfo
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Address
  commentId: P:OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Address
  id: Address
  parent: OfficeOpenXml.FormulaParsing.Ranges.CellInfo
  langs:
  - csharp
  - vb
  name: Address
  nameWithType: CellInfo.Address
  fullName: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Address
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Ranges/CellInfo.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Address
    path: ../src/EPPlus/FormulaParsing/Ranges/CellInfo.cs
    startLine: 37
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Ranges
  summary: "\nAddress\n"
  example: []
  syntax:
    content: public string Address { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Address As String
  overload: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Address*
  implements:
  - OfficeOpenXml.FormulaParsing.ICellInfo.Address
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Row
  commentId: P:OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Row
  id: Row
  parent: OfficeOpenXml.FormulaParsing.Ranges.CellInfo
  langs:
  - csharp
  - vb
  name: Row
  nameWithType: CellInfo.Row
  fullName: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Row
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Ranges/CellInfo.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Row
    path: ../src/EPPlus/FormulaParsing/Ranges/CellInfo.cs
    startLine: 44
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Ranges
  summary: "\nRow\n"
  example: []
  syntax:
    content: public int Row { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Row As Integer
  overload: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Row*
  implements:
  - OfficeOpenXml.FormulaParsing.ICellInfo.Row
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Column
  commentId: P:OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Column
  id: Column
  parent: OfficeOpenXml.FormulaParsing.Ranges.CellInfo
  langs:
  - csharp
  - vb
  name: Column
  nameWithType: CellInfo.Column
  fullName: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Column
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Ranges/CellInfo.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Column
    path: ../src/EPPlus/FormulaParsing/Ranges/CellInfo.cs
    startLine: 51
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Ranges
  summary: "\nColumn\n"
  example: []
  syntax:
    content: public int Column { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Column As Integer
  overload: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Column*
  implements:
  - OfficeOpenXml.FormulaParsing.ICellInfo.Column
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Formula
  commentId: P:OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Formula
  id: Formula
  parent: OfficeOpenXml.FormulaParsing.Ranges.CellInfo
  langs:
  - csharp
  - vb
  name: Formula
  nameWithType: CellInfo.Formula
  fullName: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Formula
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Ranges/CellInfo.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Formula
    path: ../src/EPPlus/FormulaParsing/Ranges/CellInfo.cs
    startLine: 58
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Ranges
  summary: "\nFormula\n"
  example: []
  syntax:
    content: public string Formula { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Formula As String
  overload: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Formula*
  implements:
  - OfficeOpenXml.FormulaParsing.ICellInfo.Formula
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Value
  commentId: P:OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Value
  id: Value
  parent: OfficeOpenXml.FormulaParsing.Ranges.CellInfo
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: CellInfo.Value
  fullName: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Value
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Ranges/CellInfo.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Value
    path: ../src/EPPlus/FormulaParsing/Ranges/CellInfo.cs
    startLine: 68
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Ranges
  summary: "\nValue\n"
  example: []
  syntax:
    content: public object Value { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public ReadOnly Property Value As Object
  overload: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Value*
  implements:
  - OfficeOpenXml.FormulaParsing.ICellInfo.Value
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.ValueDouble
  commentId: P:OfficeOpenXml.FormulaParsing.Ranges.CellInfo.ValueDouble
  id: ValueDouble
  parent: OfficeOpenXml.FormulaParsing.Ranges.CellInfo
  langs:
  - csharp
  - vb
  name: ValueDouble
  nameWithType: CellInfo.ValueDouble
  fullName: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.ValueDouble
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Ranges/CellInfo.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ValueDouble
    path: ../src/EPPlus/FormulaParsing/Ranges/CellInfo.cs
    startLine: 85
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Ranges
  summary: "\nValue double\n"
  example: []
  syntax:
    content: public double ValueDouble { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property ValueDouble As Double
  overload: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.ValueDouble*
  implements:
  - OfficeOpenXml.FormulaParsing.ICellInfo.ValueDouble
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.ValueDoubleLogical
  commentId: P:OfficeOpenXml.FormulaParsing.Ranges.CellInfo.ValueDoubleLogical
  id: ValueDoubleLogical
  parent: OfficeOpenXml.FormulaParsing.Ranges.CellInfo
  langs:
  - csharp
  - vb
  name: ValueDoubleLogical
  nameWithType: CellInfo.ValueDoubleLogical
  fullName: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.ValueDoubleLogical
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Ranges/CellInfo.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ValueDoubleLogical
    path: ../src/EPPlus/FormulaParsing/Ranges/CellInfo.cs
    startLine: 92
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Ranges
  summary: "\nValue double logical\n"
  example: []
  syntax:
    content: public double ValueDoubleLogical { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property ValueDoubleLogical As Double
  overload: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.ValueDoubleLogical*
  implements:
  - OfficeOpenXml.FormulaParsing.ICellInfo.ValueDoubleLogical
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.IsHiddenRow
  commentId: P:OfficeOpenXml.FormulaParsing.Ranges.CellInfo.IsHiddenRow
  id: IsHiddenRow
  parent: OfficeOpenXml.FormulaParsing.Ranges.CellInfo
  langs:
  - csharp
  - vb
  name: IsHiddenRow
  nameWithType: CellInfo.IsHiddenRow
  fullName: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.IsHiddenRow
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Ranges/CellInfo.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: IsHiddenRow
    path: ../src/EPPlus/FormulaParsing/Ranges/CellInfo.cs
    startLine: 99
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Ranges
  summary: "\nIs hidden row\n"
  example: []
  syntax:
    content: public bool IsHiddenRow { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsHiddenRow As Boolean
  overload: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.IsHiddenRow*
  implements:
  - OfficeOpenXml.FormulaParsing.ICellInfo.IsHiddenRow
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.IsExcelError
  commentId: P:OfficeOpenXml.FormulaParsing.Ranges.CellInfo.IsExcelError
  id: IsExcelError
  parent: OfficeOpenXml.FormulaParsing.Ranges.CellInfo
  langs:
  - csharp
  - vb
  name: IsExcelError
  nameWithType: CellInfo.IsExcelError
  fullName: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.IsExcelError
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Ranges/CellInfo.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: IsExcelError
    path: ../src/EPPlus/FormulaParsing/Ranges/CellInfo.cs
    startLine: 118
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Ranges
  summary: "\nReturns true if the cell contains an error\n"
  example: []
  syntax:
    content: public bool IsExcelError { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsExcelError As Boolean
  overload: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.IsExcelError*
  implements:
  - OfficeOpenXml.FormulaParsing.ICellInfo.IsExcelError
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Tokens
  commentId: P:OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Tokens
  id: Tokens
  parent: OfficeOpenXml.FormulaParsing.Ranges.CellInfo
  langs:
  - csharp
  - vb
  name: Tokens
  nameWithType: CellInfo.Tokens
  fullName: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Tokens
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Ranges/CellInfo.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Tokens
    path: ../src/EPPlus/FormulaParsing/Ranges/CellInfo.cs
    startLine: 126
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Ranges
  summary: "\nTokenized cell content\n"
  example: []
  syntax:
    content: public IList<Token> Tokens { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.LexicalAnalysis.Token}
    content.vb: Public ReadOnly Property Tokens As IList(Of Token)
  overload: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Tokens*
  implements:
  - OfficeOpenXml.FormulaParsing.ICellInfo.Tokens
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Id
  commentId: P:OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Id
  id: Id
  parent: OfficeOpenXml.FormulaParsing.Ranges.CellInfo
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: CellInfo.Id
  fullName: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Id
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Ranges/CellInfo.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Id
    path: ../src/EPPlus/FormulaParsing/Ranges/CellInfo.cs
    startLine: 137
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Ranges
  summary: "\nCell id\n"
  example: []
  syntax:
    content: public ulong Id { get; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: Public ReadOnly Property Id As ULong
  overload: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Id*
  implements:
  - OfficeOpenXml.FormulaParsing.ICellInfo.Id
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.WorksheetName
  commentId: P:OfficeOpenXml.FormulaParsing.Ranges.CellInfo.WorksheetName
  id: WorksheetName
  parent: OfficeOpenXml.FormulaParsing.Ranges.CellInfo
  langs:
  - csharp
  - vb
  name: WorksheetName
  nameWithType: CellInfo.WorksheetName
  fullName: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.WorksheetName
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Ranges/CellInfo.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: WorksheetName
    path: ../src/EPPlus/FormulaParsing/Ranges/CellInfo.cs
    startLine: 148
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Ranges
  summary: "\nName of the worksheet\n"
  example: []
  syntax:
    content: public string WorksheetName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property WorksheetName As String
  overload: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.WorksheetName*
  implements:
  - OfficeOpenXml.FormulaParsing.ICellInfo.WorksheetName
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: OfficeOpenXml.FormulaParsing.ICellInfo
  commentId: T:OfficeOpenXml.FormulaParsing.ICellInfo
  parent: OfficeOpenXml.FormulaParsing
  name: ICellInfo
  nameWithType: ICellInfo
  fullName: OfficeOpenXml.FormulaParsing.ICellInfo
- uid: OfficeOpenXml.FormulaParsing.Ranges
  commentId: N:OfficeOpenXml.FormulaParsing.Ranges
  name: OfficeOpenXml.FormulaParsing.Ranges
  nameWithType: OfficeOpenXml.FormulaParsing.Ranges
  fullName: OfficeOpenXml.FormulaParsing.Ranges
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing
  commentId: N:OfficeOpenXml.FormulaParsing
  name: OfficeOpenXml.FormulaParsing
  nameWithType: OfficeOpenXml.FormulaParsing
  fullName: OfficeOpenXml.FormulaParsing
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Address*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Address
  name: Address
  nameWithType: CellInfo.Address
  fullName: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Address
- uid: OfficeOpenXml.FormulaParsing.ICellInfo.Address
  commentId: P:OfficeOpenXml.FormulaParsing.ICellInfo.Address
  parent: OfficeOpenXml.FormulaParsing.ICellInfo
  name: Address
  nameWithType: ICellInfo.Address
  fullName: OfficeOpenXml.FormulaParsing.ICellInfo.Address
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Row*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Row
  name: Row
  nameWithType: CellInfo.Row
  fullName: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Row
- uid: OfficeOpenXml.FormulaParsing.ICellInfo.Row
  commentId: P:OfficeOpenXml.FormulaParsing.ICellInfo.Row
  parent: OfficeOpenXml.FormulaParsing.ICellInfo
  name: Row
  nameWithType: ICellInfo.Row
  fullName: OfficeOpenXml.FormulaParsing.ICellInfo.Row
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Column*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Column
  name: Column
  nameWithType: CellInfo.Column
  fullName: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Column
- uid: OfficeOpenXml.FormulaParsing.ICellInfo.Column
  commentId: P:OfficeOpenXml.FormulaParsing.ICellInfo.Column
  parent: OfficeOpenXml.FormulaParsing.ICellInfo
  name: Column
  nameWithType: ICellInfo.Column
  fullName: OfficeOpenXml.FormulaParsing.ICellInfo.Column
- uid: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Formula*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Formula
  name: Formula
  nameWithType: CellInfo.Formula
  fullName: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Formula
- uid: OfficeOpenXml.FormulaParsing.ICellInfo.Formula
  commentId: P:OfficeOpenXml.FormulaParsing.ICellInfo.Formula
  parent: OfficeOpenXml.FormulaParsing.ICellInfo
  name: Formula
  nameWithType: ICellInfo.Formula
  fullName: OfficeOpenXml.FormulaParsing.ICellInfo.Formula
- uid: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Value*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Value
  name: Value
  nameWithType: CellInfo.Value
  fullName: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Value
- uid: OfficeOpenXml.FormulaParsing.ICellInfo.Value
  commentId: P:OfficeOpenXml.FormulaParsing.ICellInfo.Value
  parent: OfficeOpenXml.FormulaParsing.ICellInfo
  name: Value
  nameWithType: ICellInfo.Value
  fullName: OfficeOpenXml.FormulaParsing.ICellInfo.Value
- uid: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.ValueDouble*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Ranges.CellInfo.ValueDouble
  name: ValueDouble
  nameWithType: CellInfo.ValueDouble
  fullName: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.ValueDouble
- uid: OfficeOpenXml.FormulaParsing.ICellInfo.ValueDouble
  commentId: P:OfficeOpenXml.FormulaParsing.ICellInfo.ValueDouble
  parent: OfficeOpenXml.FormulaParsing.ICellInfo
  name: ValueDouble
  nameWithType: ICellInfo.ValueDouble
  fullName: OfficeOpenXml.FormulaParsing.ICellInfo.ValueDouble
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.ValueDoubleLogical*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Ranges.CellInfo.ValueDoubleLogical
  name: ValueDoubleLogical
  nameWithType: CellInfo.ValueDoubleLogical
  fullName: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.ValueDoubleLogical
- uid: OfficeOpenXml.FormulaParsing.ICellInfo.ValueDoubleLogical
  commentId: P:OfficeOpenXml.FormulaParsing.ICellInfo.ValueDoubleLogical
  parent: OfficeOpenXml.FormulaParsing.ICellInfo
  name: ValueDoubleLogical
  nameWithType: ICellInfo.ValueDoubleLogical
  fullName: OfficeOpenXml.FormulaParsing.ICellInfo.ValueDoubleLogical
- uid: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.IsHiddenRow*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Ranges.CellInfo.IsHiddenRow
  name: IsHiddenRow
  nameWithType: CellInfo.IsHiddenRow
  fullName: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.IsHiddenRow
- uid: OfficeOpenXml.FormulaParsing.ICellInfo.IsHiddenRow
  commentId: P:OfficeOpenXml.FormulaParsing.ICellInfo.IsHiddenRow
  parent: OfficeOpenXml.FormulaParsing.ICellInfo
  name: IsHiddenRow
  nameWithType: ICellInfo.IsHiddenRow
  fullName: OfficeOpenXml.FormulaParsing.ICellInfo.IsHiddenRow
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.IsExcelError*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Ranges.CellInfo.IsExcelError
  name: IsExcelError
  nameWithType: CellInfo.IsExcelError
  fullName: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.IsExcelError
- uid: OfficeOpenXml.FormulaParsing.ICellInfo.IsExcelError
  commentId: P:OfficeOpenXml.FormulaParsing.ICellInfo.IsExcelError
  parent: OfficeOpenXml.FormulaParsing.ICellInfo
  name: IsExcelError
  nameWithType: ICellInfo.IsExcelError
  fullName: OfficeOpenXml.FormulaParsing.ICellInfo.IsExcelError
- uid: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Tokens*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Tokens
  name: Tokens
  nameWithType: CellInfo.Tokens
  fullName: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Tokens
- uid: OfficeOpenXml.FormulaParsing.ICellInfo.Tokens
  commentId: P:OfficeOpenXml.FormulaParsing.ICellInfo.Tokens
  parent: OfficeOpenXml.FormulaParsing.ICellInfo
  name: Tokens
  nameWithType: ICellInfo.Tokens
  fullName: OfficeOpenXml.FormulaParsing.ICellInfo.Tokens
- uid: System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.LexicalAnalysis.Token}
  commentId: T:System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.LexicalAnalysis.Token}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Token>
  nameWithType: IList<Token>
  fullName: System.Collections.Generic.IList<OfficeOpenXml.FormulaParsing.LexicalAnalysis.Token>
  nameWithType.vb: IList(Of Token)
  fullName.vb: System.Collections.Generic.IList(Of OfficeOpenXml.FormulaParsing.LexicalAnalysis.Token)
  name.vb: IList(Of Token)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.Token
    name: Token
    nameWithType: Token
    fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.Token
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.Token
    name: Token
    nameWithType: Token
    fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.Token
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Id*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Id
  name: Id
  nameWithType: CellInfo.Id
  fullName: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.Id
- uid: OfficeOpenXml.FormulaParsing.ICellInfo.Id
  commentId: P:OfficeOpenXml.FormulaParsing.ICellInfo.Id
  parent: OfficeOpenXml.FormulaParsing.ICellInfo
  name: Id
  nameWithType: ICellInfo.Id
  fullName: OfficeOpenXml.FormulaParsing.ICellInfo.Id
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.WorksheetName*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Ranges.CellInfo.WorksheetName
  name: WorksheetName
  nameWithType: CellInfo.WorksheetName
  fullName: OfficeOpenXml.FormulaParsing.Ranges.CellInfo.WorksheetName
- uid: OfficeOpenXml.FormulaParsing.ICellInfo.WorksheetName
  commentId: P:OfficeOpenXml.FormulaParsing.ICellInfo.WorksheetName
  parent: OfficeOpenXml.FormulaParsing.ICellInfo
  name: WorksheetName
  nameWithType: ICellInfo.WorksheetName
  fullName: OfficeOpenXml.FormulaParsing.ICellInfo.WorksheetName
