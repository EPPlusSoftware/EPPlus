### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.Utils.SqRefUtility
  commentId: T:OfficeOpenXml.Utils.SqRefUtility
  id: SqRefUtility
  parent: OfficeOpenXml.Utils
  children:
  - OfficeOpenXml.Utils.SqRefUtility.FromSqRefAddress(System.String)
  - OfficeOpenXml.Utils.SqRefUtility.ToSqRefAddress(System.String)
  langs:
  - csharp
  - vb
  name: SqRefUtility
  nameWithType: SqRefUtility
  fullName: OfficeOpenXml.Utils.SqRefUtility
  type: Class
  source:
    remote:
      path: src/EPPlus/Utils/SqRefUtility.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: SqRefUtility
    path: ../src/EPPlus/Utils/SqRefUtility.cs
    startLine: 23
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Utils
  summary: "\nClass for handling translation between ExcelAddresses and sqref addresses.\n"
  example: []
  syntax:
    content: public static class SqRefUtility
    content.vb: Public Module SqRefUtility
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: OfficeOpenXml.Utils.SqRefUtility.ToSqRefAddress(System.String)
  commentId: M:OfficeOpenXml.Utils.SqRefUtility.ToSqRefAddress(System.String)
  id: ToSqRefAddress(System.String)
  parent: OfficeOpenXml.Utils.SqRefUtility
  langs:
  - csharp
  - vb
  name: ToSqRefAddress(String)
  nameWithType: SqRefUtility.ToSqRefAddress(String)
  fullName: OfficeOpenXml.Utils.SqRefUtility.ToSqRefAddress(System.String)
  type: Method
  source:
    remote:
      path: src/EPPlus/Utils/SqRefUtility.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ToSqRefAddress
    path: ../src/EPPlus/Utils/SqRefUtility.cs
    startLine: 30
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Utils
  summary: "\nTransforms an address to a valid sqRef address.\n"
  example: []
  syntax:
    content: public static string ToSqRefAddress(string address)
    parameters:
    - id: address
      type: System.String
      description: The address to transform
    return:
      type: System.String
      description: A valid SqRef address
    content.vb: Public Shared Function ToSqRefAddress(address As String) As String
  overload: OfficeOpenXml.Utils.SqRefUtility.ToSqRefAddress*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: OfficeOpenXml.Utils.SqRefUtility.FromSqRefAddress(System.String)
  commentId: M:OfficeOpenXml.Utils.SqRefUtility.FromSqRefAddress(System.String)
  id: FromSqRefAddress(System.String)
  parent: OfficeOpenXml.Utils.SqRefUtility
  langs:
  - csharp
  - vb
  name: FromSqRefAddress(String)
  nameWithType: SqRefUtility.FromSqRefAddress(String)
  fullName: OfficeOpenXml.Utils.SqRefUtility.FromSqRefAddress(System.String)
  type: Method
  source:
    remote:
      path: src/EPPlus/Utils/SqRefUtility.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: FromSqRefAddress
    path: ../src/EPPlus/Utils/SqRefUtility.cs
    startLine: 43
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Utils
  summary: "\nTransforms an sqRef address into a excel address\n"
  example: []
  syntax:
    content: public static string FromSqRefAddress(string address)
    parameters:
    - id: address
      type: System.String
      description: The address to transform
    return:
      type: System.String
      description: A valid excel address
    content.vb: Public Shared Function FromSqRefAddress(address As String) As String
  overload: OfficeOpenXml.Utils.SqRefUtility.FromSqRefAddress*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: OfficeOpenXml.Utils
  commentId: N:OfficeOpenXml.Utils
  name: OfficeOpenXml.Utils
  nameWithType: OfficeOpenXml.Utils
  fullName: OfficeOpenXml.Utils
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml.Utils.SqRefUtility.ToSqRefAddress*
  commentId: Overload:OfficeOpenXml.Utils.SqRefUtility.ToSqRefAddress
  name: ToSqRefAddress
  nameWithType: SqRefUtility.ToSqRefAddress
  fullName: OfficeOpenXml.Utils.SqRefUtility.ToSqRefAddress
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OfficeOpenXml.Utils.SqRefUtility.FromSqRefAddress*
  commentId: Overload:OfficeOpenXml.Utils.SqRefUtility.FromSqRefAddress
  name: FromSqRefAddress
  nameWithType: SqRefUtility.FromSqRefAddress
  fullName: OfficeOpenXml.Utils.SqRefUtility.FromSqRefAddress
