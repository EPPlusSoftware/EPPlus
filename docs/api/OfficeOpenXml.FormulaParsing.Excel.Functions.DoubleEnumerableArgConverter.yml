### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.DoubleEnumerableArgConverter
  commentId: T:OfficeOpenXml.FormulaParsing.Excel.Functions.DoubleEnumerableArgConverter
  id: DoubleEnumerableArgConverter
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions
  children:
  - OfficeOpenXml.FormulaParsing.Excel.Functions.DoubleEnumerableArgConverter.ConvertArgs(System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},OfficeOpenXml.FormulaParsing.ParsingContext,System.Boolean)
  - OfficeOpenXml.FormulaParsing.Excel.Functions.DoubleEnumerableArgConverter.ConvertArgsIncludingOtherTypes(System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Boolean)
  langs:
  - csharp
  - vb
  name: DoubleEnumerableArgConverter
  nameWithType: DoubleEnumerableArgConverter
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.DoubleEnumerableArgConverter
  type: Class
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Excel/Functions/DoubleEnumerableArgConverter.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: DoubleEnumerableArgConverter
    path: ../src/EPPlus/FormulaParsing/Excel/Functions/DoubleEnumerableArgConverter.cs
    startLine: 22
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Excel.Functions
  syntax:
    content: 'public class DoubleEnumerableArgConverter : CollectionFlattener<ExcelDoubleCellValue>'
    content.vb: >-
      Public Class DoubleEnumerableArgConverter
          Inherits CollectionFlattener(Of ExcelDoubleCellValue)
  inheritance:
  - System.Object
  - OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener{OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelDoubleCellValue}
  inheritedMembers:
  - OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener{OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelDoubleCellValue}.FuncArgsToFlatEnumerable(System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Action{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument,System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelDoubleCellValue}})
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.DoubleEnumerableArgConverter.ConvertArgs(System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},OfficeOpenXml.FormulaParsing.ParsingContext,System.Boolean)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.DoubleEnumerableArgConverter.ConvertArgs(System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},OfficeOpenXml.FormulaParsing.ParsingContext,System.Boolean)
  id: ConvertArgs(System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},OfficeOpenXml.FormulaParsing.ParsingContext,System.Boolean)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.DoubleEnumerableArgConverter
  langs:
  - csharp
  - vb
  name: ConvertArgs(Boolean, Boolean, Boolean, IEnumerable<FunctionArgument>, ParsingContext, Boolean)
  nameWithType: DoubleEnumerableArgConverter.ConvertArgs(Boolean, Boolean, Boolean, IEnumerable<FunctionArgument>, ParsingContext, Boolean)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.DoubleEnumerableArgConverter.ConvertArgs(System.Boolean, System.Boolean, System.Boolean, System.Collections.Generic.IEnumerable<OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument>, OfficeOpenXml.FormulaParsing.ParsingContext, System.Boolean)
  type: Method
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Excel/Functions/DoubleEnumerableArgConverter.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ConvertArgs
    path: ../src/EPPlus/FormulaParsing/Excel/Functions/DoubleEnumerableArgConverter.cs
    startLine: 24
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Excel.Functions
  syntax:
    content: public virtual IEnumerable<ExcelDoubleCellValue> ConvertArgs(bool ignoreHidden, bool ignoreErrors, bool ignoreSubtotalAggregate, IEnumerable<FunctionArgument> arguments, ParsingContext context, bool ignoreNonNumeric = false)
    parameters:
    - id: ignoreHidden
      type: System.Boolean
    - id: ignoreErrors
      type: System.Boolean
    - id: ignoreSubtotalAggregate
      type: System.Boolean
    - id: arguments
      type: System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument}
    - id: context
      type: OfficeOpenXml.FormulaParsing.ParsingContext
    - id: ignoreNonNumeric
      type: System.Boolean
    return:
      type: System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelDoubleCellValue}
    content.vb: Public Overridable Function ConvertArgs(ignoreHidden As Boolean, ignoreErrors As Boolean, ignoreSubtotalAggregate As Boolean, arguments As IEnumerable(Of FunctionArgument), context As ParsingContext, ignoreNonNumeric As Boolean = False) As IEnumerable(Of ExcelDoubleCellValue)
  overload: OfficeOpenXml.FormulaParsing.Excel.Functions.DoubleEnumerableArgConverter.ConvertArgs*
  nameWithType.vb: DoubleEnumerableArgConverter.ConvertArgs(Boolean, Boolean, Boolean, IEnumerable(Of FunctionArgument), ParsingContext, Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: OfficeOpenXml.FormulaParsing.Excel.Functions.DoubleEnumerableArgConverter.ConvertArgs(System.Boolean, System.Boolean, System.Boolean, System.Collections.Generic.IEnumerable(Of OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument), OfficeOpenXml.FormulaParsing.ParsingContext, System.Boolean)
  name.vb: ConvertArgs(Boolean, Boolean, Boolean, IEnumerable(Of FunctionArgument), ParsingContext, Boolean)
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.DoubleEnumerableArgConverter.ConvertArgsIncludingOtherTypes(System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Boolean)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.DoubleEnumerableArgConverter.ConvertArgsIncludingOtherTypes(System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Boolean)
  id: ConvertArgsIncludingOtherTypes(System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Boolean)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.DoubleEnumerableArgConverter
  langs:
  - csharp
  - vb
  name: ConvertArgsIncludingOtherTypes(IEnumerable<FunctionArgument>, Boolean)
  nameWithType: DoubleEnumerableArgConverter.ConvertArgsIncludingOtherTypes(IEnumerable<FunctionArgument>, Boolean)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.DoubleEnumerableArgConverter.ConvertArgsIncludingOtherTypes(System.Collections.Generic.IEnumerable<OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument>, System.Boolean)
  type: Method
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Excel/Functions/DoubleEnumerableArgConverter.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ConvertArgsIncludingOtherTypes
    path: ../src/EPPlus/FormulaParsing/Excel/Functions/DoubleEnumerableArgConverter.cs
    startLine: 52
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Excel.Functions
  syntax:
    content: public virtual IEnumerable<ExcelDoubleCellValue> ConvertArgsIncludingOtherTypes(IEnumerable<FunctionArgument> arguments, bool ignoreHidden)
    parameters:
    - id: arguments
      type: System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument}
    - id: ignoreHidden
      type: System.Boolean
    return:
      type: System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelDoubleCellValue}
    content.vb: Public Overridable Function ConvertArgsIncludingOtherTypes(arguments As IEnumerable(Of FunctionArgument), ignoreHidden As Boolean) As IEnumerable(Of ExcelDoubleCellValue)
  overload: OfficeOpenXml.FormulaParsing.Excel.Functions.DoubleEnumerableArgConverter.ConvertArgsIncludingOtherTypes*
  nameWithType.vb: DoubleEnumerableArgConverter.ConvertArgsIncludingOtherTypes(IEnumerable(Of FunctionArgument), Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: OfficeOpenXml.FormulaParsing.Excel.Functions.DoubleEnumerableArgConverter.ConvertArgsIncludingOtherTypes(System.Collections.Generic.IEnumerable(Of OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument), System.Boolean)
  name.vb: ConvertArgsIncludingOtherTypes(IEnumerable(Of FunctionArgument), Boolean)
references:
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions
  commentId: N:OfficeOpenXml.FormulaParsing.Excel.Functions
  name: OfficeOpenXml.FormulaParsing.Excel.Functions
  nameWithType: OfficeOpenXml.FormulaParsing.Excel.Functions
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener{OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelDoubleCellValue}
  commentId: T:OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener{OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelDoubleCellValue}
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions
  definition: OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener`1
  name: CollectionFlattener<ExcelDoubleCellValue>
  nameWithType: CollectionFlattener<ExcelDoubleCellValue>
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener<OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelDoubleCellValue>
  nameWithType.vb: CollectionFlattener(Of ExcelDoubleCellValue)
  fullName.vb: OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener(Of OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelDoubleCellValue)
  name.vb: CollectionFlattener(Of ExcelDoubleCellValue)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener`1
    name: CollectionFlattener
    nameWithType: CollectionFlattener
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelDoubleCellValue
    name: ExcelDoubleCellValue
    nameWithType: ExcelDoubleCellValue
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelDoubleCellValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener`1
    name: CollectionFlattener
    nameWithType: CollectionFlattener
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelDoubleCellValue
    name: ExcelDoubleCellValue
    nameWithType: ExcelDoubleCellValue
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelDoubleCellValue
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener{OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelDoubleCellValue}.FuncArgsToFlatEnumerable(System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Action{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument,System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelDoubleCellValue}})
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener{OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelDoubleCellValue}.FuncArgsToFlatEnumerable(System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Action{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument,System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelDoubleCellValue}})
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener{OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelDoubleCellValue}
  definition: OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener`1.FuncArgsToFlatEnumerable(System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Action{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument,System.Collections.Generic.IList{`0}})
  name: FuncArgsToFlatEnumerable(IEnumerable<FunctionArgument>, Action<FunctionArgument, IList<ExcelDoubleCellValue>>)
  nameWithType: CollectionFlattener<ExcelDoubleCellValue>.FuncArgsToFlatEnumerable(IEnumerable<FunctionArgument>, Action<FunctionArgument, IList<ExcelDoubleCellValue>>)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener<OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelDoubleCellValue>.FuncArgsToFlatEnumerable(System.Collections.Generic.IEnumerable<OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument>, System.Action<OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument, System.Collections.Generic.IList<OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelDoubleCellValue>>)
  nameWithType.vb: CollectionFlattener(Of ExcelDoubleCellValue).FuncArgsToFlatEnumerable(IEnumerable(Of FunctionArgument), Action(Of FunctionArgument, IList(Of ExcelDoubleCellValue)))
  fullName.vb: OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener(Of OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelDoubleCellValue).FuncArgsToFlatEnumerable(System.Collections.Generic.IEnumerable(Of OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument), System.Action(Of OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument, System.Collections.Generic.IList(Of OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelDoubleCellValue)))
  name.vb: FuncArgsToFlatEnumerable(IEnumerable(Of FunctionArgument), Action(Of FunctionArgument, IList(Of ExcelDoubleCellValue)))
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener`1.FuncArgsToFlatEnumerable(System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Action{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument,System.Collections.Generic.IList{`0}})
    name: FuncArgsToFlatEnumerable
    nameWithType: CollectionFlattener<ExcelDoubleCellValue>.FuncArgsToFlatEnumerable
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener<OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelDoubleCellValue>.FuncArgsToFlatEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelDoubleCellValue
    name: ExcelDoubleCellValue
    nameWithType: ExcelDoubleCellValue
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelDoubleCellValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener`1.FuncArgsToFlatEnumerable(System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Action{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument,System.Collections.Generic.IList{`0}})
    name: FuncArgsToFlatEnumerable
    nameWithType: CollectionFlattener(Of ExcelDoubleCellValue).FuncArgsToFlatEnumerable
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener(Of OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelDoubleCellValue).FuncArgsToFlatEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelDoubleCellValue
    name: ExcelDoubleCellValue
    nameWithType: ExcelDoubleCellValue
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelDoubleCellValue
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener`1
  commentId: T:OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener`1
  name: CollectionFlattener<T>
  nameWithType: CollectionFlattener<T>
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener<T>
  nameWithType.vb: CollectionFlattener(Of T)
  fullName.vb: OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener(Of T)
  name.vb: CollectionFlattener(Of T)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener`1
    name: CollectionFlattener
    nameWithType: CollectionFlattener
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener`1
    name: CollectionFlattener
    nameWithType: CollectionFlattener
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener`1.FuncArgsToFlatEnumerable(System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Action{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument,System.Collections.Generic.IList{`0}})
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener`1.FuncArgsToFlatEnumerable(System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Action{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument,System.Collections.Generic.IList{`0}})
  isExternal: true
  name: FuncArgsToFlatEnumerable(IEnumerable<FunctionArgument>, Action<FunctionArgument, IList<T>>)
  nameWithType: CollectionFlattener<T>.FuncArgsToFlatEnumerable(IEnumerable<FunctionArgument>, Action<FunctionArgument, IList<T>>)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener<T>.FuncArgsToFlatEnumerable(System.Collections.Generic.IEnumerable<OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument>, System.Action<OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument, System.Collections.Generic.IList<T>>)
  nameWithType.vb: CollectionFlattener(Of T).FuncArgsToFlatEnumerable(IEnumerable(Of FunctionArgument), Action(Of FunctionArgument, IList(Of T)))
  fullName.vb: OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener(Of T).FuncArgsToFlatEnumerable(System.Collections.Generic.IEnumerable(Of OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument), System.Action(Of OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument, System.Collections.Generic.IList(Of T)))
  name.vb: FuncArgsToFlatEnumerable(IEnumerable(Of FunctionArgument), Action(Of FunctionArgument, IList(Of T)))
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener`1.FuncArgsToFlatEnumerable(System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Action{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument,System.Collections.Generic.IList{`0}})
    name: FuncArgsToFlatEnumerable
    nameWithType: CollectionFlattener<T>.FuncArgsToFlatEnumerable
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener<T>.FuncArgsToFlatEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener`1.FuncArgsToFlatEnumerable(System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Action{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument,System.Collections.Generic.IList{`0}})
    name: FuncArgsToFlatEnumerable
    nameWithType: CollectionFlattener(Of T).FuncArgsToFlatEnumerable
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.CollectionFlattener(Of T).FuncArgsToFlatEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.DoubleEnumerableArgConverter.ConvertArgs*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Excel.Functions.DoubleEnumerableArgConverter.ConvertArgs
  name: ConvertArgs
  nameWithType: DoubleEnumerableArgConverter.ConvertArgs
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.DoubleEnumerableArgConverter.ConvertArgs
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument}
  commentId: T:System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<FunctionArgument>
  nameWithType: IEnumerable<FunctionArgument>
  fullName: System.Collections.Generic.IEnumerable<OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument>
  nameWithType.vb: IEnumerable(Of FunctionArgument)
  fullName.vb: System.Collections.Generic.IEnumerable(Of OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument)
  name.vb: IEnumerable(Of FunctionArgument)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.ParsingContext
  commentId: T:OfficeOpenXml.FormulaParsing.ParsingContext
  parent: OfficeOpenXml.FormulaParsing
  name: ParsingContext
  nameWithType: ParsingContext
  fullName: OfficeOpenXml.FormulaParsing.ParsingContext
- uid: System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelDoubleCellValue}
  commentId: T:System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelDoubleCellValue}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ExcelDoubleCellValue>
  nameWithType: IEnumerable<ExcelDoubleCellValue>
  fullName: System.Collections.Generic.IEnumerable<OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelDoubleCellValue>
  nameWithType.vb: IEnumerable(Of ExcelDoubleCellValue)
  fullName.vb: System.Collections.Generic.IEnumerable(Of OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelDoubleCellValue)
  name.vb: IEnumerable(Of ExcelDoubleCellValue)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelDoubleCellValue
    name: ExcelDoubleCellValue
    nameWithType: ExcelDoubleCellValue
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelDoubleCellValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelDoubleCellValue
    name: ExcelDoubleCellValue
    nameWithType: ExcelDoubleCellValue
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelDoubleCellValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: OfficeOpenXml.FormulaParsing
  commentId: N:OfficeOpenXml.FormulaParsing
  name: OfficeOpenXml.FormulaParsing
  nameWithType: OfficeOpenXml.FormulaParsing
  fullName: OfficeOpenXml.FormulaParsing
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.DoubleEnumerableArgConverter.ConvertArgsIncludingOtherTypes*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Excel.Functions.DoubleEnumerableArgConverter.ConvertArgsIncludingOtherTypes
  name: ConvertArgsIncludingOtherTypes
  nameWithType: DoubleEnumerableArgConverter.ConvertArgsIncludingOtherTypes
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.DoubleEnumerableArgConverter.ConvertArgsIncludingOtherTypes
