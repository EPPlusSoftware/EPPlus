### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.ExcelRowsCollection
  commentId: T:OfficeOpenXml.ExcelRowsCollection
  id: ExcelRowsCollection
  parent: OfficeOpenXml
  children:
  - OfficeOpenXml.ExcelRowsCollection.Item(System.Int32)
  - OfficeOpenXml.ExcelRowsCollection.Item(System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: ExcelRowsCollection
  nameWithType: ExcelRowsCollection
  fullName: OfficeOpenXml.ExcelRowsCollection
  type: Class
  source:
    remote:
      path: src/EPPlus/ExcelRowsCollection.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ExcelRowsCollection
    path: ../src/EPPlus/ExcelRowsCollection.cs
    startLine: 20
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  summary: "\nA collection of rows in a worksheet.\n"
  example: []
  syntax:
    content: 'public class ExcelRowsCollection : ExcelRangeRow, IEnumerable<ExcelRangeRow>, IEnumerable, IEnumerator<ExcelRangeRow>, IEnumerator, IDisposable'
    content.vb: >-
      Public Class ExcelRowsCollection
          Inherits ExcelRangeRow
          Implements IEnumerable(Of ExcelRangeRow), IEnumerable, IEnumerator(Of ExcelRangeRow), IEnumerator, IDisposable
  inheritance:
  - System.Object
  - OfficeOpenXml.ExcelRangeRow
  implements:
  - System.Collections.Generic.IEnumerable{OfficeOpenXml.ExcelRangeRow}
  - System.Collections.IEnumerable
  - System.Collections.Generic.IEnumerator{OfficeOpenXml.ExcelRangeRow}
  - System.Collections.IEnumerator
  - System.IDisposable
  inheritedMembers:
  - OfficeOpenXml.ExcelRangeRow.StartRow
  - OfficeOpenXml.ExcelRangeRow.EndRow
  - OfficeOpenXml.ExcelRangeRow.Collapsed
  - OfficeOpenXml.ExcelRangeRow.OutlineLevel
  - OfficeOpenXml.ExcelRangeRow.Phonetic
  - OfficeOpenXml.ExcelRangeRow.Hidden
  - OfficeOpenXml.ExcelRangeRow.Height
  - OfficeOpenXml.ExcelRangeRow.CustomHeight
  - OfficeOpenXml.ExcelRangeRow.PageBreak
  - OfficeOpenXml.ExcelRangeRow.Style
  - OfficeOpenXml.ExcelRangeRow.StyleName
  - OfficeOpenXml.ExcelRangeRow.StyleID
  - OfficeOpenXml.ExcelRangeRow.Range
  - OfficeOpenXml.ExcelRangeRow.Current
  - OfficeOpenXml.ExcelRangeRow.System#Collections#IEnumerator#Current
  - OfficeOpenXml.ExcelRangeRow.GetEnumerator
  - OfficeOpenXml.ExcelRangeRow.System#Collections#IEnumerable#GetEnumerator
  - OfficeOpenXml.ExcelRangeRow.MoveNext
  - OfficeOpenXml.ExcelRangeRow.Reset
  - OfficeOpenXml.ExcelRangeRow.Dispose
  - OfficeOpenXml.ExcelRangeRow.Group
  - OfficeOpenXml.ExcelRangeRow.Ungroup
  - OfficeOpenXml.ExcelRangeRow.CollapseChildren(System.Boolean)
  - OfficeOpenXml.ExcelRangeRow.ExpandChildren(System.Boolean)
  - OfficeOpenXml.ExcelRangeRow.SetVisibleOutlineLevel(System.Int32,System.Boolean)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OfficeOpenXml.ExcelRowsCollection.Item(System.Int32)
  commentId: P:OfficeOpenXml.ExcelRowsCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: OfficeOpenXml.ExcelRowsCollection
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: ExcelRowsCollection.Item[Int32]
  fullName: OfficeOpenXml.ExcelRowsCollection.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/EPPlus/ExcelRowsCollection.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: this[]
    path: ../src/EPPlus/ExcelRowsCollection.cs
    startLine: 32
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  summary: "\nIndexer for the collection\n"
  example: []
  syntax:
    content: public ExcelRangeRow this[int row] { get; }
    parameters:
    - id: row
      type: System.Int32
      description: The row index
    return:
      type: OfficeOpenXml.ExcelRangeRow
      description: The <xref href="OfficeOpenXml.ExcelRangeRow" data-throw-if-not-resolved="false"></xref>
    content.vb: Public ReadOnly Property Item(row As Integer) As ExcelRangeRow
  overload: OfficeOpenXml.ExcelRowsCollection.Item*
  nameWithType.vb: ExcelRowsCollection.Item(Int32)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: OfficeOpenXml.ExcelRowsCollection.Item(System.Int32)
  name.vb: Item(Int32)
- uid: OfficeOpenXml.ExcelRowsCollection.Item(System.Int32,System.Int32)
  commentId: P:OfficeOpenXml.ExcelRowsCollection.Item(System.Int32,System.Int32)
  id: Item(System.Int32,System.Int32)
  parent: OfficeOpenXml.ExcelRowsCollection
  langs:
  - csharp
  - vb
  name: Item[Int32, Int32]
  nameWithType: ExcelRowsCollection.Item[Int32, Int32]
  fullName: OfficeOpenXml.ExcelRowsCollection.Item[System.Int32, System.Int32]
  type: Property
  source:
    remote:
      path: src/EPPlus/ExcelRowsCollection.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: this[]
    path: ../src/EPPlus/ExcelRowsCollection.cs
    startLine: 45
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  summary: "\nIndexer for the collection\n"
  example: []
  syntax:
    content: public ExcelRangeRow this[int fromRow, int toRow] { get; }
    parameters:
    - id: fromRow
      type: System.Int32
      description: The row index from which collection should start
    - id: toRow
      type: System.Int32
      description: index from which collection should end
    return:
      type: OfficeOpenXml.ExcelRangeRow
      description: The <xref href="OfficeOpenXml.ExcelRangeRow" data-throw-if-not-resolved="false"></xref>
    content.vb: Public ReadOnly Property Item(fromRow As Integer, toRow As Integer) As ExcelRangeRow
  overload: OfficeOpenXml.ExcelRowsCollection.Item*
  nameWithType.vb: ExcelRowsCollection.Item(Int32, Int32)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: OfficeOpenXml.ExcelRowsCollection.Item(System.Int32, System.Int32)
  name.vb: Item(Int32, Int32)
references:
- uid: OfficeOpenXml
  commentId: N:OfficeOpenXml
  name: OfficeOpenXml
  nameWithType: OfficeOpenXml
  fullName: OfficeOpenXml
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OfficeOpenXml.ExcelRangeRow
  commentId: T:OfficeOpenXml.ExcelRangeRow
  parent: OfficeOpenXml
  name: ExcelRangeRow
  nameWithType: ExcelRangeRow
  fullName: OfficeOpenXml.ExcelRangeRow
- uid: System.Collections.Generic.IEnumerable{OfficeOpenXml.ExcelRangeRow}
  commentId: T:System.Collections.Generic.IEnumerable{OfficeOpenXml.ExcelRangeRow}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ExcelRangeRow>
  nameWithType: IEnumerable<ExcelRangeRow>
  fullName: System.Collections.Generic.IEnumerable<OfficeOpenXml.ExcelRangeRow>
  nameWithType.vb: IEnumerable(Of ExcelRangeRow)
  fullName.vb: System.Collections.Generic.IEnumerable(Of OfficeOpenXml.ExcelRangeRow)
  name.vb: IEnumerable(Of ExcelRangeRow)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.ExcelRangeRow
    name: ExcelRangeRow
    nameWithType: ExcelRangeRow
    fullName: OfficeOpenXml.ExcelRangeRow
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.ExcelRangeRow
    name: ExcelRangeRow
    nameWithType: ExcelRangeRow
    fullName: OfficeOpenXml.ExcelRangeRow
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Collections.Generic.IEnumerator{OfficeOpenXml.ExcelRangeRow}
  commentId: T:System.Collections.Generic.IEnumerator{OfficeOpenXml.ExcelRangeRow}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<ExcelRangeRow>
  nameWithType: IEnumerator<ExcelRangeRow>
  fullName: System.Collections.Generic.IEnumerator<OfficeOpenXml.ExcelRangeRow>
  nameWithType.vb: IEnumerator(Of ExcelRangeRow)
  fullName.vb: System.Collections.Generic.IEnumerator(Of OfficeOpenXml.ExcelRangeRow)
  name.vb: IEnumerator(Of ExcelRangeRow)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.ExcelRangeRow
    name: ExcelRangeRow
    nameWithType: ExcelRangeRow
    fullName: OfficeOpenXml.ExcelRangeRow
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.ExcelRangeRow
    name: ExcelRangeRow
    nameWithType: ExcelRangeRow
    fullName: OfficeOpenXml.ExcelRangeRow
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: OfficeOpenXml.ExcelRangeRow.StartRow
  commentId: P:OfficeOpenXml.ExcelRangeRow.StartRow
  parent: OfficeOpenXml.ExcelRangeRow
  name: StartRow
  nameWithType: ExcelRangeRow.StartRow
  fullName: OfficeOpenXml.ExcelRangeRow.StartRow
- uid: OfficeOpenXml.ExcelRangeRow.EndRow
  commentId: P:OfficeOpenXml.ExcelRangeRow.EndRow
  parent: OfficeOpenXml.ExcelRangeRow
  name: EndRow
  nameWithType: ExcelRangeRow.EndRow
  fullName: OfficeOpenXml.ExcelRangeRow.EndRow
- uid: OfficeOpenXml.ExcelRangeRow.Collapsed
  commentId: P:OfficeOpenXml.ExcelRangeRow.Collapsed
  parent: OfficeOpenXml.ExcelRangeRow
  name: Collapsed
  nameWithType: ExcelRangeRow.Collapsed
  fullName: OfficeOpenXml.ExcelRangeRow.Collapsed
- uid: OfficeOpenXml.ExcelRangeRow.OutlineLevel
  commentId: P:OfficeOpenXml.ExcelRangeRow.OutlineLevel
  parent: OfficeOpenXml.ExcelRangeRow
  name: OutlineLevel
  nameWithType: ExcelRangeRow.OutlineLevel
  fullName: OfficeOpenXml.ExcelRangeRow.OutlineLevel
- uid: OfficeOpenXml.ExcelRangeRow.Phonetic
  commentId: P:OfficeOpenXml.ExcelRangeRow.Phonetic
  parent: OfficeOpenXml.ExcelRangeRow
  name: Phonetic
  nameWithType: ExcelRangeRow.Phonetic
  fullName: OfficeOpenXml.ExcelRangeRow.Phonetic
- uid: OfficeOpenXml.ExcelRangeRow.Hidden
  commentId: P:OfficeOpenXml.ExcelRangeRow.Hidden
  parent: OfficeOpenXml.ExcelRangeRow
  name: Hidden
  nameWithType: ExcelRangeRow.Hidden
  fullName: OfficeOpenXml.ExcelRangeRow.Hidden
- uid: OfficeOpenXml.ExcelRangeRow.Height
  commentId: P:OfficeOpenXml.ExcelRangeRow.Height
  parent: OfficeOpenXml.ExcelRangeRow
  name: Height
  nameWithType: ExcelRangeRow.Height
  fullName: OfficeOpenXml.ExcelRangeRow.Height
- uid: OfficeOpenXml.ExcelRangeRow.CustomHeight
  commentId: P:OfficeOpenXml.ExcelRangeRow.CustomHeight
  parent: OfficeOpenXml.ExcelRangeRow
  name: CustomHeight
  nameWithType: ExcelRangeRow.CustomHeight
  fullName: OfficeOpenXml.ExcelRangeRow.CustomHeight
- uid: OfficeOpenXml.ExcelRangeRow.PageBreak
  commentId: P:OfficeOpenXml.ExcelRangeRow.PageBreak
  parent: OfficeOpenXml.ExcelRangeRow
  name: PageBreak
  nameWithType: ExcelRangeRow.PageBreak
  fullName: OfficeOpenXml.ExcelRangeRow.PageBreak
- uid: OfficeOpenXml.ExcelRangeRow.Style
  commentId: P:OfficeOpenXml.ExcelRangeRow.Style
  parent: OfficeOpenXml.ExcelRangeRow
  name: Style
  nameWithType: ExcelRangeRow.Style
  fullName: OfficeOpenXml.ExcelRangeRow.Style
- uid: OfficeOpenXml.ExcelRangeRow.StyleName
  commentId: P:OfficeOpenXml.ExcelRangeRow.StyleName
  parent: OfficeOpenXml.ExcelRangeRow
  name: StyleName
  nameWithType: ExcelRangeRow.StyleName
  fullName: OfficeOpenXml.ExcelRangeRow.StyleName
- uid: OfficeOpenXml.ExcelRangeRow.StyleID
  commentId: P:OfficeOpenXml.ExcelRangeRow.StyleID
  parent: OfficeOpenXml.ExcelRangeRow
  name: StyleID
  nameWithType: ExcelRangeRow.StyleID
  fullName: OfficeOpenXml.ExcelRangeRow.StyleID
- uid: OfficeOpenXml.ExcelRangeRow.Range
  commentId: P:OfficeOpenXml.ExcelRangeRow.Range
  parent: OfficeOpenXml.ExcelRangeRow
  name: Range
  nameWithType: ExcelRangeRow.Range
  fullName: OfficeOpenXml.ExcelRangeRow.Range
- uid: OfficeOpenXml.ExcelRangeRow.Current
  commentId: P:OfficeOpenXml.ExcelRangeRow.Current
  parent: OfficeOpenXml.ExcelRangeRow
  name: Current
  nameWithType: ExcelRangeRow.Current
  fullName: OfficeOpenXml.ExcelRangeRow.Current
- uid: OfficeOpenXml.ExcelRangeRow.System#Collections#IEnumerator#Current
  commentId: P:OfficeOpenXml.ExcelRangeRow.System#Collections#IEnumerator#Current
  parent: OfficeOpenXml.ExcelRangeRow
  name: IEnumerator.Current
  nameWithType: ExcelRangeRow.IEnumerator.Current
  fullName: OfficeOpenXml.ExcelRangeRow.System.Collections.IEnumerator.Current
  nameWithType.vb: ExcelRangeRow.System.Collections.IEnumerator.Current
  name.vb: System.Collections.IEnumerator.Current
- uid: OfficeOpenXml.ExcelRangeRow.GetEnumerator
  commentId: M:OfficeOpenXml.ExcelRangeRow.GetEnumerator
  parent: OfficeOpenXml.ExcelRangeRow
  name: GetEnumerator()
  nameWithType: ExcelRangeRow.GetEnumerator()
  fullName: OfficeOpenXml.ExcelRangeRow.GetEnumerator()
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeRow.GetEnumerator
    name: GetEnumerator
    nameWithType: ExcelRangeRow.GetEnumerator
    fullName: OfficeOpenXml.ExcelRangeRow.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeRow.GetEnumerator
    name: GetEnumerator
    nameWithType: ExcelRangeRow.GetEnumerator
    fullName: OfficeOpenXml.ExcelRangeRow.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeRow.System#Collections#IEnumerable#GetEnumerator
  commentId: M:OfficeOpenXml.ExcelRangeRow.System#Collections#IEnumerable#GetEnumerator
  parent: OfficeOpenXml.ExcelRangeRow
  name: IEnumerable.GetEnumerator()
  nameWithType: ExcelRangeRow.IEnumerable.GetEnumerator()
  fullName: OfficeOpenXml.ExcelRangeRow.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: ExcelRangeRow.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeRow.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: ExcelRangeRow.IEnumerable.GetEnumerator
    fullName: OfficeOpenXml.ExcelRangeRow.System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeRow.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: ExcelRangeRow.System.Collections.IEnumerable.GetEnumerator
    fullName: OfficeOpenXml.ExcelRangeRow.System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeRow.MoveNext
  commentId: M:OfficeOpenXml.ExcelRangeRow.MoveNext
  parent: OfficeOpenXml.ExcelRangeRow
  name: MoveNext()
  nameWithType: ExcelRangeRow.MoveNext()
  fullName: OfficeOpenXml.ExcelRangeRow.MoveNext()
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeRow.MoveNext
    name: MoveNext
    nameWithType: ExcelRangeRow.MoveNext
    fullName: OfficeOpenXml.ExcelRangeRow.MoveNext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeRow.MoveNext
    name: MoveNext
    nameWithType: ExcelRangeRow.MoveNext
    fullName: OfficeOpenXml.ExcelRangeRow.MoveNext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeRow.Reset
  commentId: M:OfficeOpenXml.ExcelRangeRow.Reset
  parent: OfficeOpenXml.ExcelRangeRow
  name: Reset()
  nameWithType: ExcelRangeRow.Reset()
  fullName: OfficeOpenXml.ExcelRangeRow.Reset()
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeRow.Reset
    name: Reset
    nameWithType: ExcelRangeRow.Reset
    fullName: OfficeOpenXml.ExcelRangeRow.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeRow.Reset
    name: Reset
    nameWithType: ExcelRangeRow.Reset
    fullName: OfficeOpenXml.ExcelRangeRow.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeRow.Dispose
  commentId: M:OfficeOpenXml.ExcelRangeRow.Dispose
  parent: OfficeOpenXml.ExcelRangeRow
  name: Dispose()
  nameWithType: ExcelRangeRow.Dispose()
  fullName: OfficeOpenXml.ExcelRangeRow.Dispose()
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeRow.Dispose
    name: Dispose
    nameWithType: ExcelRangeRow.Dispose
    fullName: OfficeOpenXml.ExcelRangeRow.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeRow.Dispose
    name: Dispose
    nameWithType: ExcelRangeRow.Dispose
    fullName: OfficeOpenXml.ExcelRangeRow.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeRow.Group
  commentId: M:OfficeOpenXml.ExcelRangeRow.Group
  parent: OfficeOpenXml.ExcelRangeRow
  name: Group()
  nameWithType: ExcelRangeRow.Group()
  fullName: OfficeOpenXml.ExcelRangeRow.Group()
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeRow.Group
    name: Group
    nameWithType: ExcelRangeRow.Group
    fullName: OfficeOpenXml.ExcelRangeRow.Group
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeRow.Group
    name: Group
    nameWithType: ExcelRangeRow.Group
    fullName: OfficeOpenXml.ExcelRangeRow.Group
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeRow.Ungroup
  commentId: M:OfficeOpenXml.ExcelRangeRow.Ungroup
  parent: OfficeOpenXml.ExcelRangeRow
  name: Ungroup()
  nameWithType: ExcelRangeRow.Ungroup()
  fullName: OfficeOpenXml.ExcelRangeRow.Ungroup()
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeRow.Ungroup
    name: Ungroup
    nameWithType: ExcelRangeRow.Ungroup
    fullName: OfficeOpenXml.ExcelRangeRow.Ungroup
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeRow.Ungroup
    name: Ungroup
    nameWithType: ExcelRangeRow.Ungroup
    fullName: OfficeOpenXml.ExcelRangeRow.Ungroup
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeRow.CollapseChildren(System.Boolean)
  commentId: M:OfficeOpenXml.ExcelRangeRow.CollapseChildren(System.Boolean)
  parent: OfficeOpenXml.ExcelRangeRow
  isExternal: true
  name: CollapseChildren(Boolean)
  nameWithType: ExcelRangeRow.CollapseChildren(Boolean)
  fullName: OfficeOpenXml.ExcelRangeRow.CollapseChildren(System.Boolean)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeRow.CollapseChildren(System.Boolean)
    name: CollapseChildren
    nameWithType: ExcelRangeRow.CollapseChildren
    fullName: OfficeOpenXml.ExcelRangeRow.CollapseChildren
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeRow.CollapseChildren(System.Boolean)
    name: CollapseChildren
    nameWithType: ExcelRangeRow.CollapseChildren
    fullName: OfficeOpenXml.ExcelRangeRow.CollapseChildren
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeRow.ExpandChildren(System.Boolean)
  commentId: M:OfficeOpenXml.ExcelRangeRow.ExpandChildren(System.Boolean)
  parent: OfficeOpenXml.ExcelRangeRow
  isExternal: true
  name: ExpandChildren(Boolean)
  nameWithType: ExcelRangeRow.ExpandChildren(Boolean)
  fullName: OfficeOpenXml.ExcelRangeRow.ExpandChildren(System.Boolean)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeRow.ExpandChildren(System.Boolean)
    name: ExpandChildren
    nameWithType: ExcelRangeRow.ExpandChildren
    fullName: OfficeOpenXml.ExcelRangeRow.ExpandChildren
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeRow.ExpandChildren(System.Boolean)
    name: ExpandChildren
    nameWithType: ExcelRangeRow.ExpandChildren
    fullName: OfficeOpenXml.ExcelRangeRow.ExpandChildren
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRangeRow.SetVisibleOutlineLevel(System.Int32,System.Boolean)
  commentId: M:OfficeOpenXml.ExcelRangeRow.SetVisibleOutlineLevel(System.Int32,System.Boolean)
  parent: OfficeOpenXml.ExcelRangeRow
  isExternal: true
  name: SetVisibleOutlineLevel(Int32, Boolean)
  nameWithType: ExcelRangeRow.SetVisibleOutlineLevel(Int32, Boolean)
  fullName: OfficeOpenXml.ExcelRangeRow.SetVisibleOutlineLevel(System.Int32, System.Boolean)
  spec.csharp:
  - uid: OfficeOpenXml.ExcelRangeRow.SetVisibleOutlineLevel(System.Int32,System.Boolean)
    name: SetVisibleOutlineLevel
    nameWithType: ExcelRangeRow.SetVisibleOutlineLevel
    fullName: OfficeOpenXml.ExcelRangeRow.SetVisibleOutlineLevel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.ExcelRangeRow.SetVisibleOutlineLevel(System.Int32,System.Boolean)
    name: SetVisibleOutlineLevel
    nameWithType: ExcelRangeRow.SetVisibleOutlineLevel
    fullName: OfficeOpenXml.ExcelRangeRow.SetVisibleOutlineLevel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.ExcelRowsCollection.Item*
  commentId: Overload:OfficeOpenXml.ExcelRowsCollection.Item
  name: Item
  nameWithType: ExcelRowsCollection.Item
  fullName: OfficeOpenXml.ExcelRowsCollection.Item
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
