### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ArgumentParsers
  commentId: T:OfficeOpenXml.FormulaParsing.Excel.Functions.ArgumentParsers
  id: ArgumentParsers
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions
  children:
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ArgumentParsers.#ctor
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ArgumentParsers.#ctor(OfficeOpenXml.FormulaParsing.Excel.Functions.ArgumentParserFactory)
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ArgumentParsers.GetParser(OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType)
  langs:
  - csharp
  - vb
  name: ArgumentParsers
  nameWithType: ArgumentParsers
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ArgumentParsers
  type: Class
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Excel/Functions/ArgumentParsers.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ArgumentParsers
    path: ../src/EPPlus/FormulaParsing/Excel/Functions/ArgumentParsers.cs
    startLine: 18
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Excel.Functions
  syntax:
    content: public class ArgumentParsers
    content.vb: Public Class ArgumentParsers
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ArgumentParsers.#ctor
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ArgumentParsers.#ctor
  id: '#ctor'
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ArgumentParsers
  langs:
  - csharp
  - vb
  name: ArgumentParsers()
  nameWithType: ArgumentParsers.ArgumentParsers()
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ArgumentParsers.ArgumentParsers()
  type: Constructor
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Excel/Functions/ArgumentParsers.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: .ctor
    path: ../src/EPPlus/FormulaParsing/Excel/Functions/ArgumentParsers.cs
    startLine: 24
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Excel.Functions
  syntax:
    content: public ArgumentParsers()
    content.vb: Public Sub New
  overload: OfficeOpenXml.FormulaParsing.Excel.Functions.ArgumentParsers.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ArgumentParsers.#ctor(OfficeOpenXml.FormulaParsing.Excel.Functions.ArgumentParserFactory)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ArgumentParsers.#ctor(OfficeOpenXml.FormulaParsing.Excel.Functions.ArgumentParserFactory)
  id: '#ctor(OfficeOpenXml.FormulaParsing.Excel.Functions.ArgumentParserFactory)'
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ArgumentParsers
  langs:
  - csharp
  - vb
  name: ArgumentParsers(ArgumentParserFactory)
  nameWithType: ArgumentParsers.ArgumentParsers(ArgumentParserFactory)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ArgumentParsers.ArgumentParsers(OfficeOpenXml.FormulaParsing.Excel.Functions.ArgumentParserFactory)
  type: Constructor
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Excel/Functions/ArgumentParsers.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: .ctor
    path: ../src/EPPlus/FormulaParsing/Excel/Functions/ArgumentParsers.cs
    startLine: 30
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Excel.Functions
  syntax:
    content: public ArgumentParsers(ArgumentParserFactory factory)
    parameters:
    - id: factory
      type: OfficeOpenXml.FormulaParsing.Excel.Functions.ArgumentParserFactory
    content.vb: Public Sub New(factory As ArgumentParserFactory)
  overload: OfficeOpenXml.FormulaParsing.Excel.Functions.ArgumentParsers.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ArgumentParsers.GetParser(OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ArgumentParsers.GetParser(OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType)
  id: GetParser(OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ArgumentParsers
  langs:
  - csharp
  - vb
  name: GetParser(DataType)
  nameWithType: ArgumentParsers.GetParser(DataType)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ArgumentParsers.GetParser(OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType)
  type: Method
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Excel/Functions/ArgumentParsers.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: GetParser
    path: ../src/EPPlus/FormulaParsing/Excel/Functions/ArgumentParsers.cs
    startLine: 36
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Excel.Functions
  syntax:
    content: public ArgumentParser GetParser(DataType dataType)
    parameters:
    - id: dataType
      type: OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType
    return:
      type: OfficeOpenXml.FormulaParsing.Excel.Functions.ArgumentParser
    content.vb: Public Function GetParser(dataType As DataType) As ArgumentParser
  overload: OfficeOpenXml.FormulaParsing.Excel.Functions.ArgumentParsers.GetParser*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions
  commentId: N:OfficeOpenXml.FormulaParsing.Excel.Functions
  name: OfficeOpenXml.FormulaParsing.Excel.Functions
  nameWithType: OfficeOpenXml.FormulaParsing.Excel.Functions
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ArgumentParsers.#ctor*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Excel.Functions.ArgumentParsers.#ctor
  name: ArgumentParsers
  nameWithType: ArgumentParsers.ArgumentParsers
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ArgumentParsers.ArgumentParsers
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ArgumentParserFactory
  commentId: T:OfficeOpenXml.FormulaParsing.Excel.Functions.ArgumentParserFactory
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions
  name: ArgumentParserFactory
  nameWithType: ArgumentParserFactory
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ArgumentParserFactory
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ArgumentParsers.GetParser*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Excel.Functions.ArgumentParsers.GetParser
  name: GetParser
  nameWithType: ArgumentParsers.GetParser
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ArgumentParsers.GetParser
- uid: OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType
  commentId: T:OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType
  parent: OfficeOpenXml.FormulaParsing.FormulaExpressions
  name: DataType
  nameWithType: DataType
  fullName: OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ArgumentParser
  commentId: T:OfficeOpenXml.FormulaParsing.Excel.Functions.ArgumentParser
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions
  name: ArgumentParser
  nameWithType: ArgumentParser
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ArgumentParser
- uid: OfficeOpenXml.FormulaParsing.FormulaExpressions
  commentId: N:OfficeOpenXml.FormulaParsing.FormulaExpressions
  name: OfficeOpenXml.FormulaParsing.FormulaExpressions
  nameWithType: OfficeOpenXml.FormulaParsing.FormulaExpressions
  fullName: OfficeOpenXml.FormulaParsing.FormulaExpressions
