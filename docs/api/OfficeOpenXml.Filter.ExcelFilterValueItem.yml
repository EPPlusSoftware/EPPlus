### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.Filter.ExcelFilterValueItem
  commentId: T:OfficeOpenXml.Filter.ExcelFilterValueItem
  id: ExcelFilterValueItem
  parent: OfficeOpenXml.Filter
  children:
  - OfficeOpenXml.Filter.ExcelFilterValueItem.#ctor(System.String)
  - OfficeOpenXml.Filter.ExcelFilterValueItem.Value
  langs:
  - csharp
  - vb
  name: ExcelFilterValueItem
  nameWithType: ExcelFilterValueItem
  fullName: OfficeOpenXml.Filter.ExcelFilterValueItem
  type: Class
  source:
    remote:
      path: src/EPPlus/Filter/ExcelFilterItem.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ExcelFilterValueItem
    path: ../src/EPPlus/Filter/ExcelFilterItem.cs
    startLine: 26
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Filter
  summary: "\nA filter item for a value filter\n"
  example: []
  syntax:
    content: 'public class ExcelFilterValueItem : ExcelFilterItem'
    content.vb: >-
      Public Class ExcelFilterValueItem
          Inherits ExcelFilterItem
  inheritance:
  - System.Object
  - OfficeOpenXml.Filter.ExcelFilterItem
  derivedClasses:
  - OfficeOpenXml.Filter.ExcelFilterCustomItem
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OfficeOpenXml.Filter.ExcelFilterValueItem.#ctor(System.String)
  commentId: M:OfficeOpenXml.Filter.ExcelFilterValueItem.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: OfficeOpenXml.Filter.ExcelFilterValueItem
  langs:
  - csharp
  - vb
  name: ExcelFilterValueItem(String)
  nameWithType: ExcelFilterValueItem.ExcelFilterValueItem(String)
  fullName: OfficeOpenXml.Filter.ExcelFilterValueItem.ExcelFilterValueItem(System.String)
  type: Constructor
  source:
    remote:
      path: src/EPPlus/Filter/ExcelFilterItem.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: .ctor
    path: ../src/EPPlus/Filter/ExcelFilterItem.cs
    startLine: 32
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Filter
  summary: "\nInizialize the filter item\n"
  example: []
  syntax:
    content: public ExcelFilterValueItem(string value)
    parameters:
    - id: value
      type: System.String
      description: The value to be filtered.
    content.vb: Public Sub New(value As String)
  overload: OfficeOpenXml.Filter.ExcelFilterValueItem.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Filter.ExcelFilterValueItem.Value
  commentId: P:OfficeOpenXml.Filter.ExcelFilterValueItem.Value
  id: Value
  parent: OfficeOpenXml.Filter.ExcelFilterValueItem
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: ExcelFilterValueItem.Value
  fullName: OfficeOpenXml.Filter.ExcelFilterValueItem.Value
  type: Property
  source:
    remote:
      path: src/EPPlus/Filter/ExcelFilterItem.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Value
    path: ../src/EPPlus/Filter/ExcelFilterItem.cs
    startLine: 40
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Filter
  summary: "\nA value to be filtered.\n"
  example: []
  syntax:
    content: public string Value { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Value As String
  overload: OfficeOpenXml.Filter.ExcelFilterValueItem.Value*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: OfficeOpenXml.Filter
  commentId: N:OfficeOpenXml.Filter
  name: OfficeOpenXml.Filter
  nameWithType: OfficeOpenXml.Filter
  fullName: OfficeOpenXml.Filter
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OfficeOpenXml.Filter.ExcelFilterItem
  commentId: T:OfficeOpenXml.Filter.ExcelFilterItem
  parent: OfficeOpenXml.Filter
  name: ExcelFilterItem
  nameWithType: ExcelFilterItem
  fullName: OfficeOpenXml.Filter.ExcelFilterItem
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml.Filter.ExcelFilterValueItem.#ctor*
  commentId: Overload:OfficeOpenXml.Filter.ExcelFilterValueItem.#ctor
  name: ExcelFilterValueItem
  nameWithType: ExcelFilterValueItem.ExcelFilterValueItem
  fullName: OfficeOpenXml.Filter.ExcelFilterValueItem.ExcelFilterValueItem
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OfficeOpenXml.Filter.ExcelFilterValueItem.Value*
  commentId: Overload:OfficeOpenXml.Filter.ExcelFilterValueItem.Value
  name: Value
  nameWithType: ExcelFilterValueItem.Value
  fullName: OfficeOpenXml.Filter.ExcelFilterValueItem.Value
