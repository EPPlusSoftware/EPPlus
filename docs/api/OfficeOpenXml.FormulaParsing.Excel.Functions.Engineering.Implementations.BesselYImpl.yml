### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselYImpl
  commentId: T:OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselYImpl
  id: BesselYImpl
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations
  children:
  - OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselYImpl.BesselY(System.Double,System.Int32)
  langs:
  - csharp
  - vb
  name: BesselYImpl
  nameWithType: BesselYImpl
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselYImpl
  type: Class
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Excel/Functions/Engineering/Implementations/BesselYImpl.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: BesselYImpl
    path: ../src/EPPlus/FormulaParsing/Excel/Functions/Engineering/Implementations/BesselYImpl.cs
    startLine: 16
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations
  syntax:
    content: 'public class BesselYImpl : BesselBase'
    content.vb: >-
      Public Class BesselYImpl
          Inherits BesselBase
  inheritance:
  - System.Object
  - OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselBase
  inheritedMembers:
  - OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselBase.f_PI
  - OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselBase.f_PI_DIV_2
  - OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselBase.f_PI_DIV_4
  - OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselBase.f_2_DIV_PI
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselYImpl.BesselY(System.Double,System.Int32)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselYImpl.BesselY(System.Double,System.Int32)
  id: BesselY(System.Double,System.Int32)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselYImpl
  langs:
  - csharp
  - vb
  name: BesselY(Double, Int32)
  nameWithType: BesselYImpl.BesselY(Double, Int32)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselYImpl.BesselY(System.Double, System.Int32)
  type: Method
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Excel/Functions/Engineering/Implementations/BesselYImpl.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: BesselY
    path: ../src/EPPlus/FormulaParsing/Excel/Functions/Engineering/Implementations/BesselYImpl.cs
    startLine: 123
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations
  syntax:
    content: public FinanceCalcResult<double> BesselY(double fNum, int nOrder)
    parameters:
    - id: fNum
      type: System.Double
    - id: nOrder
      type: System.Int32
    return:
      type: OfficeOpenXml.FormulaParsing.Excel.Functions.Finance.Implementations.FinanceCalcResult{System.Double}
    content.vb: Public Function BesselY(fNum As Double, nOrder As Integer) As FinanceCalcResult(Of Double)
  overload: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselYImpl.BesselY*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations
  commentId: N:OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations
  name: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations
  nameWithType: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselBase
  commentId: T:OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselBase
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations
  name: BesselBase
  nameWithType: BesselBase
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselBase
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselBase.f_PI
  commentId: F:OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselBase.f_PI
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselBase
  name: f_PI
  nameWithType: BesselBase.f_PI
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselBase.f_PI
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselBase.f_PI_DIV_2
  commentId: F:OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselBase.f_PI_DIV_2
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselBase
  name: f_PI_DIV_2
  nameWithType: BesselBase.f_PI_DIV_2
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselBase.f_PI_DIV_2
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselBase.f_PI_DIV_4
  commentId: F:OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselBase.f_PI_DIV_4
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselBase
  name: f_PI_DIV_4
  nameWithType: BesselBase.f_PI_DIV_4
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselBase.f_PI_DIV_4
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselBase.f_2_DIV_PI
  commentId: F:OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselBase.f_2_DIV_PI
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselBase
  name: f_2_DIV_PI
  nameWithType: BesselBase.f_2_DIV_PI
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselBase.f_2_DIV_PI
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselYImpl.BesselY*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselYImpl.BesselY
  name: BesselY
  nameWithType: BesselYImpl.BesselY
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.Engineering.Implementations.BesselYImpl.BesselY
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.Finance.Implementations.FinanceCalcResult{System.Double}
  commentId: T:OfficeOpenXml.FormulaParsing.Excel.Functions.Finance.Implementations.FinanceCalcResult{System.Double}
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.Finance.Implementations
  definition: OfficeOpenXml.FormulaParsing.Excel.Functions.Finance.Implementations.FinanceCalcResult`1
  name: FinanceCalcResult<Double>
  nameWithType: FinanceCalcResult<Double>
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.Finance.Implementations.FinanceCalcResult<System.Double>
  nameWithType.vb: FinanceCalcResult(Of Double)
  fullName.vb: OfficeOpenXml.FormulaParsing.Excel.Functions.Finance.Implementations.FinanceCalcResult(Of System.Double)
  name.vb: FinanceCalcResult(Of Double)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.Finance.Implementations.FinanceCalcResult`1
    name: FinanceCalcResult
    nameWithType: FinanceCalcResult
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.Finance.Implementations.FinanceCalcResult
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.Finance.Implementations.FinanceCalcResult`1
    name: FinanceCalcResult
    nameWithType: FinanceCalcResult
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.Finance.Implementations.FinanceCalcResult
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.Finance.Implementations.FinanceCalcResult`1
  commentId: T:OfficeOpenXml.FormulaParsing.Excel.Functions.Finance.Implementations.FinanceCalcResult`1
  name: FinanceCalcResult<T>
  nameWithType: FinanceCalcResult<T>
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.Finance.Implementations.FinanceCalcResult<T>
  nameWithType.vb: FinanceCalcResult(Of T)
  fullName.vb: OfficeOpenXml.FormulaParsing.Excel.Functions.Finance.Implementations.FinanceCalcResult(Of T)
  name.vb: FinanceCalcResult(Of T)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.Finance.Implementations.FinanceCalcResult`1
    name: FinanceCalcResult
    nameWithType: FinanceCalcResult
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.Finance.Implementations.FinanceCalcResult
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.Finance.Implementations.FinanceCalcResult`1
    name: FinanceCalcResult
    nameWithType: FinanceCalcResult
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.Finance.Implementations.FinanceCalcResult
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.Finance.Implementations
  commentId: N:OfficeOpenXml.FormulaParsing.Excel.Functions.Finance.Implementations
  name: OfficeOpenXml.FormulaParsing.Excel.Functions.Finance.Implementations
  nameWithType: OfficeOpenXml.FormulaParsing.Excel.Functions.Finance.Implementations
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.Finance.Implementations
