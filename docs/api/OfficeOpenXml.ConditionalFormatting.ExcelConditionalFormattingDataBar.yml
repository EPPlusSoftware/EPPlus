### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingDataBar
  commentId: T:OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingDataBar
  id: ExcelConditionalFormattingDataBar
  parent: OfficeOpenXml.ConditionalFormatting
  children:
  - OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingDataBar.Color
  - OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingDataBar.HighValue
  - OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingDataBar.LowValue
  - OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingDataBar.ShowValue
  langs:
  - csharp
  - vb
  name: ExcelConditionalFormattingDataBar
  nameWithType: ExcelConditionalFormattingDataBar
  fullName: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingDataBar
  type: Class
  source:
    remote:
      path: src/EPPlus/ConditionalFormatting/Rules/ExcelConditionalFormattingDataBar.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ExcelConditionalFormattingDataBar
    path: ../src/EPPlus/ConditionalFormatting/Rules/ExcelConditionalFormattingDataBar.cs
    startLine: 25
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.ConditionalFormatting
  summary: "\nDatabar\n"
  example: []
  syntax:
    content: 'public class ExcelConditionalFormattingDataBar : ExcelConditionalFormattingRule, IExcelConditionalFormattingDataBarGroup, IExcelConditionalFormattingRule'
    content.vb: >-
      Public Class ExcelConditionalFormattingDataBar
          Inherits ExcelConditionalFormattingRule
          Implements IExcelConditionalFormattingDataBarGroup, IExcelConditionalFormattingRule
  inheritance:
  - System.Object
  - OfficeOpenXml.XmlHelper
  - OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule
  implements:
  - OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingDataBarGroup
  - OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule
  inheritedMembers:
  - OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.Node
  - OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.Address
  - OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.PivotTable
  - OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.Type
  - OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.Priority
  - OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.StopIfTrue
  - OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.Style
  - OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.StdDev
  - OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.Rank
  - OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.AboveAverage
  - OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.EqualAverage
  - OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.Bottom
  - OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.Percent
  - OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.TimePeriod
  - OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.Operator
  - OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.Formula
  - OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.Formula2
  - OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.As
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingDataBar.ShowValue
  commentId: P:OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingDataBar.ShowValue
  id: ShowValue
  parent: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingDataBar
  langs:
  - csharp
  - vb
  name: ShowValue
  nameWithType: ExcelConditionalFormattingDataBar.ShowValue
  fullName: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingDataBar.ShowValue
  type: Property
  source:
    remote:
      path: src/EPPlus/ConditionalFormatting/Rules/ExcelConditionalFormattingDataBar.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ShowValue
    path: ../src/EPPlus/ConditionalFormatting/Rules/ExcelConditionalFormattingDataBar.cs
    startLine: 178
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.ConditionalFormatting
  summary: "\nIf true the values of the cells are shown, otherwise the cells only contain the databars.\n"
  example: []
  syntax:
    content: public bool ShowValue { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ShowValue As Boolean
  overload: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingDataBar.ShowValue*
  implements:
  - OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingDataBarGroup.ShowValue
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingDataBar.LowValue
  commentId: P:OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingDataBar.LowValue
  id: LowValue
  parent: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingDataBar
  langs:
  - csharp
  - vb
  name: LowValue
  nameWithType: ExcelConditionalFormattingDataBar.LowValue
  fullName: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingDataBar.LowValue
  type: Property
  source:
    remote:
      path: src/EPPlus/ConditionalFormatting/Rules/ExcelConditionalFormattingDataBar.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: LowValue
    path: ../src/EPPlus/ConditionalFormatting/Rules/ExcelConditionalFormattingDataBar.cs
    startLine: 193
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.ConditionalFormatting
  summary: "\nThe low value\n"
  example: []
  syntax:
    content: public ExcelConditionalFormattingIconDataBarValue LowValue { get; }
    parameters: []
    return:
      type: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingIconDataBarValue
    content.vb: Public ReadOnly Property LowValue As ExcelConditionalFormattingIconDataBarValue
  overload: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingDataBar.LowValue*
  implements:
  - OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingDataBarGroup.LowValue
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingDataBar.HighValue
  commentId: P:OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingDataBar.HighValue
  id: HighValue
  parent: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingDataBar
  langs:
  - csharp
  - vb
  name: HighValue
  nameWithType: ExcelConditionalFormattingDataBar.HighValue
  fullName: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingDataBar.HighValue
  type: Property
  source:
    remote:
      path: src/EPPlus/ConditionalFormatting/Rules/ExcelConditionalFormattingDataBar.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: HighValue
    path: ../src/EPPlus/ConditionalFormatting/Rules/ExcelConditionalFormattingDataBar.cs
    startLine: 202
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.ConditionalFormatting
  summary: "\nThe high value\n"
  example: []
  syntax:
    content: public ExcelConditionalFormattingIconDataBarValue HighValue { get; }
    parameters: []
    return:
      type: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingIconDataBarValue
    content.vb: Public ReadOnly Property HighValue As ExcelConditionalFormattingIconDataBarValue
  overload: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingDataBar.HighValue*
  implements:
  - OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingDataBarGroup.HighValue
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingDataBar.Color
  commentId: P:OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingDataBar.Color
  id: Color
  parent: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingDataBar
  langs:
  - csharp
  - vb
  name: Color
  nameWithType: ExcelConditionalFormattingDataBar.Color
  fullName: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingDataBar.Color
  type: Property
  source:
    remote:
      path: src/EPPlus/ConditionalFormatting/Rules/ExcelConditionalFormattingDataBar.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Color
    path: ../src/EPPlus/ConditionalFormatting/Rules/ExcelConditionalFormattingDataBar.cs
    startLine: 213
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.ConditionalFormatting
  summary: "\nThe color of the databar\n"
  example: []
  syntax:
    content: public Color Color { get; set; }
    parameters: []
    return:
      type: System.Drawing.Color
    content.vb: Public Property Color As Color
  overload: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingDataBar.Color*
  implements:
  - OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingDataBarGroup.Color
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: OfficeOpenXml.ConditionalFormatting
  commentId: N:OfficeOpenXml.ConditionalFormatting
  name: OfficeOpenXml.ConditionalFormatting
  nameWithType: OfficeOpenXml.ConditionalFormatting
  fullName: OfficeOpenXml.ConditionalFormatting
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OfficeOpenXml.XmlHelper
  commentId: T:OfficeOpenXml.XmlHelper
  parent: OfficeOpenXml
  name: XmlHelper
  nameWithType: XmlHelper
  fullName: OfficeOpenXml.XmlHelper
- uid: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule
  commentId: T:OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule
  parent: OfficeOpenXml.ConditionalFormatting
  name: ExcelConditionalFormattingRule
  nameWithType: ExcelConditionalFormattingRule
  fullName: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule
- uid: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingDataBarGroup
  commentId: T:OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingDataBarGroup
  parent: OfficeOpenXml.ConditionalFormatting.Contracts
  name: IExcelConditionalFormattingDataBarGroup
  nameWithType: IExcelConditionalFormattingDataBarGroup
  fullName: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingDataBarGroup
- uid: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule
  commentId: T:OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule
  parent: OfficeOpenXml.ConditionalFormatting.Contracts
  name: IExcelConditionalFormattingRule
  nameWithType: IExcelConditionalFormattingRule
  fullName: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingRule
- uid: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.Node
  commentId: P:OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.Node
  parent: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule
  name: Node
  nameWithType: ExcelConditionalFormattingRule.Node
  fullName: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.Node
- uid: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.Address
  commentId: P:OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.Address
  parent: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule
  name: Address
  nameWithType: ExcelConditionalFormattingRule.Address
  fullName: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.Address
- uid: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.PivotTable
  commentId: P:OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.PivotTable
  parent: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule
  name: PivotTable
  nameWithType: ExcelConditionalFormattingRule.PivotTable
  fullName: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.PivotTable
- uid: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.Type
  commentId: P:OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.Type
  parent: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule
  name: Type
  nameWithType: ExcelConditionalFormattingRule.Type
  fullName: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.Type
- uid: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.Priority
  commentId: P:OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.Priority
  parent: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule
  name: Priority
  nameWithType: ExcelConditionalFormattingRule.Priority
  fullName: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.Priority
- uid: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.StopIfTrue
  commentId: P:OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.StopIfTrue
  parent: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule
  name: StopIfTrue
  nameWithType: ExcelConditionalFormattingRule.StopIfTrue
  fullName: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.StopIfTrue
- uid: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.Style
  commentId: P:OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.Style
  parent: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule
  name: Style
  nameWithType: ExcelConditionalFormattingRule.Style
  fullName: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.Style
- uid: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.StdDev
  commentId: P:OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.StdDev
  parent: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule
  name: StdDev
  nameWithType: ExcelConditionalFormattingRule.StdDev
  fullName: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.StdDev
- uid: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.Rank
  commentId: P:OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.Rank
  parent: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule
  name: Rank
  nameWithType: ExcelConditionalFormattingRule.Rank
  fullName: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.Rank
- uid: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.AboveAverage
  commentId: P:OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.AboveAverage
  parent: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule
  name: AboveAverage
  nameWithType: ExcelConditionalFormattingRule.AboveAverage
  fullName: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.AboveAverage
- uid: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.EqualAverage
  commentId: P:OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.EqualAverage
  parent: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule
  name: EqualAverage
  nameWithType: ExcelConditionalFormattingRule.EqualAverage
  fullName: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.EqualAverage
- uid: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.Bottom
  commentId: P:OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.Bottom
  parent: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule
  name: Bottom
  nameWithType: ExcelConditionalFormattingRule.Bottom
  fullName: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.Bottom
- uid: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.Percent
  commentId: P:OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.Percent
  parent: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule
  name: Percent
  nameWithType: ExcelConditionalFormattingRule.Percent
  fullName: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.Percent
- uid: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.TimePeriod
  commentId: P:OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.TimePeriod
  parent: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule
  name: TimePeriod
  nameWithType: ExcelConditionalFormattingRule.TimePeriod
  fullName: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.TimePeriod
- uid: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.Operator
  commentId: P:OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.Operator
  parent: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule
  name: Operator
  nameWithType: ExcelConditionalFormattingRule.Operator
  fullName: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.Operator
- uid: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.Formula
  commentId: P:OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.Formula
  parent: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule
  name: Formula
  nameWithType: ExcelConditionalFormattingRule.Formula
  fullName: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.Formula
- uid: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.Formula2
  commentId: P:OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.Formula2
  parent: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule
  name: Formula2
  nameWithType: ExcelConditionalFormattingRule.Formula2
  fullName: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.Formula2
- uid: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.As
  commentId: P:OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.As
  parent: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule
  name: As
  nameWithType: ExcelConditionalFormattingRule.As
  fullName: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingRule.As
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml
  commentId: N:OfficeOpenXml
  name: OfficeOpenXml
  nameWithType: OfficeOpenXml
  fullName: OfficeOpenXml
- uid: OfficeOpenXml.ConditionalFormatting.Contracts
  commentId: N:OfficeOpenXml.ConditionalFormatting.Contracts
  name: OfficeOpenXml.ConditionalFormatting.Contracts
  nameWithType: OfficeOpenXml.ConditionalFormatting.Contracts
  fullName: OfficeOpenXml.ConditionalFormatting.Contracts
- uid: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingDataBar.ShowValue*
  commentId: Overload:OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingDataBar.ShowValue
  name: ShowValue
  nameWithType: ExcelConditionalFormattingDataBar.ShowValue
  fullName: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingDataBar.ShowValue
- uid: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingDataBarGroup.ShowValue
  commentId: P:OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingDataBarGroup.ShowValue
  parent: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingDataBarGroup
  name: ShowValue
  nameWithType: IExcelConditionalFormattingDataBarGroup.ShowValue
  fullName: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingDataBarGroup.ShowValue
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingDataBar.LowValue*
  commentId: Overload:OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingDataBar.LowValue
  name: LowValue
  nameWithType: ExcelConditionalFormattingDataBar.LowValue
  fullName: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingDataBar.LowValue
- uid: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingDataBarGroup.LowValue
  commentId: P:OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingDataBarGroup.LowValue
  parent: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingDataBarGroup
  name: LowValue
  nameWithType: IExcelConditionalFormattingDataBarGroup.LowValue
  fullName: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingDataBarGroup.LowValue
- uid: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingIconDataBarValue
  commentId: T:OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingIconDataBarValue
  parent: OfficeOpenXml.ConditionalFormatting
  name: ExcelConditionalFormattingIconDataBarValue
  nameWithType: ExcelConditionalFormattingIconDataBarValue
  fullName: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingIconDataBarValue
- uid: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingDataBar.HighValue*
  commentId: Overload:OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingDataBar.HighValue
  name: HighValue
  nameWithType: ExcelConditionalFormattingDataBar.HighValue
  fullName: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingDataBar.HighValue
- uid: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingDataBarGroup.HighValue
  commentId: P:OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingDataBarGroup.HighValue
  parent: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingDataBarGroup
  name: HighValue
  nameWithType: IExcelConditionalFormattingDataBarGroup.HighValue
  fullName: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingDataBarGroup.HighValue
- uid: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingDataBar.Color*
  commentId: Overload:OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingDataBar.Color
  name: Color
  nameWithType: ExcelConditionalFormattingDataBar.Color
  fullName: OfficeOpenXml.ConditionalFormatting.ExcelConditionalFormattingDataBar.Color
- uid: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingDataBarGroup.Color
  commentId: P:OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingDataBarGroup.Color
  parent: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingDataBarGroup
  name: Color
  nameWithType: IExcelConditionalFormattingDataBarGroup.Color
  fullName: OfficeOpenXml.ConditionalFormatting.Contracts.IExcelConditionalFormattingDataBarGroup.Color
- uid: System.Drawing.Color
  commentId: T:System.Drawing.Color
  parent: System.Drawing
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Drawing
  commentId: N:System.Drawing
  isExternal: true
  name: System.Drawing
  nameWithType: System.Drawing
  fullName: System.Drawing
