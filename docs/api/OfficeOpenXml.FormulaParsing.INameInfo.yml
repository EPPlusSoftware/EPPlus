### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.FormulaParsing.INameInfo
  commentId: T:OfficeOpenXml.FormulaParsing.INameInfo
  id: INameInfo
  parent: OfficeOpenXml.FormulaParsing
  children:
  - OfficeOpenXml.FormulaParsing.INameInfo.Formula
  - OfficeOpenXml.FormulaParsing.INameInfo.GetRelativeFormula(System.Int32,System.Int32)
  - OfficeOpenXml.FormulaParsing.INameInfo.GetRelativeRange(OfficeOpenXml.FormulaParsing.IRangeInfo,OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaCellAddress)
  - OfficeOpenXml.FormulaParsing.INameInfo.GetValue(OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaCellAddress)
  - OfficeOpenXml.FormulaParsing.INameInfo.Id
  - OfficeOpenXml.FormulaParsing.INameInfo.IsRelative
  - OfficeOpenXml.FormulaParsing.INameInfo.Name
  - OfficeOpenXml.FormulaParsing.INameInfo.Value
  - OfficeOpenXml.FormulaParsing.INameInfo.wsIx
  langs:
  - csharp
  - vb
  name: INameInfo
  nameWithType: INameInfo
  fullName: OfficeOpenXml.FormulaParsing.INameInfo
  type: Interface
  source:
    remote:
      path: src/EPPlus/FormulaParsing/INameInfo.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: INameInfo
    path: ../src/EPPlus/FormulaParsing/INameInfo.cs
    startLine: 23
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing
  summary: "\nNameInfo\n"
  example: []
  syntax:
    content: public interface INameInfo
    content.vb: Public Interface INameInfo
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: OfficeOpenXml.FormulaParsing.INameInfo.Id
  commentId: P:OfficeOpenXml.FormulaParsing.INameInfo.Id
  id: Id
  parent: OfficeOpenXml.FormulaParsing.INameInfo
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: INameInfo.Id
  fullName: OfficeOpenXml.FormulaParsing.INameInfo.Id
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/INameInfo.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Id
    path: ../src/EPPlus/FormulaParsing/INameInfo.cs
    startLine: 28
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing
  summary: "\nId\n"
  example: []
  syntax:
    content: ulong Id { get; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: ReadOnly Property Id As ULong
  overload: OfficeOpenXml.FormulaParsing.INameInfo.Id*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: OfficeOpenXml.FormulaParsing.INameInfo.wsIx
  commentId: P:OfficeOpenXml.FormulaParsing.INameInfo.wsIx
  id: wsIx
  parent: OfficeOpenXml.FormulaParsing.INameInfo
  langs:
  - csharp
  - vb
  name: wsIx
  nameWithType: INameInfo.wsIx
  fullName: OfficeOpenXml.FormulaParsing.INameInfo.wsIx
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/INameInfo.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: wsIx
    path: ../src/EPPlus/FormulaParsing/INameInfo.cs
    startLine: 32
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing
  summary: "\nwsIx\n"
  example: []
  syntax:
    content: int wsIx { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property wsIx As Integer
  overload: OfficeOpenXml.FormulaParsing.INameInfo.wsIx*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: OfficeOpenXml.FormulaParsing.INameInfo.Name
  commentId: P:OfficeOpenXml.FormulaParsing.INameInfo.Name
  id: Name
  parent: OfficeOpenXml.FormulaParsing.INameInfo
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: INameInfo.Name
  fullName: OfficeOpenXml.FormulaParsing.INameInfo.Name
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/INameInfo.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Name
    path: ../src/EPPlus/FormulaParsing/INameInfo.cs
    startLine: 36
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing
  summary: "\nName\n"
  example: []
  syntax:
    content: string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Name As String
  overload: OfficeOpenXml.FormulaParsing.INameInfo.Name*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: OfficeOpenXml.FormulaParsing.INameInfo.Formula
  commentId: P:OfficeOpenXml.FormulaParsing.INameInfo.Formula
  id: Formula
  parent: OfficeOpenXml.FormulaParsing.INameInfo
  langs:
  - csharp
  - vb
  name: Formula
  nameWithType: INameInfo.Formula
  fullName: OfficeOpenXml.FormulaParsing.INameInfo.Formula
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/INameInfo.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Formula
    path: ../src/EPPlus/FormulaParsing/INameInfo.cs
    startLine: 40
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing
  summary: "\nFormula\n"
  example: []
  syntax:
    content: string Formula { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Formula As String
  overload: OfficeOpenXml.FormulaParsing.INameInfo.Formula*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: OfficeOpenXml.FormulaParsing.INameInfo.Value
  commentId: P:OfficeOpenXml.FormulaParsing.INameInfo.Value
  id: Value
  parent: OfficeOpenXml.FormulaParsing.INameInfo
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: INameInfo.Value
  fullName: OfficeOpenXml.FormulaParsing.INameInfo.Value
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/INameInfo.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Value
    path: ../src/EPPlus/FormulaParsing/INameInfo.cs
    startLine: 44
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing
  summary: "\nValue\n"
  example: []
  syntax:
    content: object Value { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: ReadOnly Property Value As Object
  overload: OfficeOpenXml.FormulaParsing.INameInfo.Value*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: OfficeOpenXml.FormulaParsing.INameInfo.IsRelative
  commentId: P:OfficeOpenXml.FormulaParsing.INameInfo.IsRelative
  id: IsRelative
  parent: OfficeOpenXml.FormulaParsing.INameInfo
  langs:
  - csharp
  - vb
  name: IsRelative
  nameWithType: INameInfo.IsRelative
  fullName: OfficeOpenXml.FormulaParsing.INameInfo.IsRelative
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/INameInfo.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: IsRelative
    path: ../src/EPPlus/FormulaParsing/INameInfo.cs
    startLine: 48
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing
  summary: "\nIsRelative\n"
  example: []
  syntax:
    content: bool IsRelative { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsRelative As Boolean
  overload: OfficeOpenXml.FormulaParsing.INameInfo.IsRelative*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: OfficeOpenXml.FormulaParsing.INameInfo.GetRelativeFormula(System.Int32,System.Int32)
  commentId: M:OfficeOpenXml.FormulaParsing.INameInfo.GetRelativeFormula(System.Int32,System.Int32)
  id: GetRelativeFormula(System.Int32,System.Int32)
  parent: OfficeOpenXml.FormulaParsing.INameInfo
  langs:
  - csharp
  - vb
  name: GetRelativeFormula(Int32, Int32)
  nameWithType: INameInfo.GetRelativeFormula(Int32, Int32)
  fullName: OfficeOpenXml.FormulaParsing.INameInfo.GetRelativeFormula(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/EPPlus/FormulaParsing/INameInfo.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: GetRelativeFormula
    path: ../src/EPPlus/FormulaParsing/INameInfo.cs
    startLine: 55
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing
  summary: "\nGet relative formula\n"
  example: []
  syntax:
    content: string GetRelativeFormula(int row, int col)
    parameters:
    - id: row
      type: System.Int32
      description: ''
    - id: col
      type: System.Int32
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Function GetRelativeFormula(row As Integer, col As Integer) As String
  overload: OfficeOpenXml.FormulaParsing.INameInfo.GetRelativeFormula*
- uid: OfficeOpenXml.FormulaParsing.INameInfo.GetRelativeRange(OfficeOpenXml.FormulaParsing.IRangeInfo,OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaCellAddress)
  commentId: M:OfficeOpenXml.FormulaParsing.INameInfo.GetRelativeRange(OfficeOpenXml.FormulaParsing.IRangeInfo,OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaCellAddress)
  id: GetRelativeRange(OfficeOpenXml.FormulaParsing.IRangeInfo,OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaCellAddress)
  parent: OfficeOpenXml.FormulaParsing.INameInfo
  langs:
  - csharp
  - vb
  name: GetRelativeRange(IRangeInfo, FormulaCellAddress)
  nameWithType: INameInfo.GetRelativeRange(IRangeInfo, FormulaCellAddress)
  fullName: OfficeOpenXml.FormulaParsing.INameInfo.GetRelativeRange(OfficeOpenXml.FormulaParsing.IRangeInfo, OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaCellAddress)
  type: Method
  source:
    remote:
      path: src/EPPlus/FormulaParsing/INameInfo.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: GetRelativeRange
    path: ../src/EPPlus/FormulaParsing/INameInfo.cs
    startLine: 62
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing
  summary: "\nGet relative range\n"
  example: []
  syntax:
    content: IRangeInfo GetRelativeRange(IRangeInfo ri, FormulaCellAddress currentCell)
    parameters:
    - id: ri
      type: OfficeOpenXml.FormulaParsing.IRangeInfo
      description: ''
    - id: currentCell
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaCellAddress
      description: ''
    return:
      type: OfficeOpenXml.FormulaParsing.IRangeInfo
      description: ''
    content.vb: Function GetRelativeRange(ri As IRangeInfo, currentCell As FormulaCellAddress) As IRangeInfo
  overload: OfficeOpenXml.FormulaParsing.INameInfo.GetRelativeRange*
- uid: OfficeOpenXml.FormulaParsing.INameInfo.GetValue(OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaCellAddress)
  commentId: M:OfficeOpenXml.FormulaParsing.INameInfo.GetValue(OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaCellAddress)
  id: GetValue(OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaCellAddress)
  parent: OfficeOpenXml.FormulaParsing.INameInfo
  langs:
  - csharp
  - vb
  name: GetValue(FormulaCellAddress)
  nameWithType: INameInfo.GetValue(FormulaCellAddress)
  fullName: OfficeOpenXml.FormulaParsing.INameInfo.GetValue(OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaCellAddress)
  type: Method
  source:
    remote:
      path: src/EPPlus/FormulaParsing/INameInfo.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: GetValue
    path: ../src/EPPlus/FormulaParsing/INameInfo.cs
    startLine: 68
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing
  summary: "\nGet value\n"
  example: []
  syntax:
    content: object GetValue(FormulaCellAddress currentCell)
    parameters:
    - id: currentCell
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaCellAddress
      description: ''
    return:
      type: System.Object
      description: ''
    content.vb: Function GetValue(currentCell As FormulaCellAddress) As Object
  overload: OfficeOpenXml.FormulaParsing.INameInfo.GetValue*
references:
- uid: OfficeOpenXml.FormulaParsing
  commentId: N:OfficeOpenXml.FormulaParsing
  name: OfficeOpenXml.FormulaParsing
  nameWithType: OfficeOpenXml.FormulaParsing
  fullName: OfficeOpenXml.FormulaParsing
- uid: OfficeOpenXml.FormulaParsing.INameInfo.Id*
  commentId: Overload:OfficeOpenXml.FormulaParsing.INameInfo.Id
  name: Id
  nameWithType: INameInfo.Id
  fullName: OfficeOpenXml.FormulaParsing.INameInfo.Id
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml.FormulaParsing.INameInfo.wsIx*
  commentId: Overload:OfficeOpenXml.FormulaParsing.INameInfo.wsIx
  name: wsIx
  nameWithType: INameInfo.wsIx
  fullName: OfficeOpenXml.FormulaParsing.INameInfo.wsIx
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: OfficeOpenXml.FormulaParsing.INameInfo.Name*
  commentId: Overload:OfficeOpenXml.FormulaParsing.INameInfo.Name
  name: Name
  nameWithType: INameInfo.Name
  fullName: OfficeOpenXml.FormulaParsing.INameInfo.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OfficeOpenXml.FormulaParsing.INameInfo.Formula*
  commentId: Overload:OfficeOpenXml.FormulaParsing.INameInfo.Formula
  name: Formula
  nameWithType: INameInfo.Formula
  fullName: OfficeOpenXml.FormulaParsing.INameInfo.Formula
- uid: OfficeOpenXml.FormulaParsing.INameInfo.Value*
  commentId: Overload:OfficeOpenXml.FormulaParsing.INameInfo.Value
  name: Value
  nameWithType: INameInfo.Value
  fullName: OfficeOpenXml.FormulaParsing.INameInfo.Value
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OfficeOpenXml.FormulaParsing.INameInfo.IsRelative*
  commentId: Overload:OfficeOpenXml.FormulaParsing.INameInfo.IsRelative
  name: IsRelative
  nameWithType: INameInfo.IsRelative
  fullName: OfficeOpenXml.FormulaParsing.INameInfo.IsRelative
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: OfficeOpenXml.FormulaParsing.INameInfo.GetRelativeFormula*
  commentId: Overload:OfficeOpenXml.FormulaParsing.INameInfo.GetRelativeFormula
  name: GetRelativeFormula
  nameWithType: INameInfo.GetRelativeFormula
  fullName: OfficeOpenXml.FormulaParsing.INameInfo.GetRelativeFormula
- uid: OfficeOpenXml.FormulaParsing.INameInfo.GetRelativeRange*
  commentId: Overload:OfficeOpenXml.FormulaParsing.INameInfo.GetRelativeRange
  name: GetRelativeRange
  nameWithType: INameInfo.GetRelativeRange
  fullName: OfficeOpenXml.FormulaParsing.INameInfo.GetRelativeRange
- uid: OfficeOpenXml.FormulaParsing.IRangeInfo
  commentId: T:OfficeOpenXml.FormulaParsing.IRangeInfo
  parent: OfficeOpenXml.FormulaParsing
  name: IRangeInfo
  nameWithType: IRangeInfo
  fullName: OfficeOpenXml.FormulaParsing.IRangeInfo
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaCellAddress
  commentId: T:OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaCellAddress
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  name: FormulaCellAddress
  nameWithType: FormulaCellAddress
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaCellAddress
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  commentId: N:OfficeOpenXml.FormulaParsing.LexicalAnalysis
  name: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  nameWithType: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis
- uid: OfficeOpenXml.FormulaParsing.INameInfo.GetValue*
  commentId: Overload:OfficeOpenXml.FormulaParsing.INameInfo.GetValue
  name: GetValue
  nameWithType: INameInfo.GetValue
  fullName: OfficeOpenXml.FormulaParsing.INameInfo.GetValue
