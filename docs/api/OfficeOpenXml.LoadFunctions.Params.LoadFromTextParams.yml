### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.LoadFunctions.Params.LoadFromTextParams
  commentId: T:OfficeOpenXml.LoadFunctions.Params.LoadFromTextParams
  id: LoadFromTextParams
  parent: OfficeOpenXml.LoadFunctions.Params
  children:
  - OfficeOpenXml.LoadFunctions.Params.LoadFromTextParams.FirstRowIsHeader
  - OfficeOpenXml.LoadFunctions.Params.LoadFromTextParams.Format
  - OfficeOpenXml.LoadFunctions.Params.LoadFromTextParams.Text
  langs:
  - csharp
  - vb
  name: LoadFromTextParams
  nameWithType: LoadFromTextParams
  fullName: OfficeOpenXml.LoadFunctions.Params.LoadFromTextParams
  type: Class
  source:
    remote:
      path: src/EPPlus/LoadFunctions/Params/LoadFromTextParams.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: LoadFromTextParams
    path: ../src/EPPlus/LoadFunctions/Params/LoadFromTextParams.cs
    startLine: 21
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.LoadFunctions.Params
  summary: "\nParameters for the LoadFromDictionaries method\n"
  example: []
  syntax:
    content: public class LoadFromTextParams
    content.vb: Public Class LoadFromTextParams
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OfficeOpenXml.LoadFunctions.Params.LoadFromTextParams.FirstRowIsHeader
  commentId: P:OfficeOpenXml.LoadFunctions.Params.LoadFromTextParams.FirstRowIsHeader
  id: FirstRowIsHeader
  parent: OfficeOpenXml.LoadFunctions.Params.LoadFromTextParams
  langs:
  - csharp
  - vb
  name: FirstRowIsHeader
  nameWithType: LoadFromTextParams.FirstRowIsHeader
  fullName: OfficeOpenXml.LoadFunctions.Params.LoadFromTextParams.FirstRowIsHeader
  type: Property
  source:
    remote:
      path: src/EPPlus/LoadFunctions/Params/LoadFromTextParams.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: FirstRowIsHeader
    path: ../src/EPPlus/LoadFunctions/Params/LoadFromTextParams.cs
    startLine: 26
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.LoadFunctions.Params
  summary: "\nThe first row in the text is the header row\n"
  example: []
  syntax:
    content: public bool FirstRowIsHeader { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property FirstRowIsHeader As Boolean
  overload: OfficeOpenXml.LoadFunctions.Params.LoadFromTextParams.FirstRowIsHeader*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.LoadFunctions.Params.LoadFromTextParams.Text
  commentId: P:OfficeOpenXml.LoadFunctions.Params.LoadFromTextParams.Text
  id: Text
  parent: OfficeOpenXml.LoadFunctions.Params.LoadFromTextParams
  langs:
  - csharp
  - vb
  name: Text
  nameWithType: LoadFromTextParams.Text
  fullName: OfficeOpenXml.LoadFunctions.Params.LoadFromTextParams.Text
  type: Property
  source:
    remote:
      path: src/EPPlus/LoadFunctions/Params/LoadFromTextParams.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Text
    path: ../src/EPPlus/LoadFunctions/Params/LoadFromTextParams.cs
    startLine: 30
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.LoadFunctions.Params
  summary: "\nThe text to split\n"
  example: []
  syntax:
    content: public string Text { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Text As String
  overload: OfficeOpenXml.LoadFunctions.Params.LoadFromTextParams.Text*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.LoadFunctions.Params.LoadFromTextParams.Format
  commentId: P:OfficeOpenXml.LoadFunctions.Params.LoadFromTextParams.Format
  id: Format
  parent: OfficeOpenXml.LoadFunctions.Params.LoadFromTextParams
  langs:
  - csharp
  - vb
  name: Format
  nameWithType: LoadFromTextParams.Format
  fullName: OfficeOpenXml.LoadFunctions.Params.LoadFromTextParams.Format
  type: Property
  source:
    remote:
      path: src/EPPlus/LoadFunctions/Params/LoadFromTextParams.cs
      branch: fix/comments-and-warings
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Format
    path: ../src/EPPlus/LoadFunctions/Params/LoadFromTextParams.cs
    startLine: 34
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.LoadFunctions.Params
  summary: "\nDescribes how to split a CSV text.\n"
  example: []
  syntax:
    content: public ExcelTextFormat Format { get; set; }
    parameters: []
    return:
      type: OfficeOpenXml.ExcelTextFormat
    content.vb: Public Property Format As ExcelTextFormat
  overload: OfficeOpenXml.LoadFunctions.Params.LoadFromTextParams.Format*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: OfficeOpenXml.LoadFunctions.Params
  commentId: N:OfficeOpenXml.LoadFunctions.Params
  name: OfficeOpenXml.LoadFunctions.Params
  nameWithType: OfficeOpenXml.LoadFunctions.Params
  fullName: OfficeOpenXml.LoadFunctions.Params
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml.LoadFunctions.Params.LoadFromTextParams.FirstRowIsHeader*
  commentId: Overload:OfficeOpenXml.LoadFunctions.Params.LoadFromTextParams.FirstRowIsHeader
  name: FirstRowIsHeader
  nameWithType: LoadFromTextParams.FirstRowIsHeader
  fullName: OfficeOpenXml.LoadFunctions.Params.LoadFromTextParams.FirstRowIsHeader
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: OfficeOpenXml.LoadFunctions.Params.LoadFromTextParams.Text*
  commentId: Overload:OfficeOpenXml.LoadFunctions.Params.LoadFromTextParams.Text
  name: Text
  nameWithType: LoadFromTextParams.Text
  fullName: OfficeOpenXml.LoadFunctions.Params.LoadFromTextParams.Text
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OfficeOpenXml.LoadFunctions.Params.LoadFromTextParams.Format*
  commentId: Overload:OfficeOpenXml.LoadFunctions.Params.LoadFromTextParams.Format
  name: Format
  nameWithType: LoadFromTextParams.Format
  fullName: OfficeOpenXml.LoadFunctions.Params.LoadFromTextParams.Format
- uid: OfficeOpenXml.ExcelTextFormat
  commentId: T:OfficeOpenXml.ExcelTextFormat
  parent: OfficeOpenXml
  name: ExcelTextFormat
  nameWithType: ExcelTextFormat
  fullName: OfficeOpenXml.ExcelTextFormat
- uid: OfficeOpenXml
  commentId: N:OfficeOpenXml
  name: OfficeOpenXml
  nameWithType: OfficeOpenXml
  fullName: OfficeOpenXml
