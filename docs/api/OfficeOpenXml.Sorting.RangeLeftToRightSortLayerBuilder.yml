### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.Sorting.RangeLeftToRightSortLayerBuilder
  commentId: T:OfficeOpenXml.Sorting.RangeLeftToRightSortLayerBuilder
  id: RangeLeftToRightSortLayerBuilder
  parent: OfficeOpenXml.Sorting
  children:
  - OfficeOpenXml.Sorting.RangeLeftToRightSortLayerBuilder.ThenSortBy
  - OfficeOpenXml.Sorting.RangeLeftToRightSortLayerBuilder.UsingCustomList(System.String[])
  langs:
  - csharp
  - vb
  name: RangeLeftToRightSortLayerBuilder
  nameWithType: RangeLeftToRightSortLayerBuilder
  fullName: OfficeOpenXml.Sorting.RangeLeftToRightSortLayerBuilder
  type: Class
  source:
    remote:
      path: src/EPPlus/Sorting/RangeLeftToRightSortLayerBuilder.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: RangeLeftToRightSortLayerBuilder
    path: ../src/EPPlus/Sorting/RangeLeftToRightSortLayerBuilder.cs
    startLine: 22
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Sorting
  summary: "\nThis class is used to build multiple search parameters for columnbased sorting.\n"
  example: []
  syntax:
    content: public class RangeLeftToRightSortLayerBuilder
    content.vb: Public Class RangeLeftToRightSortLayerBuilder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OfficeOpenXml.Sorting.RangeLeftToRightSortLayerBuilder.ThenSortBy
  commentId: P:OfficeOpenXml.Sorting.RangeLeftToRightSortLayerBuilder.ThenSortBy
  id: ThenSortBy
  parent: OfficeOpenXml.Sorting.RangeLeftToRightSortLayerBuilder
  langs:
  - csharp
  - vb
  name: ThenSortBy
  nameWithType: RangeLeftToRightSortLayerBuilder.ThenSortBy
  fullName: OfficeOpenXml.Sorting.RangeLeftToRightSortLayerBuilder.ThenSortBy
  type: Property
  source:
    remote:
      path: src/EPPlus/Sorting/RangeLeftToRightSortLayerBuilder.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ThenSortBy
    path: ../src/EPPlus/Sorting/RangeLeftToRightSortLayerBuilder.cs
    startLine: 36
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Sorting
  summary: "\nAdds a new <xref href=\"OfficeOpenXml.Sorting.RangeLeftToRightSortLayer?text=sort+layer\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public virtual RangeLeftToRightSortLayer ThenSortBy { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Sorting.RangeLeftToRightSortLayer
    content.vb: Public Overridable ReadOnly Property ThenSortBy As RangeLeftToRightSortLayer
  overload: OfficeOpenXml.Sorting.RangeLeftToRightSortLayerBuilder.ThenSortBy*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: OfficeOpenXml.Sorting.RangeLeftToRightSortLayerBuilder.UsingCustomList(System.String[])
  commentId: M:OfficeOpenXml.Sorting.RangeLeftToRightSortLayerBuilder.UsingCustomList(System.String[])
  id: UsingCustomList(System.String[])
  parent: OfficeOpenXml.Sorting.RangeLeftToRightSortLayerBuilder
  langs:
  - csharp
  - vb
  name: UsingCustomList(String[])
  nameWithType: RangeLeftToRightSortLayerBuilder.UsingCustomList(String[])
  fullName: OfficeOpenXml.Sorting.RangeLeftToRightSortLayerBuilder.UsingCustomList(System.String[])
  type: Method
  source:
    remote:
      path: src/EPPlus/Sorting/RangeLeftToRightSortLayerBuilder.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: UsingCustomList
    path: ../src/EPPlus/Sorting/RangeLeftToRightSortLayerBuilder.cs
    startLine: 49
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Sorting
  summary: "\nUse a custom list for sorting on the current Sort layer.\n"
  example: []
  syntax:
    content: public RangeLeftToRightSortLayerBuilder UsingCustomList(params string[] values)
    parameters:
    - id: values
      type: System.String[]
      description: An array of strings defining the sort order
    return:
      type: OfficeOpenXml.Sorting.RangeLeftToRightSortLayerBuilder
      description: A <xref href="OfficeOpenXml.Sorting.RangeLeftToRightSortLayerBuilder" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function UsingCustomList(ParamArray values As String()) As RangeLeftToRightSortLayerBuilder
  overload: OfficeOpenXml.Sorting.RangeLeftToRightSortLayerBuilder.UsingCustomList*
  nameWithType.vb: RangeLeftToRightSortLayerBuilder.UsingCustomList(String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: OfficeOpenXml.Sorting.RangeLeftToRightSortLayerBuilder.UsingCustomList(System.String())
  name.vb: UsingCustomList(String())
references:
- uid: OfficeOpenXml.Sorting
  commentId: N:OfficeOpenXml.Sorting
  name: OfficeOpenXml.Sorting
  nameWithType: OfficeOpenXml.Sorting
  fullName: OfficeOpenXml.Sorting
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml.Sorting.RangeLeftToRightSortLayer
  commentId: T:OfficeOpenXml.Sorting.RangeLeftToRightSortLayer
  parent: OfficeOpenXml.Sorting
  name: RangeLeftToRightSortLayer
  nameWithType: RangeLeftToRightSortLayer
  fullName: OfficeOpenXml.Sorting.RangeLeftToRightSortLayer
- uid: OfficeOpenXml.Sorting.RangeLeftToRightSortLayerBuilder.ThenSortBy*
  commentId: Overload:OfficeOpenXml.Sorting.RangeLeftToRightSortLayerBuilder.ThenSortBy
  name: ThenSortBy
  nameWithType: RangeLeftToRightSortLayerBuilder.ThenSortBy
  fullName: OfficeOpenXml.Sorting.RangeLeftToRightSortLayerBuilder.ThenSortBy
- uid: OfficeOpenXml.Sorting.RangeLeftToRightSortLayerBuilder
  commentId: T:OfficeOpenXml.Sorting.RangeLeftToRightSortLayerBuilder
  parent: OfficeOpenXml.Sorting
  name: RangeLeftToRightSortLayerBuilder
  nameWithType: RangeLeftToRightSortLayerBuilder
  fullName: OfficeOpenXml.Sorting.RangeLeftToRightSortLayerBuilder
- uid: OfficeOpenXml.Sorting.RangeLeftToRightSortLayerBuilder.UsingCustomList*
  commentId: Overload:OfficeOpenXml.Sorting.RangeLeftToRightSortLayerBuilder.UsingCustomList
  name: UsingCustomList
  nameWithType: RangeLeftToRightSortLayerBuilder.UsingCustomList
  fullName: OfficeOpenXml.Sorting.RangeLeftToRightSortLayerBuilder.UsingCustomList
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
