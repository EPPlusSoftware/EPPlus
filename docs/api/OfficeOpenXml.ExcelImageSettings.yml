### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.ExcelImageSettings
  commentId: T:OfficeOpenXml.ExcelImageSettings
  id: ExcelImageSettings
  parent: OfficeOpenXml
  children:
  - OfficeOpenXml.ExcelImageSettings.PrimaryImageHandler
  - OfficeOpenXml.ExcelImageSettings.SecondaryImageHandler
  - OfficeOpenXml.ExcelImageSettings.TertiaryImageHandler
  langs:
  - csharp
  - vb
  name: ExcelImageSettings
  nameWithType: ExcelImageSettings
  fullName: OfficeOpenXml.ExcelImageSettings
  type: Class
  source:
    remote:
      path: src/EPPlus/ExcelImageSettings.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ExcelImageSettings
    path: ../src/EPPlus/ExcelImageSettings.cs
    startLine: 28
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  summary: "\nThis class contains settings for text measurement.\n"
  example: []
  syntax:
    content: public class ExcelImageSettings
    content.vb: Public Class ExcelImageSettings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OfficeOpenXml.ExcelImageSettings.PrimaryImageHandler
  commentId: P:OfficeOpenXml.ExcelImageSettings.PrimaryImageHandler
  id: PrimaryImageHandler
  parent: OfficeOpenXml.ExcelImageSettings
  langs:
  - csharp
  - vb
  name: PrimaryImageHandler
  nameWithType: ExcelImageSettings.PrimaryImageHandler
  fullName: OfficeOpenXml.ExcelImageSettings.PrimaryImageHandler
  type: Property
  source:
    remote:
      path: src/EPPlus/ExcelImageSettings.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: PrimaryImageHandler
    path: ../src/EPPlus/ExcelImageSettings.cs
    startLine: 50
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  summary: "\nThis is the primary handler for images.\n"
  example: []
  syntax:
    content: public IImageHandler PrimaryImageHandler { get; set; }
    parameters: []
    return:
      type: OfficeOpenXml.Interfaces.Drawing.Image.IImageHandler
    content.vb: Public Property PrimaryImageHandler As IImageHandler
  overload: OfficeOpenXml.ExcelImageSettings.PrimaryImageHandler*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.ExcelImageSettings.SecondaryImageHandler
  commentId: P:OfficeOpenXml.ExcelImageSettings.SecondaryImageHandler
  id: SecondaryImageHandler
  parent: OfficeOpenXml.ExcelImageSettings
  langs:
  - csharp
  - vb
  name: SecondaryImageHandler
  nameWithType: ExcelImageSettings.SecondaryImageHandler
  fullName: OfficeOpenXml.ExcelImageSettings.SecondaryImageHandler
  type: Property
  source:
    remote:
      path: src/EPPlus/ExcelImageSettings.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: SecondaryImageHandler
    path: ../src/EPPlus/ExcelImageSettings.cs
    startLine: 55
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  summary: "\nIf the primary handler fails to measure the image, this one will be used.\n"
  example: []
  syntax:
    content: public IImageHandler SecondaryImageHandler { get; set; }
    parameters: []
    return:
      type: OfficeOpenXml.Interfaces.Drawing.Image.IImageHandler
    content.vb: Public Property SecondaryImageHandler As IImageHandler
  overload: OfficeOpenXml.ExcelImageSettings.SecondaryImageHandler*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.ExcelImageSettings.TertiaryImageHandler
  commentId: P:OfficeOpenXml.ExcelImageSettings.TertiaryImageHandler
  id: TertiaryImageHandler
  parent: OfficeOpenXml.ExcelImageSettings
  langs:
  - csharp
  - vb
  name: TertiaryImageHandler
  nameWithType: ExcelImageSettings.TertiaryImageHandler
  fullName: OfficeOpenXml.ExcelImageSettings.TertiaryImageHandler
  type: Property
  source:
    remote:
      path: src/EPPlus/ExcelImageSettings.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: TertiaryImageHandler
    path: ../src/EPPlus/ExcelImageSettings.cs
    startLine: 60
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml
  summary: "\nIf the secondary handler fails to measure the image, this one will be used.\n"
  example: []
  syntax:
    content: public IImageHandler TertiaryImageHandler { get; set; }
    parameters: []
    return:
      type: OfficeOpenXml.Interfaces.Drawing.Image.IImageHandler
    content.vb: Public Property TertiaryImageHandler As IImageHandler
  overload: OfficeOpenXml.ExcelImageSettings.TertiaryImageHandler*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: OfficeOpenXml
  commentId: N:OfficeOpenXml
  name: OfficeOpenXml
  nameWithType: OfficeOpenXml
  fullName: OfficeOpenXml
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml.ExcelImageSettings.PrimaryImageHandler*
  commentId: Overload:OfficeOpenXml.ExcelImageSettings.PrimaryImageHandler
  name: PrimaryImageHandler
  nameWithType: ExcelImageSettings.PrimaryImageHandler
  fullName: OfficeOpenXml.ExcelImageSettings.PrimaryImageHandler
- uid: OfficeOpenXml.Interfaces.Drawing.Image.IImageHandler
  commentId: T:OfficeOpenXml.Interfaces.Drawing.Image.IImageHandler
  parent: OfficeOpenXml.Interfaces.Drawing.Image
  name: IImageHandler
  nameWithType: IImageHandler
  fullName: OfficeOpenXml.Interfaces.Drawing.Image.IImageHandler
- uid: OfficeOpenXml.Interfaces.Drawing.Image
  commentId: N:OfficeOpenXml.Interfaces.Drawing.Image
  name: OfficeOpenXml.Interfaces.Drawing.Image
  nameWithType: OfficeOpenXml.Interfaces.Drawing.Image
  fullName: OfficeOpenXml.Interfaces.Drawing.Image
- uid: OfficeOpenXml.ExcelImageSettings.SecondaryImageHandler*
  commentId: Overload:OfficeOpenXml.ExcelImageSettings.SecondaryImageHandler
  name: SecondaryImageHandler
  nameWithType: ExcelImageSettings.SecondaryImageHandler
  fullName: OfficeOpenXml.ExcelImageSettings.SecondaryImageHandler
- uid: OfficeOpenXml.ExcelImageSettings.TertiaryImageHandler*
  commentId: Overload:OfficeOpenXml.ExcelImageSettings.TertiaryImageHandler
  name: TertiaryImageHandler
  nameWithType: ExcelImageSettings.TertiaryImageHandler
  fullName: OfficeOpenXml.ExcelImageSettings.TertiaryImageHandler
