### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.Drawing.ExcelShapeBase
  commentId: T:OfficeOpenXml.Drawing.ExcelShapeBase
  id: ExcelShapeBase
  parent: OfficeOpenXml.Drawing
  children:
  - OfficeOpenXml.Drawing.ExcelShapeBase.Border
  - OfficeOpenXml.Drawing.ExcelShapeBase.DrawingType
  - OfficeOpenXml.Drawing.ExcelShapeBase.Effect
  - OfficeOpenXml.Drawing.ExcelShapeBase.Fill
  - OfficeOpenXml.Drawing.ExcelShapeBase.Font
  - OfficeOpenXml.Drawing.ExcelShapeBase.HeadEnd
  - OfficeOpenXml.Drawing.ExcelShapeBase.Indent
  - OfficeOpenXml.Drawing.ExcelShapeBase.LockText
  - OfficeOpenXml.Drawing.ExcelShapeBase.RichText
  - OfficeOpenXml.Drawing.ExcelShapeBase.Style
  - OfficeOpenXml.Drawing.ExcelShapeBase.TailEnd
  - OfficeOpenXml.Drawing.ExcelShapeBase.Text
  - OfficeOpenXml.Drawing.ExcelShapeBase.TextAlignment
  - OfficeOpenXml.Drawing.ExcelShapeBase.TextAnchoring
  - OfficeOpenXml.Drawing.ExcelShapeBase.TextAnchoringControl
  - OfficeOpenXml.Drawing.ExcelShapeBase.TextBody
  - OfficeOpenXml.Drawing.ExcelShapeBase.TextVertical
  - OfficeOpenXml.Drawing.ExcelShapeBase.ThreeD
  langs:
  - csharp
  - vb
  name: ExcelShapeBase
  nameWithType: ExcelShapeBase
  fullName: OfficeOpenXml.Drawing.ExcelShapeBase
  type: Class
  source:
    remote:
      path: src/EPPlus/Drawing/ExcelShapeBase.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ExcelShapeBase
    path: ../src/EPPlus/Drawing/ExcelShapeBase.cs
    startLine: 28
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nBase class for drawing-shape objects\n"
  example: []
  syntax:
    content: 'public class ExcelShapeBase : ExcelDrawing, IDisposable'
    content.vb: >-
      Public Class ExcelShapeBase
          Inherits ExcelDrawing
          Implements IDisposable
  inheritance:
  - System.Object
  - OfficeOpenXml.XmlHelper
  - OfficeOpenXml.Drawing.ExcelDrawing
  derivedClasses:
  - OfficeOpenXml.Drawing.ExcelConnectionShape
  - OfficeOpenXml.Drawing.ExcelShape
  implements:
  - System.IDisposable
  inheritedMembers:
  - OfficeOpenXml.Drawing.ExcelDrawing.EMU_PER_PIXEL
  - OfficeOpenXml.Drawing.ExcelDrawing.EMU_PER_POINT
  - OfficeOpenXml.Drawing.ExcelDrawing.EMU_PER_CM
  - OfficeOpenXml.Drawing.ExcelDrawing.EMU_PER_MM
  - OfficeOpenXml.Drawing.ExcelDrawing.EMU_PER_US_INCH
  - OfficeOpenXml.Drawing.ExcelDrawing.EMU_PER_PICA
  - OfficeOpenXml.Drawing.ExcelDrawing.Name
  - OfficeOpenXml.Drawing.ExcelDrawing.Description
  - OfficeOpenXml.Drawing.ExcelDrawing.EditAs
  - OfficeOpenXml.Drawing.ExcelDrawing.Locked
  - OfficeOpenXml.Drawing.ExcelDrawing.Print
  - OfficeOpenXml.Drawing.ExcelDrawing.From
  - OfficeOpenXml.Drawing.ExcelDrawing.Position
  - OfficeOpenXml.Drawing.ExcelDrawing.Size
  - OfficeOpenXml.Drawing.ExcelDrawing.To
  - OfficeOpenXml.Drawing.ExcelDrawing.Hyperlink
  - OfficeOpenXml.Drawing.ExcelDrawing.As
  - OfficeOpenXml.Drawing.ExcelDrawing.SetPosition(System.Int32,System.Int32)
  - OfficeOpenXml.Drawing.ExcelDrawing.CellAnchor
  - OfficeOpenXml.Drawing.ExcelDrawing.ChangeCellAnchor(OfficeOpenXml.Drawing.eEditAs,System.Int32,System.Int32,System.Int32,System.Int32)
  - OfficeOpenXml.Drawing.ExcelDrawing.ChangeCellAnchor(OfficeOpenXml.Drawing.eEditAs)
  - OfficeOpenXml.Drawing.ExcelDrawing.SetPosition(System.Int32,System.Int32,System.Int32,System.Int32)
  - OfficeOpenXml.Drawing.ExcelDrawing.SetSize(System.Int32)
  - OfficeOpenXml.Drawing.ExcelDrawing.SetSize(System.Int32,System.Int32)
  - OfficeOpenXml.Drawing.ExcelDrawing.SendToBack
  - OfficeOpenXml.Drawing.ExcelDrawing.BringToFront
  - OfficeOpenXml.Drawing.ExcelDrawing.Group(OfficeOpenXml.Drawing.ExcelDrawing[])
  - OfficeOpenXml.Drawing.ExcelDrawing.UnGroup(System.Boolean)
  - OfficeOpenXml.Drawing.ExcelDrawing.ParentGroup
  - OfficeOpenXml.Drawing.ExcelDrawing.Dispose
  - OfficeOpenXml.Drawing.ExcelDrawing.AdjustPositionAndSize
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OfficeOpenXml.Drawing.ExcelShapeBase.DrawingType
  commentId: P:OfficeOpenXml.Drawing.ExcelShapeBase.DrawingType
  id: DrawingType
  parent: OfficeOpenXml.Drawing.ExcelShapeBase
  langs:
  - csharp
  - vb
  name: DrawingType
  nameWithType: ExcelShapeBase.DrawingType
  fullName: OfficeOpenXml.Drawing.ExcelShapeBase.DrawingType
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/ExcelShapeBase.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: DrawingType
    path: ../src/EPPlus/Drawing/ExcelShapeBase.cs
    startLine: 74
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nThe type of drawing\n"
  example: []
  syntax:
    content: public override eDrawingType DrawingType { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.eDrawingType
    content.vb: Public Overrides ReadOnly Property DrawingType As eDrawingType
  overridden: OfficeOpenXml.Drawing.ExcelDrawing.DrawingType
  overload: OfficeOpenXml.Drawing.ExcelShapeBase.DrawingType*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: OfficeOpenXml.Drawing.ExcelShapeBase.Style
  commentId: P:OfficeOpenXml.Drawing.ExcelShapeBase.Style
  id: Style
  parent: OfficeOpenXml.Drawing.ExcelShapeBase
  langs:
  - csharp
  - vb
  name: Style
  nameWithType: ExcelShapeBase.Style
  fullName: OfficeOpenXml.Drawing.ExcelShapeBase.Style
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/ExcelShapeBase.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Style
    path: ../src/EPPlus/Drawing/ExcelShapeBase.cs
    startLine: 84
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nShape style\n"
  example: []
  syntax:
    content: public virtual eShapeStyle Style { get; set; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.eShapeStyle
    content.vb: Public Overridable Property Style As eShapeStyle
  overload: OfficeOpenXml.Drawing.ExcelShapeBase.Style*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: OfficeOpenXml.Drawing.ExcelShapeBase.Fill
  commentId: P:OfficeOpenXml.Drawing.ExcelShapeBase.Fill
  id: Fill
  parent: OfficeOpenXml.Drawing.ExcelShapeBase
  langs:
  - csharp
  - vb
  name: Fill
  nameWithType: ExcelShapeBase.Fill
  fullName: OfficeOpenXml.Drawing.ExcelShapeBase.Fill
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/ExcelShapeBase.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Fill
    path: ../src/EPPlus/Drawing/ExcelShapeBase.cs
    startLine: 109
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nAccess Fill properties\n"
  example: []
  syntax:
    content: public ExcelDrawingFill Fill { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.ExcelDrawingFill
    content.vb: Public ReadOnly Property Fill As ExcelDrawingFill
  overload: OfficeOpenXml.Drawing.ExcelShapeBase.Fill*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Drawing.ExcelShapeBase.Border
  commentId: P:OfficeOpenXml.Drawing.ExcelShapeBase.Border
  id: Border
  parent: OfficeOpenXml.Drawing.ExcelShapeBase
  langs:
  - csharp
  - vb
  name: Border
  nameWithType: ExcelShapeBase.Border
  fullName: OfficeOpenXml.Drawing.ExcelShapeBase.Border
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/ExcelShapeBase.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Border
    path: ../src/EPPlus/Drawing/ExcelShapeBase.cs
    startLine: 124
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nAccess to Border propesties\n"
  example: []
  syntax:
    content: public ExcelDrawingBorder Border { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.ExcelDrawingBorder
    content.vb: Public ReadOnly Property Border As ExcelDrawingBorder
  overload: OfficeOpenXml.Drawing.ExcelShapeBase.Border*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Drawing.ExcelShapeBase.Effect
  commentId: P:OfficeOpenXml.Drawing.ExcelShapeBase.Effect
  id: Effect
  parent: OfficeOpenXml.Drawing.ExcelShapeBase
  langs:
  - csharp
  - vb
  name: Effect
  nameWithType: ExcelShapeBase.Effect
  fullName: OfficeOpenXml.Drawing.ExcelShapeBase.Effect
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/ExcelShapeBase.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Effect
    path: ../src/EPPlus/Drawing/ExcelShapeBase.cs
    startLine: 139
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nDrawing effect properties\n"
  example: []
  syntax:
    content: public ExcelDrawingEffectStyle Effect { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingEffectStyle
    content.vb: Public ReadOnly Property Effect As ExcelDrawingEffectStyle
  overload: OfficeOpenXml.Drawing.ExcelShapeBase.Effect*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Drawing.ExcelShapeBase.ThreeD
  commentId: P:OfficeOpenXml.Drawing.ExcelShapeBase.ThreeD
  id: ThreeD
  parent: OfficeOpenXml.Drawing.ExcelShapeBase
  langs:
  - csharp
  - vb
  name: ThreeD
  nameWithType: ExcelShapeBase.ThreeD
  fullName: OfficeOpenXml.Drawing.ExcelShapeBase.ThreeD
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/ExcelShapeBase.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ThreeD
    path: ../src/EPPlus/Drawing/ExcelShapeBase.cs
    startLine: 154
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nDefines 3D properties to apply to an object\n"
  example: []
  syntax:
    content: public ExcelDrawing3D ThreeD { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.Style.ThreeD.ExcelDrawing3D
    content.vb: Public ReadOnly Property ThreeD As ExcelDrawing3D
  overload: OfficeOpenXml.Drawing.ExcelShapeBase.ThreeD*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Drawing.ExcelShapeBase.HeadEnd
  commentId: P:OfficeOpenXml.Drawing.ExcelShapeBase.HeadEnd
  id: HeadEnd
  parent: OfficeOpenXml.Drawing.ExcelShapeBase
  langs:
  - csharp
  - vb
  name: HeadEnd
  nameWithType: ExcelShapeBase.HeadEnd
  fullName: OfficeOpenXml.Drawing.ExcelShapeBase.HeadEnd
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/ExcelShapeBase.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: HeadEnd
    path: ../src/EPPlus/Drawing/ExcelShapeBase.cs
    startLine: 169
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nHead line end\n"
  example: []
  syntax:
    content: public ExcelDrawingLineEnd HeadEnd { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.ExcelDrawingLineEnd
    content.vb: Public ReadOnly Property HeadEnd As ExcelDrawingLineEnd
  overload: OfficeOpenXml.Drawing.ExcelShapeBase.HeadEnd*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Drawing.ExcelShapeBase.TailEnd
  commentId: P:OfficeOpenXml.Drawing.ExcelShapeBase.TailEnd
  id: TailEnd
  parent: OfficeOpenXml.Drawing.ExcelShapeBase
  langs:
  - csharp
  - vb
  name: TailEnd
  nameWithType: ExcelShapeBase.TailEnd
  fullName: OfficeOpenXml.Drawing.ExcelShapeBase.TailEnd
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/ExcelShapeBase.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: TailEnd
    path: ../src/EPPlus/Drawing/ExcelShapeBase.cs
    startLine: 184
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nTail line end\n"
  example: []
  syntax:
    content: public ExcelDrawingLineEnd TailEnd { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.ExcelDrawingLineEnd
    content.vb: Public ReadOnly Property TailEnd As ExcelDrawingLineEnd
  overload: OfficeOpenXml.Drawing.ExcelShapeBase.TailEnd*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Drawing.ExcelShapeBase.Font
  commentId: P:OfficeOpenXml.Drawing.ExcelShapeBase.Font
  id: Font
  parent: OfficeOpenXml.Drawing.ExcelShapeBase
  langs:
  - csharp
  - vb
  name: Font
  nameWithType: ExcelShapeBase.Font
  fullName: OfficeOpenXml.Drawing.ExcelShapeBase.Font
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/ExcelShapeBase.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Font
    path: ../src/EPPlus/Drawing/ExcelShapeBase.cs
    startLine: 199
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nFont properties\n"
  example: []
  syntax:
    content: public ExcelTextFont Font { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Style.ExcelTextFont
    content.vb: Public ReadOnly Property Font As ExcelTextFont
  overload: OfficeOpenXml.Drawing.ExcelShapeBase.Font*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Drawing.ExcelShapeBase.Text
  commentId: P:OfficeOpenXml.Drawing.ExcelShapeBase.Text
  id: Text
  parent: OfficeOpenXml.Drawing.ExcelShapeBase
  langs:
  - csharp
  - vb
  name: Text
  nameWithType: ExcelShapeBase.Text
  fullName: OfficeOpenXml.Drawing.ExcelShapeBase.Text
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/ExcelShapeBase.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Text
    path: ../src/EPPlus/Drawing/ExcelShapeBase.cs
    startLine: 233
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nText inside the shape\n"
  example: []
  syntax:
    content: public string Text { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Text As String
  overload: OfficeOpenXml.Drawing.ExcelShapeBase.Text*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.ExcelShapeBase.LockText
  commentId: P:OfficeOpenXml.Drawing.ExcelShapeBase.LockText
  id: LockText
  parent: OfficeOpenXml.Drawing.ExcelShapeBase
  langs:
  - csharp
  - vb
  name: LockText
  nameWithType: ExcelShapeBase.LockText
  fullName: OfficeOpenXml.Drawing.ExcelShapeBase.LockText
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/ExcelShapeBase.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: LockText
    path: ../src/EPPlus/Drawing/ExcelShapeBase.cs
    startLine: 248
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nLock drawing\n"
  example: []
  syntax:
    content: public bool LockText { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property LockText As Boolean
  overload: OfficeOpenXml.Drawing.ExcelShapeBase.LockText*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.ExcelShapeBase.RichText
  commentId: P:OfficeOpenXml.Drawing.ExcelShapeBase.RichText
  id: RichText
  parent: OfficeOpenXml.Drawing.ExcelShapeBase
  langs:
  - csharp
  - vb
  name: RichText
  nameWithType: ExcelShapeBase.RichText
  fullName: OfficeOpenXml.Drawing.ExcelShapeBase.RichText
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/ExcelShapeBase.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: RichText
    path: ../src/EPPlus/Drawing/ExcelShapeBase.cs
    startLine: 265
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nRichtext collection. Used to format specific parts of the text\n"
  example: []
  syntax:
    content: public ExcelParagraphCollection RichText { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Style.ExcelParagraphCollection
    content.vb: Public ReadOnly Property RichText As ExcelParagraphCollection
  overload: OfficeOpenXml.Drawing.ExcelShapeBase.RichText*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Drawing.ExcelShapeBase.TextAnchoring
  commentId: P:OfficeOpenXml.Drawing.ExcelShapeBase.TextAnchoring
  id: TextAnchoring
  parent: OfficeOpenXml.Drawing.ExcelShapeBase
  langs:
  - csharp
  - vb
  name: TextAnchoring
  nameWithType: ExcelShapeBase.TextAnchoring
  fullName: OfficeOpenXml.Drawing.ExcelShapeBase.TextAnchoring
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/ExcelShapeBase.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: TextAnchoring
    path: ../src/EPPlus/Drawing/ExcelShapeBase.cs
    startLine: 279
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nText Anchoring\n"
  example: []
  syntax:
    content: public eTextAnchoringType TextAnchoring { get; set; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.eTextAnchoringType
    content.vb: Public Property TextAnchoring As eTextAnchoringType
  overload: OfficeOpenXml.Drawing.ExcelShapeBase.TextAnchoring*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.ExcelShapeBase.TextAnchoringControl
  commentId: P:OfficeOpenXml.Drawing.ExcelShapeBase.TextAnchoringControl
  id: TextAnchoringControl
  parent: OfficeOpenXml.Drawing.ExcelShapeBase
  langs:
  - csharp
  - vb
  name: TextAnchoringControl
  nameWithType: ExcelShapeBase.TextAnchoringControl
  fullName: OfficeOpenXml.Drawing.ExcelShapeBase.TextAnchoringControl
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/ExcelShapeBase.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: TextAnchoringControl
    path: ../src/EPPlus/Drawing/ExcelShapeBase.cs
    startLine: 293
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nThe centering of the text box.\n"
  example: []
  syntax:
    content: public bool TextAnchoringControl { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property TextAnchoringControl As Boolean
  overload: OfficeOpenXml.Drawing.ExcelShapeBase.TextAnchoringControl*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.ExcelShapeBase.TextAlignment
  commentId: P:OfficeOpenXml.Drawing.ExcelShapeBase.TextAlignment
  id: TextAlignment
  parent: OfficeOpenXml.Drawing.ExcelShapeBase
  langs:
  - csharp
  - vb
  name: TextAlignment
  nameWithType: ExcelShapeBase.TextAlignment
  fullName: OfficeOpenXml.Drawing.ExcelShapeBase.TextAlignment
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/ExcelShapeBase.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: TextAlignment
    path: ../src/EPPlus/Drawing/ExcelShapeBase.cs
    startLine: 314
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nHow the text is aligned\n"
  example: []
  syntax:
    content: public eTextAlignment TextAlignment { get; set; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.eTextAlignment
    content.vb: Public Property TextAlignment As eTextAlignment
  overload: OfficeOpenXml.Drawing.ExcelShapeBase.TextAlignment*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.ExcelShapeBase.Indent
  commentId: P:OfficeOpenXml.Drawing.ExcelShapeBase.Indent
  id: Indent
  parent: OfficeOpenXml.Drawing.ExcelShapeBase
  langs:
  - csharp
  - vb
  name: Indent
  nameWithType: ExcelShapeBase.Indent
  fullName: OfficeOpenXml.Drawing.ExcelShapeBase.Indent
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/ExcelShapeBase.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Indent
    path: ../src/EPPlus/Drawing/ExcelShapeBase.cs
    startLine: 367
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nIndentation\n"
  example: []
  syntax:
    content: public int Indent { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Indent As Integer
  overload: OfficeOpenXml.Drawing.ExcelShapeBase.Indent*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.ExcelShapeBase.TextVertical
  commentId: P:OfficeOpenXml.Drawing.ExcelShapeBase.TextVertical
  id: TextVertical
  parent: OfficeOpenXml.Drawing.ExcelShapeBase
  langs:
  - csharp
  - vb
  name: TextVertical
  nameWithType: ExcelShapeBase.TextVertical
  fullName: OfficeOpenXml.Drawing.ExcelShapeBase.TextVertical
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/ExcelShapeBase.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: TextVertical
    path: ../src/EPPlus/Drawing/ExcelShapeBase.cs
    startLine: 385
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nVertical text\n"
  example: []
  syntax:
    content: public eTextVerticalType TextVertical { get; set; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.eTextVerticalType
    content.vb: Public Property TextVertical As eTextVerticalType
  overload: OfficeOpenXml.Drawing.ExcelShapeBase.TextVertical*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.ExcelShapeBase.TextBody
  commentId: P:OfficeOpenXml.Drawing.ExcelShapeBase.TextBody
  id: TextBody
  parent: OfficeOpenXml.Drawing.ExcelShapeBase
  langs:
  - csharp
  - vb
  name: TextBody
  nameWithType: ExcelShapeBase.TextBody
  fullName: OfficeOpenXml.Drawing.ExcelShapeBase.TextBody
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/ExcelShapeBase.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: TextBody
    path: ../src/EPPlus/Drawing/ExcelShapeBase.cs
    startLine: 400
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing
  summary: "\nAccess to text body properties.\n"
  example: []
  syntax:
    content: public ExcelTextBody TextBody { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.ExcelTextBody
    content.vb: Public ReadOnly Property TextBody As ExcelTextBody
  overload: OfficeOpenXml.Drawing.ExcelShapeBase.TextBody*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: OfficeOpenXml.Drawing
  commentId: N:OfficeOpenXml.Drawing
  name: OfficeOpenXml.Drawing
  nameWithType: OfficeOpenXml.Drawing
  fullName: OfficeOpenXml.Drawing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OfficeOpenXml.XmlHelper
  commentId: T:OfficeOpenXml.XmlHelper
  parent: OfficeOpenXml
  name: XmlHelper
  nameWithType: XmlHelper
  fullName: OfficeOpenXml.XmlHelper
- uid: OfficeOpenXml.Drawing.ExcelDrawing
  commentId: T:OfficeOpenXml.Drawing.ExcelDrawing
  parent: OfficeOpenXml.Drawing
  name: ExcelDrawing
  nameWithType: ExcelDrawing
  fullName: OfficeOpenXml.Drawing.ExcelDrawing
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: OfficeOpenXml.Drawing.ExcelDrawing.EMU_PER_PIXEL
  commentId: F:OfficeOpenXml.Drawing.ExcelDrawing.EMU_PER_PIXEL
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  name: EMU_PER_PIXEL
  nameWithType: ExcelDrawing.EMU_PER_PIXEL
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.EMU_PER_PIXEL
- uid: OfficeOpenXml.Drawing.ExcelDrawing.EMU_PER_POINT
  commentId: F:OfficeOpenXml.Drawing.ExcelDrawing.EMU_PER_POINT
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  name: EMU_PER_POINT
  nameWithType: ExcelDrawing.EMU_PER_POINT
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.EMU_PER_POINT
- uid: OfficeOpenXml.Drawing.ExcelDrawing.EMU_PER_CM
  commentId: F:OfficeOpenXml.Drawing.ExcelDrawing.EMU_PER_CM
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  name: EMU_PER_CM
  nameWithType: ExcelDrawing.EMU_PER_CM
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.EMU_PER_CM
- uid: OfficeOpenXml.Drawing.ExcelDrawing.EMU_PER_MM
  commentId: F:OfficeOpenXml.Drawing.ExcelDrawing.EMU_PER_MM
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  name: EMU_PER_MM
  nameWithType: ExcelDrawing.EMU_PER_MM
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.EMU_PER_MM
- uid: OfficeOpenXml.Drawing.ExcelDrawing.EMU_PER_US_INCH
  commentId: F:OfficeOpenXml.Drawing.ExcelDrawing.EMU_PER_US_INCH
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  name: EMU_PER_US_INCH
  nameWithType: ExcelDrawing.EMU_PER_US_INCH
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.EMU_PER_US_INCH
- uid: OfficeOpenXml.Drawing.ExcelDrawing.EMU_PER_PICA
  commentId: F:OfficeOpenXml.Drawing.ExcelDrawing.EMU_PER_PICA
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  name: EMU_PER_PICA
  nameWithType: ExcelDrawing.EMU_PER_PICA
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.EMU_PER_PICA
- uid: OfficeOpenXml.Drawing.ExcelDrawing.Name
  commentId: P:OfficeOpenXml.Drawing.ExcelDrawing.Name
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  name: Name
  nameWithType: ExcelDrawing.Name
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.Name
- uid: OfficeOpenXml.Drawing.ExcelDrawing.Description
  commentId: P:OfficeOpenXml.Drawing.ExcelDrawing.Description
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  name: Description
  nameWithType: ExcelDrawing.Description
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.Description
- uid: OfficeOpenXml.Drawing.ExcelDrawing.EditAs
  commentId: P:OfficeOpenXml.Drawing.ExcelDrawing.EditAs
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  name: EditAs
  nameWithType: ExcelDrawing.EditAs
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.EditAs
- uid: OfficeOpenXml.Drawing.ExcelDrawing.Locked
  commentId: P:OfficeOpenXml.Drawing.ExcelDrawing.Locked
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  name: Locked
  nameWithType: ExcelDrawing.Locked
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.Locked
- uid: OfficeOpenXml.Drawing.ExcelDrawing.Print
  commentId: P:OfficeOpenXml.Drawing.ExcelDrawing.Print
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  name: Print
  nameWithType: ExcelDrawing.Print
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.Print
- uid: OfficeOpenXml.Drawing.ExcelDrawing.From
  commentId: P:OfficeOpenXml.Drawing.ExcelDrawing.From
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  name: From
  nameWithType: ExcelDrawing.From
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.From
- uid: OfficeOpenXml.Drawing.ExcelDrawing.Position
  commentId: P:OfficeOpenXml.Drawing.ExcelDrawing.Position
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  name: Position
  nameWithType: ExcelDrawing.Position
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.Position
- uid: OfficeOpenXml.Drawing.ExcelDrawing.Size
  commentId: P:OfficeOpenXml.Drawing.ExcelDrawing.Size
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  name: Size
  nameWithType: ExcelDrawing.Size
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.Size
- uid: OfficeOpenXml.Drawing.ExcelDrawing.To
  commentId: P:OfficeOpenXml.Drawing.ExcelDrawing.To
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  name: To
  nameWithType: ExcelDrawing.To
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.To
- uid: OfficeOpenXml.Drawing.ExcelDrawing.Hyperlink
  commentId: P:OfficeOpenXml.Drawing.ExcelDrawing.Hyperlink
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  name: Hyperlink
  nameWithType: ExcelDrawing.Hyperlink
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.Hyperlink
- uid: OfficeOpenXml.Drawing.ExcelDrawing.As
  commentId: P:OfficeOpenXml.Drawing.ExcelDrawing.As
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  name: As
  nameWithType: ExcelDrawing.As
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.As
- uid: OfficeOpenXml.Drawing.ExcelDrawing.SetPosition(System.Int32,System.Int32)
  commentId: M:OfficeOpenXml.Drawing.ExcelDrawing.SetPosition(System.Int32,System.Int32)
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  isExternal: true
  name: SetPosition(Int32, Int32)
  nameWithType: ExcelDrawing.SetPosition(Int32, Int32)
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.SetPosition(System.Int32, System.Int32)
  spec.csharp:
  - uid: OfficeOpenXml.Drawing.ExcelDrawing.SetPosition(System.Int32,System.Int32)
    name: SetPosition
    nameWithType: ExcelDrawing.SetPosition
    fullName: OfficeOpenXml.Drawing.ExcelDrawing.SetPosition
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Drawing.ExcelDrawing.SetPosition(System.Int32,System.Int32)
    name: SetPosition
    nameWithType: ExcelDrawing.SetPosition
    fullName: OfficeOpenXml.Drawing.ExcelDrawing.SetPosition
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Drawing.ExcelDrawing.CellAnchor
  commentId: P:OfficeOpenXml.Drawing.ExcelDrawing.CellAnchor
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  name: CellAnchor
  nameWithType: ExcelDrawing.CellAnchor
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.CellAnchor
- uid: OfficeOpenXml.Drawing.ExcelDrawing.ChangeCellAnchor(OfficeOpenXml.Drawing.eEditAs,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:OfficeOpenXml.Drawing.ExcelDrawing.ChangeCellAnchor(OfficeOpenXml.Drawing.eEditAs,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  isExternal: true
  name: ChangeCellAnchor(eEditAs, Int32, Int32, Int32, Int32)
  nameWithType: ExcelDrawing.ChangeCellAnchor(eEditAs, Int32, Int32, Int32, Int32)
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.ChangeCellAnchor(OfficeOpenXml.Drawing.eEditAs, System.Int32, System.Int32, System.Int32, System.Int32)
  spec.csharp:
  - uid: OfficeOpenXml.Drawing.ExcelDrawing.ChangeCellAnchor(OfficeOpenXml.Drawing.eEditAs,System.Int32,System.Int32,System.Int32,System.Int32)
    name: ChangeCellAnchor
    nameWithType: ExcelDrawing.ChangeCellAnchor
    fullName: OfficeOpenXml.Drawing.ExcelDrawing.ChangeCellAnchor
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.Drawing.eEditAs
    name: eEditAs
    nameWithType: eEditAs
    fullName: OfficeOpenXml.Drawing.eEditAs
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Drawing.ExcelDrawing.ChangeCellAnchor(OfficeOpenXml.Drawing.eEditAs,System.Int32,System.Int32,System.Int32,System.Int32)
    name: ChangeCellAnchor
    nameWithType: ExcelDrawing.ChangeCellAnchor
    fullName: OfficeOpenXml.Drawing.ExcelDrawing.ChangeCellAnchor
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.Drawing.eEditAs
    name: eEditAs
    nameWithType: eEditAs
    fullName: OfficeOpenXml.Drawing.eEditAs
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Drawing.ExcelDrawing.ChangeCellAnchor(OfficeOpenXml.Drawing.eEditAs)
  commentId: M:OfficeOpenXml.Drawing.ExcelDrawing.ChangeCellAnchor(OfficeOpenXml.Drawing.eEditAs)
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  name: ChangeCellAnchor(eEditAs)
  nameWithType: ExcelDrawing.ChangeCellAnchor(eEditAs)
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.ChangeCellAnchor(OfficeOpenXml.Drawing.eEditAs)
  spec.csharp:
  - uid: OfficeOpenXml.Drawing.ExcelDrawing.ChangeCellAnchor(OfficeOpenXml.Drawing.eEditAs)
    name: ChangeCellAnchor
    nameWithType: ExcelDrawing.ChangeCellAnchor
    fullName: OfficeOpenXml.Drawing.ExcelDrawing.ChangeCellAnchor
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.Drawing.eEditAs
    name: eEditAs
    nameWithType: eEditAs
    fullName: OfficeOpenXml.Drawing.eEditAs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Drawing.ExcelDrawing.ChangeCellAnchor(OfficeOpenXml.Drawing.eEditAs)
    name: ChangeCellAnchor
    nameWithType: ExcelDrawing.ChangeCellAnchor
    fullName: OfficeOpenXml.Drawing.ExcelDrawing.ChangeCellAnchor
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.Drawing.eEditAs
    name: eEditAs
    nameWithType: eEditAs
    fullName: OfficeOpenXml.Drawing.eEditAs
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Drawing.ExcelDrawing.SetPosition(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:OfficeOpenXml.Drawing.ExcelDrawing.SetPosition(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  isExternal: true
  name: SetPosition(Int32, Int32, Int32, Int32)
  nameWithType: ExcelDrawing.SetPosition(Int32, Int32, Int32, Int32)
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.SetPosition(System.Int32, System.Int32, System.Int32, System.Int32)
  spec.csharp:
  - uid: OfficeOpenXml.Drawing.ExcelDrawing.SetPosition(System.Int32,System.Int32,System.Int32,System.Int32)
    name: SetPosition
    nameWithType: ExcelDrawing.SetPosition
    fullName: OfficeOpenXml.Drawing.ExcelDrawing.SetPosition
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Drawing.ExcelDrawing.SetPosition(System.Int32,System.Int32,System.Int32,System.Int32)
    name: SetPosition
    nameWithType: ExcelDrawing.SetPosition
    fullName: OfficeOpenXml.Drawing.ExcelDrawing.SetPosition
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Drawing.ExcelDrawing.SetSize(System.Int32)
  commentId: M:OfficeOpenXml.Drawing.ExcelDrawing.SetSize(System.Int32)
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  isExternal: true
  name: SetSize(Int32)
  nameWithType: ExcelDrawing.SetSize(Int32)
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.SetSize(System.Int32)
  spec.csharp:
  - uid: OfficeOpenXml.Drawing.ExcelDrawing.SetSize(System.Int32)
    name: SetSize
    nameWithType: ExcelDrawing.SetSize
    fullName: OfficeOpenXml.Drawing.ExcelDrawing.SetSize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Drawing.ExcelDrawing.SetSize(System.Int32)
    name: SetSize
    nameWithType: ExcelDrawing.SetSize
    fullName: OfficeOpenXml.Drawing.ExcelDrawing.SetSize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Drawing.ExcelDrawing.SetSize(System.Int32,System.Int32)
  commentId: M:OfficeOpenXml.Drawing.ExcelDrawing.SetSize(System.Int32,System.Int32)
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  isExternal: true
  name: SetSize(Int32, Int32)
  nameWithType: ExcelDrawing.SetSize(Int32, Int32)
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.SetSize(System.Int32, System.Int32)
  spec.csharp:
  - uid: OfficeOpenXml.Drawing.ExcelDrawing.SetSize(System.Int32,System.Int32)
    name: SetSize
    nameWithType: ExcelDrawing.SetSize
    fullName: OfficeOpenXml.Drawing.ExcelDrawing.SetSize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Drawing.ExcelDrawing.SetSize(System.Int32,System.Int32)
    name: SetSize
    nameWithType: ExcelDrawing.SetSize
    fullName: OfficeOpenXml.Drawing.ExcelDrawing.SetSize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Drawing.ExcelDrawing.SendToBack
  commentId: M:OfficeOpenXml.Drawing.ExcelDrawing.SendToBack
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  name: SendToBack()
  nameWithType: ExcelDrawing.SendToBack()
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.SendToBack()
  spec.csharp:
  - uid: OfficeOpenXml.Drawing.ExcelDrawing.SendToBack
    name: SendToBack
    nameWithType: ExcelDrawing.SendToBack
    fullName: OfficeOpenXml.Drawing.ExcelDrawing.SendToBack
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Drawing.ExcelDrawing.SendToBack
    name: SendToBack
    nameWithType: ExcelDrawing.SendToBack
    fullName: OfficeOpenXml.Drawing.ExcelDrawing.SendToBack
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Drawing.ExcelDrawing.BringToFront
  commentId: M:OfficeOpenXml.Drawing.ExcelDrawing.BringToFront
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  name: BringToFront()
  nameWithType: ExcelDrawing.BringToFront()
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.BringToFront()
  spec.csharp:
  - uid: OfficeOpenXml.Drawing.ExcelDrawing.BringToFront
    name: BringToFront
    nameWithType: ExcelDrawing.BringToFront
    fullName: OfficeOpenXml.Drawing.ExcelDrawing.BringToFront
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Drawing.ExcelDrawing.BringToFront
    name: BringToFront
    nameWithType: ExcelDrawing.BringToFront
    fullName: OfficeOpenXml.Drawing.ExcelDrawing.BringToFront
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Drawing.ExcelDrawing.Group(OfficeOpenXml.Drawing.ExcelDrawing[])
  commentId: M:OfficeOpenXml.Drawing.ExcelDrawing.Group(OfficeOpenXml.Drawing.ExcelDrawing[])
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  name: Group(ExcelDrawing[])
  nameWithType: ExcelDrawing.Group(ExcelDrawing[])
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.Group(OfficeOpenXml.Drawing.ExcelDrawing[])
  nameWithType.vb: ExcelDrawing.Group(ExcelDrawing())
  fullName.vb: OfficeOpenXml.Drawing.ExcelDrawing.Group(OfficeOpenXml.Drawing.ExcelDrawing())
  name.vb: Group(ExcelDrawing())
  spec.csharp:
  - uid: OfficeOpenXml.Drawing.ExcelDrawing.Group(OfficeOpenXml.Drawing.ExcelDrawing[])
    name: Group
    nameWithType: ExcelDrawing.Group
    fullName: OfficeOpenXml.Drawing.ExcelDrawing.Group
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.Drawing.ExcelDrawing
    name: ExcelDrawing
    nameWithType: ExcelDrawing
    fullName: OfficeOpenXml.Drawing.ExcelDrawing
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Drawing.ExcelDrawing.Group(OfficeOpenXml.Drawing.ExcelDrawing[])
    name: Group
    nameWithType: ExcelDrawing.Group
    fullName: OfficeOpenXml.Drawing.ExcelDrawing.Group
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.Drawing.ExcelDrawing
    name: ExcelDrawing
    nameWithType: ExcelDrawing
    fullName: OfficeOpenXml.Drawing.ExcelDrawing
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Drawing.ExcelDrawing.UnGroup(System.Boolean)
  commentId: M:OfficeOpenXml.Drawing.ExcelDrawing.UnGroup(System.Boolean)
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  isExternal: true
  name: UnGroup(Boolean)
  nameWithType: ExcelDrawing.UnGroup(Boolean)
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.UnGroup(System.Boolean)
  spec.csharp:
  - uid: OfficeOpenXml.Drawing.ExcelDrawing.UnGroup(System.Boolean)
    name: UnGroup
    nameWithType: ExcelDrawing.UnGroup
    fullName: OfficeOpenXml.Drawing.ExcelDrawing.UnGroup
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Drawing.ExcelDrawing.UnGroup(System.Boolean)
    name: UnGroup
    nameWithType: ExcelDrawing.UnGroup
    fullName: OfficeOpenXml.Drawing.ExcelDrawing.UnGroup
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Drawing.ExcelDrawing.ParentGroup
  commentId: P:OfficeOpenXml.Drawing.ExcelDrawing.ParentGroup
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  name: ParentGroup
  nameWithType: ExcelDrawing.ParentGroup
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.ParentGroup
- uid: OfficeOpenXml.Drawing.ExcelDrawing.Dispose
  commentId: M:OfficeOpenXml.Drawing.ExcelDrawing.Dispose
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  name: Dispose()
  nameWithType: ExcelDrawing.Dispose()
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.Dispose()
  spec.csharp:
  - uid: OfficeOpenXml.Drawing.ExcelDrawing.Dispose
    name: Dispose
    nameWithType: ExcelDrawing.Dispose
    fullName: OfficeOpenXml.Drawing.ExcelDrawing.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Drawing.ExcelDrawing.Dispose
    name: Dispose
    nameWithType: ExcelDrawing.Dispose
    fullName: OfficeOpenXml.Drawing.ExcelDrawing.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Drawing.ExcelDrawing.AdjustPositionAndSize
  commentId: M:OfficeOpenXml.Drawing.ExcelDrawing.AdjustPositionAndSize
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  name: AdjustPositionAndSize()
  nameWithType: ExcelDrawing.AdjustPositionAndSize()
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.AdjustPositionAndSize()
  spec.csharp:
  - uid: OfficeOpenXml.Drawing.ExcelDrawing.AdjustPositionAndSize
    name: AdjustPositionAndSize
    nameWithType: ExcelDrawing.AdjustPositionAndSize
    fullName: OfficeOpenXml.Drawing.ExcelDrawing.AdjustPositionAndSize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Drawing.ExcelDrawing.AdjustPositionAndSize
    name: AdjustPositionAndSize
    nameWithType: ExcelDrawing.AdjustPositionAndSize
    fullName: OfficeOpenXml.Drawing.ExcelDrawing.AdjustPositionAndSize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml
  commentId: N:OfficeOpenXml
  name: OfficeOpenXml
  nameWithType: OfficeOpenXml
  fullName: OfficeOpenXml
- uid: OfficeOpenXml.Drawing.ExcelDrawing.DrawingType
  commentId: P:OfficeOpenXml.Drawing.ExcelDrawing.DrawingType
  parent: OfficeOpenXml.Drawing.ExcelDrawing
  name: DrawingType
  nameWithType: ExcelDrawing.DrawingType
  fullName: OfficeOpenXml.Drawing.ExcelDrawing.DrawingType
- uid: OfficeOpenXml.Drawing.ExcelShapeBase.DrawingType*
  commentId: Overload:OfficeOpenXml.Drawing.ExcelShapeBase.DrawingType
  name: DrawingType
  nameWithType: ExcelShapeBase.DrawingType
  fullName: OfficeOpenXml.Drawing.ExcelShapeBase.DrawingType
- uid: OfficeOpenXml.Drawing.eDrawingType
  commentId: T:OfficeOpenXml.Drawing.eDrawingType
  parent: OfficeOpenXml.Drawing
  name: eDrawingType
  nameWithType: eDrawingType
  fullName: OfficeOpenXml.Drawing.eDrawingType
- uid: OfficeOpenXml.Drawing.ExcelShapeBase.Style*
  commentId: Overload:OfficeOpenXml.Drawing.ExcelShapeBase.Style
  name: Style
  nameWithType: ExcelShapeBase.Style
  fullName: OfficeOpenXml.Drawing.ExcelShapeBase.Style
- uid: OfficeOpenXml.Drawing.eShapeStyle
  commentId: T:OfficeOpenXml.Drawing.eShapeStyle
  parent: OfficeOpenXml.Drawing
  name: eShapeStyle
  nameWithType: eShapeStyle
  fullName: OfficeOpenXml.Drawing.eShapeStyle
- uid: OfficeOpenXml.Drawing.ExcelShapeBase.Fill*
  commentId: Overload:OfficeOpenXml.Drawing.ExcelShapeBase.Fill
  name: Fill
  nameWithType: ExcelShapeBase.Fill
  fullName: OfficeOpenXml.Drawing.ExcelShapeBase.Fill
- uid: OfficeOpenXml.Drawing.ExcelDrawingFill
  commentId: T:OfficeOpenXml.Drawing.ExcelDrawingFill
  parent: OfficeOpenXml.Drawing
  name: ExcelDrawingFill
  nameWithType: ExcelDrawingFill
  fullName: OfficeOpenXml.Drawing.ExcelDrawingFill
- uid: OfficeOpenXml.Drawing.ExcelShapeBase.Border*
  commentId: Overload:OfficeOpenXml.Drawing.ExcelShapeBase.Border
  name: Border
  nameWithType: ExcelShapeBase.Border
  fullName: OfficeOpenXml.Drawing.ExcelShapeBase.Border
- uid: OfficeOpenXml.Drawing.ExcelDrawingBorder
  commentId: T:OfficeOpenXml.Drawing.ExcelDrawingBorder
  parent: OfficeOpenXml.Drawing
  name: ExcelDrawingBorder
  nameWithType: ExcelDrawingBorder
  fullName: OfficeOpenXml.Drawing.ExcelDrawingBorder
- uid: OfficeOpenXml.Drawing.ExcelShapeBase.Effect*
  commentId: Overload:OfficeOpenXml.Drawing.ExcelShapeBase.Effect
  name: Effect
  nameWithType: ExcelShapeBase.Effect
  fullName: OfficeOpenXml.Drawing.ExcelShapeBase.Effect
- uid: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingEffectStyle
  commentId: T:OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingEffectStyle
  parent: OfficeOpenXml.Drawing.Style.Effect
  name: ExcelDrawingEffectStyle
  nameWithType: ExcelDrawingEffectStyle
  fullName: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingEffectStyle
- uid: OfficeOpenXml.Drawing.Style.Effect
  commentId: N:OfficeOpenXml.Drawing.Style.Effect
  name: OfficeOpenXml.Drawing.Style.Effect
  nameWithType: OfficeOpenXml.Drawing.Style.Effect
  fullName: OfficeOpenXml.Drawing.Style.Effect
- uid: OfficeOpenXml.Drawing.ExcelShapeBase.ThreeD*
  commentId: Overload:OfficeOpenXml.Drawing.ExcelShapeBase.ThreeD
  name: ThreeD
  nameWithType: ExcelShapeBase.ThreeD
  fullName: OfficeOpenXml.Drawing.ExcelShapeBase.ThreeD
- uid: OfficeOpenXml.Drawing.Style.ThreeD.ExcelDrawing3D
  commentId: T:OfficeOpenXml.Drawing.Style.ThreeD.ExcelDrawing3D
  parent: OfficeOpenXml.Drawing.Style.ThreeD
  name: ExcelDrawing3D
  nameWithType: ExcelDrawing3D
  fullName: OfficeOpenXml.Drawing.Style.ThreeD.ExcelDrawing3D
- uid: OfficeOpenXml.Drawing.Style.ThreeD
  commentId: N:OfficeOpenXml.Drawing.Style.ThreeD
  name: OfficeOpenXml.Drawing.Style.ThreeD
  nameWithType: OfficeOpenXml.Drawing.Style.ThreeD
  fullName: OfficeOpenXml.Drawing.Style.ThreeD
- uid: OfficeOpenXml.Drawing.ExcelShapeBase.HeadEnd*
  commentId: Overload:OfficeOpenXml.Drawing.ExcelShapeBase.HeadEnd
  name: HeadEnd
  nameWithType: ExcelShapeBase.HeadEnd
  fullName: OfficeOpenXml.Drawing.ExcelShapeBase.HeadEnd
- uid: OfficeOpenXml.Drawing.ExcelDrawingLineEnd
  commentId: T:OfficeOpenXml.Drawing.ExcelDrawingLineEnd
  parent: OfficeOpenXml.Drawing
  name: ExcelDrawingLineEnd
  nameWithType: ExcelDrawingLineEnd
  fullName: OfficeOpenXml.Drawing.ExcelDrawingLineEnd
- uid: OfficeOpenXml.Drawing.ExcelShapeBase.TailEnd*
  commentId: Overload:OfficeOpenXml.Drawing.ExcelShapeBase.TailEnd
  name: TailEnd
  nameWithType: ExcelShapeBase.TailEnd
  fullName: OfficeOpenXml.Drawing.ExcelShapeBase.TailEnd
- uid: OfficeOpenXml.Drawing.ExcelShapeBase.Font*
  commentId: Overload:OfficeOpenXml.Drawing.ExcelShapeBase.Font
  name: Font
  nameWithType: ExcelShapeBase.Font
  fullName: OfficeOpenXml.Drawing.ExcelShapeBase.Font
- uid: OfficeOpenXml.Style.ExcelTextFont
  commentId: T:OfficeOpenXml.Style.ExcelTextFont
  parent: OfficeOpenXml.Style
  name: ExcelTextFont
  nameWithType: ExcelTextFont
  fullName: OfficeOpenXml.Style.ExcelTextFont
- uid: OfficeOpenXml.Style
  commentId: N:OfficeOpenXml.Style
  name: OfficeOpenXml.Style
  nameWithType: OfficeOpenXml.Style
  fullName: OfficeOpenXml.Style
- uid: OfficeOpenXml.Drawing.ExcelShapeBase.Text*
  commentId: Overload:OfficeOpenXml.Drawing.ExcelShapeBase.Text
  name: Text
  nameWithType: ExcelShapeBase.Text
  fullName: OfficeOpenXml.Drawing.ExcelShapeBase.Text
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OfficeOpenXml.Drawing.ExcelShapeBase.LockText*
  commentId: Overload:OfficeOpenXml.Drawing.ExcelShapeBase.LockText
  name: LockText
  nameWithType: ExcelShapeBase.LockText
  fullName: OfficeOpenXml.Drawing.ExcelShapeBase.LockText
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: OfficeOpenXml.Drawing.ExcelShapeBase.RichText*
  commentId: Overload:OfficeOpenXml.Drawing.ExcelShapeBase.RichText
  name: RichText
  nameWithType: ExcelShapeBase.RichText
  fullName: OfficeOpenXml.Drawing.ExcelShapeBase.RichText
- uid: OfficeOpenXml.Style.ExcelParagraphCollection
  commentId: T:OfficeOpenXml.Style.ExcelParagraphCollection
  parent: OfficeOpenXml.Style
  name: ExcelParagraphCollection
  nameWithType: ExcelParagraphCollection
  fullName: OfficeOpenXml.Style.ExcelParagraphCollection
- uid: OfficeOpenXml.Drawing.ExcelShapeBase.TextAnchoring*
  commentId: Overload:OfficeOpenXml.Drawing.ExcelShapeBase.TextAnchoring
  name: TextAnchoring
  nameWithType: ExcelShapeBase.TextAnchoring
  fullName: OfficeOpenXml.Drawing.ExcelShapeBase.TextAnchoring
- uid: OfficeOpenXml.Drawing.eTextAnchoringType
  commentId: T:OfficeOpenXml.Drawing.eTextAnchoringType
  parent: OfficeOpenXml.Drawing
  name: eTextAnchoringType
  nameWithType: eTextAnchoringType
  fullName: OfficeOpenXml.Drawing.eTextAnchoringType
- uid: OfficeOpenXml.Drawing.ExcelShapeBase.TextAnchoringControl*
  commentId: Overload:OfficeOpenXml.Drawing.ExcelShapeBase.TextAnchoringControl
  name: TextAnchoringControl
  nameWithType: ExcelShapeBase.TextAnchoringControl
  fullName: OfficeOpenXml.Drawing.ExcelShapeBase.TextAnchoringControl
- uid: OfficeOpenXml.Drawing.ExcelShapeBase.TextAlignment*
  commentId: Overload:OfficeOpenXml.Drawing.ExcelShapeBase.TextAlignment
  name: TextAlignment
  nameWithType: ExcelShapeBase.TextAlignment
  fullName: OfficeOpenXml.Drawing.ExcelShapeBase.TextAlignment
- uid: OfficeOpenXml.Drawing.eTextAlignment
  commentId: T:OfficeOpenXml.Drawing.eTextAlignment
  parent: OfficeOpenXml.Drawing
  name: eTextAlignment
  nameWithType: eTextAlignment
  fullName: OfficeOpenXml.Drawing.eTextAlignment
- uid: OfficeOpenXml.Drawing.ExcelShapeBase.Indent*
  commentId: Overload:OfficeOpenXml.Drawing.ExcelShapeBase.Indent
  name: Indent
  nameWithType: ExcelShapeBase.Indent
  fullName: OfficeOpenXml.Drawing.ExcelShapeBase.Indent
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: OfficeOpenXml.Drawing.ExcelShapeBase.TextVertical*
  commentId: Overload:OfficeOpenXml.Drawing.ExcelShapeBase.TextVertical
  name: TextVertical
  nameWithType: ExcelShapeBase.TextVertical
  fullName: OfficeOpenXml.Drawing.ExcelShapeBase.TextVertical
- uid: OfficeOpenXml.Drawing.eTextVerticalType
  commentId: T:OfficeOpenXml.Drawing.eTextVerticalType
  parent: OfficeOpenXml.Drawing
  name: eTextVerticalType
  nameWithType: eTextVerticalType
  fullName: OfficeOpenXml.Drawing.eTextVerticalType
- uid: OfficeOpenXml.Drawing.ExcelShapeBase.TextBody*
  commentId: Overload:OfficeOpenXml.Drawing.ExcelShapeBase.TextBody
  name: TextBody
  nameWithType: ExcelShapeBase.TextBody
  fullName: OfficeOpenXml.Drawing.ExcelShapeBase.TextBody
- uid: OfficeOpenXml.Drawing.ExcelTextBody
  commentId: T:OfficeOpenXml.Drawing.ExcelTextBody
  parent: OfficeOpenXml.Drawing
  name: ExcelTextBody
  nameWithType: ExcelTextBody
  fullName: OfficeOpenXml.Drawing.ExcelTextBody
