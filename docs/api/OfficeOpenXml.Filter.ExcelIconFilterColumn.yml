### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.Filter.ExcelIconFilterColumn
  commentId: T:OfficeOpenXml.Filter.ExcelIconFilterColumn
  id: ExcelIconFilterColumn
  parent: OfficeOpenXml.Filter
  children:
  - OfficeOpenXml.Filter.ExcelIconFilterColumn.IconId
  - OfficeOpenXml.Filter.ExcelIconFilterColumn.IconSet
  langs:
  - csharp
  - vb
  name: ExcelIconFilterColumn
  nameWithType: ExcelIconFilterColumn
  fullName: OfficeOpenXml.Filter.ExcelIconFilterColumn
  type: Class
  source:
    remote:
      path: src/EPPlus/Filter/ExcelIconFilterColumn.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ExcelIconFilterColumn
    path: ../src/EPPlus/Filter/ExcelIconFilterColumn.cs
    startLine: 23
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Filter
  summary: "\nA filter column filtered by icons\n"
  remarks: Note that EPPlus does not filter icon columns
  example: []
  syntax:
    content: 'public class ExcelIconFilterColumn : ExcelFilterColumn'
    content.vb: >-
      Public Class ExcelIconFilterColumn
          Inherits ExcelFilterColumn
  inheritance:
  - System.Object
  - OfficeOpenXml.XmlHelper
  - OfficeOpenXml.Filter.ExcelFilterColumn
  inheritedMembers:
  - OfficeOpenXml.Filter.ExcelFilterColumn.GetFilterValue(System.String)
  - OfficeOpenXml.Filter.ExcelFilterColumn.Position
  - OfficeOpenXml.Filter.ExcelFilterColumn.HiddenButton
  - OfficeOpenXml.Filter.ExcelFilterColumn.ShowButton
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OfficeOpenXml.Filter.ExcelIconFilterColumn.IconId
  commentId: P:OfficeOpenXml.Filter.ExcelIconFilterColumn.IconId
  id: IconId
  parent: OfficeOpenXml.Filter.ExcelIconFilterColumn
  langs:
  - csharp
  - vb
  name: IconId
  nameWithType: ExcelIconFilterColumn.IconId
  fullName: OfficeOpenXml.Filter.ExcelIconFilterColumn.IconId
  type: Property
  source:
    remote:
      path: src/EPPlus/Filter/ExcelIconFilterColumn.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: IconId
    path: ../src/EPPlus/Filter/ExcelIconFilterColumn.cs
    startLine: 32
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Filter
  summary: "\nThe icon Id within the icon set\n"
  example: []
  syntax:
    content: public int IconId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property IconId As Integer
  overload: OfficeOpenXml.Filter.ExcelIconFilterColumn.IconId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Filter.ExcelIconFilterColumn.IconSet
  commentId: P:OfficeOpenXml.Filter.ExcelIconFilterColumn.IconSet
  id: IconSet
  parent: OfficeOpenXml.Filter.ExcelIconFilterColumn
  langs:
  - csharp
  - vb
  name: IconSet
  nameWithType: ExcelIconFilterColumn.IconSet
  fullName: OfficeOpenXml.Filter.ExcelIconFilterColumn.IconSet
  type: Property
  source:
    remote:
      path: src/EPPlus/Filter/ExcelIconFilterColumn.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: IconSet
    path: ../src/EPPlus/Filter/ExcelIconFilterColumn.cs
    startLine: 50
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Filter
  summary: "\nThe Iconset to filter by\n"
  example: []
  syntax:
    content: public eExcelconditionalFormattingIconsSetType IconSet { get; set; }
    parameters: []
    return:
      type: OfficeOpenXml.ConditionalFormatting.eExcelconditionalFormattingIconsSetType
    content.vb: Public Property IconSet As eExcelconditionalFormattingIconsSetType
  overload: OfficeOpenXml.Filter.ExcelIconFilterColumn.IconSet*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: OfficeOpenXml.Filter
  commentId: N:OfficeOpenXml.Filter
  name: OfficeOpenXml.Filter
  nameWithType: OfficeOpenXml.Filter
  fullName: OfficeOpenXml.Filter
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OfficeOpenXml.XmlHelper
  commentId: T:OfficeOpenXml.XmlHelper
  parent: OfficeOpenXml
  name: XmlHelper
  nameWithType: XmlHelper
  fullName: OfficeOpenXml.XmlHelper
- uid: OfficeOpenXml.Filter.ExcelFilterColumn
  commentId: T:OfficeOpenXml.Filter.ExcelFilterColumn
  parent: OfficeOpenXml.Filter
  name: ExcelFilterColumn
  nameWithType: ExcelFilterColumn
  fullName: OfficeOpenXml.Filter.ExcelFilterColumn
- uid: OfficeOpenXml.Filter.ExcelFilterColumn.GetFilterValue(System.String)
  commentId: M:OfficeOpenXml.Filter.ExcelFilterColumn.GetFilterValue(System.String)
  parent: OfficeOpenXml.Filter.ExcelFilterColumn
  isExternal: true
  name: GetFilterValue(String)
  nameWithType: ExcelFilterColumn.GetFilterValue(String)
  fullName: OfficeOpenXml.Filter.ExcelFilterColumn.GetFilterValue(System.String)
  spec.csharp:
  - uid: OfficeOpenXml.Filter.ExcelFilterColumn.GetFilterValue(System.String)
    name: GetFilterValue
    nameWithType: ExcelFilterColumn.GetFilterValue
    fullName: OfficeOpenXml.Filter.ExcelFilterColumn.GetFilterValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.Filter.ExcelFilterColumn.GetFilterValue(System.String)
    name: GetFilterValue
    nameWithType: ExcelFilterColumn.GetFilterValue
    fullName: OfficeOpenXml.Filter.ExcelFilterColumn.GetFilterValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.Filter.ExcelFilterColumn.Position
  commentId: P:OfficeOpenXml.Filter.ExcelFilterColumn.Position
  parent: OfficeOpenXml.Filter.ExcelFilterColumn
  name: Position
  nameWithType: ExcelFilterColumn.Position
  fullName: OfficeOpenXml.Filter.ExcelFilterColumn.Position
- uid: OfficeOpenXml.Filter.ExcelFilterColumn.HiddenButton
  commentId: P:OfficeOpenXml.Filter.ExcelFilterColumn.HiddenButton
  parent: OfficeOpenXml.Filter.ExcelFilterColumn
  name: HiddenButton
  nameWithType: ExcelFilterColumn.HiddenButton
  fullName: OfficeOpenXml.Filter.ExcelFilterColumn.HiddenButton
- uid: OfficeOpenXml.Filter.ExcelFilterColumn.ShowButton
  commentId: P:OfficeOpenXml.Filter.ExcelFilterColumn.ShowButton
  parent: OfficeOpenXml.Filter.ExcelFilterColumn
  name: ShowButton
  nameWithType: ExcelFilterColumn.ShowButton
  fullName: OfficeOpenXml.Filter.ExcelFilterColumn.ShowButton
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml
  commentId: N:OfficeOpenXml
  name: OfficeOpenXml
  nameWithType: OfficeOpenXml
  fullName: OfficeOpenXml
- uid: OfficeOpenXml.Filter.ExcelIconFilterColumn.IconId*
  commentId: Overload:OfficeOpenXml.Filter.ExcelIconFilterColumn.IconId
  name: IconId
  nameWithType: ExcelIconFilterColumn.IconId
  fullName: OfficeOpenXml.Filter.ExcelIconFilterColumn.IconId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: OfficeOpenXml.Filter.ExcelIconFilterColumn.IconSet*
  commentId: Overload:OfficeOpenXml.Filter.ExcelIconFilterColumn.IconSet
  name: IconSet
  nameWithType: ExcelIconFilterColumn.IconSet
  fullName: OfficeOpenXml.Filter.ExcelIconFilterColumn.IconSet
- uid: OfficeOpenXml.ConditionalFormatting.eExcelconditionalFormattingIconsSetType
  commentId: T:OfficeOpenXml.ConditionalFormatting.eExcelconditionalFormattingIconsSetType
  parent: OfficeOpenXml.ConditionalFormatting
  name: eExcelconditionalFormattingIconsSetType
  nameWithType: eExcelconditionalFormattingIconsSetType
  fullName: OfficeOpenXml.ConditionalFormatting.eExcelconditionalFormattingIconsSetType
- uid: OfficeOpenXml.ConditionalFormatting
  commentId: N:OfficeOpenXml.ConditionalFormatting
  name: OfficeOpenXml.ConditionalFormatting
  nameWithType: OfficeOpenXml.ConditionalFormatting
  fullName: OfficeOpenXml.ConditionalFormatting
