### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction
  commentId: T:OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction
  id: HiddenValuesHandlingFunction
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions
  children:
  - OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.#ctor
  - OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.ArgsToDoubleEnumerable(System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},OfficeOpenXml.FormulaParsing.ParsingContext,OfficeOpenXml.ExcelErrorValue@)
  - OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.ArgsToDoubleEnumerable(System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},OfficeOpenXml.FormulaParsing.ParsingContext,System.Boolean,System.Boolean,OfficeOpenXml.ExcelErrorValue@)
  - OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.IgnoreErrors
  - OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.IgnoreHiddenValues
  - OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.IgnoreNestedSubtotalsAndAggregates
  - OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.ShouldIgnore(OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument,OfficeOpenXml.FormulaParsing.ParsingContext)
  - OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.ShouldIgnore(OfficeOpenXml.FormulaParsing.ICellInfo,OfficeOpenXml.FormulaParsing.ParsingContext)
  langs:
  - csharp
  - vb
  name: HiddenValuesHandlingFunction
  nameWithType: HiddenValuesHandlingFunction
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction
  type: Class
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Excel/Functions/HiddenValuesHandlingFunction.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: HiddenValuesHandlingFunction
    path: ../src/EPPlus/FormulaParsing/Excel/Functions/HiddenValuesHandlingFunction.cs
    startLine: 25
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Excel.Functions
  summary: "\nBase class for functions that needs to handle cells that is not visible.\n"
  example: []
  syntax:
    content: 'public abstract class HiddenValuesHandlingFunction : ExcelFunction'
    content.vb: >-
      Public MustInherit Class HiddenValuesHandlingFunction
          Inherits ExcelFunction
  inheritance:
  - System.Object
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  inheritedMembers:
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.NumberOfSignificantFigures
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.Execute(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},OfficeOpenXml.FormulaParsing.ParsingContext)
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgumentMinLength
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.GetNewParameterAddress(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.FormulaExpressions.CompileResult},System.Int32,System.Collections.Generic.Queue{OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaRangeAddress}@)
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsErrorHandlingFunction
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArrayBehaviour
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ConfigureArrayBehaviour(OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig)
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.HandlesVariables
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.GetFirstValue(System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument})
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ValidateArguments(System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32,OfficeOpenXml.eErrorType)
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ValidateArguments(System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32)
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToAddress(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32)
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToInt(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32,OfficeOpenXml.ExcelErrorValue@,System.Int32)
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToInt(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32,System.Boolean,OfficeOpenXml.ExcelErrorValue@)
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToInt(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32,OfficeOpenXml.FormulaParsing.Excel.Functions.RoundingMethod)
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToString(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32)
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToDecimal(System.Object,OfficeOpenXml.ExcelErrorValue@)
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToDecimal(System.Object,OfficeOpenXml.FormulaParsing.PrecisionAndRoundingStrategy,OfficeOpenXml.ExcelErrorValue@)
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToDecimal(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32,OfficeOpenXml.ExcelErrorValue@,OfficeOpenXml.FormulaParsing.PrecisionAndRoundingStrategy)
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToDecimal(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32,System.Double,OfficeOpenXml.ExcelErrorValue@)
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.GetDecimalSingleArgument(OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument)
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToRangeInfo(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32)
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.Divide(System.Double,System.Double)
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsNumericString(System.Object)
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsInteger(System.Object)
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToBool(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32)
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToBool(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32,System.Boolean)
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ThrowArgumentExceptionIf(System.Func{System.Boolean},System.String)
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ThrowArgumentExceptionIf(System.Func{System.Boolean},System.String,System.Object[])
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ThrowExcelErrorValueException(OfficeOpenXml.eErrorType)
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ThrowExcelErrorValueException(OfficeOpenXml.ExcelErrorValue)
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ThrowExcelErrorValueExceptionIf(System.Func{System.Boolean},OfficeOpenXml.eErrorType)
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsNumeric(System.Object)
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsBool(System.Object)
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsString(System.Object,System.Boolean)
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.AreEqual(System.Double,System.Double)
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgsToDoubleEnumerable(System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},OfficeOpenXml.FormulaParsing.ParsingContext,System.Action{OfficeOpenXml.FormulaParsing.Excel.Functions.DoubleEnumerableParseOptions},OfficeOpenXml.ExcelErrorValue@)
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgsToDoubleEnumerable(OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument,OfficeOpenXml.FormulaParsing.ParsingContext,System.Action{OfficeOpenXml.FormulaParsing.Excel.Functions.DoubleEnumerableParseOptions},OfficeOpenXml.ExcelErrorValue@)
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgsToDoubleEnumerable(OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument,OfficeOpenXml.FormulaParsing.ParsingContext,OfficeOpenXml.ExcelErrorValue@)
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgsToObjectEnumerable(System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},OfficeOpenXml.FormulaParsing.ParsingContext)
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CreateResult(System.Object,OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType)
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CreateResult(System.Object,OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType,OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaRangeAddress)
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CreateDynamicArrayResult(System.Object,OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType)
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CreateDynamicArrayResult(System.Object,OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType,OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaRangeAddress)
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CreateAddressResult(OfficeOpenXml.FormulaParsing.IRangeInfo,OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType)
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CreateResult(OfficeOpenXml.eErrorType)
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CheckForAndHandleExcelError(OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument,OfficeOpenXml.ExcelErrorValue@)
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CheckForAndHandleExcelError(OfficeOpenXml.FormulaParsing.ICellInfo,OfficeOpenXml.ExcelErrorValue@)
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.GetResultByObject(System.Object)
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsVolatile
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ReturnsReference
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsAllowedInCalculatedPivotTableField
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ParametersInfo
  - OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.NamespacePrefix
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.#ctor
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.#ctor
  id: '#ctor'
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction
  langs:
  - csharp
  - vb
  name: HiddenValuesHandlingFunction()
  nameWithType: HiddenValuesHandlingFunction.HiddenValuesHandlingFunction()
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.HiddenValuesHandlingFunction()
  type: Constructor
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Excel/Functions/HiddenValuesHandlingFunction.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: .ctor
    path: ../src/EPPlus/FormulaParsing/Excel/Functions/HiddenValuesHandlingFunction.cs
    startLine: 30
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Excel.Functions
  summary: "\nHidden values handling function\n"
  example: []
  syntax:
    content: public HiddenValuesHandlingFunction()
    content.vb: Public Sub New
  overload: OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.IgnoreHiddenValues
  commentId: P:OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.IgnoreHiddenValues
  id: IgnoreHiddenValues
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction
  langs:
  - csharp
  - vb
  name: IgnoreHiddenValues
  nameWithType: HiddenValuesHandlingFunction.IgnoreHiddenValues
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.IgnoreHiddenValues
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Excel/Functions/HiddenValuesHandlingFunction.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: IgnoreHiddenValues
    path: ../src/EPPlus/FormulaParsing/Excel/Functions/HiddenValuesHandlingFunction.cs
    startLine: 38
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Excel.Functions
  summary: "\nSet to true or false to indicate whether the function should ignore hidden values.\n"
  example: []
  syntax:
    content: public bool IgnoreHiddenValues { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IgnoreHiddenValues As Boolean
  overload: OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.IgnoreHiddenValues*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.IgnoreErrors
  commentId: P:OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.IgnoreErrors
  id: IgnoreErrors
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction
  langs:
  - csharp
  - vb
  name: IgnoreErrors
  nameWithType: HiddenValuesHandlingFunction.IgnoreErrors
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.IgnoreErrors
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Excel/Functions/HiddenValuesHandlingFunction.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: IgnoreErrors
    path: ../src/EPPlus/FormulaParsing/Excel/Functions/HiddenValuesHandlingFunction.cs
    startLine: 47
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Excel.Functions
  summary: "\nSet to true to indicate whether the function should ignore error values\n"
  example: []
  syntax:
    content: public bool IgnoreErrors { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IgnoreErrors As Boolean
  overload: OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.IgnoreErrors*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.IgnoreNestedSubtotalsAndAggregates
  commentId: P:OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.IgnoreNestedSubtotalsAndAggregates
  id: IgnoreNestedSubtotalsAndAggregates
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction
  langs:
  - csharp
  - vb
  name: IgnoreNestedSubtotalsAndAggregates
  nameWithType: HiddenValuesHandlingFunction.IgnoreNestedSubtotalsAndAggregates
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.IgnoreNestedSubtotalsAndAggregates
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Excel/Functions/HiddenValuesHandlingFunction.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: IgnoreNestedSubtotalsAndAggregates
    path: ../src/EPPlus/FormulaParsing/Excel/Functions/HiddenValuesHandlingFunction.cs
    startLine: 55
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Excel.Functions
  summary: "\nSet to true to indicate whether the function should ignore nested SUBTOTAL and AGGREGATE functions\n"
  example: []
  syntax:
    content: public bool IgnoreNestedSubtotalsAndAggregates { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IgnoreNestedSubtotalsAndAggregates As Boolean
  overload: OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.IgnoreNestedSubtotalsAndAggregates*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.ArgsToDoubleEnumerable(System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},OfficeOpenXml.FormulaParsing.ParsingContext,OfficeOpenXml.ExcelErrorValue@)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.ArgsToDoubleEnumerable(System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},OfficeOpenXml.FormulaParsing.ParsingContext,OfficeOpenXml.ExcelErrorValue@)
  id: ArgsToDoubleEnumerable(System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},OfficeOpenXml.FormulaParsing.ParsingContext,OfficeOpenXml.ExcelErrorValue@)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction
  langs:
  - csharp
  - vb
  name: ArgsToDoubleEnumerable(IEnumerable<FunctionArgument>, ParsingContext, out ExcelErrorValue)
  nameWithType: HiddenValuesHandlingFunction.ArgsToDoubleEnumerable(IEnumerable<FunctionArgument>, ParsingContext, out ExcelErrorValue)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.ArgsToDoubleEnumerable(System.Collections.Generic.IEnumerable<OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument>, OfficeOpenXml.FormulaParsing.ParsingContext, out OfficeOpenXml.ExcelErrorValue)
  type: Method
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Excel/Functions/HiddenValuesHandlingFunction.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ArgsToDoubleEnumerable
    path: ../src/EPPlus/FormulaParsing/Excel/Functions/HiddenValuesHandlingFunction.cs
    startLine: 63
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Excel.Functions
  summary: "\nArgs to double enumerable\n"
  example: []
  syntax:
    content: protected override IList<double> ArgsToDoubleEnumerable(IEnumerable<FunctionArgument> arguments, ParsingContext context, out ExcelErrorValue error)
    parameters:
    - id: arguments
      type: System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument}
      description: ''
    - id: context
      type: OfficeOpenXml.FormulaParsing.ParsingContext
      description: ''
    - id: error
      type: OfficeOpenXml.ExcelErrorValue
      description: ''
    return:
      type: System.Collections.Generic.IList{System.Double}
      description: ''
    content.vb: Protected Overrides Function ArgsToDoubleEnumerable(arguments As IEnumerable(Of FunctionArgument), context As ParsingContext, ByRef error As ExcelErrorValue) As IList(Of Double)
  overridden: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgsToDoubleEnumerable(System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},OfficeOpenXml.FormulaParsing.ParsingContext,OfficeOpenXml.ExcelErrorValue@)
  overload: OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.ArgsToDoubleEnumerable*
  nameWithType.vb: HiddenValuesHandlingFunction.ArgsToDoubleEnumerable(IEnumerable(Of FunctionArgument), ParsingContext, ByRef ExcelErrorValue)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.ArgsToDoubleEnumerable(System.Collections.Generic.IEnumerable(Of OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument), OfficeOpenXml.FormulaParsing.ParsingContext, ByRef OfficeOpenXml.ExcelErrorValue)
  name.vb: ArgsToDoubleEnumerable(IEnumerable(Of FunctionArgument), ParsingContext, ByRef ExcelErrorValue)
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.ArgsToDoubleEnumerable(System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},OfficeOpenXml.FormulaParsing.ParsingContext,System.Boolean,System.Boolean,OfficeOpenXml.ExcelErrorValue@)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.ArgsToDoubleEnumerable(System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},OfficeOpenXml.FormulaParsing.ParsingContext,System.Boolean,System.Boolean,OfficeOpenXml.ExcelErrorValue@)
  id: ArgsToDoubleEnumerable(System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},OfficeOpenXml.FormulaParsing.ParsingContext,System.Boolean,System.Boolean,OfficeOpenXml.ExcelErrorValue@)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction
  langs:
  - csharp
  - vb
  name: ArgsToDoubleEnumerable(IEnumerable<FunctionArgument>, ParsingContext, Boolean, Boolean, out ExcelErrorValue)
  nameWithType: HiddenValuesHandlingFunction.ArgsToDoubleEnumerable(IEnumerable<FunctionArgument>, ParsingContext, Boolean, Boolean, out ExcelErrorValue)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.ArgsToDoubleEnumerable(System.Collections.Generic.IEnumerable<OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument>, OfficeOpenXml.FormulaParsing.ParsingContext, System.Boolean, System.Boolean, out OfficeOpenXml.ExcelErrorValue)
  type: Method
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Excel/Functions/HiddenValuesHandlingFunction.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ArgsToDoubleEnumerable
    path: ../src/EPPlus/FormulaParsing/Excel/Functions/HiddenValuesHandlingFunction.cs
    startLine: 78
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Excel.Functions
  summary: "\n\n"
  example: []
  syntax:
    content: protected IList<double> ArgsToDoubleEnumerable(IEnumerable<FunctionArgument> arguments, ParsingContext context, bool ignoreErrors, bool ignoreNonNumeric, out ExcelErrorValue error)
    parameters:
    - id: arguments
      type: System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument}
      description: ''
    - id: context
      type: OfficeOpenXml.FormulaParsing.ParsingContext
      description: ''
    - id: ignoreErrors
      type: System.Boolean
      description: ''
    - id: ignoreNonNumeric
      type: System.Boolean
      description: ''
    - id: error
      type: OfficeOpenXml.ExcelErrorValue
      description: ''
    return:
      type: System.Collections.Generic.IList{System.Double}
      description: ''
    content.vb: Protected Function ArgsToDoubleEnumerable(arguments As IEnumerable(Of FunctionArgument), context As ParsingContext, ignoreErrors As Boolean, ignoreNonNumeric As Boolean, ByRef error As ExcelErrorValue) As IList(Of Double)
  overload: OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.ArgsToDoubleEnumerable*
  exceptions:
  - type: OfficeOpenXml.FormulaParsing.Exceptions.ExcelErrorValueException
    commentId: T:OfficeOpenXml.FormulaParsing.Exceptions.ExcelErrorValueException
  nameWithType.vb: HiddenValuesHandlingFunction.ArgsToDoubleEnumerable(IEnumerable(Of FunctionArgument), ParsingContext, Boolean, Boolean, ByRef ExcelErrorValue)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.ArgsToDoubleEnumerable(System.Collections.Generic.IEnumerable(Of OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument), OfficeOpenXml.FormulaParsing.ParsingContext, System.Boolean, System.Boolean, ByRef OfficeOpenXml.ExcelErrorValue)
  name.vb: ArgsToDoubleEnumerable(IEnumerable(Of FunctionArgument), ParsingContext, Boolean, Boolean, ByRef ExcelErrorValue)
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.ShouldIgnore(OfficeOpenXml.FormulaParsing.ICellInfo,OfficeOpenXml.FormulaParsing.ParsingContext)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.ShouldIgnore(OfficeOpenXml.FormulaParsing.ICellInfo,OfficeOpenXml.FormulaParsing.ParsingContext)
  id: ShouldIgnore(OfficeOpenXml.FormulaParsing.ICellInfo,OfficeOpenXml.FormulaParsing.ParsingContext)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction
  langs:
  - csharp
  - vb
  name: ShouldIgnore(ICellInfo, ParsingContext)
  nameWithType: HiddenValuesHandlingFunction.ShouldIgnore(ICellInfo, ParsingContext)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.ShouldIgnore(OfficeOpenXml.FormulaParsing.ICellInfo, OfficeOpenXml.FormulaParsing.ParsingContext)
  type: Method
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Excel/Functions/HiddenValuesHandlingFunction.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ShouldIgnore
    path: ../src/EPPlus/FormulaParsing/Excel/Functions/HiddenValuesHandlingFunction.cs
    startLine: 106
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Excel.Functions
  summary: "\nShould Ignore\n"
  example: []
  syntax:
    content: protected bool ShouldIgnore(ICellInfo c, ParsingContext context)
    parameters:
    - id: c
      type: OfficeOpenXml.FormulaParsing.ICellInfo
      description: ''
    - id: context
      type: OfficeOpenXml.FormulaParsing.ParsingContext
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Protected Function ShouldIgnore(c As ICellInfo, context As ParsingContext) As Boolean
  overload: OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.ShouldIgnore*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.ShouldIgnore(OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument,OfficeOpenXml.FormulaParsing.ParsingContext)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.ShouldIgnore(OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument,OfficeOpenXml.FormulaParsing.ParsingContext)
  id: ShouldIgnore(OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument,OfficeOpenXml.FormulaParsing.ParsingContext)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction
  langs:
  - csharp
  - vb
  name: ShouldIgnore(FunctionArgument, ParsingContext)
  nameWithType: HiddenValuesHandlingFunction.ShouldIgnore(FunctionArgument, ParsingContext)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.ShouldIgnore(OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument, OfficeOpenXml.FormulaParsing.ParsingContext)
  type: Method
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Excel/Functions/HiddenValuesHandlingFunction.cs
      branch: bug/issue1566
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ShouldIgnore
    path: ../src/EPPlus/FormulaParsing/Excel/Functions/HiddenValuesHandlingFunction.cs
    startLine: 124
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Excel.Functions
  summary: "\nShould ignore with argument\n"
  example: []
  syntax:
    content: protected bool ShouldIgnore(FunctionArgument arg, ParsingContext context)
    parameters:
    - id: arg
      type: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
      description: ''
    - id: context
      type: OfficeOpenXml.FormulaParsing.ParsingContext
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Protected Function ShouldIgnore(arg As FunctionArgument, context As ParsingContext) As Boolean
  overload: OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.ShouldIgnore*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions
  commentId: N:OfficeOpenXml.FormulaParsing.Excel.Functions
  name: OfficeOpenXml.FormulaParsing.Excel.Functions
  nameWithType: OfficeOpenXml.FormulaParsing.Excel.Functions
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  commentId: T:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions
  name: ExcelFunction
  nameWithType: ExcelFunction
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.NumberOfSignificantFigures
  commentId: F:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.NumberOfSignificantFigures
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  name: NumberOfSignificantFigures
  nameWithType: ExcelFunction.NumberOfSignificantFigures
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.NumberOfSignificantFigures
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.Execute(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},OfficeOpenXml.FormulaParsing.ParsingContext)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.Execute(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},OfficeOpenXml.FormulaParsing.ParsingContext)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  isExternal: true
  name: Execute(IList<FunctionArgument>, ParsingContext)
  nameWithType: ExcelFunction.Execute(IList<FunctionArgument>, ParsingContext)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.Execute(System.Collections.Generic.IList<OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument>, OfficeOpenXml.FormulaParsing.ParsingContext)
  nameWithType.vb: ExcelFunction.Execute(IList(Of FunctionArgument), ParsingContext)
  fullName.vb: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.Execute(System.Collections.Generic.IList(Of OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument), OfficeOpenXml.FormulaParsing.ParsingContext)
  name.vb: Execute(IList(Of FunctionArgument), ParsingContext)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.Execute(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},OfficeOpenXml.FormulaParsing.ParsingContext)
    name: Execute
    nameWithType: ExcelFunction.Execute
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.Execute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.FormulaParsing.ParsingContext
    name: ParsingContext
    nameWithType: ParsingContext
    fullName: OfficeOpenXml.FormulaParsing.ParsingContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.Execute(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},OfficeOpenXml.FormulaParsing.ParsingContext)
    name: Execute
    nameWithType: ExcelFunction.Execute
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.Execute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.FormulaParsing.ParsingContext
    name: ParsingContext
    nameWithType: ParsingContext
    fullName: OfficeOpenXml.FormulaParsing.ParsingContext
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgumentMinLength
  commentId: P:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgumentMinLength
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  name: ArgumentMinLength
  nameWithType: ExcelFunction.ArgumentMinLength
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgumentMinLength
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.GetNewParameterAddress(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.FormulaExpressions.CompileResult},System.Int32,System.Collections.Generic.Queue{OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaRangeAddress}@)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.GetNewParameterAddress(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.FormulaExpressions.CompileResult},System.Int32,System.Collections.Generic.Queue{OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaRangeAddress}@)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  isExternal: true
  name: GetNewParameterAddress(IList<CompileResult>, Int32, Queue<FormulaRangeAddress>)
  nameWithType: ExcelFunction.GetNewParameterAddress(IList<CompileResult>, Int32, Queue<FormulaRangeAddress>)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.GetNewParameterAddress(System.Collections.Generic.IList<OfficeOpenXml.FormulaParsing.FormulaExpressions.CompileResult>, System.Int32, System.Collections.Generic.Queue<OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaRangeAddress>)
  nameWithType.vb: ExcelFunction.GetNewParameterAddress(IList(Of CompileResult), Int32, Queue(Of FormulaRangeAddress))
  fullName.vb: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.GetNewParameterAddress(System.Collections.Generic.IList(Of OfficeOpenXml.FormulaParsing.FormulaExpressions.CompileResult), System.Int32, System.Collections.Generic.Queue(Of OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaRangeAddress))
  name.vb: GetNewParameterAddress(IList(Of CompileResult), Int32, Queue(Of FormulaRangeAddress))
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.GetNewParameterAddress(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.FormulaExpressions.CompileResult},System.Int32,System.Collections.Generic.Queue{OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaRangeAddress}@)
    name: GetNewParameterAddress
    nameWithType: ExcelFunction.GetNewParameterAddress
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.GetNewParameterAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.FormulaParsing.FormulaExpressions.CompileResult
    name: CompileResult
    nameWithType: CompileResult
    fullName: OfficeOpenXml.FormulaParsing.FormulaExpressions.CompileResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    nameWithType: Queue
    fullName: System.Collections.Generic.Queue
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaRangeAddress
    name: FormulaRangeAddress
    nameWithType: FormulaRangeAddress
    fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaRangeAddress
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.GetNewParameterAddress(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.FormulaExpressions.CompileResult},System.Int32,System.Collections.Generic.Queue{OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaRangeAddress}@)
    name: GetNewParameterAddress
    nameWithType: ExcelFunction.GetNewParameterAddress
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.GetNewParameterAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.FormulaParsing.FormulaExpressions.CompileResult
    name: CompileResult
    nameWithType: CompileResult
    fullName: OfficeOpenXml.FormulaParsing.FormulaExpressions.CompileResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    nameWithType: Queue
    fullName: System.Collections.Generic.Queue
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaRangeAddress
    name: FormulaRangeAddress
    nameWithType: FormulaRangeAddress
    fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaRangeAddress
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsErrorHandlingFunction
  commentId: P:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsErrorHandlingFunction
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  name: IsErrorHandlingFunction
  nameWithType: ExcelFunction.IsErrorHandlingFunction
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsErrorHandlingFunction
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArrayBehaviour
  commentId: P:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArrayBehaviour
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  name: ArrayBehaviour
  nameWithType: ExcelFunction.ArrayBehaviour
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArrayBehaviour
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ConfigureArrayBehaviour(OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ConfigureArrayBehaviour(OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  name: ConfigureArrayBehaviour(ArrayBehaviourConfig)
  nameWithType: ExcelFunction.ConfigureArrayBehaviour(ArrayBehaviourConfig)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ConfigureArrayBehaviour(OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ConfigureArrayBehaviour(OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig)
    name: ConfigureArrayBehaviour
    nameWithType: ExcelFunction.ConfigureArrayBehaviour
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ConfigureArrayBehaviour
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig
    name: ArrayBehaviourConfig
    nameWithType: ArrayBehaviourConfig
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ConfigureArrayBehaviour(OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig)
    name: ConfigureArrayBehaviour
    nameWithType: ExcelFunction.ConfigureArrayBehaviour
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ConfigureArrayBehaviour
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig
    name: ArrayBehaviourConfig
    nameWithType: ArrayBehaviourConfig
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ArrayBehaviourConfig
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.HandlesVariables
  commentId: P:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.HandlesVariables
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  name: HandlesVariables
  nameWithType: ExcelFunction.HandlesVariables
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.HandlesVariables
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.GetFirstValue(System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument})
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.GetFirstValue(System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument})
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  isExternal: true
  name: GetFirstValue(IEnumerable<FunctionArgument>)
  nameWithType: ExcelFunction.GetFirstValue(IEnumerable<FunctionArgument>)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.GetFirstValue(System.Collections.Generic.IEnumerable<OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument>)
  nameWithType.vb: ExcelFunction.GetFirstValue(IEnumerable(Of FunctionArgument))
  fullName.vb: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.GetFirstValue(System.Collections.Generic.IEnumerable(Of OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument))
  name.vb: GetFirstValue(IEnumerable(Of FunctionArgument))
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.GetFirstValue(System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument})
    name: GetFirstValue
    nameWithType: ExcelFunction.GetFirstValue
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.GetFirstValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.GetFirstValue(System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument})
    name: GetFirstValue
    nameWithType: ExcelFunction.GetFirstValue
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.GetFirstValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ValidateArguments(System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32,OfficeOpenXml.eErrorType)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ValidateArguments(System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32,OfficeOpenXml.eErrorType)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  isExternal: true
  name: ValidateArguments(IEnumerable<FunctionArgument>, Int32, eErrorType)
  nameWithType: ExcelFunction.ValidateArguments(IEnumerable<FunctionArgument>, Int32, eErrorType)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ValidateArguments(System.Collections.Generic.IEnumerable<OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument>, System.Int32, OfficeOpenXml.eErrorType)
  nameWithType.vb: ExcelFunction.ValidateArguments(IEnumerable(Of FunctionArgument), Int32, eErrorType)
  fullName.vb: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ValidateArguments(System.Collections.Generic.IEnumerable(Of OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument), System.Int32, OfficeOpenXml.eErrorType)
  name.vb: ValidateArguments(IEnumerable(Of FunctionArgument), Int32, eErrorType)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ValidateArguments(System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32,OfficeOpenXml.eErrorType)
    name: ValidateArguments
    nameWithType: ExcelFunction.ValidateArguments
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ValidateArguments
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.eErrorType
    name: eErrorType
    nameWithType: eErrorType
    fullName: OfficeOpenXml.eErrorType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ValidateArguments(System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32,OfficeOpenXml.eErrorType)
    name: ValidateArguments
    nameWithType: ExcelFunction.ValidateArguments
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ValidateArguments
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.eErrorType
    name: eErrorType
    nameWithType: eErrorType
    fullName: OfficeOpenXml.eErrorType
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ValidateArguments(System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ValidateArguments(System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  isExternal: true
  name: ValidateArguments(IEnumerable<FunctionArgument>, Int32)
  nameWithType: ExcelFunction.ValidateArguments(IEnumerable<FunctionArgument>, Int32)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ValidateArguments(System.Collections.Generic.IEnumerable<OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument>, System.Int32)
  nameWithType.vb: ExcelFunction.ValidateArguments(IEnumerable(Of FunctionArgument), Int32)
  fullName.vb: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ValidateArguments(System.Collections.Generic.IEnumerable(Of OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument), System.Int32)
  name.vb: ValidateArguments(IEnumerable(Of FunctionArgument), Int32)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ValidateArguments(System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32)
    name: ValidateArguments
    nameWithType: ExcelFunction.ValidateArguments
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ValidateArguments
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ValidateArguments(System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32)
    name: ValidateArguments
    nameWithType: ExcelFunction.ValidateArguments
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ValidateArguments
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToAddress(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToAddress(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  isExternal: true
  name: ArgToAddress(IList<FunctionArgument>, Int32)
  nameWithType: ExcelFunction.ArgToAddress(IList<FunctionArgument>, Int32)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToAddress(System.Collections.Generic.IList<OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument>, System.Int32)
  nameWithType.vb: ExcelFunction.ArgToAddress(IList(Of FunctionArgument), Int32)
  fullName.vb: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToAddress(System.Collections.Generic.IList(Of OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument), System.Int32)
  name.vb: ArgToAddress(IList(Of FunctionArgument), Int32)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToAddress(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32)
    name: ArgToAddress
    nameWithType: ExcelFunction.ArgToAddress
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToAddress(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32)
    name: ArgToAddress
    nameWithType: ExcelFunction.ArgToAddress
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToInt(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32,OfficeOpenXml.ExcelErrorValue@,System.Int32)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToInt(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32,OfficeOpenXml.ExcelErrorValue@,System.Int32)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  isExternal: true
  name: ArgToInt(IList<FunctionArgument>, Int32, ExcelErrorValue, Int32)
  nameWithType: ExcelFunction.ArgToInt(IList<FunctionArgument>, Int32, ExcelErrorValue, Int32)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToInt(System.Collections.Generic.IList<OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument>, System.Int32, OfficeOpenXml.ExcelErrorValue, System.Int32)
  nameWithType.vb: ExcelFunction.ArgToInt(IList(Of FunctionArgument), Int32, ExcelErrorValue, Int32)
  fullName.vb: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToInt(System.Collections.Generic.IList(Of OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument), System.Int32, OfficeOpenXml.ExcelErrorValue, System.Int32)
  name.vb: ArgToInt(IList(Of FunctionArgument), Int32, ExcelErrorValue, Int32)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToInt(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32,OfficeOpenXml.ExcelErrorValue@,System.Int32)
    name: ArgToInt
    nameWithType: ExcelFunction.ArgToInt
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToInt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ExcelErrorValue
    name: ExcelErrorValue
    nameWithType: ExcelErrorValue
    fullName: OfficeOpenXml.ExcelErrorValue
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToInt(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32,OfficeOpenXml.ExcelErrorValue@,System.Int32)
    name: ArgToInt
    nameWithType: ExcelFunction.ArgToInt
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToInt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ExcelErrorValue
    name: ExcelErrorValue
    nameWithType: ExcelErrorValue
    fullName: OfficeOpenXml.ExcelErrorValue
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToInt(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32,System.Boolean,OfficeOpenXml.ExcelErrorValue@)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToInt(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32,System.Boolean,OfficeOpenXml.ExcelErrorValue@)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  isExternal: true
  name: ArgToInt(IList<FunctionArgument>, Int32, Boolean, ExcelErrorValue)
  nameWithType: ExcelFunction.ArgToInt(IList<FunctionArgument>, Int32, Boolean, ExcelErrorValue)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToInt(System.Collections.Generic.IList<OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument>, System.Int32, System.Boolean, OfficeOpenXml.ExcelErrorValue)
  nameWithType.vb: ExcelFunction.ArgToInt(IList(Of FunctionArgument), Int32, Boolean, ExcelErrorValue)
  fullName.vb: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToInt(System.Collections.Generic.IList(Of OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument), System.Int32, System.Boolean, OfficeOpenXml.ExcelErrorValue)
  name.vb: ArgToInt(IList(Of FunctionArgument), Int32, Boolean, ExcelErrorValue)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToInt(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32,System.Boolean,OfficeOpenXml.ExcelErrorValue@)
    name: ArgToInt
    nameWithType: ExcelFunction.ArgToInt
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToInt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ExcelErrorValue
    name: ExcelErrorValue
    nameWithType: ExcelErrorValue
    fullName: OfficeOpenXml.ExcelErrorValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToInt(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32,System.Boolean,OfficeOpenXml.ExcelErrorValue@)
    name: ArgToInt
    nameWithType: ExcelFunction.ArgToInt
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToInt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ExcelErrorValue
    name: ExcelErrorValue
    nameWithType: ExcelErrorValue
    fullName: OfficeOpenXml.ExcelErrorValue
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToInt(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32,OfficeOpenXml.FormulaParsing.Excel.Functions.RoundingMethod)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToInt(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32,OfficeOpenXml.FormulaParsing.Excel.Functions.RoundingMethod)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  isExternal: true
  name: ArgToInt(IList<FunctionArgument>, Int32, RoundingMethod)
  nameWithType: ExcelFunction.ArgToInt(IList<FunctionArgument>, Int32, RoundingMethod)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToInt(System.Collections.Generic.IList<OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument>, System.Int32, OfficeOpenXml.FormulaParsing.Excel.Functions.RoundingMethod)
  nameWithType.vb: ExcelFunction.ArgToInt(IList(Of FunctionArgument), Int32, RoundingMethod)
  fullName.vb: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToInt(System.Collections.Generic.IList(Of OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument), System.Int32, OfficeOpenXml.FormulaParsing.Excel.Functions.RoundingMethod)
  name.vb: ArgToInt(IList(Of FunctionArgument), Int32, RoundingMethod)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToInt(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32,OfficeOpenXml.FormulaParsing.Excel.Functions.RoundingMethod)
    name: ArgToInt
    nameWithType: ExcelFunction.ArgToInt
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToInt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.RoundingMethod
    name: RoundingMethod
    nameWithType: RoundingMethod
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.RoundingMethod
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToInt(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32,OfficeOpenXml.FormulaParsing.Excel.Functions.RoundingMethod)
    name: ArgToInt
    nameWithType: ExcelFunction.ArgToInt
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToInt
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.RoundingMethod
    name: RoundingMethod
    nameWithType: RoundingMethod
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.RoundingMethod
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToString(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToString(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  isExternal: true
  name: ArgToString(IList<FunctionArgument>, Int32)
  nameWithType: ExcelFunction.ArgToString(IList<FunctionArgument>, Int32)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToString(System.Collections.Generic.IList<OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument>, System.Int32)
  nameWithType.vb: ExcelFunction.ArgToString(IList(Of FunctionArgument), Int32)
  fullName.vb: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToString(System.Collections.Generic.IList(Of OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument), System.Int32)
  name.vb: ArgToString(IList(Of FunctionArgument), Int32)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToString(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32)
    name: ArgToString
    nameWithType: ExcelFunction.ArgToString
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToString(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32)
    name: ArgToString
    nameWithType: ExcelFunction.ArgToString
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToDecimal(System.Object,OfficeOpenXml.ExcelErrorValue@)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToDecimal(System.Object,OfficeOpenXml.ExcelErrorValue@)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  isExternal: true
  name: ArgToDecimal(Object, ExcelErrorValue)
  nameWithType: ExcelFunction.ArgToDecimal(Object, ExcelErrorValue)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToDecimal(System.Object, OfficeOpenXml.ExcelErrorValue)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToDecimal(System.Object,OfficeOpenXml.ExcelErrorValue@)
    name: ArgToDecimal
    nameWithType: ExcelFunction.ArgToDecimal
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToDecimal
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ExcelErrorValue
    name: ExcelErrorValue
    nameWithType: ExcelErrorValue
    fullName: OfficeOpenXml.ExcelErrorValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToDecimal(System.Object,OfficeOpenXml.ExcelErrorValue@)
    name: ArgToDecimal
    nameWithType: ExcelFunction.ArgToDecimal
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToDecimal
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ExcelErrorValue
    name: ExcelErrorValue
    nameWithType: ExcelErrorValue
    fullName: OfficeOpenXml.ExcelErrorValue
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToDecimal(System.Object,OfficeOpenXml.FormulaParsing.PrecisionAndRoundingStrategy,OfficeOpenXml.ExcelErrorValue@)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToDecimal(System.Object,OfficeOpenXml.FormulaParsing.PrecisionAndRoundingStrategy,OfficeOpenXml.ExcelErrorValue@)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  isExternal: true
  name: ArgToDecimal(Object, PrecisionAndRoundingStrategy, ExcelErrorValue)
  nameWithType: ExcelFunction.ArgToDecimal(Object, PrecisionAndRoundingStrategy, ExcelErrorValue)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToDecimal(System.Object, OfficeOpenXml.FormulaParsing.PrecisionAndRoundingStrategy, OfficeOpenXml.ExcelErrorValue)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToDecimal(System.Object,OfficeOpenXml.FormulaParsing.PrecisionAndRoundingStrategy,OfficeOpenXml.ExcelErrorValue@)
    name: ArgToDecimal
    nameWithType: ExcelFunction.ArgToDecimal
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToDecimal
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.FormulaParsing.PrecisionAndRoundingStrategy
    name: PrecisionAndRoundingStrategy
    nameWithType: PrecisionAndRoundingStrategy
    fullName: OfficeOpenXml.FormulaParsing.PrecisionAndRoundingStrategy
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ExcelErrorValue
    name: ExcelErrorValue
    nameWithType: ExcelErrorValue
    fullName: OfficeOpenXml.ExcelErrorValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToDecimal(System.Object,OfficeOpenXml.FormulaParsing.PrecisionAndRoundingStrategy,OfficeOpenXml.ExcelErrorValue@)
    name: ArgToDecimal
    nameWithType: ExcelFunction.ArgToDecimal
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToDecimal
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.FormulaParsing.PrecisionAndRoundingStrategy
    name: PrecisionAndRoundingStrategy
    nameWithType: PrecisionAndRoundingStrategy
    fullName: OfficeOpenXml.FormulaParsing.PrecisionAndRoundingStrategy
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ExcelErrorValue
    name: ExcelErrorValue
    nameWithType: ExcelErrorValue
    fullName: OfficeOpenXml.ExcelErrorValue
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToDecimal(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32,OfficeOpenXml.ExcelErrorValue@,OfficeOpenXml.FormulaParsing.PrecisionAndRoundingStrategy)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToDecimal(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32,OfficeOpenXml.ExcelErrorValue@,OfficeOpenXml.FormulaParsing.PrecisionAndRoundingStrategy)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  isExternal: true
  name: ArgToDecimal(IList<FunctionArgument>, Int32, ExcelErrorValue, PrecisionAndRoundingStrategy)
  nameWithType: ExcelFunction.ArgToDecimal(IList<FunctionArgument>, Int32, ExcelErrorValue, PrecisionAndRoundingStrategy)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToDecimal(System.Collections.Generic.IList<OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument>, System.Int32, OfficeOpenXml.ExcelErrorValue, OfficeOpenXml.FormulaParsing.PrecisionAndRoundingStrategy)
  nameWithType.vb: ExcelFunction.ArgToDecimal(IList(Of FunctionArgument), Int32, ExcelErrorValue, PrecisionAndRoundingStrategy)
  fullName.vb: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToDecimal(System.Collections.Generic.IList(Of OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument), System.Int32, OfficeOpenXml.ExcelErrorValue, OfficeOpenXml.FormulaParsing.PrecisionAndRoundingStrategy)
  name.vb: ArgToDecimal(IList(Of FunctionArgument), Int32, ExcelErrorValue, PrecisionAndRoundingStrategy)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToDecimal(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32,OfficeOpenXml.ExcelErrorValue@,OfficeOpenXml.FormulaParsing.PrecisionAndRoundingStrategy)
    name: ArgToDecimal
    nameWithType: ExcelFunction.ArgToDecimal
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToDecimal
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ExcelErrorValue
    name: ExcelErrorValue
    nameWithType: ExcelErrorValue
    fullName: OfficeOpenXml.ExcelErrorValue
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.FormulaParsing.PrecisionAndRoundingStrategy
    name: PrecisionAndRoundingStrategy
    nameWithType: PrecisionAndRoundingStrategy
    fullName: OfficeOpenXml.FormulaParsing.PrecisionAndRoundingStrategy
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToDecimal(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32,OfficeOpenXml.ExcelErrorValue@,OfficeOpenXml.FormulaParsing.PrecisionAndRoundingStrategy)
    name: ArgToDecimal
    nameWithType: ExcelFunction.ArgToDecimal
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToDecimal
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ExcelErrorValue
    name: ExcelErrorValue
    nameWithType: ExcelErrorValue
    fullName: OfficeOpenXml.ExcelErrorValue
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.FormulaParsing.PrecisionAndRoundingStrategy
    name: PrecisionAndRoundingStrategy
    nameWithType: PrecisionAndRoundingStrategy
    fullName: OfficeOpenXml.FormulaParsing.PrecisionAndRoundingStrategy
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToDecimal(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32,System.Double,OfficeOpenXml.ExcelErrorValue@)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToDecimal(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32,System.Double,OfficeOpenXml.ExcelErrorValue@)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  isExternal: true
  name: ArgToDecimal(IList<FunctionArgument>, Int32, Double, ExcelErrorValue)
  nameWithType: ExcelFunction.ArgToDecimal(IList<FunctionArgument>, Int32, Double, ExcelErrorValue)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToDecimal(System.Collections.Generic.IList<OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument>, System.Int32, System.Double, OfficeOpenXml.ExcelErrorValue)
  nameWithType.vb: ExcelFunction.ArgToDecimal(IList(Of FunctionArgument), Int32, Double, ExcelErrorValue)
  fullName.vb: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToDecimal(System.Collections.Generic.IList(Of OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument), System.Int32, System.Double, OfficeOpenXml.ExcelErrorValue)
  name.vb: ArgToDecimal(IList(Of FunctionArgument), Int32, Double, ExcelErrorValue)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToDecimal(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32,System.Double,OfficeOpenXml.ExcelErrorValue@)
    name: ArgToDecimal
    nameWithType: ExcelFunction.ArgToDecimal
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToDecimal
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ExcelErrorValue
    name: ExcelErrorValue
    nameWithType: ExcelErrorValue
    fullName: OfficeOpenXml.ExcelErrorValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToDecimal(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32,System.Double,OfficeOpenXml.ExcelErrorValue@)
    name: ArgToDecimal
    nameWithType: ExcelFunction.ArgToDecimal
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToDecimal
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ExcelErrorValue
    name: ExcelErrorValue
    nameWithType: ExcelErrorValue
    fullName: OfficeOpenXml.ExcelErrorValue
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.GetDecimalSingleArgument(OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.GetDecimalSingleArgument(OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  name: GetDecimalSingleArgument(FunctionArgument)
  nameWithType: ExcelFunction.GetDecimalSingleArgument(FunctionArgument)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.GetDecimalSingleArgument(OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.GetDecimalSingleArgument(OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument)
    name: GetDecimalSingleArgument
    nameWithType: ExcelFunction.GetDecimalSingleArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.GetDecimalSingleArgument
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.GetDecimalSingleArgument(OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument)
    name: GetDecimalSingleArgument
    nameWithType: ExcelFunction.GetDecimalSingleArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.GetDecimalSingleArgument
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToRangeInfo(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToRangeInfo(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  isExternal: true
  name: ArgToRangeInfo(IList<FunctionArgument>, Int32)
  nameWithType: ExcelFunction.ArgToRangeInfo(IList<FunctionArgument>, Int32)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToRangeInfo(System.Collections.Generic.IList<OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument>, System.Int32)
  nameWithType.vb: ExcelFunction.ArgToRangeInfo(IList(Of FunctionArgument), Int32)
  fullName.vb: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToRangeInfo(System.Collections.Generic.IList(Of OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument), System.Int32)
  name.vb: ArgToRangeInfo(IList(Of FunctionArgument), Int32)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToRangeInfo(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32)
    name: ArgToRangeInfo
    nameWithType: ExcelFunction.ArgToRangeInfo
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToRangeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToRangeInfo(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32)
    name: ArgToRangeInfo
    nameWithType: ExcelFunction.ArgToRangeInfo
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToRangeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.Divide(System.Double,System.Double)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.Divide(System.Double,System.Double)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  isExternal: true
  name: Divide(Double, Double)
  nameWithType: ExcelFunction.Divide(Double, Double)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.Divide(System.Double, System.Double)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.Divide(System.Double,System.Double)
    name: Divide
    nameWithType: ExcelFunction.Divide
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.Divide
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.Divide(System.Double,System.Double)
    name: Divide
    nameWithType: ExcelFunction.Divide
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.Divide
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsNumericString(System.Object)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsNumericString(System.Object)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  isExternal: true
  name: IsNumericString(Object)
  nameWithType: ExcelFunction.IsNumericString(Object)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsNumericString(System.Object)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsNumericString(System.Object)
    name: IsNumericString
    nameWithType: ExcelFunction.IsNumericString
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsNumericString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsNumericString(System.Object)
    name: IsNumericString
    nameWithType: ExcelFunction.IsNumericString
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsNumericString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsInteger(System.Object)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsInteger(System.Object)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  isExternal: true
  name: IsInteger(Object)
  nameWithType: ExcelFunction.IsInteger(Object)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsInteger(System.Object)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsInteger(System.Object)
    name: IsInteger
    nameWithType: ExcelFunction.IsInteger
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsInteger
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsInteger(System.Object)
    name: IsInteger
    nameWithType: ExcelFunction.IsInteger
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsInteger
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToBool(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToBool(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  isExternal: true
  name: ArgToBool(IList<FunctionArgument>, Int32)
  nameWithType: ExcelFunction.ArgToBool(IList<FunctionArgument>, Int32)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToBool(System.Collections.Generic.IList<OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument>, System.Int32)
  nameWithType.vb: ExcelFunction.ArgToBool(IList(Of FunctionArgument), Int32)
  fullName.vb: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToBool(System.Collections.Generic.IList(Of OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument), System.Int32)
  name.vb: ArgToBool(IList(Of FunctionArgument), Int32)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToBool(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32)
    name: ArgToBool
    nameWithType: ExcelFunction.ArgToBool
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToBool
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToBool(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32)
    name: ArgToBool
    nameWithType: ExcelFunction.ArgToBool
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToBool
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToBool(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32,System.Boolean)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToBool(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32,System.Boolean)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  isExternal: true
  name: ArgToBool(IList<FunctionArgument>, Int32, Boolean)
  nameWithType: ExcelFunction.ArgToBool(IList<FunctionArgument>, Int32, Boolean)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToBool(System.Collections.Generic.IList<OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument>, System.Int32, System.Boolean)
  nameWithType.vb: ExcelFunction.ArgToBool(IList(Of FunctionArgument), Int32, Boolean)
  fullName.vb: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToBool(System.Collections.Generic.IList(Of OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument), System.Int32, System.Boolean)
  name.vb: ArgToBool(IList(Of FunctionArgument), Int32, Boolean)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToBool(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32,System.Boolean)
    name: ArgToBool
    nameWithType: ExcelFunction.ArgToBool
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToBool
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToBool(System.Collections.Generic.IList{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},System.Int32,System.Boolean)
    name: ArgToBool
    nameWithType: ExcelFunction.ArgToBool
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgToBool
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ThrowArgumentExceptionIf(System.Func{System.Boolean},System.String)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ThrowArgumentExceptionIf(System.Func{System.Boolean},System.String)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  isExternal: true
  name: ThrowArgumentExceptionIf(Func<Boolean>, String)
  nameWithType: ExcelFunction.ThrowArgumentExceptionIf(Func<Boolean>, String)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ThrowArgumentExceptionIf(System.Func<System.Boolean>, System.String)
  nameWithType.vb: ExcelFunction.ThrowArgumentExceptionIf(Func(Of Boolean), String)
  fullName.vb: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ThrowArgumentExceptionIf(System.Func(Of System.Boolean), System.String)
  name.vb: ThrowArgumentExceptionIf(Func(Of Boolean), String)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ThrowArgumentExceptionIf(System.Func{System.Boolean},System.String)
    name: ThrowArgumentExceptionIf
    nameWithType: ExcelFunction.ThrowArgumentExceptionIf
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ThrowArgumentExceptionIf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ThrowArgumentExceptionIf(System.Func{System.Boolean},System.String)
    name: ThrowArgumentExceptionIf
    nameWithType: ExcelFunction.ThrowArgumentExceptionIf
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ThrowArgumentExceptionIf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ThrowArgumentExceptionIf(System.Func{System.Boolean},System.String,System.Object[])
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ThrowArgumentExceptionIf(System.Func{System.Boolean},System.String,System.Object[])
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  isExternal: true
  name: ThrowArgumentExceptionIf(Func<Boolean>, String, Object[])
  nameWithType: ExcelFunction.ThrowArgumentExceptionIf(Func<Boolean>, String, Object[])
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ThrowArgumentExceptionIf(System.Func<System.Boolean>, System.String, System.Object[])
  nameWithType.vb: ExcelFunction.ThrowArgumentExceptionIf(Func(Of Boolean), String, Object())
  fullName.vb: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ThrowArgumentExceptionIf(System.Func(Of System.Boolean), System.String, System.Object())
  name.vb: ThrowArgumentExceptionIf(Func(Of Boolean), String, Object())
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ThrowArgumentExceptionIf(System.Func{System.Boolean},System.String,System.Object[])
    name: ThrowArgumentExceptionIf
    nameWithType: ExcelFunction.ThrowArgumentExceptionIf
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ThrowArgumentExceptionIf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ThrowArgumentExceptionIf(System.Func{System.Boolean},System.String,System.Object[])
    name: ThrowArgumentExceptionIf
    nameWithType: ExcelFunction.ThrowArgumentExceptionIf
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ThrowArgumentExceptionIf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ThrowExcelErrorValueException(OfficeOpenXml.eErrorType)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ThrowExcelErrorValueException(OfficeOpenXml.eErrorType)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  name: ThrowExcelErrorValueException(eErrorType)
  nameWithType: ExcelFunction.ThrowExcelErrorValueException(eErrorType)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ThrowExcelErrorValueException(OfficeOpenXml.eErrorType)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ThrowExcelErrorValueException(OfficeOpenXml.eErrorType)
    name: ThrowExcelErrorValueException
    nameWithType: ExcelFunction.ThrowExcelErrorValueException
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ThrowExcelErrorValueException
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.eErrorType
    name: eErrorType
    nameWithType: eErrorType
    fullName: OfficeOpenXml.eErrorType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ThrowExcelErrorValueException(OfficeOpenXml.eErrorType)
    name: ThrowExcelErrorValueException
    nameWithType: ExcelFunction.ThrowExcelErrorValueException
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ThrowExcelErrorValueException
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.eErrorType
    name: eErrorType
    nameWithType: eErrorType
    fullName: OfficeOpenXml.eErrorType
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ThrowExcelErrorValueException(OfficeOpenXml.ExcelErrorValue)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ThrowExcelErrorValueException(OfficeOpenXml.ExcelErrorValue)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  name: ThrowExcelErrorValueException(ExcelErrorValue)
  nameWithType: ExcelFunction.ThrowExcelErrorValueException(ExcelErrorValue)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ThrowExcelErrorValueException(OfficeOpenXml.ExcelErrorValue)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ThrowExcelErrorValueException(OfficeOpenXml.ExcelErrorValue)
    name: ThrowExcelErrorValueException
    nameWithType: ExcelFunction.ThrowExcelErrorValueException
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ThrowExcelErrorValueException
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.ExcelErrorValue
    name: ExcelErrorValue
    nameWithType: ExcelErrorValue
    fullName: OfficeOpenXml.ExcelErrorValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ThrowExcelErrorValueException(OfficeOpenXml.ExcelErrorValue)
    name: ThrowExcelErrorValueException
    nameWithType: ExcelFunction.ThrowExcelErrorValueException
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ThrowExcelErrorValueException
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.ExcelErrorValue
    name: ExcelErrorValue
    nameWithType: ExcelErrorValue
    fullName: OfficeOpenXml.ExcelErrorValue
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ThrowExcelErrorValueExceptionIf(System.Func{System.Boolean},OfficeOpenXml.eErrorType)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ThrowExcelErrorValueExceptionIf(System.Func{System.Boolean},OfficeOpenXml.eErrorType)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  isExternal: true
  name: ThrowExcelErrorValueExceptionIf(Func<Boolean>, eErrorType)
  nameWithType: ExcelFunction.ThrowExcelErrorValueExceptionIf(Func<Boolean>, eErrorType)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ThrowExcelErrorValueExceptionIf(System.Func<System.Boolean>, OfficeOpenXml.eErrorType)
  nameWithType.vb: ExcelFunction.ThrowExcelErrorValueExceptionIf(Func(Of Boolean), eErrorType)
  fullName.vb: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ThrowExcelErrorValueExceptionIf(System.Func(Of System.Boolean), OfficeOpenXml.eErrorType)
  name.vb: ThrowExcelErrorValueExceptionIf(Func(Of Boolean), eErrorType)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ThrowExcelErrorValueExceptionIf(System.Func{System.Boolean},OfficeOpenXml.eErrorType)
    name: ThrowExcelErrorValueExceptionIf
    nameWithType: ExcelFunction.ThrowExcelErrorValueExceptionIf
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ThrowExcelErrorValueExceptionIf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.eErrorType
    name: eErrorType
    nameWithType: eErrorType
    fullName: OfficeOpenXml.eErrorType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ThrowExcelErrorValueExceptionIf(System.Func{System.Boolean},OfficeOpenXml.eErrorType)
    name: ThrowExcelErrorValueExceptionIf
    nameWithType: ExcelFunction.ThrowExcelErrorValueExceptionIf
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ThrowExcelErrorValueExceptionIf
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.eErrorType
    name: eErrorType
    nameWithType: eErrorType
    fullName: OfficeOpenXml.eErrorType
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsNumeric(System.Object)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsNumeric(System.Object)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  isExternal: true
  name: IsNumeric(Object)
  nameWithType: ExcelFunction.IsNumeric(Object)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsNumeric(System.Object)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsNumeric(System.Object)
    name: IsNumeric
    nameWithType: ExcelFunction.IsNumeric
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsNumeric
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsNumeric(System.Object)
    name: IsNumeric
    nameWithType: ExcelFunction.IsNumeric
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsNumeric
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsBool(System.Object)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsBool(System.Object)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  isExternal: true
  name: IsBool(Object)
  nameWithType: ExcelFunction.IsBool(Object)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsBool(System.Object)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsBool(System.Object)
    name: IsBool
    nameWithType: ExcelFunction.IsBool
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsBool
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsBool(System.Object)
    name: IsBool
    nameWithType: ExcelFunction.IsBool
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsBool
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsString(System.Object,System.Boolean)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsString(System.Object,System.Boolean)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  isExternal: true
  name: IsString(Object, Boolean)
  nameWithType: ExcelFunction.IsString(Object, Boolean)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsString(System.Object, System.Boolean)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsString(System.Object,System.Boolean)
    name: IsString
    nameWithType: ExcelFunction.IsString
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsString(System.Object,System.Boolean)
    name: IsString
    nameWithType: ExcelFunction.IsString
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.AreEqual(System.Double,System.Double)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.AreEqual(System.Double,System.Double)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  isExternal: true
  name: AreEqual(Double, Double)
  nameWithType: ExcelFunction.AreEqual(Double, Double)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.AreEqual(System.Double, System.Double)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.AreEqual(System.Double,System.Double)
    name: AreEqual
    nameWithType: ExcelFunction.AreEqual
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.AreEqual
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.AreEqual(System.Double,System.Double)
    name: AreEqual
    nameWithType: ExcelFunction.AreEqual
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.AreEqual
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgsToDoubleEnumerable(System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},OfficeOpenXml.FormulaParsing.ParsingContext,System.Action{OfficeOpenXml.FormulaParsing.Excel.Functions.DoubleEnumerableParseOptions},OfficeOpenXml.ExcelErrorValue@)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgsToDoubleEnumerable(System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},OfficeOpenXml.FormulaParsing.ParsingContext,System.Action{OfficeOpenXml.FormulaParsing.Excel.Functions.DoubleEnumerableParseOptions},OfficeOpenXml.ExcelErrorValue@)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  isExternal: true
  name: ArgsToDoubleEnumerable(IEnumerable<FunctionArgument>, ParsingContext, Action<DoubleEnumerableParseOptions>, ExcelErrorValue)
  nameWithType: ExcelFunction.ArgsToDoubleEnumerable(IEnumerable<FunctionArgument>, ParsingContext, Action<DoubleEnumerableParseOptions>, ExcelErrorValue)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgsToDoubleEnumerable(System.Collections.Generic.IEnumerable<OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument>, OfficeOpenXml.FormulaParsing.ParsingContext, System.Action<OfficeOpenXml.FormulaParsing.Excel.Functions.DoubleEnumerableParseOptions>, OfficeOpenXml.ExcelErrorValue)
  nameWithType.vb: ExcelFunction.ArgsToDoubleEnumerable(IEnumerable(Of FunctionArgument), ParsingContext, Action(Of DoubleEnumerableParseOptions), ExcelErrorValue)
  fullName.vb: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgsToDoubleEnumerable(System.Collections.Generic.IEnumerable(Of OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument), OfficeOpenXml.FormulaParsing.ParsingContext, System.Action(Of OfficeOpenXml.FormulaParsing.Excel.Functions.DoubleEnumerableParseOptions), OfficeOpenXml.ExcelErrorValue)
  name.vb: ArgsToDoubleEnumerable(IEnumerable(Of FunctionArgument), ParsingContext, Action(Of DoubleEnumerableParseOptions), ExcelErrorValue)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgsToDoubleEnumerable(System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},OfficeOpenXml.FormulaParsing.ParsingContext,System.Action{OfficeOpenXml.FormulaParsing.Excel.Functions.DoubleEnumerableParseOptions},OfficeOpenXml.ExcelErrorValue@)
    name: ArgsToDoubleEnumerable
    nameWithType: ExcelFunction.ArgsToDoubleEnumerable
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgsToDoubleEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.FormulaParsing.ParsingContext
    name: ParsingContext
    nameWithType: ParsingContext
    fullName: OfficeOpenXml.FormulaParsing.ParsingContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.DoubleEnumerableParseOptions
    name: DoubleEnumerableParseOptions
    nameWithType: DoubleEnumerableParseOptions
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.DoubleEnumerableParseOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ExcelErrorValue
    name: ExcelErrorValue
    nameWithType: ExcelErrorValue
    fullName: OfficeOpenXml.ExcelErrorValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgsToDoubleEnumerable(System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},OfficeOpenXml.FormulaParsing.ParsingContext,System.Action{OfficeOpenXml.FormulaParsing.Excel.Functions.DoubleEnumerableParseOptions},OfficeOpenXml.ExcelErrorValue@)
    name: ArgsToDoubleEnumerable
    nameWithType: ExcelFunction.ArgsToDoubleEnumerable
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgsToDoubleEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.FormulaParsing.ParsingContext
    name: ParsingContext
    nameWithType: ParsingContext
    fullName: OfficeOpenXml.FormulaParsing.ParsingContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.DoubleEnumerableParseOptions
    name: DoubleEnumerableParseOptions
    nameWithType: DoubleEnumerableParseOptions
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.DoubleEnumerableParseOptions
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ExcelErrorValue
    name: ExcelErrorValue
    nameWithType: ExcelErrorValue
    fullName: OfficeOpenXml.ExcelErrorValue
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgsToDoubleEnumerable(OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument,OfficeOpenXml.FormulaParsing.ParsingContext,System.Action{OfficeOpenXml.FormulaParsing.Excel.Functions.DoubleEnumerableParseOptions},OfficeOpenXml.ExcelErrorValue@)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgsToDoubleEnumerable(OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument,OfficeOpenXml.FormulaParsing.ParsingContext,System.Action{OfficeOpenXml.FormulaParsing.Excel.Functions.DoubleEnumerableParseOptions},OfficeOpenXml.ExcelErrorValue@)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  isExternal: true
  name: ArgsToDoubleEnumerable(FunctionArgument, ParsingContext, Action<DoubleEnumerableParseOptions>, ExcelErrorValue)
  nameWithType: ExcelFunction.ArgsToDoubleEnumerable(FunctionArgument, ParsingContext, Action<DoubleEnumerableParseOptions>, ExcelErrorValue)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgsToDoubleEnumerable(OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument, OfficeOpenXml.FormulaParsing.ParsingContext, System.Action<OfficeOpenXml.FormulaParsing.Excel.Functions.DoubleEnumerableParseOptions>, OfficeOpenXml.ExcelErrorValue)
  nameWithType.vb: ExcelFunction.ArgsToDoubleEnumerable(FunctionArgument, ParsingContext, Action(Of DoubleEnumerableParseOptions), ExcelErrorValue)
  fullName.vb: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgsToDoubleEnumerable(OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument, OfficeOpenXml.FormulaParsing.ParsingContext, System.Action(Of OfficeOpenXml.FormulaParsing.Excel.Functions.DoubleEnumerableParseOptions), OfficeOpenXml.ExcelErrorValue)
  name.vb: ArgsToDoubleEnumerable(FunctionArgument, ParsingContext, Action(Of DoubleEnumerableParseOptions), ExcelErrorValue)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgsToDoubleEnumerable(OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument,OfficeOpenXml.FormulaParsing.ParsingContext,System.Action{OfficeOpenXml.FormulaParsing.Excel.Functions.DoubleEnumerableParseOptions},OfficeOpenXml.ExcelErrorValue@)
    name: ArgsToDoubleEnumerable
    nameWithType: ExcelFunction.ArgsToDoubleEnumerable
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgsToDoubleEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.FormulaParsing.ParsingContext
    name: ParsingContext
    nameWithType: ParsingContext
    fullName: OfficeOpenXml.FormulaParsing.ParsingContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.DoubleEnumerableParseOptions
    name: DoubleEnumerableParseOptions
    nameWithType: DoubleEnumerableParseOptions
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.DoubleEnumerableParseOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ExcelErrorValue
    name: ExcelErrorValue
    nameWithType: ExcelErrorValue
    fullName: OfficeOpenXml.ExcelErrorValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgsToDoubleEnumerable(OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument,OfficeOpenXml.FormulaParsing.ParsingContext,System.Action{OfficeOpenXml.FormulaParsing.Excel.Functions.DoubleEnumerableParseOptions},OfficeOpenXml.ExcelErrorValue@)
    name: ArgsToDoubleEnumerable
    nameWithType: ExcelFunction.ArgsToDoubleEnumerable
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgsToDoubleEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.FormulaParsing.ParsingContext
    name: ParsingContext
    nameWithType: ParsingContext
    fullName: OfficeOpenXml.FormulaParsing.ParsingContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.DoubleEnumerableParseOptions
    name: DoubleEnumerableParseOptions
    nameWithType: DoubleEnumerableParseOptions
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.DoubleEnumerableParseOptions
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ExcelErrorValue
    name: ExcelErrorValue
    nameWithType: ExcelErrorValue
    fullName: OfficeOpenXml.ExcelErrorValue
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgsToDoubleEnumerable(OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument,OfficeOpenXml.FormulaParsing.ParsingContext,OfficeOpenXml.ExcelErrorValue@)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgsToDoubleEnumerable(OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument,OfficeOpenXml.FormulaParsing.ParsingContext,OfficeOpenXml.ExcelErrorValue@)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  name: ArgsToDoubleEnumerable(FunctionArgument, ParsingContext, ExcelErrorValue)
  nameWithType: ExcelFunction.ArgsToDoubleEnumerable(FunctionArgument, ParsingContext, ExcelErrorValue)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgsToDoubleEnumerable(OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument, OfficeOpenXml.FormulaParsing.ParsingContext, OfficeOpenXml.ExcelErrorValue)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgsToDoubleEnumerable(OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument,OfficeOpenXml.FormulaParsing.ParsingContext,OfficeOpenXml.ExcelErrorValue@)
    name: ArgsToDoubleEnumerable
    nameWithType: ExcelFunction.ArgsToDoubleEnumerable
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgsToDoubleEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.FormulaParsing.ParsingContext
    name: ParsingContext
    nameWithType: ParsingContext
    fullName: OfficeOpenXml.FormulaParsing.ParsingContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ExcelErrorValue
    name: ExcelErrorValue
    nameWithType: ExcelErrorValue
    fullName: OfficeOpenXml.ExcelErrorValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgsToDoubleEnumerable(OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument,OfficeOpenXml.FormulaParsing.ParsingContext,OfficeOpenXml.ExcelErrorValue@)
    name: ArgsToDoubleEnumerable
    nameWithType: ExcelFunction.ArgsToDoubleEnumerable
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgsToDoubleEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.FormulaParsing.ParsingContext
    name: ParsingContext
    nameWithType: ParsingContext
    fullName: OfficeOpenXml.FormulaParsing.ParsingContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ExcelErrorValue
    name: ExcelErrorValue
    nameWithType: ExcelErrorValue
    fullName: OfficeOpenXml.ExcelErrorValue
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgsToObjectEnumerable(System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},OfficeOpenXml.FormulaParsing.ParsingContext)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgsToObjectEnumerable(System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},OfficeOpenXml.FormulaParsing.ParsingContext)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  isExternal: true
  name: ArgsToObjectEnumerable(Boolean, Boolean, Boolean, IEnumerable<FunctionArgument>, ParsingContext)
  nameWithType: ExcelFunction.ArgsToObjectEnumerable(Boolean, Boolean, Boolean, IEnumerable<FunctionArgument>, ParsingContext)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgsToObjectEnumerable(System.Boolean, System.Boolean, System.Boolean, System.Collections.Generic.IEnumerable<OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument>, OfficeOpenXml.FormulaParsing.ParsingContext)
  nameWithType.vb: ExcelFunction.ArgsToObjectEnumerable(Boolean, Boolean, Boolean, IEnumerable(Of FunctionArgument), ParsingContext)
  fullName.vb: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgsToObjectEnumerable(System.Boolean, System.Boolean, System.Boolean, System.Collections.Generic.IEnumerable(Of OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument), OfficeOpenXml.FormulaParsing.ParsingContext)
  name.vb: ArgsToObjectEnumerable(Boolean, Boolean, Boolean, IEnumerable(Of FunctionArgument), ParsingContext)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgsToObjectEnumerable(System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},OfficeOpenXml.FormulaParsing.ParsingContext)
    name: ArgsToObjectEnumerable
    nameWithType: ExcelFunction.ArgsToObjectEnumerable
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgsToObjectEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.FormulaParsing.ParsingContext
    name: ParsingContext
    nameWithType: ParsingContext
    fullName: OfficeOpenXml.FormulaParsing.ParsingContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgsToObjectEnumerable(System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},OfficeOpenXml.FormulaParsing.ParsingContext)
    name: ArgsToObjectEnumerable
    nameWithType: ExcelFunction.ArgsToObjectEnumerable
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgsToObjectEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.FormulaParsing.ParsingContext
    name: ParsingContext
    nameWithType: ParsingContext
    fullName: OfficeOpenXml.FormulaParsing.ParsingContext
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CreateResult(System.Object,OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CreateResult(System.Object,OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  isExternal: true
  name: CreateResult(Object, DataType)
  nameWithType: ExcelFunction.CreateResult(Object, DataType)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CreateResult(System.Object, OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CreateResult(System.Object,OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType)
    name: CreateResult
    nameWithType: ExcelFunction.CreateResult
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CreateResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType
    name: DataType
    nameWithType: DataType
    fullName: OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CreateResult(System.Object,OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType)
    name: CreateResult
    nameWithType: ExcelFunction.CreateResult
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CreateResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType
    name: DataType
    nameWithType: DataType
    fullName: OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CreateResult(System.Object,OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType,OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaRangeAddress)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CreateResult(System.Object,OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType,OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaRangeAddress)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  isExternal: true
  name: CreateResult(Object, DataType, FormulaRangeAddress)
  nameWithType: ExcelFunction.CreateResult(Object, DataType, FormulaRangeAddress)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CreateResult(System.Object, OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType, OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaRangeAddress)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CreateResult(System.Object,OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType,OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaRangeAddress)
    name: CreateResult
    nameWithType: ExcelFunction.CreateResult
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CreateResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType
    name: DataType
    nameWithType: DataType
    fullName: OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaRangeAddress
    name: FormulaRangeAddress
    nameWithType: FormulaRangeAddress
    fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaRangeAddress
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CreateResult(System.Object,OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType,OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaRangeAddress)
    name: CreateResult
    nameWithType: ExcelFunction.CreateResult
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CreateResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType
    name: DataType
    nameWithType: DataType
    fullName: OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaRangeAddress
    name: FormulaRangeAddress
    nameWithType: FormulaRangeAddress
    fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaRangeAddress
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CreateDynamicArrayResult(System.Object,OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CreateDynamicArrayResult(System.Object,OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  isExternal: true
  name: CreateDynamicArrayResult(Object, DataType)
  nameWithType: ExcelFunction.CreateDynamicArrayResult(Object, DataType)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CreateDynamicArrayResult(System.Object, OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CreateDynamicArrayResult(System.Object,OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType)
    name: CreateDynamicArrayResult
    nameWithType: ExcelFunction.CreateDynamicArrayResult
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CreateDynamicArrayResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType
    name: DataType
    nameWithType: DataType
    fullName: OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CreateDynamicArrayResult(System.Object,OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType)
    name: CreateDynamicArrayResult
    nameWithType: ExcelFunction.CreateDynamicArrayResult
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CreateDynamicArrayResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType
    name: DataType
    nameWithType: DataType
    fullName: OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CreateDynamicArrayResult(System.Object,OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType,OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaRangeAddress)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CreateDynamicArrayResult(System.Object,OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType,OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaRangeAddress)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  isExternal: true
  name: CreateDynamicArrayResult(Object, DataType, FormulaRangeAddress)
  nameWithType: ExcelFunction.CreateDynamicArrayResult(Object, DataType, FormulaRangeAddress)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CreateDynamicArrayResult(System.Object, OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType, OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaRangeAddress)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CreateDynamicArrayResult(System.Object,OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType,OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaRangeAddress)
    name: CreateDynamicArrayResult
    nameWithType: ExcelFunction.CreateDynamicArrayResult
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CreateDynamicArrayResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType
    name: DataType
    nameWithType: DataType
    fullName: OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaRangeAddress
    name: FormulaRangeAddress
    nameWithType: FormulaRangeAddress
    fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaRangeAddress
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CreateDynamicArrayResult(System.Object,OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType,OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaRangeAddress)
    name: CreateDynamicArrayResult
    nameWithType: ExcelFunction.CreateDynamicArrayResult
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CreateDynamicArrayResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType
    name: DataType
    nameWithType: DataType
    fullName: OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaRangeAddress
    name: FormulaRangeAddress
    nameWithType: FormulaRangeAddress
    fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaRangeAddress
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CreateAddressResult(OfficeOpenXml.FormulaParsing.IRangeInfo,OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CreateAddressResult(OfficeOpenXml.FormulaParsing.IRangeInfo,OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  name: CreateAddressResult(IRangeInfo, DataType)
  nameWithType: ExcelFunction.CreateAddressResult(IRangeInfo, DataType)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CreateAddressResult(OfficeOpenXml.FormulaParsing.IRangeInfo, OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CreateAddressResult(OfficeOpenXml.FormulaParsing.IRangeInfo,OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType)
    name: CreateAddressResult
    nameWithType: ExcelFunction.CreateAddressResult
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CreateAddressResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.FormulaParsing.IRangeInfo
    name: IRangeInfo
    nameWithType: IRangeInfo
    fullName: OfficeOpenXml.FormulaParsing.IRangeInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType
    name: DataType
    nameWithType: DataType
    fullName: OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CreateAddressResult(OfficeOpenXml.FormulaParsing.IRangeInfo,OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType)
    name: CreateAddressResult
    nameWithType: ExcelFunction.CreateAddressResult
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CreateAddressResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.FormulaParsing.IRangeInfo
    name: IRangeInfo
    nameWithType: IRangeInfo
    fullName: OfficeOpenXml.FormulaParsing.IRangeInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType
    name: DataType
    nameWithType: DataType
    fullName: OfficeOpenXml.FormulaParsing.FormulaExpressions.DataType
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CreateResult(OfficeOpenXml.eErrorType)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CreateResult(OfficeOpenXml.eErrorType)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  name: CreateResult(eErrorType)
  nameWithType: ExcelFunction.CreateResult(eErrorType)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CreateResult(OfficeOpenXml.eErrorType)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CreateResult(OfficeOpenXml.eErrorType)
    name: CreateResult
    nameWithType: ExcelFunction.CreateResult
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CreateResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.eErrorType
    name: eErrorType
    nameWithType: eErrorType
    fullName: OfficeOpenXml.eErrorType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CreateResult(OfficeOpenXml.eErrorType)
    name: CreateResult
    nameWithType: ExcelFunction.CreateResult
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CreateResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.eErrorType
    name: eErrorType
    nameWithType: eErrorType
    fullName: OfficeOpenXml.eErrorType
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CheckForAndHandleExcelError(OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument,OfficeOpenXml.ExcelErrorValue@)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CheckForAndHandleExcelError(OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument,OfficeOpenXml.ExcelErrorValue@)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  name: CheckForAndHandleExcelError(FunctionArgument, ExcelErrorValue)
  nameWithType: ExcelFunction.CheckForAndHandleExcelError(FunctionArgument, ExcelErrorValue)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CheckForAndHandleExcelError(OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument, OfficeOpenXml.ExcelErrorValue)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CheckForAndHandleExcelError(OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument,OfficeOpenXml.ExcelErrorValue@)
    name: CheckForAndHandleExcelError
    nameWithType: ExcelFunction.CheckForAndHandleExcelError
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CheckForAndHandleExcelError
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ExcelErrorValue
    name: ExcelErrorValue
    nameWithType: ExcelErrorValue
    fullName: OfficeOpenXml.ExcelErrorValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CheckForAndHandleExcelError(OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument,OfficeOpenXml.ExcelErrorValue@)
    name: CheckForAndHandleExcelError
    nameWithType: ExcelFunction.CheckForAndHandleExcelError
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CheckForAndHandleExcelError
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ExcelErrorValue
    name: ExcelErrorValue
    nameWithType: ExcelErrorValue
    fullName: OfficeOpenXml.ExcelErrorValue
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CheckForAndHandleExcelError(OfficeOpenXml.FormulaParsing.ICellInfo,OfficeOpenXml.ExcelErrorValue@)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CheckForAndHandleExcelError(OfficeOpenXml.FormulaParsing.ICellInfo,OfficeOpenXml.ExcelErrorValue@)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  name: CheckForAndHandleExcelError(ICellInfo, ExcelErrorValue)
  nameWithType: ExcelFunction.CheckForAndHandleExcelError(ICellInfo, ExcelErrorValue)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CheckForAndHandleExcelError(OfficeOpenXml.FormulaParsing.ICellInfo, OfficeOpenXml.ExcelErrorValue)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CheckForAndHandleExcelError(OfficeOpenXml.FormulaParsing.ICellInfo,OfficeOpenXml.ExcelErrorValue@)
    name: CheckForAndHandleExcelError
    nameWithType: ExcelFunction.CheckForAndHandleExcelError
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CheckForAndHandleExcelError
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.FormulaParsing.ICellInfo
    name: ICellInfo
    nameWithType: ICellInfo
    fullName: OfficeOpenXml.FormulaParsing.ICellInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ExcelErrorValue
    name: ExcelErrorValue
    nameWithType: ExcelErrorValue
    fullName: OfficeOpenXml.ExcelErrorValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CheckForAndHandleExcelError(OfficeOpenXml.FormulaParsing.ICellInfo,OfficeOpenXml.ExcelErrorValue@)
    name: CheckForAndHandleExcelError
    nameWithType: ExcelFunction.CheckForAndHandleExcelError
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.CheckForAndHandleExcelError
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.FormulaParsing.ICellInfo
    name: ICellInfo
    nameWithType: ICellInfo
    fullName: OfficeOpenXml.FormulaParsing.ICellInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ExcelErrorValue
    name: ExcelErrorValue
    nameWithType: ExcelErrorValue
    fullName: OfficeOpenXml.ExcelErrorValue
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.GetResultByObject(System.Object)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.GetResultByObject(System.Object)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  isExternal: true
  name: GetResultByObject(Object)
  nameWithType: ExcelFunction.GetResultByObject(Object)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.GetResultByObject(System.Object)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.GetResultByObject(System.Object)
    name: GetResultByObject
    nameWithType: ExcelFunction.GetResultByObject
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.GetResultByObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.GetResultByObject(System.Object)
    name: GetResultByObject
    nameWithType: ExcelFunction.GetResultByObject
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.GetResultByObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsVolatile
  commentId: P:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsVolatile
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  name: IsVolatile
  nameWithType: ExcelFunction.IsVolatile
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsVolatile
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ReturnsReference
  commentId: P:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ReturnsReference
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  name: ReturnsReference
  nameWithType: ExcelFunction.ReturnsReference
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ReturnsReference
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsAllowedInCalculatedPivotTableField
  commentId: P:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsAllowedInCalculatedPivotTableField
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  name: IsAllowedInCalculatedPivotTableField
  nameWithType: ExcelFunction.IsAllowedInCalculatedPivotTableField
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.IsAllowedInCalculatedPivotTableField
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ParametersInfo
  commentId: P:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ParametersInfo
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  name: ParametersInfo
  nameWithType: ExcelFunction.ParametersInfo
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ParametersInfo
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.NamespacePrefix
  commentId: P:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.NamespacePrefix
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  name: NamespacePrefix
  nameWithType: ExcelFunction.NamespacePrefix
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.NamespacePrefix
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.#ctor*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.#ctor
  name: HiddenValuesHandlingFunction
  nameWithType: HiddenValuesHandlingFunction.HiddenValuesHandlingFunction
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.HiddenValuesHandlingFunction
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.IgnoreHiddenValues*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.IgnoreHiddenValues
  name: IgnoreHiddenValues
  nameWithType: HiddenValuesHandlingFunction.IgnoreHiddenValues
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.IgnoreHiddenValues
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.IgnoreErrors*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.IgnoreErrors
  name: IgnoreErrors
  nameWithType: HiddenValuesHandlingFunction.IgnoreErrors
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.IgnoreErrors
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.IgnoreNestedSubtotalsAndAggregates*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.IgnoreNestedSubtotalsAndAggregates
  name: IgnoreNestedSubtotalsAndAggregates
  nameWithType: HiddenValuesHandlingFunction.IgnoreNestedSubtotalsAndAggregates
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.IgnoreNestedSubtotalsAndAggregates
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgsToDoubleEnumerable(System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},OfficeOpenXml.FormulaParsing.ParsingContext,OfficeOpenXml.ExcelErrorValue@)
  commentId: M:OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgsToDoubleEnumerable(System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},OfficeOpenXml.FormulaParsing.ParsingContext,OfficeOpenXml.ExcelErrorValue@)
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction
  isExternal: true
  name: ArgsToDoubleEnumerable(IEnumerable<FunctionArgument>, ParsingContext, ExcelErrorValue)
  nameWithType: ExcelFunction.ArgsToDoubleEnumerable(IEnumerable<FunctionArgument>, ParsingContext, ExcelErrorValue)
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgsToDoubleEnumerable(System.Collections.Generic.IEnumerable<OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument>, OfficeOpenXml.FormulaParsing.ParsingContext, OfficeOpenXml.ExcelErrorValue)
  nameWithType.vb: ExcelFunction.ArgsToDoubleEnumerable(IEnumerable(Of FunctionArgument), ParsingContext, ExcelErrorValue)
  fullName.vb: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgsToDoubleEnumerable(System.Collections.Generic.IEnumerable(Of OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument), OfficeOpenXml.FormulaParsing.ParsingContext, OfficeOpenXml.ExcelErrorValue)
  name.vb: ArgsToDoubleEnumerable(IEnumerable(Of FunctionArgument), ParsingContext, ExcelErrorValue)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgsToDoubleEnumerable(System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},OfficeOpenXml.FormulaParsing.ParsingContext,OfficeOpenXml.ExcelErrorValue@)
    name: ArgsToDoubleEnumerable
    nameWithType: ExcelFunction.ArgsToDoubleEnumerable
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgsToDoubleEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.FormulaParsing.ParsingContext
    name: ParsingContext
    nameWithType: ParsingContext
    fullName: OfficeOpenXml.FormulaParsing.ParsingContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ExcelErrorValue
    name: ExcelErrorValue
    nameWithType: ExcelErrorValue
    fullName: OfficeOpenXml.ExcelErrorValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgsToDoubleEnumerable(System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument},OfficeOpenXml.FormulaParsing.ParsingContext,OfficeOpenXml.ExcelErrorValue@)
    name: ArgsToDoubleEnumerable
    nameWithType: ExcelFunction.ArgsToDoubleEnumerable
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.ExcelFunction.ArgsToDoubleEnumerable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.FormulaParsing.ParsingContext
    name: ParsingContext
    nameWithType: ParsingContext
    fullName: OfficeOpenXml.FormulaParsing.ParsingContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.ExcelErrorValue
    name: ExcelErrorValue
    nameWithType: ExcelErrorValue
    fullName: OfficeOpenXml.ExcelErrorValue
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.ArgsToDoubleEnumerable*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.ArgsToDoubleEnumerable
  name: ArgsToDoubleEnumerable
  nameWithType: HiddenValuesHandlingFunction.ArgsToDoubleEnumerable
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.ArgsToDoubleEnumerable
- uid: System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument}
  commentId: T:System.Collections.Generic.IEnumerable{OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<FunctionArgument>
  nameWithType: IEnumerable<FunctionArgument>
  fullName: System.Collections.Generic.IEnumerable<OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument>
  nameWithType.vb: IEnumerable(Of FunctionArgument)
  fullName.vb: System.Collections.Generic.IEnumerable(Of OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument)
  name.vb: IEnumerable(Of FunctionArgument)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
    name: FunctionArgument
    nameWithType: FunctionArgument
    fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.ParsingContext
  commentId: T:OfficeOpenXml.FormulaParsing.ParsingContext
  parent: OfficeOpenXml.FormulaParsing
  name: ParsingContext
  nameWithType: ParsingContext
  fullName: OfficeOpenXml.FormulaParsing.ParsingContext
- uid: OfficeOpenXml.ExcelErrorValue
  commentId: T:OfficeOpenXml.ExcelErrorValue
  parent: OfficeOpenXml
  name: ExcelErrorValue
  nameWithType: ExcelErrorValue
  fullName: OfficeOpenXml.ExcelErrorValue
- uid: System.Collections.Generic.IList{System.Double}
  commentId: T:System.Collections.Generic.IList{System.Double}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Double>
  nameWithType: IList<Double>
  fullName: System.Collections.Generic.IList<System.Double>
  nameWithType.vb: IList(Of Double)
  fullName.vb: System.Collections.Generic.IList(Of System.Double)
  name.vb: IList(Of Double)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: OfficeOpenXml.FormulaParsing
  commentId: N:OfficeOpenXml.FormulaParsing
  name: OfficeOpenXml.FormulaParsing
  nameWithType: OfficeOpenXml.FormulaParsing
  fullName: OfficeOpenXml.FormulaParsing
- uid: OfficeOpenXml
  commentId: N:OfficeOpenXml
  name: OfficeOpenXml
  nameWithType: OfficeOpenXml
  fullName: OfficeOpenXml
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Exceptions.ExcelErrorValueException
  commentId: T:OfficeOpenXml.FormulaParsing.Exceptions.ExcelErrorValueException
  name: ExcelErrorValueException
  nameWithType: ExcelErrorValueException
  fullName: OfficeOpenXml.FormulaParsing.Exceptions.ExcelErrorValueException
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.ShouldIgnore*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.ShouldIgnore
  name: ShouldIgnore
  nameWithType: HiddenValuesHandlingFunction.ShouldIgnore
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.HiddenValuesHandlingFunction.ShouldIgnore
- uid: OfficeOpenXml.FormulaParsing.ICellInfo
  commentId: T:OfficeOpenXml.FormulaParsing.ICellInfo
  parent: OfficeOpenXml.FormulaParsing
  name: ICellInfo
  nameWithType: ICellInfo
  fullName: OfficeOpenXml.FormulaParsing.ICellInfo
- uid: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  commentId: T:OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
  parent: OfficeOpenXml.FormulaParsing.Excel.Functions
  name: FunctionArgument
  nameWithType: FunctionArgument
  fullName: OfficeOpenXml.FormulaParsing.Excel.Functions.FunctionArgument
