### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint
  commentId: T:OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint
  id: ExcelChartDataPoint
  parent: OfficeOpenXml.Drawing.Chart
  children:
  - OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Border
  - OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Bubble3D
  - OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Dispose
  - OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Effect
  - OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Fill
  - OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.HasMarker
  - OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Index
  - OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.InvertIfNegative
  - OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Marker
  - OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.ThreeD
  langs:
  - csharp
  - vb
  name: ExcelChartDataPoint
  nameWithType: ExcelChartDataPoint
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint
  type: Class
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartDataPoint.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ExcelChartDataPoint
    path: ../src/EPPlus/Drawing/Chart/ExcelChartDataPoint.cs
    startLine: 29
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nRepresents an individual datapoint in a chart\n"
  example: []
  syntax:
    content: 'public class ExcelChartDataPoint : XmlHelper, IDisposable'
    content.vb: >-
      Public Class ExcelChartDataPoint
          Inherits XmlHelper
          Implements IDisposable
  inheritance:
  - System.Object
  - OfficeOpenXml.XmlHelper
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Index
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Index
  id: Index
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint
  langs:
  - csharp
  - vb
  name: Index
  nameWithType: ExcelChartDataPoint.Index
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Index
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartDataPoint.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Index
    path: ../src/EPPlus/Drawing/Chart/ExcelChartDataPoint.cs
    startLine: 55
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nThe index of the datapoint\n"
  example: []
  syntax:
    content: public int Index { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Index As Integer
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Index*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Bubble3D
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Bubble3D
  id: Bubble3D
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint
  langs:
  - csharp
  - vb
  name: Bubble3D
  nameWithType: ExcelChartDataPoint.Bubble3D
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Bubble3D
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartDataPoint.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Bubble3D
    path: ../src/EPPlus/Drawing/Chart/ExcelChartDataPoint.cs
    startLine: 63
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nThe sizes of the bubbles on the bubble chart\n"
  example: []
  syntax:
    content: public bool Bubble3D { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Bubble3D As Boolean
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Bubble3D*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.InvertIfNegative
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.InvertIfNegative
  id: InvertIfNegative
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint
  langs:
  - csharp
  - vb
  name: InvertIfNegative
  nameWithType: ExcelChartDataPoint.InvertIfNegative
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.InvertIfNegative
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartDataPoint.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: InvertIfNegative
    path: ../src/EPPlus/Drawing/Chart/ExcelChartDataPoint.cs
    startLine: 77
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nInvert if negative. Default true.\n"
  example: []
  syntax:
    content: public bool InvertIfNegative { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property InvertIfNegative As Boolean
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.InvertIfNegative*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Marker
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Marker
  id: Marker
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint
  langs:
  - csharp
  - vb
  name: Marker
  nameWithType: ExcelChartDataPoint.Marker
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Marker
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartDataPoint.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Marker
    path: ../src/EPPlus/Drawing/Chart/ExcelChartDataPoint.cs
    startLine: 92
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nA reference to marker properties\n"
  example: []
  syntax:
    content: public ExcelChartMarker Marker { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.Chart.ExcelChartMarker
    content.vb: Public ReadOnly Property Marker As ExcelChartMarker
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Marker*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Fill
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Fill
  id: Fill
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint
  langs:
  - csharp
  - vb
  name: Fill
  nameWithType: ExcelChartDataPoint.Fill
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Fill
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartDataPoint.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Fill
    path: ../src/EPPlus/Drawing/Chart/ExcelChartDataPoint.cs
    startLine: 107
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nA reference to fill properties\n"
  example: []
  syntax:
    content: public ExcelDrawingFill Fill { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.ExcelDrawingFill
    content.vb: Public ReadOnly Property Fill As ExcelDrawingFill
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Fill*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Border
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Border
  id: Border
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint
  langs:
  - csharp
  - vb
  name: Border
  nameWithType: ExcelChartDataPoint.Border
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Border
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartDataPoint.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Border
    path: ../src/EPPlus/Drawing/Chart/ExcelChartDataPoint.cs
    startLine: 122
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nA reference to line properties\n"
  example: []
  syntax:
    content: public ExcelDrawingBorder Border { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.ExcelDrawingBorder
    content.vb: Public ReadOnly Property Border As ExcelDrawingBorder
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Border*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Effect
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Effect
  id: Effect
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint
  langs:
  - csharp
  - vb
  name: Effect
  nameWithType: ExcelChartDataPoint.Effect
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Effect
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartDataPoint.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Effect
    path: ../src/EPPlus/Drawing/Chart/ExcelChartDataPoint.cs
    startLine: 137
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nA reference to line properties\n"
  example: []
  syntax:
    content: public ExcelDrawingEffectStyle Effect { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingEffectStyle
    content.vb: Public ReadOnly Property Effect As ExcelDrawingEffectStyle
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Effect*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.ThreeD
  commentId: P:OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.ThreeD
  id: ThreeD
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint
  langs:
  - csharp
  - vb
  name: ThreeD
  nameWithType: ExcelChartDataPoint.ThreeD
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.ThreeD
  type: Property
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartDataPoint.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ThreeD
    path: ../src/EPPlus/Drawing/Chart/ExcelChartDataPoint.cs
    startLine: 152
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\n3D properties\n"
  example: []
  syntax:
    content: public ExcelDrawing3D ThreeD { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Drawing.Style.ThreeD.ExcelDrawing3D
    content.vb: Public ReadOnly Property ThreeD As ExcelDrawing3D
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.ThreeD*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.HasMarker
  commentId: M:OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.HasMarker
  id: HasMarker
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint
  langs:
  - csharp
  - vb
  name: HasMarker()
  nameWithType: ExcelChartDataPoint.HasMarker()
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.HasMarker()
  type: Method
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartDataPoint.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: HasMarker
    path: ../src/EPPlus/Drawing/Chart/ExcelChartDataPoint.cs
    startLine: 172
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nReturns true if the datapoint has a marker\n"
  example: []
  syntax:
    content: public bool HasMarker()
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function HasMarker As Boolean
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.HasMarker*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Dispose
  commentId: M:OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Dispose
  id: Dispose
  parent: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: ExcelChartDataPoint.Dispose()
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Dispose()
  type: Method
  source:
    remote:
      path: src/EPPlus/Drawing/Chart/ExcelChartDataPoint.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Dispose
    path: ../src/EPPlus/Drawing/Chart/ExcelChartDataPoint.cs
    startLine: 180
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Drawing.Chart
  summary: "\nDispose the object\n"
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: OfficeOpenXml.Drawing.Chart
  commentId: N:OfficeOpenXml.Drawing.Chart
  name: OfficeOpenXml.Drawing.Chart
  nameWithType: OfficeOpenXml.Drawing.Chart
  fullName: OfficeOpenXml.Drawing.Chart
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OfficeOpenXml.XmlHelper
  commentId: T:OfficeOpenXml.XmlHelper
  parent: OfficeOpenXml
  name: XmlHelper
  nameWithType: XmlHelper
  fullName: OfficeOpenXml.XmlHelper
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml
  commentId: N:OfficeOpenXml
  name: OfficeOpenXml
  nameWithType: OfficeOpenXml
  fullName: OfficeOpenXml
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Index*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Index
  name: Index
  nameWithType: ExcelChartDataPoint.Index
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Index
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Bubble3D*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Bubble3D
  name: Bubble3D
  nameWithType: ExcelChartDataPoint.Bubble3D
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Bubble3D
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.InvertIfNegative*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.InvertIfNegative
  name: InvertIfNegative
  nameWithType: ExcelChartDataPoint.InvertIfNegative
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.InvertIfNegative
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Marker*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Marker
  name: Marker
  nameWithType: ExcelChartDataPoint.Marker
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Marker
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartMarker
  commentId: T:OfficeOpenXml.Drawing.Chart.ExcelChartMarker
  parent: OfficeOpenXml.Drawing.Chart
  name: ExcelChartMarker
  nameWithType: ExcelChartMarker
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartMarker
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Fill*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Fill
  name: Fill
  nameWithType: ExcelChartDataPoint.Fill
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Fill
- uid: OfficeOpenXml.Drawing.ExcelDrawingFill
  commentId: T:OfficeOpenXml.Drawing.ExcelDrawingFill
  parent: OfficeOpenXml.Drawing
  name: ExcelDrawingFill
  nameWithType: ExcelDrawingFill
  fullName: OfficeOpenXml.Drawing.ExcelDrawingFill
- uid: OfficeOpenXml.Drawing
  commentId: N:OfficeOpenXml.Drawing
  name: OfficeOpenXml.Drawing
  nameWithType: OfficeOpenXml.Drawing
  fullName: OfficeOpenXml.Drawing
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Border*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Border
  name: Border
  nameWithType: ExcelChartDataPoint.Border
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Border
- uid: OfficeOpenXml.Drawing.ExcelDrawingBorder
  commentId: T:OfficeOpenXml.Drawing.ExcelDrawingBorder
  parent: OfficeOpenXml.Drawing
  name: ExcelDrawingBorder
  nameWithType: ExcelDrawingBorder
  fullName: OfficeOpenXml.Drawing.ExcelDrawingBorder
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Effect*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Effect
  name: Effect
  nameWithType: ExcelChartDataPoint.Effect
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Effect
- uid: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingEffectStyle
  commentId: T:OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingEffectStyle
  parent: OfficeOpenXml.Drawing.Style.Effect
  name: ExcelDrawingEffectStyle
  nameWithType: ExcelDrawingEffectStyle
  fullName: OfficeOpenXml.Drawing.Style.Effect.ExcelDrawingEffectStyle
- uid: OfficeOpenXml.Drawing.Style.Effect
  commentId: N:OfficeOpenXml.Drawing.Style.Effect
  name: OfficeOpenXml.Drawing.Style.Effect
  nameWithType: OfficeOpenXml.Drawing.Style.Effect
  fullName: OfficeOpenXml.Drawing.Style.Effect
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.ThreeD*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.ThreeD
  name: ThreeD
  nameWithType: ExcelChartDataPoint.ThreeD
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.ThreeD
- uid: OfficeOpenXml.Drawing.Style.ThreeD.ExcelDrawing3D
  commentId: T:OfficeOpenXml.Drawing.Style.ThreeD.ExcelDrawing3D
  parent: OfficeOpenXml.Drawing.Style.ThreeD
  name: ExcelDrawing3D
  nameWithType: ExcelDrawing3D
  fullName: OfficeOpenXml.Drawing.Style.ThreeD.ExcelDrawing3D
- uid: OfficeOpenXml.Drawing.Style.ThreeD
  commentId: N:OfficeOpenXml.Drawing.Style.ThreeD
  name: OfficeOpenXml.Drawing.Style.ThreeD
  nameWithType: OfficeOpenXml.Drawing.Style.ThreeD
  fullName: OfficeOpenXml.Drawing.Style.ThreeD
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.HasMarker*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.HasMarker
  name: HasMarker
  nameWithType: ExcelChartDataPoint.HasMarker
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.HasMarker
- uid: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Dispose*
  commentId: Overload:OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Dispose
  name: Dispose
  nameWithType: ExcelChartDataPoint.Dispose
  fullName: OfficeOpenXml.Drawing.Chart.ExcelChartDataPoint.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
