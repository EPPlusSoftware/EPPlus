### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue
  commentId: T:OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue
  id: NameInfoWithValue
  parent: OfficeOpenXml.FormulaParsing.Ranges
  children:
  - OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.#ctor(System.String,System.Object)
  - OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.Formula
  - OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.GetRelativeFormula(System.Int32,System.Int32)
  - OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.GetRelativeRange(OfficeOpenXml.FormulaParsing.IRangeInfo,OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaCellAddress)
  - OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.GetValue(OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaCellAddress)
  - OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.Id
  - OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.IsRelative
  - OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.Name
  - OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.Value
  - OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.wsIx
  langs:
  - csharp
  - vb
  name: NameInfoWithValue
  nameWithType: NameInfoWithValue
  fullName: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue
  type: Class
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Ranges/NameInfo.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: NameInfoWithValue
    path: ../src/EPPlus/FormulaParsing/Ranges/NameInfo.cs
    startLine: 134
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Ranges
  syntax:
    content: 'public class NameInfoWithValue : INameInfo'
    content.vb: >-
      Public Class NameInfoWithValue
          Implements INameInfo
  inheritance:
  - System.Object
  implements:
  - OfficeOpenXml.FormulaParsing.INameInfo
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.#ctor(System.String,System.Object)
  commentId: M:OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.#ctor(System.String,System.Object)
  id: '#ctor(System.String,System.Object)'
  parent: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue
  langs:
  - csharp
  - vb
  name: NameInfoWithValue(String, Object)
  nameWithType: NameInfoWithValue.NameInfoWithValue(String, Object)
  fullName: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.NameInfoWithValue(System.String, System.Object)
  type: Constructor
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Ranges/NameInfo.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: .ctor
    path: ../src/EPPlus/FormulaParsing/Ranges/NameInfo.cs
    startLine: 137
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Ranges
  syntax:
    content: public NameInfoWithValue(string name, object value)
    parameters:
    - id: name
      type: System.String
    - id: value
      type: System.Object
    content.vb: Public Sub New(name As String, value As Object)
  overload: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.Id
  commentId: P:OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.Id
  id: Id
  parent: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: NameInfoWithValue.Id
  fullName: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.Id
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Ranges/NameInfo.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Id
    path: ../src/EPPlus/FormulaParsing/Ranges/NameInfo.cs
    startLine: 143
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Ranges
  syntax:
    content: public ulong Id { get; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: Public ReadOnly Property Id As ULong
  overload: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.Id*
  implements:
  - OfficeOpenXml.FormulaParsing.INameInfo.Id
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.wsIx
  commentId: P:OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.wsIx
  id: wsIx
  parent: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue
  langs:
  - csharp
  - vb
  name: wsIx
  nameWithType: NameInfoWithValue.wsIx
  fullName: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.wsIx
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Ranges/NameInfo.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: wsIx
    path: ../src/EPPlus/FormulaParsing/Ranges/NameInfo.cs
    startLine: 145
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Ranges
  syntax:
    content: public int wsIx { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property wsIx As Integer
  overload: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.wsIx*
  implements:
  - OfficeOpenXml.FormulaParsing.INameInfo.wsIx
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.Name
  commentId: P:OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.Name
  id: Name
  parent: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: NameInfoWithValue.Name
  fullName: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.Name
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Ranges/NameInfo.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Name
    path: ../src/EPPlus/FormulaParsing/Ranges/NameInfo.cs
    startLine: 147
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Ranges
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.Name*
  implements:
  - OfficeOpenXml.FormulaParsing.INameInfo.Name
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.Formula
  commentId: P:OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.Formula
  id: Formula
  parent: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue
  langs:
  - csharp
  - vb
  name: Formula
  nameWithType: NameInfoWithValue.Formula
  fullName: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.Formula
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Ranges/NameInfo.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Formula
    path: ../src/EPPlus/FormulaParsing/Ranges/NameInfo.cs
    startLine: 149
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Ranges
  syntax:
    content: public string Formula { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Formula As String
  overload: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.Formula*
  implements:
  - OfficeOpenXml.FormulaParsing.INameInfo.Formula
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.Value
  commentId: P:OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.Value
  id: Value
  parent: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: NameInfoWithValue.Value
  fullName: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.Value
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Ranges/NameInfo.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Value
    path: ../src/EPPlus/FormulaParsing/Ranges/NameInfo.cs
    startLine: 151
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Ranges
  syntax:
    content: public object Value { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public ReadOnly Property Value As Object
  overload: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.Value*
  implements:
  - OfficeOpenXml.FormulaParsing.INameInfo.Value
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.IsRelative
  commentId: P:OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.IsRelative
  id: IsRelative
  parent: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue
  langs:
  - csharp
  - vb
  name: IsRelative
  nameWithType: NameInfoWithValue.IsRelative
  fullName: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.IsRelative
  type: Property
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Ranges/NameInfo.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: IsRelative
    path: ../src/EPPlus/FormulaParsing/Ranges/NameInfo.cs
    startLine: 157
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Ranges
  syntax:
    content: public bool IsRelative { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsRelative As Boolean
  overload: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.IsRelative*
  implements:
  - OfficeOpenXml.FormulaParsing.INameInfo.IsRelative
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.GetValue(OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaCellAddress)
  commentId: M:OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.GetValue(OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaCellAddress)
  id: GetValue(OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaCellAddress)
  parent: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue
  langs:
  - csharp
  - vb
  name: GetValue(FormulaCellAddress)
  nameWithType: NameInfoWithValue.GetValue(FormulaCellAddress)
  fullName: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.GetValue(OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaCellAddress)
  type: Method
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Ranges/NameInfo.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: GetValue
    path: ../src/EPPlus/FormulaParsing/Ranges/NameInfo.cs
    startLine: 159
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Ranges
  syntax:
    content: public object GetValue(FormulaCellAddress currentCell)
    parameters:
    - id: currentCell
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaCellAddress
    return:
      type: System.Object
    content.vb: Public Function GetValue(currentCell As FormulaCellAddress) As Object
  overload: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.GetValue*
  implements:
  - OfficeOpenXml.FormulaParsing.INameInfo.GetValue(OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaCellAddress)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.GetRelativeFormula(System.Int32,System.Int32)
  commentId: M:OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.GetRelativeFormula(System.Int32,System.Int32)
  id: GetRelativeFormula(System.Int32,System.Int32)
  parent: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue
  langs:
  - csharp
  - vb
  name: GetRelativeFormula(Int32, Int32)
  nameWithType: NameInfoWithValue.GetRelativeFormula(Int32, Int32)
  fullName: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.GetRelativeFormula(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Ranges/NameInfo.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: GetRelativeFormula
    path: ../src/EPPlus/FormulaParsing/Ranges/NameInfo.cs
    startLine: 164
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Ranges
  syntax:
    content: public string GetRelativeFormula(int row, int col)
    parameters:
    - id: row
      type: System.Int32
    - id: col
      type: System.Int32
    return:
      type: System.String
    content.vb: Public Function GetRelativeFormula(row As Integer, col As Integer) As String
  overload: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.GetRelativeFormula*
  implements:
  - OfficeOpenXml.FormulaParsing.INameInfo.GetRelativeFormula(System.Int32,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.GetRelativeRange(OfficeOpenXml.FormulaParsing.IRangeInfo,OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaCellAddress)
  commentId: M:OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.GetRelativeRange(OfficeOpenXml.FormulaParsing.IRangeInfo,OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaCellAddress)
  id: GetRelativeRange(OfficeOpenXml.FormulaParsing.IRangeInfo,OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaCellAddress)
  parent: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue
  langs:
  - csharp
  - vb
  name: GetRelativeRange(IRangeInfo, FormulaCellAddress)
  nameWithType: NameInfoWithValue.GetRelativeRange(IRangeInfo, FormulaCellAddress)
  fullName: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.GetRelativeRange(OfficeOpenXml.FormulaParsing.IRangeInfo, OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaCellAddress)
  type: Method
  source:
    remote:
      path: src/EPPlus/FormulaParsing/Ranges/NameInfo.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: GetRelativeRange
    path: ../src/EPPlus/FormulaParsing/Ranges/NameInfo.cs
    startLine: 169
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.FormulaParsing.Ranges
  syntax:
    content: public IRangeInfo GetRelativeRange(IRangeInfo ri, FormulaCellAddress currentCell)
    parameters:
    - id: ri
      type: OfficeOpenXml.FormulaParsing.IRangeInfo
    - id: currentCell
      type: OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaCellAddress
    return:
      type: OfficeOpenXml.FormulaParsing.IRangeInfo
    content.vb: Public Function GetRelativeRange(ri As IRangeInfo, currentCell As FormulaCellAddress) As IRangeInfo
  overload: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.GetRelativeRange*
  implements:
  - OfficeOpenXml.FormulaParsing.INameInfo.GetRelativeRange(OfficeOpenXml.FormulaParsing.IRangeInfo,OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaCellAddress)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: OfficeOpenXml.FormulaParsing.Ranges
  commentId: N:OfficeOpenXml.FormulaParsing.Ranges
  name: OfficeOpenXml.FormulaParsing.Ranges
  nameWithType: OfficeOpenXml.FormulaParsing.Ranges
  fullName: OfficeOpenXml.FormulaParsing.Ranges
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OfficeOpenXml.FormulaParsing.INameInfo
  commentId: T:OfficeOpenXml.FormulaParsing.INameInfo
  parent: OfficeOpenXml.FormulaParsing
  name: INameInfo
  nameWithType: INameInfo
  fullName: OfficeOpenXml.FormulaParsing.INameInfo
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml.FormulaParsing
  commentId: N:OfficeOpenXml.FormulaParsing
  name: OfficeOpenXml.FormulaParsing
  nameWithType: OfficeOpenXml.FormulaParsing
  fullName: OfficeOpenXml.FormulaParsing
- uid: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.#ctor*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.#ctor
  name: NameInfoWithValue
  nameWithType: NameInfoWithValue.NameInfoWithValue
  fullName: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.NameInfoWithValue
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.Id*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.Id
  name: Id
  nameWithType: NameInfoWithValue.Id
  fullName: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.Id
- uid: OfficeOpenXml.FormulaParsing.INameInfo.Id
  commentId: P:OfficeOpenXml.FormulaParsing.INameInfo.Id
  parent: OfficeOpenXml.FormulaParsing.INameInfo
  name: Id
  nameWithType: INameInfo.Id
  fullName: OfficeOpenXml.FormulaParsing.INameInfo.Id
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.wsIx*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.wsIx
  name: wsIx
  nameWithType: NameInfoWithValue.wsIx
  fullName: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.wsIx
- uid: OfficeOpenXml.FormulaParsing.INameInfo.wsIx
  commentId: P:OfficeOpenXml.FormulaParsing.INameInfo.wsIx
  parent: OfficeOpenXml.FormulaParsing.INameInfo
  name: wsIx
  nameWithType: INameInfo.wsIx
  fullName: OfficeOpenXml.FormulaParsing.INameInfo.wsIx
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.Name*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.Name
  name: Name
  nameWithType: NameInfoWithValue.Name
  fullName: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.Name
- uid: OfficeOpenXml.FormulaParsing.INameInfo.Name
  commentId: P:OfficeOpenXml.FormulaParsing.INameInfo.Name
  parent: OfficeOpenXml.FormulaParsing.INameInfo
  name: Name
  nameWithType: INameInfo.Name
  fullName: OfficeOpenXml.FormulaParsing.INameInfo.Name
- uid: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.Formula*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.Formula
  name: Formula
  nameWithType: NameInfoWithValue.Formula
  fullName: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.Formula
- uid: OfficeOpenXml.FormulaParsing.INameInfo.Formula
  commentId: P:OfficeOpenXml.FormulaParsing.INameInfo.Formula
  parent: OfficeOpenXml.FormulaParsing.INameInfo
  name: Formula
  nameWithType: INameInfo.Formula
  fullName: OfficeOpenXml.FormulaParsing.INameInfo.Formula
- uid: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.Value*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.Value
  name: Value
  nameWithType: NameInfoWithValue.Value
  fullName: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.Value
- uid: OfficeOpenXml.FormulaParsing.INameInfo.Value
  commentId: P:OfficeOpenXml.FormulaParsing.INameInfo.Value
  parent: OfficeOpenXml.FormulaParsing.INameInfo
  name: Value
  nameWithType: INameInfo.Value
  fullName: OfficeOpenXml.FormulaParsing.INameInfo.Value
- uid: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.IsRelative*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.IsRelative
  name: IsRelative
  nameWithType: NameInfoWithValue.IsRelative
  fullName: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.IsRelative
- uid: OfficeOpenXml.FormulaParsing.INameInfo.IsRelative
  commentId: P:OfficeOpenXml.FormulaParsing.INameInfo.IsRelative
  parent: OfficeOpenXml.FormulaParsing.INameInfo
  name: IsRelative
  nameWithType: INameInfo.IsRelative
  fullName: OfficeOpenXml.FormulaParsing.INameInfo.IsRelative
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.GetValue*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.GetValue
  name: GetValue
  nameWithType: NameInfoWithValue.GetValue
  fullName: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.GetValue
- uid: OfficeOpenXml.FormulaParsing.INameInfo.GetValue(OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaCellAddress)
  commentId: M:OfficeOpenXml.FormulaParsing.INameInfo.GetValue(OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaCellAddress)
  parent: OfficeOpenXml.FormulaParsing.INameInfo
  name: GetValue(FormulaCellAddress)
  nameWithType: INameInfo.GetValue(FormulaCellAddress)
  fullName: OfficeOpenXml.FormulaParsing.INameInfo.GetValue(OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaCellAddress)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.INameInfo.GetValue(OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaCellAddress)
    name: GetValue
    nameWithType: INameInfo.GetValue
    fullName: OfficeOpenXml.FormulaParsing.INameInfo.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaCellAddress
    name: FormulaCellAddress
    nameWithType: FormulaCellAddress
    fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaCellAddress
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.INameInfo.GetValue(OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaCellAddress)
    name: GetValue
    nameWithType: INameInfo.GetValue
    fullName: OfficeOpenXml.FormulaParsing.INameInfo.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaCellAddress
    name: FormulaCellAddress
    nameWithType: FormulaCellAddress
    fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaCellAddress
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaCellAddress
  commentId: T:OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaCellAddress
  parent: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  name: FormulaCellAddress
  nameWithType: FormulaCellAddress
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaCellAddress
- uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  commentId: N:OfficeOpenXml.FormulaParsing.LexicalAnalysis
  name: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  nameWithType: OfficeOpenXml.FormulaParsing.LexicalAnalysis
  fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis
- uid: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.GetRelativeFormula*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.GetRelativeFormula
  name: GetRelativeFormula
  nameWithType: NameInfoWithValue.GetRelativeFormula
  fullName: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.GetRelativeFormula
- uid: OfficeOpenXml.FormulaParsing.INameInfo.GetRelativeFormula(System.Int32,System.Int32)
  commentId: M:OfficeOpenXml.FormulaParsing.INameInfo.GetRelativeFormula(System.Int32,System.Int32)
  parent: OfficeOpenXml.FormulaParsing.INameInfo
  isExternal: true
  name: GetRelativeFormula(Int32, Int32)
  nameWithType: INameInfo.GetRelativeFormula(Int32, Int32)
  fullName: OfficeOpenXml.FormulaParsing.INameInfo.GetRelativeFormula(System.Int32, System.Int32)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.INameInfo.GetRelativeFormula(System.Int32,System.Int32)
    name: GetRelativeFormula
    nameWithType: INameInfo.GetRelativeFormula
    fullName: OfficeOpenXml.FormulaParsing.INameInfo.GetRelativeFormula
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.INameInfo.GetRelativeFormula(System.Int32,System.Int32)
    name: GetRelativeFormula
    nameWithType: INameInfo.GetRelativeFormula
    fullName: OfficeOpenXml.FormulaParsing.INameInfo.GetRelativeFormula
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.GetRelativeRange*
  commentId: Overload:OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.GetRelativeRange
  name: GetRelativeRange
  nameWithType: NameInfoWithValue.GetRelativeRange
  fullName: OfficeOpenXml.FormulaParsing.Ranges.NameInfoWithValue.GetRelativeRange
- uid: OfficeOpenXml.FormulaParsing.INameInfo.GetRelativeRange(OfficeOpenXml.FormulaParsing.IRangeInfo,OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaCellAddress)
  commentId: M:OfficeOpenXml.FormulaParsing.INameInfo.GetRelativeRange(OfficeOpenXml.FormulaParsing.IRangeInfo,OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaCellAddress)
  parent: OfficeOpenXml.FormulaParsing.INameInfo
  name: GetRelativeRange(IRangeInfo, FormulaCellAddress)
  nameWithType: INameInfo.GetRelativeRange(IRangeInfo, FormulaCellAddress)
  fullName: OfficeOpenXml.FormulaParsing.INameInfo.GetRelativeRange(OfficeOpenXml.FormulaParsing.IRangeInfo, OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaCellAddress)
  spec.csharp:
  - uid: OfficeOpenXml.FormulaParsing.INameInfo.GetRelativeRange(OfficeOpenXml.FormulaParsing.IRangeInfo,OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaCellAddress)
    name: GetRelativeRange
    nameWithType: INameInfo.GetRelativeRange
    fullName: OfficeOpenXml.FormulaParsing.INameInfo.GetRelativeRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.FormulaParsing.IRangeInfo
    name: IRangeInfo
    nameWithType: IRangeInfo
    fullName: OfficeOpenXml.FormulaParsing.IRangeInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaCellAddress
    name: FormulaCellAddress
    nameWithType: FormulaCellAddress
    fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaCellAddress
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OfficeOpenXml.FormulaParsing.INameInfo.GetRelativeRange(OfficeOpenXml.FormulaParsing.IRangeInfo,OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaCellAddress)
    name: GetRelativeRange
    nameWithType: INameInfo.GetRelativeRange
    fullName: OfficeOpenXml.FormulaParsing.INameInfo.GetRelativeRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: OfficeOpenXml.FormulaParsing.IRangeInfo
    name: IRangeInfo
    nameWithType: IRangeInfo
    fullName: OfficeOpenXml.FormulaParsing.IRangeInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaCellAddress
    name: FormulaCellAddress
    nameWithType: FormulaCellAddress
    fullName: OfficeOpenXml.FormulaParsing.LexicalAnalysis.FormulaCellAddress
  - name: )
    nameWithType: )
    fullName: )
- uid: OfficeOpenXml.FormulaParsing.IRangeInfo
  commentId: T:OfficeOpenXml.FormulaParsing.IRangeInfo
  parent: OfficeOpenXml.FormulaParsing
  name: IRangeInfo
  nameWithType: IRangeInfo
  fullName: OfficeOpenXml.FormulaParsing.IRangeInfo
