### YamlMime:ManagedReference
items:
- uid: OfficeOpenXml.Style.XmlAccess.ExcelBorderItemXml
  commentId: T:OfficeOpenXml.Style.XmlAccess.ExcelBorderItemXml
  id: ExcelBorderItemXml
  parent: OfficeOpenXml.Style.XmlAccess
  children:
  - OfficeOpenXml.Style.XmlAccess.ExcelBorderItemXml.Color
  - OfficeOpenXml.Style.XmlAccess.ExcelBorderItemXml.Exists
  - OfficeOpenXml.Style.XmlAccess.ExcelBorderItemXml.Style
  langs:
  - csharp
  - vb
  name: ExcelBorderItemXml
  nameWithType: ExcelBorderItemXml
  fullName: OfficeOpenXml.Style.XmlAccess.ExcelBorderItemXml
  type: Class
  source:
    remote:
      path: src/EPPlus/Style/XmlAccess/ExcelBorderItemXml.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: ExcelBorderItemXml
    path: ../src/EPPlus/Style/XmlAccess/ExcelBorderItemXml.cs
    startLine: 23
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style.XmlAccess
  summary: "\nXml access class for border items\n"
  example: []
  syntax:
    content: 'public sealed class ExcelBorderItemXml : StyleXmlHelper'
    content.vb: >-
      Public NotInheritable Class ExcelBorderItemXml
          Inherits StyleXmlHelper
  inheritance:
  - System.Object
  - OfficeOpenXml.XmlHelper
  - OfficeOpenXml.Style.XmlAccess.StyleXmlHelper
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: OfficeOpenXml.Style.XmlAccess.ExcelBorderItemXml.Style
  commentId: P:OfficeOpenXml.Style.XmlAccess.ExcelBorderItemXml.Style
  id: Style
  parent: OfficeOpenXml.Style.XmlAccess.ExcelBorderItemXml
  langs:
  - csharp
  - vb
  name: Style
  nameWithType: ExcelBorderItemXml.Style
  fullName: OfficeOpenXml.Style.XmlAccess.ExcelBorderItemXml.Style
  type: Property
  source:
    remote:
      path: src/EPPlus/Style/XmlAccess/ExcelBorderItemXml.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Style
    path: ../src/EPPlus/Style/XmlAccess/ExcelBorderItemXml.cs
    startLine: 63
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style.XmlAccess
  summary: "\nCell Border style\n"
  example: []
  syntax:
    content: public ExcelBorderStyle Style { get; set; }
    parameters: []
    return:
      type: OfficeOpenXml.Style.ExcelBorderStyle
    content.vb: Public Property Style As ExcelBorderStyle
  overload: OfficeOpenXml.Style.XmlAccess.ExcelBorderItemXml.Style*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: OfficeOpenXml.Style.XmlAccess.ExcelBorderItemXml.Color
  commentId: P:OfficeOpenXml.Style.XmlAccess.ExcelBorderItemXml.Color
  id: Color
  parent: OfficeOpenXml.Style.XmlAccess.ExcelBorderItemXml
  langs:
  - csharp
  - vb
  name: Color
  nameWithType: ExcelBorderItemXml.Color
  fullName: OfficeOpenXml.Style.XmlAccess.ExcelBorderItemXml.Color
  type: Property
  source:
    remote:
      path: src/EPPlus/Style/XmlAccess/ExcelBorderItemXml.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Color
    path: ../src/EPPlus/Style/XmlAccess/ExcelBorderItemXml.cs
    startLine: 80
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style.XmlAccess
  summary: "\nThe color of the line\n"
  example: []
  syntax:
    content: public ExcelColorXml Color { get; }
    parameters: []
    return:
      type: OfficeOpenXml.Style.XmlAccess.ExcelColorXml
    content.vb: Public ReadOnly Property Color As ExcelColorXml
  overload: OfficeOpenXml.Style.XmlAccess.ExcelBorderItemXml.Color*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: OfficeOpenXml.Style.XmlAccess.ExcelBorderItemXml.Exists
  commentId: P:OfficeOpenXml.Style.XmlAccess.ExcelBorderItemXml.Exists
  id: Exists
  parent: OfficeOpenXml.Style.XmlAccess.ExcelBorderItemXml
  langs:
  - csharp
  - vb
  name: Exists
  nameWithType: ExcelBorderItemXml.Exists
  fullName: OfficeOpenXml.Style.XmlAccess.ExcelBorderItemXml.Exists
  type: Property
  source:
    remote:
      path: src/EPPlus/Style/XmlAccess/ExcelBorderItemXml.cs
      branch: develop7
      repo: https://github.com/EPPlusSoftware/EPPlus.git
    id: Exists
    path: ../src/EPPlus/Style/XmlAccess/ExcelBorderItemXml.cs
    startLine: 138
  assemblies:
  - EPPlus
  namespace: OfficeOpenXml.Style.XmlAccess
  summary: "\nTrue if the record exists in the underlaying xml\n"
  example: []
  syntax:
    content: public bool Exists { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Exists As Boolean
  overload: OfficeOpenXml.Style.XmlAccess.ExcelBorderItemXml.Exists*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: OfficeOpenXml.Style.XmlAccess
  commentId: N:OfficeOpenXml.Style.XmlAccess
  name: OfficeOpenXml.Style.XmlAccess
  nameWithType: OfficeOpenXml.Style.XmlAccess
  fullName: OfficeOpenXml.Style.XmlAccess
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: OfficeOpenXml.XmlHelper
  commentId: T:OfficeOpenXml.XmlHelper
  parent: OfficeOpenXml
  name: XmlHelper
  nameWithType: XmlHelper
  fullName: OfficeOpenXml.XmlHelper
- uid: OfficeOpenXml.Style.XmlAccess.StyleXmlHelper
  commentId: T:OfficeOpenXml.Style.XmlAccess.StyleXmlHelper
  parent: OfficeOpenXml.Style.XmlAccess
  name: StyleXmlHelper
  nameWithType: StyleXmlHelper
  fullName: OfficeOpenXml.Style.XmlAccess.StyleXmlHelper
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OfficeOpenXml
  commentId: N:OfficeOpenXml
  name: OfficeOpenXml
  nameWithType: OfficeOpenXml
  fullName: OfficeOpenXml
- uid: OfficeOpenXml.Style.XmlAccess.ExcelBorderItemXml.Style*
  commentId: Overload:OfficeOpenXml.Style.XmlAccess.ExcelBorderItemXml.Style
  name: Style
  nameWithType: ExcelBorderItemXml.Style
  fullName: OfficeOpenXml.Style.XmlAccess.ExcelBorderItemXml.Style
- uid: OfficeOpenXml.Style.ExcelBorderStyle
  commentId: T:OfficeOpenXml.Style.ExcelBorderStyle
  parent: OfficeOpenXml.Style
  name: ExcelBorderStyle
  nameWithType: ExcelBorderStyle
  fullName: OfficeOpenXml.Style.ExcelBorderStyle
- uid: OfficeOpenXml.Style
  commentId: N:OfficeOpenXml.Style
  name: OfficeOpenXml.Style
  nameWithType: OfficeOpenXml.Style
  fullName: OfficeOpenXml.Style
- uid: OfficeOpenXml.Style.XmlAccess.ExcelBorderItemXml.Color*
  commentId: Overload:OfficeOpenXml.Style.XmlAccess.ExcelBorderItemXml.Color
  name: Color
  nameWithType: ExcelBorderItemXml.Color
  fullName: OfficeOpenXml.Style.XmlAccess.ExcelBorderItemXml.Color
- uid: OfficeOpenXml.Style.XmlAccess.ExcelColorXml
  commentId: T:OfficeOpenXml.Style.XmlAccess.ExcelColorXml
  parent: OfficeOpenXml.Style.XmlAccess
  name: ExcelColorXml
  nameWithType: ExcelColorXml
  fullName: OfficeOpenXml.Style.XmlAccess.ExcelColorXml
- uid: OfficeOpenXml.Style.XmlAccess.ExcelBorderItemXml.Exists*
  commentId: Overload:OfficeOpenXml.Style.XmlAccess.ExcelBorderItemXml.Exists
  name: Exists
  nameWithType: ExcelBorderItemXml.Exists
  fullName: OfficeOpenXml.Style.XmlAccess.ExcelBorderItemXml.Exists
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
